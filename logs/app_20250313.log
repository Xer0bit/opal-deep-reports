2025-03-13 14:26:42,088 - numexpr.utils - INFO - Note: NumExpr detected 12 cores but "NUMEXPR_MAX_THREADS" not set, so enforcing safe limit of 8.
2025-03-13 14:26:42,088 - numexpr.utils - INFO - NumExpr defaulting to 8 threads.
2025-03-13 14:26:50,599 - numexpr.utils - INFO - Note: NumExpr detected 12 cores but "NUMEXPR_MAX_THREADS" not set, so enforcing safe limit of 8.
2025-03-13 14:26:50,599 - numexpr.utils - INFO - NumExpr defaulting to 8 threads.
2025-03-13 14:30:56,097 - numexpr.utils - INFO - Note: NumExpr detected 12 cores but "NUMEXPR_MAX_THREADS" not set, so enforcing safe limit of 8.
2025-03-13 14:30:56,097 - numexpr.utils - INFO - NumExpr defaulting to 8 threads.
2025-03-13 14:30:59,823 - numexpr.utils - INFO - Note: NumExpr detected 12 cores but "NUMEXPR_MAX_THREADS" not set, so enforcing safe limit of 8.
2025-03-13 14:30:59,825 - numexpr.utils - INFO - NumExpr defaulting to 8 threads.
2025-03-13 14:33:09,398 - numexpr.utils - INFO - Note: NumExpr detected 12 cores but "NUMEXPR_MAX_THREADS" not set, so enforcing safe limit of 8.
2025-03-13 14:33:09,398 - numexpr.utils - INFO - NumExpr defaulting to 8 threads.
2025-03-13 14:33:12,869 - numexpr.utils - INFO - Note: NumExpr detected 12 cores but "NUMEXPR_MAX_THREADS" not set, so enforcing safe limit of 8.
2025-03-13 14:33:12,869 - numexpr.utils - INFO - NumExpr defaulting to 8 threads.
2025-03-13 14:35:20,585 - numexpr.utils - INFO - Note: NumExpr detected 12 cores but "NUMEXPR_MAX_THREADS" not set, so enforcing safe limit of 8.
2025-03-13 14:35:20,585 - numexpr.utils - INFO - NumExpr defaulting to 8 threads.
2025-03-13 14:35:24,689 - numexpr.utils - INFO - Note: NumExpr detected 12 cores but "NUMEXPR_MAX_THREADS" not set, so enforcing safe limit of 8.
2025-03-13 14:35:24,689 - numexpr.utils - INFO - NumExpr defaulting to 8 threads.
2025-03-13 14:35:51,809 - app.api.endpoints.reports - INFO - Processing violation trends request: start_date=datetime.datetime(2025, 3, 13, 9, 35, 45, 843000, tzinfo=TzInfo(UTC)) end_date=datetime.datetime(2025, 3, 13, 9, 35, 45, 843000, tzinfo=TzInfo(UTC)) group_by='day' days=30 driver_uuid='string'
2025-03-13 14:35:51,809 - app.services.predictive_analytics - INFO - Analyzing violation trends from 2025-03-13 09:35:45.843000+00:00 to 2025-03-13 09:35:45.843000+00:00 for driver string
2025-03-13 14:35:51,809 - app.db.repositories.data_repository - INFO - Querying violations from 2025-03-13 09:35:45.843000+00:00 to 2025-03-13 09:35:45.843000+00:00 for driver string
2025-03-13 14:35:52,068 - app.db.repositories.data_repository - INFO - Found 0 trend records
2025-03-13 14:35:52,068 - app.services.predictive_analytics - INFO - Processed 0 time period-driver combinations
2025-03-13 14:36:03,553 - app.api.endpoints.reports - INFO - Processing violation trends request: start_date=datetime.datetime(2025, 3, 1, 9, 35, 45, 843000, tzinfo=TzInfo(UTC)) end_date=datetime.datetime(2025, 3, 13, 9, 35, 45, 843000, tzinfo=TzInfo(UTC)) group_by='day' days=30 driver_uuid='string'
2025-03-13 14:36:03,553 - app.services.predictive_analytics - INFO - Analyzing violation trends from 2025-03-01 09:35:45.843000+00:00 to 2025-03-13 09:35:45.843000+00:00 for driver string
2025-03-13 14:36:03,554 - app.db.repositories.data_repository - INFO - Querying violations from 2025-03-01 09:35:45.843000+00:00 to 2025-03-13 09:35:45.843000+00:00 for driver string
2025-03-13 14:36:03,813 - app.db.repositories.data_repository - INFO - Found 0 trend records
2025-03-13 14:36:03,814 - app.services.predictive_analytics - INFO - Processed 0 time period-driver combinations
2025-03-13 14:36:47,519 - app.api.endpoints.reports - INFO - Processing violation trends request: start_date=datetime.datetime(2025, 3, 1, 9, 35, 45, 843000, tzinfo=TzInfo(UTC)) end_date=datetime.datetime(2025, 3, 13, 9, 35, 45, 843000, tzinfo=TzInfo(UTC)) group_by='day' days=30 driver_uuid='59158a1a-f5b1-4242-b9f0-ee99ca9fba12'
2025-03-13 14:36:47,519 - app.services.predictive_analytics - INFO - Analyzing violation trends from 2025-03-01 09:35:45.843000+00:00 to 2025-03-13 09:35:45.843000+00:00 for driver 59158a1a-f5b1-4242-b9f0-ee99ca9fba12
2025-03-13 14:36:47,520 - app.db.repositories.data_repository - INFO - Querying violations from 2025-03-01 09:35:45.843000+00:00 to 2025-03-13 09:35:45.843000+00:00 for driver 59158a1a-f5b1-4242-b9f0-ee99ca9fba12
2025-03-13 14:36:47,777 - app.db.repositories.data_repository - INFO - Found 12 trend records
2025-03-13 14:36:47,778 - app.services.predictive_analytics - INFO - Processed 6 time period-driver combinations
2025-03-13 14:51:13,362 - numexpr.utils - INFO - Note: NumExpr detected 12 cores but "NUMEXPR_MAX_THREADS" not set, so enforcing safe limit of 8.
2025-03-13 14:51:13,362 - numexpr.utils - INFO - NumExpr defaulting to 8 threads.
2025-03-13 14:51:17,111 - numexpr.utils - INFO - Note: NumExpr detected 12 cores but "NUMEXPR_MAX_THREADS" not set, so enforcing safe limit of 8.
2025-03-13 14:51:17,111 - numexpr.utils - INFO - NumExpr defaulting to 8 threads.
2025-03-13 14:51:21,654 - app.services.predictive_analytics - INFO - Starting driver risk prediction for last 90 days
2025-03-13 14:51:21,655 - app.db.repositories.data_repository - INFO - Fetching driver risk data for past 90 days
2025-03-13 14:51:22,418 - app.db.repositories.data_repository - INFO - Retrieved stats for 126 drivers
2025-03-13 14:51:22,418 - app.services.predictive_analytics - INFO - Retrieved 126 driver records
2025-03-13 14:51:22,419 - app.services.predictive_analytics - INFO - Successfully processed 9 drivers
2025-03-13 14:55:33,987 - numexpr.utils - INFO - Note: NumExpr detected 12 cores but "NUMEXPR_MAX_THREADS" not set, so enforcing safe limit of 8.
2025-03-13 14:55:33,987 - numexpr.utils - INFO - NumExpr defaulting to 8 threads.
2025-03-13 14:55:37,874 - numexpr.utils - INFO - Note: NumExpr detected 12 cores but "NUMEXPR_MAX_THREADS" not set, so enforcing safe limit of 8.
2025-03-13 14:55:37,875 - numexpr.utils - INFO - NumExpr defaulting to 8 threads.
2025-03-13 14:59:07,963 - numexpr.utils - INFO - Note: NumExpr detected 12 cores but "NUMEXPR_MAX_THREADS" not set, so enforcing safe limit of 8.
2025-03-13 14:59:07,963 - numexpr.utils - INFO - NumExpr defaulting to 8 threads.
2025-03-13 14:59:11,725 - numexpr.utils - INFO - Note: NumExpr detected 12 cores but "NUMEXPR_MAX_THREADS" not set, so enforcing safe limit of 8.
2025-03-13 14:59:11,726 - numexpr.utils - INFO - NumExpr defaulting to 8 threads.
2025-03-13 15:01:05,121 - app.services.predictive_analytics - INFO - Starting driver risk prediction for last 2 days
2025-03-13 15:01:05,122 - app.db.repositories.data_repository - INFO - Fetching driver risk data for past 2 days
2025-03-13 15:01:05,656 - app.db.repositories.data_repository - INFO - Retrieved stats for 95 drivers
2025-03-13 15:01:05,656 - app.services.predictive_analytics - INFO - Retrieved 95 driver records
2025-03-13 15:01:05,657 - app.services.predictive_analytics - INFO - Successfully processed 9 drivers
2025-03-13 15:02:00,312 - numexpr.utils - INFO - Note: NumExpr detected 12 cores but "NUMEXPR_MAX_THREADS" not set, so enforcing safe limit of 8.
2025-03-13 15:02:00,312 - numexpr.utils - INFO - NumExpr defaulting to 8 threads.
2025-03-13 15:02:04,195 - numexpr.utils - INFO - Note: NumExpr detected 12 cores but "NUMEXPR_MAX_THREADS" not set, so enforcing safe limit of 8.
2025-03-13 15:02:04,195 - numexpr.utils - INFO - NumExpr defaulting to 8 threads.
2025-03-13 15:04:49,915 - numexpr.utils - INFO - Note: NumExpr detected 12 cores but "NUMEXPR_MAX_THREADS" not set, so enforcing safe limit of 8.
2025-03-13 15:04:49,915 - numexpr.utils - INFO - NumExpr defaulting to 8 threads.
2025-03-13 15:04:53,991 - numexpr.utils - INFO - Note: NumExpr detected 12 cores but "NUMEXPR_MAX_THREADS" not set, so enforcing safe limit of 8.
2025-03-13 15:04:53,991 - numexpr.utils - INFO - NumExpr defaulting to 8 threads.
2025-03-13 15:07:16,350 - numexpr.utils - INFO - Note: NumExpr detected 12 cores but "NUMEXPR_MAX_THREADS" not set, so enforcing safe limit of 8.
2025-03-13 15:07:16,350 - numexpr.utils - INFO - NumExpr defaulting to 8 threads.
2025-03-13 15:07:20,225 - numexpr.utils - INFO - Note: NumExpr detected 12 cores but "NUMEXPR_MAX_THREADS" not set, so enforcing safe limit of 8.
2025-03-13 15:07:20,225 - numexpr.utils - INFO - NumExpr defaulting to 8 threads.
2025-03-13 15:09:58,064 - numexpr.utils - INFO - Note: NumExpr detected 12 cores but "NUMEXPR_MAX_THREADS" not set, so enforcing safe limit of 8.
2025-03-13 15:09:58,065 - numexpr.utils - INFO - NumExpr defaulting to 8 threads.
2025-03-13 15:10:00,390 - matplotlib - DEBUG - matplotlib data path: C:\Users\msameerakram\AppData\Local\anaconda3\Lib\site-packages\matplotlib\mpl-data
2025-03-13 15:10:00,400 - matplotlib - DEBUG - CONFIGDIR=C:\Users\msameerakram\.matplotlib
2025-03-13 15:10:00,404 - matplotlib - DEBUG - interactive is False
2025-03-13 15:10:00,404 - matplotlib - DEBUG - platform is win32
2025-03-13 15:10:00,499 - matplotlib - DEBUG - CACHEDIR=C:\Users\msameerakram\.matplotlib
2025-03-13 15:10:00,504 - matplotlib.font_manager - DEBUG - Using fontManager instance from C:\Users\msameerakram\.matplotlib\fontlist-v390.json
2025-03-13 15:10:03,426 - numexpr.utils - INFO - Note: NumExpr detected 12 cores but "NUMEXPR_MAX_THREADS" not set, so enforcing safe limit of 8.
2025-03-13 15:10:03,426 - numexpr.utils - INFO - NumExpr defaulting to 8 threads.
2025-03-13 15:10:04,725 - matplotlib - DEBUG - matplotlib data path: C:\Users\msameerakram\AppData\Local\anaconda3\Lib\site-packages\matplotlib\mpl-data
2025-03-13 15:10:04,731 - matplotlib - DEBUG - CONFIGDIR=C:\Users\msameerakram\.matplotlib
2025-03-13 15:10:04,732 - matplotlib - DEBUG - interactive is False
2025-03-13 15:10:04,733 - matplotlib - DEBUG - platform is win32
2025-03-13 15:10:04,799 - matplotlib - DEBUG - CACHEDIR=C:\Users\msameerakram\.matplotlib
2025-03-13 15:10:04,804 - matplotlib.font_manager - DEBUG - Using fontManager instance from C:\Users\msameerakram\.matplotlib\fontlist-v390.json
2025-03-13 15:10:06,410 - asyncio - DEBUG - Using selector: SelectSelector
2025-03-13 15:10:06,449 - pymongo.topology - DEBUG - {"topologyId": {"$oid": "67d2aefe57035d5a5ca53117"}, "message": "Starting topology monitoring"}
2025-03-13 15:10:06,450 - pymongo.topology - DEBUG - {"topologyId": {"$oid": "67d2aefe57035d5a5ca53117"}, "previousDescription": "<TopologyDescription id: 67d2aefe57035d5a5ca53117, topology_type: Unknown, servers: []>", "newDescription": "<TopologyDescription id: 67d2aefe57035d5a5ca53117, topology_type: Unknown, servers: [<ServerDescription ('3.144.134.141', 27017) server_type: Unknown, rtt: None>]>", "message": "Topology description changed"}
2025-03-13 15:10:06,450 - pymongo.topology - DEBUG - {"topologyId": {"$oid": "67d2aefe57035d5a5ca53117"}, "serverHost": "3.144.134.141", "serverPort": 27017, "message": "Starting server monitoring"}
2025-03-13 15:10:06,452 - pymongo.connection - DEBUG - {"clientId": {"$oid": "67d2aefe57035d5a5ca53117"}, "message": "Connection pool created", "serverHost": "3.144.134.141", "serverPort": 27017}
2025-03-13 15:10:06,452 - pymongo.serverSelection - DEBUG - {"message": "Server selection started", "selector": "Primary()", "operation": "ping", "topologyDescription": "<TopologyDescription id: 67d2aefe57035d5a5ca53117, topology_type: Unknown, servers: [<ServerDescription ('3.144.134.141', 27017) server_type: Unknown, rtt: None>]>", "clientId": {"$oid": "67d2aefe57035d5a5ca53117"}}
2025-03-13 15:10:06,453 - pymongo.serverSelection - DEBUG - {"message": "Waiting for suitable server to become available", "selector": "Primary()", "operation": "ping", "topologyDescription": "<TopologyDescription id: 67d2aefe57035d5a5ca53117, topology_type: Unknown, servers: [<ServerDescription ('3.144.134.141', 27017) server_type: Unknown, rtt: None>]>", "clientId": {"$oid": "67d2aefe57035d5a5ca53117"}, "remainingTimeMS": 30}
2025-03-13 15:10:06,701 - pymongo.topology - DEBUG - {"topologyId": {"$oid": "67d2aefe57035d5a5ca53117"}, "driverConnectionId": 1, "serverHost": "3.144.134.141", "serverPort": 27017, "awaited": false, "message": "Server heartbeat started"}
2025-03-13 15:10:06,949 - pymongo.topology - DEBUG - {"topologyId": {"$oid": "67d2aefe57035d5a5ca53117"}, "driverConnectionId": 1, "serverConnectionId": 13023, "serverHost": "3.144.134.141", "serverPort": 27017, "awaited": false, "durationMS": 250.0, "reply": "{\"helloOk\": true, \"ismaster\": true, \"topologyVersion\": {\"processId\": {\"$oid\": \"67b7e5814f77c1a87c56d054\"}}, \"maxBsonObjectSize\": 16777216, \"maxMessageSizeBytes\": 48000000, \"maxWriteBatchSize\": 100000, \"localTime\": {\"$date\": \"2025-03-13T10:10:06.958Z\"}, \"logicalSessionTimeoutMinutes\": 30, \"connectionId\": 13023, \"maxWireVersion\": 25, \"ok\": 1.0}", "message": "Server heartbeat succeeded"}
2025-03-13 15:10:06,949 - pymongo.connection - DEBUG - {"clientId": {"$oid": "67d2aefe57035d5a5ca53117"}, "message": "Connection pool ready", "serverHost": "3.144.134.141", "serverPort": 27017}
2025-03-13 15:10:06,950 - pymongo.topology - DEBUG - {"topologyId": {"$oid": "67d2aefe57035d5a5ca53117"}, "previousDescription": "<TopologyDescription id: 67d2aefe57035d5a5ca53117, topology_type: Unknown, servers: [<ServerDescription ('3.144.134.141', 27017) server_type: Unknown, rtt: None>]>", "newDescription": "<TopologyDescription id: 67d2aefe57035d5a5ca53117, topology_type: Single, servers: [<ServerDescription ('3.144.134.141', 27017) server_type: Standalone, rtt: 0.25>]>", "message": "Topology description changed"}
2025-03-13 15:10:06,950 - pymongo.serverSelection - DEBUG - {"message": "Server selection succeeded", "selector": "Primary()", "operation": "ping", "topologyDescription": "<TopologyDescription id: 67d2aefe57035d5a5ca53117, topology_type: Single, servers: [<ServerDescription ('3.144.134.141', 27017) server_type: Standalone, rtt: 0.25>]>", "clientId": {"$oid": "67d2aefe57035d5a5ca53117"}, "serverHost": "3.144.134.141", "serverPort": 27017}
2025-03-13 15:10:06,952 - pymongo.connection - DEBUG - {"clientId": {"$oid": "67d2aefe57035d5a5ca53117"}, "message": "Connection checkout started", "serverHost": "3.144.134.141", "serverPort": 27017}
2025-03-13 15:10:06,952 - pymongo.topology - DEBUG - {"topologyId": {"$oid": "67d2aefe57035d5a5ca53117"}, "driverConnectionId": 1, "serverConnectionId": 13023, "serverHost": "3.144.134.141", "serverPort": 27017, "awaited": true, "message": "Server heartbeat started"}
2025-03-13 15:10:06,952 - pymongo.connection - DEBUG - {"clientId": {"$oid": "67d2aefe57035d5a5ca53117"}, "message": "Connection created", "serverHost": "3.144.134.141", "serverPort": 27017, "driverConnectionId": 1}
2025-03-13 15:10:07,702 - pymongo.connection - DEBUG - {"clientId": {"$oid": "67d2aefe57035d5a5ca53117"}, "message": "Connection ready", "serverHost": "3.144.134.141", "serverPort": 27017, "driverConnectionId": 1, "durationMS": 0.5}
2025-03-13 15:10:07,703 - pymongo.connection - DEBUG - {"clientId": {"$oid": "67d2aefe57035d5a5ca53117"}, "message": "Connection checked out", "serverHost": "3.144.134.141", "serverPort": 27017, "driverConnectionId": 1, "durationMS": 0.75}
2025-03-13 15:10:07,703 - pymongo.command - DEBUG - {"clientId": {"$oid": "67d2aefe57035d5a5ca53117"}, "message": "Command started", "command": "{\"ping\": 1, \"lsid\": {\"id\": {\"$binary\": {\"base64\": \"buKecygAQiWoskwWzjqXYw==\", \"subType\": \"04\"}}}, \"$db\": \"opal_server\"}", "commandName": "ping", "databaseName": "opal_server", "requestId": 6334, "operationId": 6334, "driverConnectionId": 1, "serverConnectionId": 13024, "serverHost": "3.144.134.141", "serverPort": 27017}
2025-03-13 15:10:07,960 - pymongo.command - DEBUG - {"clientId": {"$oid": "67d2aefe57035d5a5ca53117"}, "message": "Command succeeded", "durationMS": 256.84299999999996, "reply": "{\"ok\": 1.0}", "commandName": "ping", "databaseName": "opal_server", "requestId": 6334, "operationId": 6334, "driverConnectionId": 1, "serverConnectionId": 13024, "serverHost": "3.144.134.141", "serverPort": 27017}
2025-03-13 15:10:07,960 - pymongo.connection - DEBUG - {"clientId": {"$oid": "67d2aefe57035d5a5ca53117"}, "message": "Connection checked in", "serverHost": "3.144.134.141", "serverPort": 27017, "driverConnectionId": 1}
2025-03-13 15:10:13,431 - app.api.endpoints.analytics - DEBUG - Starting real-time analysis request - timeframe: 24h, driver_uuid: None
2025-03-13 15:10:13,432 - app.api.endpoints.analytics - INFO - Fetching data for time window: 24h, driver: all drivers
2025-03-13 15:10:13,432 - app.db.repositories.data_repository - DEBUG - Connected to database: opal_server
2025-03-13 15:10:13,432 - app.db.repositories.data_repository - DEBUG - Executing violation query: {'timestamp': {'$gte': datetime.datetime(2025, 3, 12, 15, 10, 13, 432681), '$lte': datetime.datetime(2025, 3, 13, 15, 10, 13, 432681)}}
2025-03-13 15:10:13,433 - app.db.repositories.data_repository - DEBUG - Collection: violations
2025-03-13 15:10:13,433 - app.db.repositories.data_repository - DEBUG - Limit: 1000
2025-03-13 15:10:13,434 - pymongo.serverSelection - DEBUG - {"message": "Server selection started", "selector": "Primary()", "operation": "listCollections", "topologyDescription": "<TopologyDescription id: 67d2aefe57035d5a5ca53117, topology_type: Single, servers: [<ServerDescription ('3.144.134.141', 27017) server_type: Standalone, rtt: 0.25>]>", "clientId": {"$oid": "67d2aefe57035d5a5ca53117"}}
2025-03-13 15:10:13,434 - pymongo.serverSelection - DEBUG - {"message": "Server selection succeeded", "selector": "Primary()", "operation": "listCollections", "topologyDescription": "<TopologyDescription id: 67d2aefe57035d5a5ca53117, topology_type: Single, servers: [<ServerDescription ('3.144.134.141', 27017) server_type: Standalone, rtt: 0.25>]>", "clientId": {"$oid": "67d2aefe57035d5a5ca53117"}, "serverHost": "3.144.134.141", "serverPort": 27017}
2025-03-13 15:10:13,435 - pymongo.connection - DEBUG - {"clientId": {"$oid": "67d2aefe57035d5a5ca53117"}, "message": "Connection checkout started", "serverHost": "3.144.134.141", "serverPort": 27017}
2025-03-13 15:10:13,435 - pymongo.connection - DEBUG - {"clientId": {"$oid": "67d2aefe57035d5a5ca53117"}, "message": "Connection checked out", "serverHost": "3.144.134.141", "serverPort": 27017, "driverConnectionId": 1, "durationMS": 0.0}
2025-03-13 15:10:13,435 - pymongo.command - DEBUG - {"clientId": {"$oid": "67d2aefe57035d5a5ca53117"}, "message": "Command started", "command": "{\"listCollections\": 1, \"nameOnly\": true, \"lsid\": {\"id\": {\"$binary\": {\"base64\": \"buKecygAQiWoskwWzjqXYw==\", \"subType\": \"04\"}}}, \"$db\": \"opal_server\"}", "commandName": "listCollections", "databaseName": "opal_server", "requestId": 26500, "operationId": 26500, "driverConnectionId": 1, "serverConnectionId": 13024, "serverHost": "3.144.134.141", "serverPort": 27017}
2025-03-13 15:10:13,680 - pymongo.command - DEBUG - {"clientId": {"$oid": "67d2aefe57035d5a5ca53117"}, "message": "Command succeeded", "durationMS": 244.817, "reply": "{\"cursor\": {\"ns\": \"opal_server.$cmd.listCollections\", \"firstBatch\": [{\"name\": \"rags\", \"type\": \"collection\"}, {\"name\": \"trips\", \"type\": \"collection\"}, {\"name\": \"vehicles\", \"type\": \"collection\"}, {\"name\": \"permissions\", \"type\": \"collection\"}, {\"name\": \"notifications\", \"type\": \"collection\"}, {\"name\": \"crash_events\", \"type\": \"collection\"}, {\"name\": \"violations-x\", \"type\": \"collection\"}, {\"name\": \"drivers\", \"type\": \"collection\"}, {\"name\": \"geofences\", \"type\": \"collection\"}, {\"name\": \"tickets\", \"type\": \"collection\"}, {\"name\": \"vehicleevents\", \"type\": \"collection\"}, {\"name\": \"vendors\", \"type\": \"collection\"}, {\"name\": \"roles\", \"type\": \"collection\"}, {\"name\": \"clients\", \"type\": \"collection\"}, {\"name\": \"vendordevices\", \"type\": \"collection\"}, {\"name\": \"settings\", \"type\": \"collection\"}, {\"name\": \"media\", \"type\": \"collection\"}, {\"name\": \"violation_rules\", \"type\": \"collection\"}, {\"name\": \"violations\", \"type\": \"collection\"}, {\"name\": \"users\", \"type\": \"collection\"}, {\"name\": \"companies\", \"type\": \"coll...", "commandName": "listCollections", "databaseName": "opal_server", "requestId": 26500, "operationId": 26500, "driverConnectionId": 1, "serverConnectionId": 13024, "serverHost": "3.144.134.141", "serverPort": 27017}
2025-03-13 15:10:13,683 - pymongo.connection - DEBUG - {"clientId": {"$oid": "67d2aefe57035d5a5ca53117"}, "message": "Connection checked in", "serverHost": "3.144.134.141", "serverPort": 27017, "driverConnectionId": 1}
2025-03-13 15:10:13,684 - pymongo.serverSelection - DEBUG - {"message": "Server selection started", "selector": "Primary()", "operation": "count", "topologyDescription": "<TopologyDescription id: 67d2aefe57035d5a5ca53117, topology_type: Single, servers: [<ServerDescription ('3.144.134.141', 27017) server_type: Standalone, rtt: 0.25>]>", "clientId": {"$oid": "67d2aefe57035d5a5ca53117"}}
2025-03-13 15:10:13,684 - pymongo.serverSelection - DEBUG - {"message": "Server selection succeeded", "selector": "Primary()", "operation": "count", "topologyDescription": "<TopologyDescription id: 67d2aefe57035d5a5ca53117, topology_type: Single, servers: [<ServerDescription ('3.144.134.141', 27017) server_type: Standalone, rtt: 0.25>]>", "clientId": {"$oid": "67d2aefe57035d5a5ca53117"}, "serverHost": "3.144.134.141", "serverPort": 27017}
2025-03-13 15:10:13,685 - pymongo.connection - DEBUG - {"clientId": {"$oid": "67d2aefe57035d5a5ca53117"}, "message": "Connection checkout started", "serverHost": "3.144.134.141", "serverPort": 27017}
2025-03-13 15:10:13,685 - pymongo.connection - DEBUG - {"clientId": {"$oid": "67d2aefe57035d5a5ca53117"}, "message": "Connection checked out", "serverHost": "3.144.134.141", "serverPort": 27017, "driverConnectionId": 1, "durationMS": 0.0}
2025-03-13 15:10:13,686 - pymongo.command - DEBUG - {"clientId": {"$oid": "67d2aefe57035d5a5ca53117"}, "message": "Command started", "command": "{\"aggregate\": \"violations\", \"pipeline\": [{\"$match\": {\"timestamp\": {\"$gte\": {\"$date\": \"2025-03-12T15:10:13.432Z\"}, \"$lte\": {\"$date\": \"2025-03-13T15:10:13.432Z\"}}}}, {\"$group\": {\"_id\": 1, \"n\": {\"$sum\": 1}}}], \"lsid\": {\"id\": {\"$binary\": {\"base64\": \"buKecygAQiWoskwWzjqXYw==\", \"subType\": \"04\"}}}, \"$db\": \"opal_server\"}", "commandName": "aggregate", "databaseName": "opal_server", "requestId": 19169, "operationId": 19169, "driverConnectionId": 1, "serverConnectionId": 13024, "serverHost": "3.144.134.141", "serverPort": 27017}
2025-03-13 15:10:13,942 - pymongo.command - DEBUG - {"clientId": {"$oid": "67d2aefe57035d5a5ca53117"}, "message": "Command succeeded", "durationMS": 256.642, "reply": "{\"cursor\": {\"ns\": \"opal_server.violations\"}, \"ok\": 1.0}", "commandName": "aggregate", "databaseName": "opal_server", "requestId": 19169, "operationId": 19169, "driverConnectionId": 1, "serverConnectionId": 13024, "serverHost": "3.144.134.141", "serverPort": 27017}
2025-03-13 15:10:13,942 - pymongo.connection - DEBUG - {"clientId": {"$oid": "67d2aefe57035d5a5ca53117"}, "message": "Connection checked in", "serverHost": "3.144.134.141", "serverPort": 27017, "driverConnectionId": 1}
2025-03-13 15:10:13,943 - app.db.repositories.data_repository - INFO - Found 0 matching violations
2025-03-13 15:10:13,943 - pymongo.serverSelection - DEBUG - {"message": "Server selection started", "selector": "Primary()", "operation": "find", "topologyDescription": "<TopologyDescription id: 67d2aefe57035d5a5ca53117, topology_type: Single, servers: [<ServerDescription ('3.144.134.141', 27017) server_type: Standalone, rtt: 0.25>]>", "clientId": {"$oid": "67d2aefe57035d5a5ca53117"}}
2025-03-13 15:10:13,944 - pymongo.serverSelection - DEBUG - {"message": "Server selection succeeded", "selector": "Primary()", "operation": "find", "topologyDescription": "<TopologyDescription id: 67d2aefe57035d5a5ca53117, topology_type: Single, servers: [<ServerDescription ('3.144.134.141', 27017) server_type: Standalone, rtt: 0.25>]>", "clientId": {"$oid": "67d2aefe57035d5a5ca53117"}, "serverHost": "3.144.134.141", "serverPort": 27017}
2025-03-13 15:10:13,944 - pymongo.connection - DEBUG - {"clientId": {"$oid": "67d2aefe57035d5a5ca53117"}, "message": "Connection checkout started", "serverHost": "3.144.134.141", "serverPort": 27017}
2025-03-13 15:10:13,944 - pymongo.connection - DEBUG - {"clientId": {"$oid": "67d2aefe57035d5a5ca53117"}, "message": "Connection checked out", "serverHost": "3.144.134.141", "serverPort": 27017, "driverConnectionId": 1, "durationMS": 0.0}
2025-03-13 15:10:13,944 - pymongo.command - DEBUG - {"clientId": {"$oid": "67d2aefe57035d5a5ca53117"}, "message": "Command started", "command": "{\"find\": \"violations\", \"filter\": {\"timestamp\": {\"$gte\": {\"$date\": \"2025-03-12T15:10:13.432Z\"}, \"$lte\": {\"$date\": \"2025-03-13T15:10:13.432Z\"}}}, \"limit\": 1000, \"lsid\": {\"id\": {\"$binary\": {\"base64\": \"buKecygAQiWoskwWzjqXYw==\", \"subType\": \"04\"}}}, \"$db\": \"opal_server\"}", "commandName": "find", "databaseName": "opal_server", "requestId": 15724, "operationId": 15724, "driverConnectionId": 1, "serverConnectionId": 13024, "serverHost": "3.144.134.141", "serverPort": 27017}
2025-03-13 15:10:14,196 - pymongo.command - DEBUG - {"clientId": {"$oid": "67d2aefe57035d5a5ca53117"}, "message": "Command succeeded", "durationMS": 251.997, "reply": "{\"cursor\": {\"ns\": \"opal_server.violations\"}, \"ok\": 1.0}", "commandName": "find", "databaseName": "opal_server", "requestId": 15724, "operationId": 15724, "driverConnectionId": 1, "serverConnectionId": 13024, "serverHost": "3.144.134.141", "serverPort": 27017}
2025-03-13 15:10:14,196 - pymongo.connection - DEBUG - {"clientId": {"$oid": "67d2aefe57035d5a5ca53117"}, "message": "Connection checked in", "serverHost": "3.144.134.141", "serverPort": 27017, "driverConnectionId": 1}
2025-03-13 15:10:14,197 - app.db.repositories.data_repository - DEBUG - Retrieved 0 violations
2025-03-13 15:10:14,198 - app.db.repositories.data_repository - DEBUG - Fetching vehicle events from database: opal_server
2025-03-13 15:10:14,198 - app.db.repositories.data_repository - DEBUG - Vehicle events query: {'timestamp': {'$gte': datetime.datetime(2025, 3, 12, 15, 10, 13, 432681), '$lte': datetime.datetime(2025, 3, 13, 15, 10, 13, 432681)}}
2025-03-13 15:10:14,198 - pymongo.serverSelection - DEBUG - {"message": "Server selection started", "selector": "Primary()", "operation": "listCollections", "topologyDescription": "<TopologyDescription id: 67d2aefe57035d5a5ca53117, topology_type: Single, servers: [<ServerDescription ('3.144.134.141', 27017) server_type: Standalone, rtt: 0.25>]>", "clientId": {"$oid": "67d2aefe57035d5a5ca53117"}}
2025-03-13 15:10:14,199 - pymongo.serverSelection - DEBUG - {"message": "Server selection succeeded", "selector": "Primary()", "operation": "listCollections", "topologyDescription": "<TopologyDescription id: 67d2aefe57035d5a5ca53117, topology_type: Single, servers: [<ServerDescription ('3.144.134.141', 27017) server_type: Standalone, rtt: 0.25>]>", "clientId": {"$oid": "67d2aefe57035d5a5ca53117"}, "serverHost": "3.144.134.141", "serverPort": 27017}
2025-03-13 15:10:14,199 - pymongo.connection - DEBUG - {"clientId": {"$oid": "67d2aefe57035d5a5ca53117"}, "message": "Connection checkout started", "serverHost": "3.144.134.141", "serverPort": 27017}
2025-03-13 15:10:14,200 - pymongo.connection - DEBUG - {"clientId": {"$oid": "67d2aefe57035d5a5ca53117"}, "message": "Connection checked out", "serverHost": "3.144.134.141", "serverPort": 27017, "driverConnectionId": 1, "durationMS": 0.0}
2025-03-13 15:10:14,200 - pymongo.command - DEBUG - {"clientId": {"$oid": "67d2aefe57035d5a5ca53117"}, "message": "Command started", "command": "{\"listCollections\": 1, \"nameOnly\": true, \"lsid\": {\"id\": {\"$binary\": {\"base64\": \"buKecygAQiWoskwWzjqXYw==\", \"subType\": \"04\"}}}, \"$db\": \"opal_server\"}", "commandName": "listCollections", "databaseName": "opal_server", "requestId": 11478, "operationId": 11478, "driverConnectionId": 1, "serverConnectionId": 13024, "serverHost": "3.144.134.141", "serverPort": 27017}
2025-03-13 15:10:14,445 - pymongo.command - DEBUG - {"clientId": {"$oid": "67d2aefe57035d5a5ca53117"}, "message": "Command succeeded", "durationMS": 245.166, "reply": "{\"cursor\": {\"ns\": \"opal_server.$cmd.listCollections\", \"firstBatch\": [{\"name\": \"rags\", \"type\": \"collection\"}, {\"name\": \"trips\", \"type\": \"collection\"}, {\"name\": \"vehicles\", \"type\": \"collection\"}, {\"name\": \"permissions\", \"type\": \"collection\"}, {\"name\": \"notifications\", \"type\": \"collection\"}, {\"name\": \"crash_events\", \"type\": \"collection\"}, {\"name\": \"violations-x\", \"type\": \"collection\"}, {\"name\": \"drivers\", \"type\": \"collection\"}, {\"name\": \"geofences\", \"type\": \"collection\"}, {\"name\": \"tickets\", \"type\": \"collection\"}, {\"name\": \"vehicleevents\", \"type\": \"collection\"}, {\"name\": \"vendors\", \"type\": \"collection\"}, {\"name\": \"roles\", \"type\": \"collection\"}, {\"name\": \"clients\", \"type\": \"collection\"}, {\"name\": \"vendordevices\", \"type\": \"collection\"}, {\"name\": \"settings\", \"type\": \"collection\"}, {\"name\": \"media\", \"type\": \"collection\"}, {\"name\": \"violation_rules\", \"type\": \"collection\"}, {\"name\": \"violations\", \"type\": \"collection\"}, {\"name\": \"users\", \"type\": \"collection\"}, {\"name\": \"companies\", \"type\": \"coll...", "commandName": "listCollections", "databaseName": "opal_server", "requestId": 11478, "operationId": 11478, "driverConnectionId": 1, "serverConnectionId": 13024, "serverHost": "3.144.134.141", "serverPort": 27017}
2025-03-13 15:10:14,446 - pymongo.connection - DEBUG - {"clientId": {"$oid": "67d2aefe57035d5a5ca53117"}, "message": "Connection checked in", "serverHost": "3.144.134.141", "serverPort": 27017, "driverConnectionId": 1}
2025-03-13 15:10:14,447 - pymongo.serverSelection - DEBUG - {"message": "Server selection started", "selector": "Primary()", "operation": "count", "topologyDescription": "<TopologyDescription id: 67d2aefe57035d5a5ca53117, topology_type: Single, servers: [<ServerDescription ('3.144.134.141', 27017) server_type: Standalone, rtt: 0.25>]>", "clientId": {"$oid": "67d2aefe57035d5a5ca53117"}}
2025-03-13 15:10:14,447 - pymongo.serverSelection - DEBUG - {"message": "Server selection succeeded", "selector": "Primary()", "operation": "count", "topologyDescription": "<TopologyDescription id: 67d2aefe57035d5a5ca53117, topology_type: Single, servers: [<ServerDescription ('3.144.134.141', 27017) server_type: Standalone, rtt: 0.25>]>", "clientId": {"$oid": "67d2aefe57035d5a5ca53117"}, "serverHost": "3.144.134.141", "serverPort": 27017}
2025-03-13 15:10:14,447 - pymongo.connection - DEBUG - {"clientId": {"$oid": "67d2aefe57035d5a5ca53117"}, "message": "Connection checkout started", "serverHost": "3.144.134.141", "serverPort": 27017}
2025-03-13 15:10:14,448 - pymongo.connection - DEBUG - {"clientId": {"$oid": "67d2aefe57035d5a5ca53117"}, "message": "Connection checked out", "serverHost": "3.144.134.141", "serverPort": 27017, "driverConnectionId": 1, "durationMS": 0.0}
2025-03-13 15:10:14,448 - pymongo.command - DEBUG - {"clientId": {"$oid": "67d2aefe57035d5a5ca53117"}, "message": "Command started", "command": "{\"aggregate\": \"vehicleevents\", \"pipeline\": [{\"$match\": {\"timestamp\": {\"$gte\": {\"$date\": \"2025-03-12T15:10:13.432Z\"}, \"$lte\": {\"$date\": \"2025-03-13T15:10:13.432Z\"}}}}, {\"$group\": {\"_id\": 1, \"n\": {\"$sum\": 1}}}], \"lsid\": {\"id\": {\"$binary\": {\"base64\": \"buKecygAQiWoskwWzjqXYw==\", \"subType\": \"04\"}}}, \"$db\": \"opal_server\"}", "commandName": "aggregate", "databaseName": "opal_server", "requestId": 29358, "operationId": 29358, "driverConnectionId": 1, "serverConnectionId": 13024, "serverHost": "3.144.134.141", "serverPort": 27017}
2025-03-13 15:10:17,211 - pymongo.topology - DEBUG - {"topologyId": {"$oid": "67d2aefe57035d5a5ca53117"}, "driverConnectionId": 1, "serverConnectionId": 13023, "serverHost": "3.144.134.141", "serverPort": 27017, "awaited": true, "durationMS": 10265.999999999622, "reply": "{\"isWritablePrimary\": true, \"topologyVersion\": {\"processId\": {\"$oid\": \"67b7e5814f77c1a87c56d054\"}}, \"maxBsonObjectSize\": 16777216, \"maxMessageSizeBytes\": 48000000, \"maxWriteBatchSize\": 100000, \"localTime\": {\"$date\": \"2025-03-13T10:10:17.219Z\"}, \"logicalSessionTimeoutMinutes\": 30, \"connectionId\": 13023, \"maxWireVersion\": 25, \"ok\": 1.0}", "message": "Server heartbeat succeeded"}
2025-03-13 15:10:17,212 - pymongo.topology - DEBUG - {"topologyId": {"$oid": "67d2aefe57035d5a5ca53117"}, "driverConnectionId": 1, "serverConnectionId": 13023, "serverHost": "3.144.134.141", "serverPort": 27017, "awaited": true, "message": "Server heartbeat started"}
2025-03-13 15:10:20,023 - pymongo.command - DEBUG - {"clientId": {"$oid": "67d2aefe57035d5a5ca53117"}, "message": "Command succeeded", "durationMS": 5575.103, "reply": "{\"cursor\": {\"ns\": \"opal_server.vehicleevents\"}, \"ok\": 1.0}", "commandName": "aggregate", "databaseName": "opal_server", "requestId": 29358, "operationId": 29358, "driverConnectionId": 1, "serverConnectionId": 13024, "serverHost": "3.144.134.141", "serverPort": 27017}
2025-03-13 15:10:20,024 - pymongo.connection - DEBUG - {"clientId": {"$oid": "67d2aefe57035d5a5ca53117"}, "message": "Connection checked in", "serverHost": "3.144.134.141", "serverPort": 27017, "driverConnectionId": 1}
2025-03-13 15:10:20,025 - app.db.repositories.data_repository - INFO - Found 0 matching vehicle events
2025-03-13 15:10:20,025 - pymongo.serverSelection - DEBUG - {"message": "Server selection started", "selector": "Primary()", "operation": "find", "topologyDescription": "<TopologyDescription id: 67d2aefe57035d5a5ca53117, topology_type: Single, servers: [<ServerDescription ('3.144.134.141', 27017) server_type: Standalone, rtt: 0.25>]>", "clientId": {"$oid": "67d2aefe57035d5a5ca53117"}}
2025-03-13 15:10:20,026 - pymongo.serverSelection - DEBUG - {"message": "Server selection succeeded", "selector": "Primary()", "operation": "find", "topologyDescription": "<TopologyDescription id: 67d2aefe57035d5a5ca53117, topology_type: Single, servers: [<ServerDescription ('3.144.134.141', 27017) server_type: Standalone, rtt: 0.25>]>", "clientId": {"$oid": "67d2aefe57035d5a5ca53117"}, "serverHost": "3.144.134.141", "serverPort": 27017}
2025-03-13 15:10:20,027 - pymongo.connection - DEBUG - {"clientId": {"$oid": "67d2aefe57035d5a5ca53117"}, "message": "Connection checkout started", "serverHost": "3.144.134.141", "serverPort": 27017}
2025-03-13 15:10:20,027 - pymongo.connection - DEBUG - {"clientId": {"$oid": "67d2aefe57035d5a5ca53117"}, "message": "Connection checked out", "serverHost": "3.144.134.141", "serverPort": 27017, "driverConnectionId": 1, "durationMS": 0.0}
2025-03-13 15:10:20,028 - pymongo.command - DEBUG - {"clientId": {"$oid": "67d2aefe57035d5a5ca53117"}, "message": "Command started", "command": "{\"find\": \"vehicleevents\", \"filter\": {\"timestamp\": {\"$gte\": {\"$date\": \"2025-03-12T15:10:13.432Z\"}, \"$lte\": {\"$date\": \"2025-03-13T15:10:13.432Z\"}}}, \"limit\": 1000, \"lsid\": {\"id\": {\"$binary\": {\"base64\": \"buKecygAQiWoskwWzjqXYw==\", \"subType\": \"04\"}}}, \"$db\": \"opal_server\"}", "commandName": "find", "databaseName": "opal_server", "requestId": 26962, "operationId": 26962, "driverConnectionId": 1, "serverConnectionId": 13024, "serverHost": "3.144.134.141", "serverPort": 27017}
2025-03-13 15:10:25,534 - pymongo.command - DEBUG - {"clientId": {"$oid": "67d2aefe57035d5a5ca53117"}, "message": "Command succeeded", "durationMS": 5506.0560000000005, "reply": "{\"cursor\": {\"ns\": \"opal_server.vehicleevents\"}, \"ok\": 1.0}", "commandName": "find", "databaseName": "opal_server", "requestId": 26962, "operationId": 26962, "driverConnectionId": 1, "serverConnectionId": 13024, "serverHost": "3.144.134.141", "serverPort": 27017}
2025-03-13 15:10:25,535 - pymongo.connection - DEBUG - {"clientId": {"$oid": "67d2aefe57035d5a5ca53117"}, "message": "Connection checked in", "serverHost": "3.144.134.141", "serverPort": 27017, "driverConnectionId": 1}
2025-03-13 15:10:25,535 - app.db.repositories.data_repository - DEBUG - Retrieved 0 vehicle events
2025-03-13 15:10:25,535 - app.api.endpoints.analytics - DEBUG - Retrieved violations: 0
2025-03-13 15:10:25,536 - app.api.endpoints.analytics - DEBUG - Retrieved events: 0
2025-03-13 15:10:25,536 - app.api.endpoints.analytics - INFO - Analysis completed - Found 0 violations and 0 drivers
2025-03-13 15:10:25,536 - app.api.endpoints.analytics - WARNING - No data found for the specified criteria
2025-03-13 15:10:27,210 - pymongo.topology - DEBUG - {"topologyId": {"$oid": "67d2aefe57035d5a5ca53117"}, "driverConnectionId": 1, "serverConnectionId": 13023, "serverHost": "3.144.134.141", "serverPort": 27017, "awaited": true, "durationMS": 10000.0, "reply": "{\"isWritablePrimary\": true, \"topologyVersion\": {\"processId\": {\"$oid\": \"67b7e5814f77c1a87c56d054\"}}, \"maxBsonObjectSize\": 16777216, \"maxMessageSizeBytes\": 48000000, \"maxWriteBatchSize\": 100000, \"localTime\": {\"$date\": \"2025-03-13T10:10:27.220Z\"}, \"logicalSessionTimeoutMinutes\": 30, \"connectionId\": 13023, \"maxWireVersion\": 25, \"ok\": 1.0}", "message": "Server heartbeat succeeded"}
2025-03-13 15:10:27,210 - pymongo.topology - DEBUG - {"topologyId": {"$oid": "67d2aefe57035d5a5ca53117"}, "driverConnectionId": 1, "serverConnectionId": 13023, "serverHost": "3.144.134.141", "serverPort": 27017, "awaited": true, "message": "Server heartbeat started"}
2025-03-13 15:10:37,216 - pymongo.topology - DEBUG - {"topologyId": {"$oid": "67d2aefe57035d5a5ca53117"}, "driverConnectionId": 1, "serverConnectionId": 13023, "serverHost": "3.144.134.141", "serverPort": 27017, "awaited": true, "durationMS": 10000.0, "reply": "{\"isWritablePrimary\": true, \"topologyVersion\": {\"processId\": {\"$oid\": \"67b7e5814f77c1a87c56d054\"}}, \"maxBsonObjectSize\": 16777216, \"maxMessageSizeBytes\": 48000000, \"maxWriteBatchSize\": 100000, \"localTime\": {\"$date\": \"2025-03-13T10:10:37.226Z\"}, \"logicalSessionTimeoutMinutes\": 30, \"connectionId\": 13023, \"maxWireVersion\": 25, \"ok\": 1.0}", "message": "Server heartbeat succeeded"}
2025-03-13 15:10:37,216 - pymongo.topology - DEBUG - {"topologyId": {"$oid": "67d2aefe57035d5a5ca53117"}, "driverConnectionId": 1, "serverConnectionId": 13023, "serverHost": "3.144.134.141", "serverPort": 27017, "awaited": true, "message": "Server heartbeat started"}
2025-03-13 15:10:47,218 - pymongo.topology - DEBUG - {"topologyId": {"$oid": "67d2aefe57035d5a5ca53117"}, "driverConnectionId": 1, "serverConnectionId": 13023, "serverHost": "3.144.134.141", "serverPort": 27017, "awaited": true, "durationMS": 10000.0, "reply": "{\"isWritablePrimary\": true, \"topologyVersion\": {\"processId\": {\"$oid\": \"67b7e5814f77c1a87c56d054\"}}, \"maxBsonObjectSize\": 16777216, \"maxMessageSizeBytes\": 48000000, \"maxWriteBatchSize\": 100000, \"localTime\": {\"$date\": \"2025-03-13T10:10:47.228Z\"}, \"logicalSessionTimeoutMinutes\": 30, \"connectionId\": 13023, \"maxWireVersion\": 25, \"ok\": 1.0}", "message": "Server heartbeat succeeded"}
2025-03-13 15:10:47,219 - pymongo.topology - DEBUG - {"topologyId": {"$oid": "67d2aefe57035d5a5ca53117"}, "driverConnectionId": 1, "serverConnectionId": 13023, "serverHost": "3.144.134.141", "serverPort": 27017, "awaited": true, "message": "Server heartbeat started"}
2025-03-13 15:10:57,235 - pymongo.topology - DEBUG - {"topologyId": {"$oid": "67d2aefe57035d5a5ca53117"}, "driverConnectionId": 1, "serverConnectionId": 13023, "serverHost": "3.144.134.141", "serverPort": 27017, "awaited": true, "durationMS": 10015.000000001237, "reply": "{\"isWritablePrimary\": true, \"topologyVersion\": {\"processId\": {\"$oid\": \"67b7e5814f77c1a87c56d054\"}}, \"maxBsonObjectSize\": 16777216, \"maxMessageSizeBytes\": 48000000, \"maxWriteBatchSize\": 100000, \"localTime\": {\"$date\": \"2025-03-13T10:10:57.229Z\"}, \"logicalSessionTimeoutMinutes\": 30, \"connectionId\": 13023, \"maxWireVersion\": 25, \"ok\": 1.0}", "message": "Server heartbeat succeeded"}
2025-03-13 15:10:57,235 - pymongo.topology - DEBUG - {"topologyId": {"$oid": "67d2aefe57035d5a5ca53117"}, "driverConnectionId": 1, "serverConnectionId": 13023, "serverHost": "3.144.134.141", "serverPort": 27017, "awaited": true, "message": "Server heartbeat started"}
2025-03-13 15:11:07,309 - pymongo.topology - DEBUG - {"topologyId": {"$oid": "67d2aefe57035d5a5ca53117"}, "driverConnectionId": 1, "serverConnectionId": 13023, "serverHost": "3.144.134.141", "serverPort": 27017, "awaited": true, "durationMS": 10077.99999999952, "reply": "{\"isWritablePrimary\": true, \"topologyVersion\": {\"processId\": {\"$oid\": \"67b7e5814f77c1a87c56d054\"}}, \"maxBsonObjectSize\": 16777216, \"maxMessageSizeBytes\": 48000000, \"maxWriteBatchSize\": 100000, \"localTime\": {\"$date\": \"2025-03-13T10:11:07.239Z\"}, \"logicalSessionTimeoutMinutes\": 30, \"connectionId\": 13023, \"maxWireVersion\": 25, \"ok\": 1.0}", "message": "Server heartbeat succeeded"}
2025-03-13 15:11:07,310 - pymongo.topology - DEBUG - {"topologyId": {"$oid": "67d2aefe57035d5a5ca53117"}, "driverConnectionId": 1, "serverConnectionId": 13023, "serverHost": "3.144.134.141", "serverPort": 27017, "awaited": true, "message": "Server heartbeat started"}
2025-03-13 15:11:17,237 - pymongo.topology - DEBUG - {"topologyId": {"$oid": "67d2aefe57035d5a5ca53117"}, "driverConnectionId": 1, "serverConnectionId": 13023, "serverHost": "3.144.134.141", "serverPort": 27017, "awaited": true, "durationMS": 9922.00000000048, "reply": "{\"isWritablePrimary\": true, \"topologyVersion\": {\"processId\": {\"$oid\": \"67b7e5814f77c1a87c56d054\"}}, \"maxBsonObjectSize\": 16777216, \"maxMessageSizeBytes\": 48000000, \"maxWriteBatchSize\": 100000, \"localTime\": {\"$date\": \"2025-03-13T10:11:17.247Z\"}, \"logicalSessionTimeoutMinutes\": 30, \"connectionId\": 13023, \"maxWireVersion\": 25, \"ok\": 1.0}", "message": "Server heartbeat succeeded"}
2025-03-13 15:11:17,238 - pymongo.topology - DEBUG - {"topologyId": {"$oid": "67d2aefe57035d5a5ca53117"}, "driverConnectionId": 1, "serverConnectionId": 13023, "serverHost": "3.144.134.141", "serverPort": 27017, "awaited": true, "message": "Server heartbeat started"}
2025-03-13 15:11:27,237 - pymongo.topology - DEBUG - {"topologyId": {"$oid": "67d2aefe57035d5a5ca53117"}, "driverConnectionId": 1, "serverConnectionId": 13023, "serverHost": "3.144.134.141", "serverPort": 27017, "awaited": true, "durationMS": 10000.0, "reply": "{\"isWritablePrimary\": true, \"topologyVersion\": {\"processId\": {\"$oid\": \"67b7e5814f77c1a87c56d054\"}}, \"maxBsonObjectSize\": 16777216, \"maxMessageSizeBytes\": 48000000, \"maxWriteBatchSize\": 100000, \"localTime\": {\"$date\": \"2025-03-13T10:11:27.248Z\"}, \"logicalSessionTimeoutMinutes\": 30, \"connectionId\": 13023, \"maxWireVersion\": 25, \"ok\": 1.0}", "message": "Server heartbeat succeeded"}
2025-03-13 15:11:27,237 - pymongo.topology - DEBUG - {"topologyId": {"$oid": "67d2aefe57035d5a5ca53117"}, "driverConnectionId": 1, "serverConnectionId": 13023, "serverHost": "3.144.134.141", "serverPort": 27017, "awaited": true, "message": "Server heartbeat started"}
2025-03-13 15:11:37,238 - pymongo.topology - DEBUG - {"topologyId": {"$oid": "67d2aefe57035d5a5ca53117"}, "driverConnectionId": 1, "serverConnectionId": 13023, "serverHost": "3.144.134.141", "serverPort": 27017, "awaited": true, "durationMS": 10000.0, "reply": "{\"isWritablePrimary\": true, \"topologyVersion\": {\"processId\": {\"$oid\": \"67b7e5814f77c1a87c56d054\"}}, \"maxBsonObjectSize\": 16777216, \"maxMessageSizeBytes\": 48000000, \"maxWriteBatchSize\": 100000, \"localTime\": {\"$date\": \"2025-03-13T10:11:37.249Z\"}, \"logicalSessionTimeoutMinutes\": 30, \"connectionId\": 13023, \"maxWireVersion\": 25, \"ok\": 1.0}", "message": "Server heartbeat succeeded"}
2025-03-13 15:11:37,239 - pymongo.topology - DEBUG - {"topologyId": {"$oid": "67d2aefe57035d5a5ca53117"}, "driverConnectionId": 1, "serverConnectionId": 13023, "serverHost": "3.144.134.141", "serverPort": 27017, "awaited": true, "message": "Server heartbeat started"}
2025-03-13 15:11:47,239 - pymongo.topology - DEBUG - {"topologyId": {"$oid": "67d2aefe57035d5a5ca53117"}, "driverConnectionId": 1, "serverConnectionId": 13023, "serverHost": "3.144.134.141", "serverPort": 27017, "awaited": true, "durationMS": 10000.0, "reply": "{\"isWritablePrimary\": true, \"topologyVersion\": {\"processId\": {\"$oid\": \"67b7e5814f77c1a87c56d054\"}}, \"maxBsonObjectSize\": 16777216, \"maxMessageSizeBytes\": 48000000, \"maxWriteBatchSize\": 100000, \"localTime\": {\"$date\": \"2025-03-13T10:11:47.249Z\"}, \"logicalSessionTimeoutMinutes\": 30, \"connectionId\": 13023, \"maxWireVersion\": 25, \"ok\": 1.0}", "message": "Server heartbeat succeeded"}
2025-03-13 15:11:47,240 - pymongo.topology - DEBUG - {"topologyId": {"$oid": "67d2aefe57035d5a5ca53117"}, "driverConnectionId": 1, "serverConnectionId": 13023, "serverHost": "3.144.134.141", "serverPort": 27017, "awaited": true, "message": "Server heartbeat started"}
2025-03-13 15:11:57,240 - pymongo.topology - DEBUG - {"topologyId": {"$oid": "67d2aefe57035d5a5ca53117"}, "driverConnectionId": 1, "serverConnectionId": 13023, "serverHost": "3.144.134.141", "serverPort": 27017, "awaited": true, "durationMS": 10000.0, "reply": "{\"isWritablePrimary\": true, \"topologyVersion\": {\"processId\": {\"$oid\": \"67b7e5814f77c1a87c56d054\"}}, \"maxBsonObjectSize\": 16777216, \"maxMessageSizeBytes\": 48000000, \"maxWriteBatchSize\": 100000, \"localTime\": {\"$date\": \"2025-03-13T10:11:57.251Z\"}, \"logicalSessionTimeoutMinutes\": 30, \"connectionId\": 13023, \"maxWireVersion\": 25, \"ok\": 1.0}", "message": "Server heartbeat succeeded"}
2025-03-13 15:11:57,241 - pymongo.topology - DEBUG - {"topologyId": {"$oid": "67d2aefe57035d5a5ca53117"}, "driverConnectionId": 1, "serverConnectionId": 13023, "serverHost": "3.144.134.141", "serverPort": 27017, "awaited": true, "message": "Server heartbeat started"}
2025-03-13 15:12:07,247 - pymongo.topology - DEBUG - {"topologyId": {"$oid": "67d2aefe57035d5a5ca53117"}, "driverConnectionId": 1, "serverConnectionId": 13023, "serverHost": "3.144.134.141", "serverPort": 27017, "awaited": true, "durationMS": 10000.0, "reply": "{\"isWritablePrimary\": true, \"topologyVersion\": {\"processId\": {\"$oid\": \"67b7e5814f77c1a87c56d054\"}}, \"maxBsonObjectSize\": 16777216, \"maxMessageSizeBytes\": 48000000, \"maxWriteBatchSize\": 100000, \"localTime\": {\"$date\": \"2025-03-13T10:12:07.257Z\"}, \"logicalSessionTimeoutMinutes\": 30, \"connectionId\": 13023, \"maxWireVersion\": 25, \"ok\": 1.0}", "message": "Server heartbeat succeeded"}
2025-03-13 15:12:07,248 - pymongo.topology - DEBUG - {"topologyId": {"$oid": "67d2aefe57035d5a5ca53117"}, "driverConnectionId": 1, "serverConnectionId": 13023, "serverHost": "3.144.134.141", "serverPort": 27017, "awaited": true, "message": "Server heartbeat started"}
2025-03-13 15:13:10,063 - numexpr.utils - INFO - Note: NumExpr detected 12 cores but "NUMEXPR_MAX_THREADS" not set, so enforcing safe limit of 8.
2025-03-13 15:13:10,063 - numexpr.utils - INFO - NumExpr defaulting to 8 threads.
2025-03-13 15:13:11,444 - matplotlib - DEBUG - matplotlib data path: C:\Users\msameerakram\AppData\Local\anaconda3\Lib\site-packages\matplotlib\mpl-data
2025-03-13 15:13:11,449 - matplotlib - DEBUG - CONFIGDIR=C:\Users\msameerakram\.matplotlib
2025-03-13 15:13:11,451 - matplotlib - DEBUG - interactive is False
2025-03-13 15:13:11,451 - matplotlib - DEBUG - platform is win32
2025-03-13 15:13:11,515 - matplotlib - DEBUG - CACHEDIR=C:\Users\msameerakram\.matplotlib
2025-03-13 15:13:11,519 - matplotlib.font_manager - DEBUG - Using fontManager instance from C:\Users\msameerakram\.matplotlib\fontlist-v390.json
2025-03-13 15:13:14,094 - numexpr.utils - INFO - Note: NumExpr detected 12 cores but "NUMEXPR_MAX_THREADS" not set, so enforcing safe limit of 8.
2025-03-13 15:13:14,094 - numexpr.utils - INFO - NumExpr defaulting to 8 threads.
2025-03-13 15:13:15,426 - matplotlib - DEBUG - matplotlib data path: C:\Users\msameerakram\AppData\Local\anaconda3\Lib\site-packages\matplotlib\mpl-data
2025-03-13 15:13:15,433 - matplotlib - DEBUG - CONFIGDIR=C:\Users\msameerakram\.matplotlib
2025-03-13 15:13:15,436 - matplotlib - DEBUG - interactive is False
2025-03-13 15:13:15,436 - matplotlib - DEBUG - platform is win32
2025-03-13 15:13:15,502 - matplotlib - DEBUG - CACHEDIR=C:\Users\msameerakram\.matplotlib
2025-03-13 15:13:15,506 - matplotlib.font_manager - DEBUG - Using fontManager instance from C:\Users\msameerakram\.matplotlib\fontlist-v390.json
2025-03-13 15:13:16,894 - asyncio - DEBUG - Using selector: SelectSelector
2025-03-13 15:13:16,931 - pymongo.topology - DEBUG - {"topologyId": {"$oid": "67d2afbc070cdfdfc09cddc3"}, "message": "Starting topology monitoring"}
2025-03-13 15:13:16,933 - pymongo.topology - DEBUG - {"topologyId": {"$oid": "67d2afbc070cdfdfc09cddc3"}, "previousDescription": "<TopologyDescription id: 67d2afbc070cdfdfc09cddc3, topology_type: Unknown, servers: []>", "newDescription": "<TopologyDescription id: 67d2afbc070cdfdfc09cddc3, topology_type: Unknown, servers: [<ServerDescription ('3.144.134.141', 27017) server_type: Unknown, rtt: None>]>", "message": "Topology description changed"}
2025-03-13 15:13:16,933 - pymongo.topology - DEBUG - {"topologyId": {"$oid": "67d2afbc070cdfdfc09cddc3"}, "serverHost": "3.144.134.141", "serverPort": 27017, "message": "Starting server monitoring"}
2025-03-13 15:13:16,935 - pymongo.connection - DEBUG - {"clientId": {"$oid": "67d2afbc070cdfdfc09cddc3"}, "message": "Connection pool created", "serverHost": "3.144.134.141", "serverPort": 27017}
2025-03-13 15:13:16,936 - pymongo.serverSelection - DEBUG - {"message": "Server selection started", "selector": "Primary()", "operation": "ping", "topologyDescription": "<TopologyDescription id: 67d2afbc070cdfdfc09cddc3, topology_type: Unknown, servers: [<ServerDescription ('3.144.134.141', 27017) server_type: Unknown, rtt: None>]>", "clientId": {"$oid": "67d2afbc070cdfdfc09cddc3"}}
2025-03-13 15:13:16,936 - pymongo.serverSelection - DEBUG - {"message": "Waiting for suitable server to become available", "selector": "Primary()", "operation": "ping", "topologyDescription": "<TopologyDescription id: 67d2afbc070cdfdfc09cddc3, topology_type: Unknown, servers: [<ServerDescription ('3.144.134.141', 27017) server_type: Unknown, rtt: None>]>", "clientId": {"$oid": "67d2afbc070cdfdfc09cddc3"}, "remainingTimeMS": 30}
2025-03-13 15:13:17,266 - pymongo.topology - DEBUG - {"topologyId": {"$oid": "67d2afbc070cdfdfc09cddc3"}, "driverConnectionId": 1, "serverHost": "3.144.134.141", "serverPort": 27017, "awaited": false, "message": "Server heartbeat started"}
2025-03-13 15:13:17,513 - pymongo.topology - DEBUG - {"topologyId": {"$oid": "67d2afbc070cdfdfc09cddc3"}, "driverConnectionId": 1, "serverConnectionId": 13035, "serverHost": "3.144.134.141", "serverPort": 27017, "awaited": false, "durationMS": 250.0, "reply": "{\"helloOk\": true, \"ismaster\": true, \"topologyVersion\": {\"processId\": {\"$oid\": \"67b7e5814f77c1a87c56d054\"}}, \"maxBsonObjectSize\": 16777216, \"maxMessageSizeBytes\": 48000000, \"maxWriteBatchSize\": 100000, \"localTime\": {\"$date\": \"2025-03-13T10:13:17.524Z\"}, \"logicalSessionTimeoutMinutes\": 30, \"connectionId\": 13035, \"maxWireVersion\": 25, \"ok\": 1.0}", "message": "Server heartbeat succeeded"}
2025-03-13 15:13:17,514 - pymongo.connection - DEBUG - {"clientId": {"$oid": "67d2afbc070cdfdfc09cddc3"}, "message": "Connection pool ready", "serverHost": "3.144.134.141", "serverPort": 27017}
2025-03-13 15:13:17,514 - pymongo.topology - DEBUG - {"topologyId": {"$oid": "67d2afbc070cdfdfc09cddc3"}, "previousDescription": "<TopologyDescription id: 67d2afbc070cdfdfc09cddc3, topology_type: Unknown, servers: [<ServerDescription ('3.144.134.141', 27017) server_type: Unknown, rtt: None>]>", "newDescription": "<TopologyDescription id: 67d2afbc070cdfdfc09cddc3, topology_type: Single, servers: [<ServerDescription ('3.144.134.141', 27017) server_type: Standalone, rtt: 0.25>]>", "message": "Topology description changed"}
2025-03-13 15:13:17,515 - pymongo.serverSelection - DEBUG - {"message": "Server selection succeeded", "selector": "Primary()", "operation": "ping", "topologyDescription": "<TopologyDescription id: 67d2afbc070cdfdfc09cddc3, topology_type: Single, servers: [<ServerDescription ('3.144.134.141', 27017) server_type: Standalone, rtt: 0.25>]>", "clientId": {"$oid": "67d2afbc070cdfdfc09cddc3"}, "serverHost": "3.144.134.141", "serverPort": 27017}
2025-03-13 15:13:17,516 - pymongo.connection - DEBUG - {"clientId": {"$oid": "67d2afbc070cdfdfc09cddc3"}, "message": "Connection checkout started", "serverHost": "3.144.134.141", "serverPort": 27017}
2025-03-13 15:13:17,516 - pymongo.topology - DEBUG - {"topologyId": {"$oid": "67d2afbc070cdfdfc09cddc3"}, "driverConnectionId": 1, "serverConnectionId": 13035, "serverHost": "3.144.134.141", "serverPort": 27017, "awaited": true, "message": "Server heartbeat started"}
2025-03-13 15:13:17,516 - pymongo.connection - DEBUG - {"clientId": {"$oid": "67d2afbc070cdfdfc09cddc3"}, "message": "Connection created", "serverHost": "3.144.134.141", "serverPort": 27017, "driverConnectionId": 1}
2025-03-13 15:13:18,272 - pymongo.connection - DEBUG - {"clientId": {"$oid": "67d2afbc070cdfdfc09cddc3"}, "message": "Connection ready", "serverHost": "3.144.134.141", "serverPort": 27017, "driverConnectionId": 1, "durationMS": 0.5}
2025-03-13 15:13:18,272 - pymongo.connection - DEBUG - {"clientId": {"$oid": "67d2afbc070cdfdfc09cddc3"}, "message": "Connection checked out", "serverHost": "3.144.134.141", "serverPort": 27017, "driverConnectionId": 1, "durationMS": 0.75}
2025-03-13 15:13:18,272 - pymongo.command - DEBUG - {"clientId": {"$oid": "67d2afbc070cdfdfc09cddc3"}, "message": "Command started", "command": "{\"ping\": 1, \"lsid\": {\"id\": {\"$binary\": {\"base64\": \"BmlYhcUlTXGcxkWy7U/RzQ==\", \"subType\": \"04\"}}}, \"$db\": \"opal_server\"}", "commandName": "ping", "databaseName": "opal_server", "requestId": 6334, "operationId": 6334, "driverConnectionId": 1, "serverConnectionId": 13036, "serverHost": "3.144.134.141", "serverPort": 27017}
2025-03-13 15:13:18,517 - pymongo.command - DEBUG - {"clientId": {"$oid": "67d2afbc070cdfdfc09cddc3"}, "message": "Command succeeded", "durationMS": 245.489, "reply": "{\"ok\": 1.0}", "commandName": "ping", "databaseName": "opal_server", "requestId": 6334, "operationId": 6334, "driverConnectionId": 1, "serverConnectionId": 13036, "serverHost": "3.144.134.141", "serverPort": 27017}
2025-03-13 15:13:18,517 - pymongo.connection - DEBUG - {"clientId": {"$oid": "67d2afbc070cdfdfc09cddc3"}, "message": "Connection checked in", "serverHost": "3.144.134.141", "serverPort": 27017, "driverConnectionId": 1}
2025-03-13 15:13:23,316 - app.api.endpoints.analytics - DEBUG - Starting real-time analysis request - timeframe: 24h, driver_uuid: None
2025-03-13 15:13:23,316 - app.api.endpoints.analytics - INFO - Fetching data for time window: 24h, driver: all drivers
2025-03-13 15:13:23,317 - app.db.repositories.data_repository - DEBUG - Connected to database: opal_server
2025-03-13 15:13:23,317 - app.db.repositories.data_repository - DEBUG - Violations query: {'$or': [{'timestamp': {'$gte': datetime.datetime(2025, 3, 12, 15, 13, 23, 317731), '$lte': datetime.datetime(2025, 3, 13, 15, 13, 23, 317731)}}, {'event_time': {'$gte': datetime.datetime(2025, 3, 12, 15, 13, 23, 317731), '$lte': datetime.datetime(2025, 3, 13, 15, 13, 23, 317731)}}, {'created_at': {'$gte': datetime.datetime(2025, 3, 12, 15, 13, 23, 317731), '$lte': datetime.datetime(2025, 3, 13, 15, 13, 23, 317731)}}]}
2025-03-13 15:13:23,318 - app.db.repositories.data_repository - DEBUG - Using database: opal_server
2025-03-13 15:13:23,318 - pymongo.serverSelection - DEBUG - {"message": "Server selection started", "selector": "Primary()", "operation": "listCollections", "topologyDescription": "<TopologyDescription id: 67d2afbc070cdfdfc09cddc3, topology_type: Single, servers: [<ServerDescription ('3.144.134.141', 27017) server_type: Standalone, rtt: 0.25>]>", "clientId": {"$oid": "67d2afbc070cdfdfc09cddc3"}}
2025-03-13 15:13:23,318 - pymongo.serverSelection - DEBUG - {"message": "Server selection succeeded", "selector": "Primary()", "operation": "listCollections", "topologyDescription": "<TopologyDescription id: 67d2afbc070cdfdfc09cddc3, topology_type: Single, servers: [<ServerDescription ('3.144.134.141', 27017) server_type: Standalone, rtt: 0.25>]>", "clientId": {"$oid": "67d2afbc070cdfdfc09cddc3"}, "serverHost": "3.144.134.141", "serverPort": 27017}
2025-03-13 15:13:23,319 - pymongo.connection - DEBUG - {"clientId": {"$oid": "67d2afbc070cdfdfc09cddc3"}, "message": "Connection checkout started", "serverHost": "3.144.134.141", "serverPort": 27017}
2025-03-13 15:13:23,319 - pymongo.connection - DEBUG - {"clientId": {"$oid": "67d2afbc070cdfdfc09cddc3"}, "message": "Connection checked out", "serverHost": "3.144.134.141", "serverPort": 27017, "driverConnectionId": 1, "durationMS": 0.0}
2025-03-13 15:13:23,320 - pymongo.command - DEBUG - {"clientId": {"$oid": "67d2afbc070cdfdfc09cddc3"}, "message": "Command started", "command": "{\"listCollections\": 1, \"nameOnly\": true, \"lsid\": {\"id\": {\"$binary\": {\"base64\": \"BmlYhcUlTXGcxkWy7U/RzQ==\", \"subType\": \"04\"}}}, \"$db\": \"opal_server\"}", "commandName": "listCollections", "databaseName": "opal_server", "requestId": 26500, "operationId": 26500, "driverConnectionId": 1, "serverConnectionId": 13036, "serverHost": "3.144.134.141", "serverPort": 27017}
2025-03-13 15:13:23,583 - pymongo.command - DEBUG - {"clientId": {"$oid": "67d2afbc070cdfdfc09cddc3"}, "message": "Command succeeded", "durationMS": 264.625, "reply": "{\"cursor\": {\"ns\": \"opal_server.$cmd.listCollections\", \"firstBatch\": [{\"name\": \"rags\", \"type\": \"collection\"}, {\"name\": \"trips\", \"type\": \"collection\"}, {\"name\": \"vehicles\", \"type\": \"collection\"}, {\"name\": \"permissions\", \"type\": \"collection\"}, {\"name\": \"notifications\", \"type\": \"collection\"}, {\"name\": \"crash_events\", \"type\": \"collection\"}, {\"name\": \"violations-x\", \"type\": \"collection\"}, {\"name\": \"drivers\", \"type\": \"collection\"}, {\"name\": \"geofences\", \"type\": \"collection\"}, {\"name\": \"tickets\", \"type\": \"collection\"}, {\"name\": \"vehicleevents\", \"type\": \"collection\"}, {\"name\": \"vendors\", \"type\": \"collection\"}, {\"name\": \"roles\", \"type\": \"collection\"}, {\"name\": \"clients\", \"type\": \"collection\"}, {\"name\": \"vendordevices\", \"type\": \"collection\"}, {\"name\": \"settings\", \"type\": \"collection\"}, {\"name\": \"media\", \"type\": \"collection\"}, {\"name\": \"violation_rules\", \"type\": \"collection\"}, {\"name\": \"violations\", \"type\": \"collection\"}, {\"name\": \"users\", \"type\": \"collection\"}, {\"name\": \"companies\", \"type\": \"coll...", "commandName": "listCollections", "databaseName": "opal_server", "requestId": 26500, "operationId": 26500, "driverConnectionId": 1, "serverConnectionId": 13036, "serverHost": "3.144.134.141", "serverPort": 27017}
2025-03-13 15:13:23,585 - pymongo.connection - DEBUG - {"clientId": {"$oid": "67d2afbc070cdfdfc09cddc3"}, "message": "Connection checked in", "serverHost": "3.144.134.141", "serverPort": 27017, "driverConnectionId": 1}
2025-03-13 15:13:23,585 - app.db.repositories.data_repository - DEBUG - Available collections: ['rags', 'trips', 'vehicles', 'permissions', 'notifications', 'crash_events', 'violations-x', 'drivers', 'geofences', 'tickets', 'vehicleevents', 'vendors', 'roles', 'clients', 'vendordevices', 'settings', 'media', 'violation_rules', 'violations', 'users', 'companies']
2025-03-13 15:13:23,585 - app.db.repositories.data_repository - DEBUG - Checking collection: violations
2025-03-13 15:13:23,587 - pymongo.serverSelection - DEBUG - {"message": "Server selection started", "selector": "Primary()", "operation": "count", "topologyDescription": "<TopologyDescription id: 67d2afbc070cdfdfc09cddc3, topology_type: Single, servers: [<ServerDescription ('3.144.134.141', 27017) server_type: Standalone, rtt: 0.25>]>", "clientId": {"$oid": "67d2afbc070cdfdfc09cddc3"}}
2025-03-13 15:13:23,587 - pymongo.serverSelection - DEBUG - {"message": "Server selection succeeded", "selector": "Primary()", "operation": "count", "topologyDescription": "<TopologyDescription id: 67d2afbc070cdfdfc09cddc3, topology_type: Single, servers: [<ServerDescription ('3.144.134.141', 27017) server_type: Standalone, rtt: 0.25>]>", "clientId": {"$oid": "67d2afbc070cdfdfc09cddc3"}, "serverHost": "3.144.134.141", "serverPort": 27017}
2025-03-13 15:13:23,587 - pymongo.connection - DEBUG - {"clientId": {"$oid": "67d2afbc070cdfdfc09cddc3"}, "message": "Connection checkout started", "serverHost": "3.144.134.141", "serverPort": 27017}
2025-03-13 15:13:23,588 - pymongo.connection - DEBUG - {"clientId": {"$oid": "67d2afbc070cdfdfc09cddc3"}, "message": "Connection checked out", "serverHost": "3.144.134.141", "serverPort": 27017, "driverConnectionId": 1, "durationMS": 0.0}
2025-03-13 15:13:23,588 - pymongo.command - DEBUG - {"clientId": {"$oid": "67d2afbc070cdfdfc09cddc3"}, "message": "Command started", "command": "{\"aggregate\": \"violations\", \"pipeline\": [{\"$match\": {\"$or\": [{\"timestamp\": {\"$gte\": {\"$date\": \"2025-03-12T15:13:23.317Z\"}, \"$lte\": {\"$date\": \"2025-03-13T15:13:23.317Z\"}}}, {\"event_time\": {\"$gte\": {\"$date\": \"2025-03-12T15:13:23.317Z\"}, \"$lte\": {\"$date\": \"2025-03-13T15:13:23.317Z\"}}}, {\"created_at\": {\"$gte\": {\"$date\": \"2025-03-12T15:13:23.317Z\"}, \"$lte\": {\"$date\": \"2025-03-13T15:13:23.317Z\"}}}]}}, {\"$group\": {\"_id\": 1, \"n\": {\"$sum\": 1}}}], \"lsid\": {\"id\": {\"$binary\": {\"base64\": \"BmlYhcUlTXGcxkWy7U/RzQ==\", \"subType\": \"04\"}}}, \"$db\": \"opal_server\"}", "commandName": "aggregate", "databaseName": "opal_server", "requestId": 19169, "operationId": 19169, "driverConnectionId": 1, "serverConnectionId": 13036, "serverHost": "3.144.134.141", "serverPort": 27017}
2025-03-13 15:13:23,869 - pymongo.command - DEBUG - {"clientId": {"$oid": "67d2afbc070cdfdfc09cddc3"}, "message": "Command succeeded", "durationMS": 280.67199999999997, "reply": "{\"cursor\": {\"firstBatch\": [{\"_id\": 1, \"n\": 1086}], \"ns\": \"opal_server.violations\"}, \"ok\": 1.0}", "commandName": "aggregate", "databaseName": "opal_server", "requestId": 19169, "operationId": 19169, "driverConnectionId": 1, "serverConnectionId": 13036, "serverHost": "3.144.134.141", "serverPort": 27017}
2025-03-13 15:13:23,870 - pymongo.connection - DEBUG - {"clientId": {"$oid": "67d2afbc070cdfdfc09cddc3"}, "message": "Connection checked in", "serverHost": "3.144.134.141", "serverPort": 27017, "driverConnectionId": 1}
2025-03-13 15:13:23,870 - app.db.repositories.data_repository - INFO - Found 1086 documents in violations
2025-03-13 15:13:23,871 - pymongo.serverSelection - DEBUG - {"message": "Server selection started", "selector": "Primary()", "operation": "find", "topologyDescription": "<TopologyDescription id: 67d2afbc070cdfdfc09cddc3, topology_type: Single, servers: [<ServerDescription ('3.144.134.141', 27017) server_type: Standalone, rtt: 0.25>]>", "clientId": {"$oid": "67d2afbc070cdfdfc09cddc3"}}
2025-03-13 15:13:23,871 - pymongo.serverSelection - DEBUG - {"message": "Server selection succeeded", "selector": "Primary()", "operation": "find", "topologyDescription": "<TopologyDescription id: 67d2afbc070cdfdfc09cddc3, topology_type: Single, servers: [<ServerDescription ('3.144.134.141', 27017) server_type: Standalone, rtt: 0.25>]>", "clientId": {"$oid": "67d2afbc070cdfdfc09cddc3"}, "serverHost": "3.144.134.141", "serverPort": 27017}
2025-03-13 15:13:23,872 - pymongo.connection - DEBUG - {"clientId": {"$oid": "67d2afbc070cdfdfc09cddc3"}, "message": "Connection checkout started", "serverHost": "3.144.134.141", "serverPort": 27017}
2025-03-13 15:13:23,872 - pymongo.connection - DEBUG - {"clientId": {"$oid": "67d2afbc070cdfdfc09cddc3"}, "message": "Connection checked out", "serverHost": "3.144.134.141", "serverPort": 27017, "driverConnectionId": 1, "durationMS": 0.0}
2025-03-13 15:13:23,873 - pymongo.command - DEBUG - {"clientId": {"$oid": "67d2afbc070cdfdfc09cddc3"}, "message": "Command started", "command": "{\"find\": \"violations\", \"filter\": {\"$or\": [{\"timestamp\": {\"$gte\": {\"$date\": \"2025-03-12T15:13:23.317Z\"}, \"$lte\": {\"$date\": \"2025-03-13T15:13:23.317Z\"}}}, {\"event_time\": {\"$gte\": {\"$date\": \"2025-03-12T15:13:23.317Z\"}, \"$lte\": {\"$date\": \"2025-03-13T15:13:23.317Z\"}}}, {\"created_at\": {\"$gte\": {\"$date\": \"2025-03-12T15:13:23.317Z\"}, \"$lte\": {\"$date\": \"2025-03-13T15:13:23.317Z\"}}}]}, \"limit\": 1000, \"lsid\": {\"id\": {\"$binary\": {\"base64\": \"BmlYhcUlTXGcxkWy7U/RzQ==\", \"subType\": \"04\"}}}, \"$db\": \"opal_server\"}", "commandName": "find", "databaseName": "opal_server", "requestId": 15724, "operationId": 15724, "driverConnectionId": 1, "serverConnectionId": 13036, "serverHost": "3.144.134.141", "serverPort": 27017}
2025-03-13 15:13:24,657 - pymongo.command - DEBUG - {"clientId": {"$oid": "67d2afbc070cdfdfc09cddc3"}, "message": "Command succeeded", "durationMS": 785.5999999999999, "reply": "{\"cursor\": {\"firstBatch\": [{\"_id\": {\"$oid\": \"67d1a5b17a0d0bdc125e9b1b\"}, \"event_id\": \"VIO-860260057085283-SPEED_MEDIUM-2025-03-12T14:57:00+00:00\", \"event_time\": {\"$date\": \"2025-03-12T15:18:09.223Z\"}, \"vendor\": {\"$oid\": \"6703ad7f70ba41e9473dd8e7\"}, \"vehicle_uuid\": \"860260057085283\", \"vehicle_license\": \"860260057085283\", \"driver_uuid\": \"10024125\", \"driver_name\": \"Unknown\", \"violation_type\": \"SPEED_MEDIUM\", \"severity\": \"MEDIUM\", \"description\": \"Speed limit exceeded: 77.0 km/h\", \"threshold\": 60.0, \"actual_value\": 77.0, \"location\": {\"latitude\": 16.970368, \"longitude\": 53.989276, \"altitude\": 30.0}, \"rule\": {\"_id\": {\"$oid\": \"67c4c815ab2d5578275f1823\"}, \"name\": \"Speed Limit - Medium\", \"description\": \"Vehicle exceeding speed limit (60 km/h)\", \"rule_type\": \"SPEED_MEDIUM\", \"threshold\": 60.0, \"enabled\": true, \"severity\": \"MEDIUM\", \"priority\": 2, \"cooldown_period\": 60, \"parameters\": {\"unit\": \"km/h\", \"min_duration\": 5, \"tolerance\": 1.5}}, \"created_at\": {\"$date\": \"2025-03-12T15:18:09.223Z\"}}, {\"_id\":...", "commandName": "find", "databaseName": "opal_server", "requestId": 15724, "operationId": 15724, "driverConnectionId": 1, "serverConnectionId": 13036, "serverHost": "3.144.134.141", "serverPort": 27017}
2025-03-13 15:13:24,659 - pymongo.connection - DEBUG - {"clientId": {"$oid": "67d2afbc070cdfdfc09cddc3"}, "message": "Connection checked in", "serverHost": "3.144.134.141", "serverPort": 27017, "driverConnectionId": 1}
2025-03-13 15:13:24,660 - pymongo.serverSelection - DEBUG - {"message": "Server selection started", "selector": "<function any_server_selector at 0x00000114BAFD45E0>", "operation": "getMore", "topologyDescription": "<TopologyDescription id: 67d2afbc070cdfdfc09cddc3, topology_type: Single, servers: [<ServerDescription ('3.144.134.141', 27017) server_type: Standalone, rtt: 0.25>]>", "clientId": {"$oid": "67d2afbc070cdfdfc09cddc3"}}
2025-03-13 15:13:24,661 - pymongo.serverSelection - DEBUG - {"message": "Server selection succeeded", "selector": "<function any_server_selector at 0x00000114BAFD45E0>", "operation": "getMore", "topologyDescription": "<TopologyDescription id: 67d2afbc070cdfdfc09cddc3, topology_type: Single, servers: [<ServerDescription ('3.144.134.141', 27017) server_type: Standalone, rtt: 0.25>]>", "clientId": {"$oid": "67d2afbc070cdfdfc09cddc3"}, "serverHost": "3.144.134.141", "serverPort": 27017}
2025-03-13 15:13:24,661 - pymongo.connection - DEBUG - {"clientId": {"$oid": "67d2afbc070cdfdfc09cddc3"}, "message": "Connection checkout started", "serverHost": "3.144.134.141", "serverPort": 27017}
2025-03-13 15:13:24,661 - pymongo.connection - DEBUG - {"clientId": {"$oid": "67d2afbc070cdfdfc09cddc3"}, "message": "Connection checked out", "serverHost": "3.144.134.141", "serverPort": 27017, "driverConnectionId": 1, "durationMS": 0.0}
2025-03-13 15:13:24,661 - pymongo.command - DEBUG - {"clientId": {"$oid": "67d2afbc070cdfdfc09cddc3"}, "message": "Command started", "command": "{\"getMore\": 6129457100994089648, \"collection\": \"violations\", \"batchSize\": 899, \"lsid\": {\"id\": {\"$binary\": {\"base64\": \"BmlYhcUlTXGcxkWy7U/RzQ==\", \"subType\": \"04\"}}}, \"$db\": \"opal_server\"}", "commandName": "getMore", "databaseName": "opal_server", "requestId": 11478, "operationId": 11478, "driverConnectionId": 1, "serverConnectionId": 13036, "serverHost": "3.144.134.141", "serverPort": 27017}
2025-03-13 15:13:25,683 - pymongo.command - DEBUG - {"clientId": {"$oid": "67d2afbc070cdfdfc09cddc3"}, "message": "Command succeeded", "durationMS": 1021.8389999999999, "reply": "{\"cursor\": {\"nextBatch\": [{\"_id\": {\"$oid\": \"67d1b6aa7a0d0bdc125e9b80\"}, \"event_id\": \"VIO-860260057085283-SPEED_MEDIUM-2025-03-12T16:28:00+00:00\", \"event_time\": {\"$date\": \"2025-03-12T16:30:34.602Z\"}, \"vendor\": {\"$oid\": \"6703ad7f70ba41e9473dd8e7\"}, \"vehicle_uuid\": \"860260057085283\", \"vehicle_license\": \"860260057085283\", \"driver_uuid\": \"10024125\", \"driver_name\": \"Unknown\", \"violation_type\": \"SPEED_MEDIUM\", \"severity\": \"MEDIUM\", \"description\": \"Speed limit exceeded: 77.0 km/h\", \"threshold\": 60.0, \"actual_value\": 77.0, \"location\": {\"latitude\": 17.349711, \"longitude\": 54.077403, \"altitude\": 656.0}, \"rule\": {\"_id\": {\"$oid\": \"67c4c815ab2d5578275f1823\"}, \"name\": \"Speed Limit - Medium\", \"description\": \"Vehicle exceeding speed limit (60 km/h)\", \"rule_type\": \"SPEED_MEDIUM\", \"threshold\": 60.0, \"enabled\": true, \"severity\": \"MEDIUM\", \"priority\": 2, \"cooldown_period\": 60, \"parameters\": {\"unit\": \"km/h\", \"min_duration\": 5, \"tolerance\": 1.5}}, \"created_at\": {\"$date\": \"2025-03-12T16:30:34.602Z\"}}, {\"_id\":...", "commandName": "getMore", "databaseName": "opal_server", "requestId": 11478, "operationId": 11478, "driverConnectionId": 1, "serverConnectionId": 13036, "serverHost": "3.144.134.141", "serverPort": 27017}
2025-03-13 15:13:25,684 - pymongo.connection - DEBUG - {"clientId": {"$oid": "67d2afbc070cdfdfc09cddc3"}, "message": "Connection checked in", "serverHost": "3.144.134.141", "serverPort": 27017, "driverConnectionId": 1}
2025-03-13 15:13:25,685 - app.db.repositories.data_repository - DEBUG - Fetching vehicle events from database: opal_server
2025-03-13 15:13:25,686 - app.db.repositories.data_repository - DEBUG - Vehicle events query: {'$or': [{'timestamp': {'$gte': datetime.datetime(2025, 3, 12, 15, 13, 23, 317731), '$lte': datetime.datetime(2025, 3, 13, 15, 13, 23, 317731)}}, {'event_time': {'$gte': datetime.datetime(2025, 3, 12, 15, 13, 23, 317731), '$lte': datetime.datetime(2025, 3, 13, 15, 13, 23, 317731)}}, {'created_at': {'$gte': datetime.datetime(2025, 3, 12, 15, 13, 23, 317731), '$lte': datetime.datetime(2025, 3, 13, 15, 13, 23, 317731)}}]}
2025-03-13 15:13:25,686 - app.db.repositories.data_repository - DEBUG - Time range: {'$gte': datetime.datetime(2025, 3, 12, 15, 13, 23, 317731), '$lte': datetime.datetime(2025, 3, 13, 15, 13, 23, 317731)}
2025-03-13 15:13:25,686 - pymongo.serverSelection - DEBUG - {"message": "Server selection started", "selector": "Primary()", "operation": "listCollections", "topologyDescription": "<TopologyDescription id: 67d2afbc070cdfdfc09cddc3, topology_type: Single, servers: [<ServerDescription ('3.144.134.141', 27017) server_type: Standalone, rtt: 0.25>]>", "clientId": {"$oid": "67d2afbc070cdfdfc09cddc3"}}
2025-03-13 15:13:25,687 - pymongo.serverSelection - DEBUG - {"message": "Server selection succeeded", "selector": "Primary()", "operation": "listCollections", "topologyDescription": "<TopologyDescription id: 67d2afbc070cdfdfc09cddc3, topology_type: Single, servers: [<ServerDescription ('3.144.134.141', 27017) server_type: Standalone, rtt: 0.25>]>", "clientId": {"$oid": "67d2afbc070cdfdfc09cddc3"}, "serverHost": "3.144.134.141", "serverPort": 27017}
2025-03-13 15:13:25,687 - pymongo.connection - DEBUG - {"clientId": {"$oid": "67d2afbc070cdfdfc09cddc3"}, "message": "Connection checkout started", "serverHost": "3.144.134.141", "serverPort": 27017}
2025-03-13 15:13:25,688 - pymongo.connection - DEBUG - {"clientId": {"$oid": "67d2afbc070cdfdfc09cddc3"}, "message": "Connection checked out", "serverHost": "3.144.134.141", "serverPort": 27017, "driverConnectionId": 1, "durationMS": 0.0}
2025-03-13 15:13:25,688 - pymongo.command - DEBUG - {"clientId": {"$oid": "67d2afbc070cdfdfc09cddc3"}, "message": "Command started", "command": "{\"listCollections\": 1, \"nameOnly\": true, \"lsid\": {\"id\": {\"$binary\": {\"base64\": \"BmlYhcUlTXGcxkWy7U/RzQ==\", \"subType\": \"04\"}}}, \"$db\": \"opal_server\"}", "commandName": "listCollections", "databaseName": "opal_server", "requestId": 29358, "operationId": 29358, "driverConnectionId": 1, "serverConnectionId": 13036, "serverHost": "3.144.134.141", "serverPort": 27017}
2025-03-13 15:13:25,934 - pymongo.command - DEBUG - {"clientId": {"$oid": "67d2afbc070cdfdfc09cddc3"}, "message": "Command succeeded", "durationMS": 245.26000000000002, "reply": "{\"cursor\": {\"ns\": \"opal_server.$cmd.listCollections\", \"firstBatch\": [{\"name\": \"rags\", \"type\": \"collection\"}, {\"name\": \"trips\", \"type\": \"collection\"}, {\"name\": \"vehicles\", \"type\": \"collection\"}, {\"name\": \"permissions\", \"type\": \"collection\"}, {\"name\": \"notifications\", \"type\": \"collection\"}, {\"name\": \"crash_events\", \"type\": \"collection\"}, {\"name\": \"violations-x\", \"type\": \"collection\"}, {\"name\": \"drivers\", \"type\": \"collection\"}, {\"name\": \"geofences\", \"type\": \"collection\"}, {\"name\": \"tickets\", \"type\": \"collection\"}, {\"name\": \"vehicleevents\", \"type\": \"collection\"}, {\"name\": \"vendors\", \"type\": \"collection\"}, {\"name\": \"roles\", \"type\": \"collection\"}, {\"name\": \"clients\", \"type\": \"collection\"}, {\"name\": \"vendordevices\", \"type\": \"collection\"}, {\"name\": \"settings\", \"type\": \"collection\"}, {\"name\": \"media\", \"type\": \"collection\"}, {\"name\": \"violation_rules\", \"type\": \"collection\"}, {\"name\": \"violations\", \"type\": \"collection\"}, {\"name\": \"users\", \"type\": \"collection\"}, {\"name\": \"companies\", \"type\": \"coll...", "commandName": "listCollections", "databaseName": "opal_server", "requestId": 29358, "operationId": 29358, "driverConnectionId": 1, "serverConnectionId": 13036, "serverHost": "3.144.134.141", "serverPort": 27017}
2025-03-13 15:13:25,935 - pymongo.connection - DEBUG - {"clientId": {"$oid": "67d2afbc070cdfdfc09cddc3"}, "message": "Connection checked in", "serverHost": "3.144.134.141", "serverPort": 27017, "driverConnectionId": 1}
2025-03-13 15:13:25,935 - app.db.repositories.data_repository - DEBUG - Available collections: ['rags', 'trips', 'vehicles', 'permissions', 'notifications', 'crash_events', 'violations-x', 'drivers', 'geofences', 'tickets', 'vehicleevents', 'vendors', 'roles', 'clients', 'vendordevices', 'settings', 'media', 'violation_rules', 'violations', 'users', 'companies']
2025-03-13 15:13:25,936 - pymongo.serverSelection - DEBUG - {"message": "Server selection started", "selector": "Primary()", "operation": "find", "topologyDescription": "<TopologyDescription id: 67d2afbc070cdfdfc09cddc3, topology_type: Single, servers: [<ServerDescription ('3.144.134.141', 27017) server_type: Standalone, rtt: 0.25>]>", "clientId": {"$oid": "67d2afbc070cdfdfc09cddc3"}}
2025-03-13 15:13:25,936 - pymongo.serverSelection - DEBUG - {"message": "Server selection succeeded", "selector": "Primary()", "operation": "find", "topologyDescription": "<TopologyDescription id: 67d2afbc070cdfdfc09cddc3, topology_type: Single, servers: [<ServerDescription ('3.144.134.141', 27017) server_type: Standalone, rtt: 0.25>]>", "clientId": {"$oid": "67d2afbc070cdfdfc09cddc3"}, "serverHost": "3.144.134.141", "serverPort": 27017}
2025-03-13 15:13:25,936 - pymongo.connection - DEBUG - {"clientId": {"$oid": "67d2afbc070cdfdfc09cddc3"}, "message": "Connection checkout started", "serverHost": "3.144.134.141", "serverPort": 27017}
2025-03-13 15:13:25,936 - pymongo.connection - DEBUG - {"clientId": {"$oid": "67d2afbc070cdfdfc09cddc3"}, "message": "Connection checked out", "serverHost": "3.144.134.141", "serverPort": 27017, "driverConnectionId": 1, "durationMS": 0.0}
2025-03-13 15:13:25,936 - pymongo.command - DEBUG - {"clientId": {"$oid": "67d2afbc070cdfdfc09cddc3"}, "message": "Command started", "command": "{\"find\": \"vehicleevents\", \"limit\": 1, \"singleBatch\": true, \"lsid\": {\"id\": {\"$binary\": {\"base64\": \"BmlYhcUlTXGcxkWy7U/RzQ==\", \"subType\": \"04\"}}}, \"$db\": \"opal_server\"}", "commandName": "find", "databaseName": "opal_server", "requestId": 26962, "operationId": 26962, "driverConnectionId": 1, "serverConnectionId": 13036, "serverHost": "3.144.134.141", "serverPort": 27017}
2025-03-13 15:13:26,183 - pymongo.command - DEBUG - {"clientId": {"$oid": "67d2afbc070cdfdfc09cddc3"}, "message": "Command succeeded", "durationMS": 246.97299999999998, "reply": "{\"cursor\": {\"firstBatch\": [{\"_id\": {\"$oid\": \"67441bdeb231195485d25272\"}, \"vendor\": {\"$oid\": \"6703ad7f70ba41e9473dd8e7\"}, \"deviceTime\": {\"$date\": \"2024-11-22T12:48:47Z\"}, \"serverTime\": {\"$date\": \"2024-11-22T12:48:47.958Z\"}, \"location\": {\"latitude\": 18.542048, \"longitude\": 55.852535, \"altitude\": 240}, \"ignition\": true, \"speed\": 68, \"heading\": 84, \"event\": {\"type\": \"DISTANCE_TRAVEL\", \"name\": \"Distance Traveled\"}, \"odometer\": 85198.52713696871, \"satellites\": 26, \"diff\": {\"distanceMeter\": 226.15911957109347, \"durationMillis\": 11000, \"ignitionOn\": true, \"moving\": true}, \"vehicle\": {\"license\": \"1765HW\", \"uuid\": \"f59c5202-eda5-4348-9d66-ec14718f076b\"}, \"device\": {\"imei\": \"358925430754727\"}, \"hdop\": 25.5, \"positionAccuracy\": 37.507210845177696, \"batteryVoltage\": 4.026, \"createdAt\": {\"$date\": \"2024-11-25T06:40:30.615Z\"}, \"updatedAt\": {\"$date\": \"2024-11-25T06:40:30.615Z\"}}], \"ns\": \"opal_server.vehicleevents\"}, \"ok\": 1.0}", "commandName": "find", "databaseName": "opal_server", "requestId": 26962, "operationId": 26962, "driverConnectionId": 1, "serverConnectionId": 13036, "serverHost": "3.144.134.141", "serverPort": 27017}
2025-03-13 15:13:26,184 - pymongo.connection - DEBUG - {"clientId": {"$oid": "67d2afbc070cdfdfc09cddc3"}, "message": "Connection checked in", "serverHost": "3.144.134.141", "serverPort": 27017, "driverConnectionId": 1}
2025-03-13 15:13:26,185 - app.db.repositories.data_repository - DEBUG - Sample document fields: ['_id', 'vendor', 'deviceTime', 'serverTime', 'location', 'ignition', 'speed', 'heading', 'event', 'odometer', 'satellites', 'wrongOrdered', 'diff', 'vehicle', 'device', 'hdop', 'positionAccuracy', 'batteryVoltage', '__v', 'createdAt', 'updatedAt']
2025-03-13 15:13:26,185 - pymongo.serverSelection - DEBUG - {"message": "Server selection started", "selector": "Primary()", "operation": "count", "topologyDescription": "<TopologyDescription id: 67d2afbc070cdfdfc09cddc3, topology_type: Single, servers: [<ServerDescription ('3.144.134.141', 27017) server_type: Standalone, rtt: 0.25>]>", "clientId": {"$oid": "67d2afbc070cdfdfc09cddc3"}}
2025-03-13 15:13:26,185 - pymongo.serverSelection - DEBUG - {"message": "Server selection succeeded", "selector": "Primary()", "operation": "count", "topologyDescription": "<TopologyDescription id: 67d2afbc070cdfdfc09cddc3, topology_type: Single, servers: [<ServerDescription ('3.144.134.141', 27017) server_type: Standalone, rtt: 0.25>]>", "clientId": {"$oid": "67d2afbc070cdfdfc09cddc3"}, "serverHost": "3.144.134.141", "serverPort": 27017}
2025-03-13 15:13:26,186 - pymongo.connection - DEBUG - {"clientId": {"$oid": "67d2afbc070cdfdfc09cddc3"}, "message": "Connection checkout started", "serverHost": "3.144.134.141", "serverPort": 27017}
2025-03-13 15:13:26,187 - pymongo.connection - DEBUG - {"clientId": {"$oid": "67d2afbc070cdfdfc09cddc3"}, "message": "Connection checked out", "serverHost": "3.144.134.141", "serverPort": 27017, "driverConnectionId": 1, "durationMS": 0.0}
2025-03-13 15:13:26,187 - pymongo.command - DEBUG - {"clientId": {"$oid": "67d2afbc070cdfdfc09cddc3"}, "message": "Command started", "command": "{\"aggregate\": \"vehicleevents\", \"pipeline\": [{\"$match\": {\"$or\": [{\"timestamp\": {\"$gte\": {\"$date\": \"2025-03-12T15:13:23.317Z\"}, \"$lte\": {\"$date\": \"2025-03-13T15:13:23.317Z\"}}}, {\"event_time\": {\"$gte\": {\"$date\": \"2025-03-12T15:13:23.317Z\"}, \"$lte\": {\"$date\": \"2025-03-13T15:13:23.317Z\"}}}, {\"created_at\": {\"$gte\": {\"$date\": \"2025-03-12T15:13:23.317Z\"}, \"$lte\": {\"$date\": \"2025-03-13T15:13:23.317Z\"}}}]}}, {\"$group\": {\"_id\": 1, \"n\": {\"$sum\": 1}}}], \"lsid\": {\"id\": {\"$binary\": {\"base64\": \"BmlYhcUlTXGcxkWy7U/RzQ==\", \"subType\": \"04\"}}}, \"$db\": \"opal_server\"}", "commandName": "aggregate", "databaseName": "opal_server", "requestId": 24464, "operationId": 24464, "driverConnectionId": 1, "serverConnectionId": 13036, "serverHost": "3.144.134.141", "serverPort": 27017}
2025-03-13 15:13:27,774 - pymongo.topology - DEBUG - {"topologyId": {"$oid": "67d2afbc070cdfdfc09cddc3"}, "driverConnectionId": 1, "serverConnectionId": 13035, "serverHost": "3.144.134.141", "serverPort": 27017, "awaited": true, "durationMS": 10264.999999999418, "reply": "{\"isWritablePrimary\": true, \"topologyVersion\": {\"processId\": {\"$oid\": \"67b7e5814f77c1a87c56d054\"}}, \"maxBsonObjectSize\": 16777216, \"maxMessageSizeBytes\": 48000000, \"maxWriteBatchSize\": 100000, \"localTime\": {\"$date\": \"2025-03-13T10:13:27.786Z\"}, \"logicalSessionTimeoutMinutes\": 30, \"connectionId\": 13035, \"maxWireVersion\": 25, \"ok\": 1.0}", "message": "Server heartbeat succeeded"}
2025-03-13 15:13:27,775 - pymongo.topology - DEBUG - {"topologyId": {"$oid": "67d2afbc070cdfdfc09cddc3"}, "driverConnectionId": 1, "serverConnectionId": 13035, "serverHost": "3.144.134.141", "serverPort": 27017, "awaited": true, "message": "Server heartbeat started"}
2025-03-13 15:13:32,144 - pymongo.command - DEBUG - {"clientId": {"$oid": "67d2afbc070cdfdfc09cddc3"}, "message": "Command succeeded", "durationMS": 5957.682, "reply": "{\"cursor\": {\"ns\": \"opal_server.vehicleevents\"}, \"ok\": 1.0}", "commandName": "aggregate", "databaseName": "opal_server", "requestId": 24464, "operationId": 24464, "driverConnectionId": 1, "serverConnectionId": 13036, "serverHost": "3.144.134.141", "serverPort": 27017}
2025-03-13 15:13:32,144 - pymongo.connection - DEBUG - {"clientId": {"$oid": "67d2afbc070cdfdfc09cddc3"}, "message": "Connection checked in", "serverHost": "3.144.134.141", "serverPort": 27017, "driverConnectionId": 1}
2025-03-13 15:13:32,145 - app.db.repositories.data_repository - INFO - Found 0 matching vehicle events
2025-03-13 15:13:32,145 - pymongo.serverSelection - DEBUG - {"message": "Server selection started", "selector": "Primary()", "operation": "find", "topologyDescription": "<TopologyDescription id: 67d2afbc070cdfdfc09cddc3, topology_type: Single, servers: [<ServerDescription ('3.144.134.141', 27017) server_type: Standalone, rtt: 0.25>]>", "clientId": {"$oid": "67d2afbc070cdfdfc09cddc3"}}
2025-03-13 15:13:32,145 - pymongo.serverSelection - DEBUG - {"message": "Server selection succeeded", "selector": "Primary()", "operation": "find", "topologyDescription": "<TopologyDescription id: 67d2afbc070cdfdfc09cddc3, topology_type: Single, servers: [<ServerDescription ('3.144.134.141', 27017) server_type: Standalone, rtt: 0.25>]>", "clientId": {"$oid": "67d2afbc070cdfdfc09cddc3"}, "serverHost": "3.144.134.141", "serverPort": 27017}
2025-03-13 15:13:32,147 - pymongo.connection - DEBUG - {"clientId": {"$oid": "67d2afbc070cdfdfc09cddc3"}, "message": "Connection checkout started", "serverHost": "3.144.134.141", "serverPort": 27017}
2025-03-13 15:13:32,147 - pymongo.connection - DEBUG - {"clientId": {"$oid": "67d2afbc070cdfdfc09cddc3"}, "message": "Connection checked out", "serverHost": "3.144.134.141", "serverPort": 27017, "driverConnectionId": 1, "durationMS": 0.0}
2025-03-13 15:13:32,147 - pymongo.command - DEBUG - {"clientId": {"$oid": "67d2afbc070cdfdfc09cddc3"}, "message": "Command started", "command": "{\"find\": \"vehicleevents\", \"filter\": {\"$or\": [{\"timestamp\": {\"$gte\": {\"$date\": \"2025-03-12T15:13:23.317Z\"}, \"$lte\": {\"$date\": \"2025-03-13T15:13:23.317Z\"}}}, {\"event_time\": {\"$gte\": {\"$date\": \"2025-03-12T15:13:23.317Z\"}, \"$lte\": {\"$date\": \"2025-03-13T15:13:23.317Z\"}}}, {\"created_at\": {\"$gte\": {\"$date\": \"2025-03-12T15:13:23.317Z\"}, \"$lte\": {\"$date\": \"2025-03-13T15:13:23.317Z\"}}}]}, \"limit\": 1000, \"lsid\": {\"id\": {\"$binary\": {\"base64\": \"BmlYhcUlTXGcxkWy7U/RzQ==\", \"subType\": \"04\"}}}, \"$db\": \"opal_server\"}", "commandName": "find", "databaseName": "opal_server", "requestId": 5705, "operationId": 5705, "driverConnectionId": 1, "serverConnectionId": 13036, "serverHost": "3.144.134.141", "serverPort": 27017}
2025-03-13 15:13:37,786 - pymongo.topology - DEBUG - {"topologyId": {"$oid": "67d2afbc070cdfdfc09cddc3"}, "driverConnectionId": 1, "serverConnectionId": 13035, "serverHost": "3.144.134.141", "serverPort": 27017, "awaited": true, "durationMS": 10000.0, "reply": "{\"isWritablePrimary\": true, \"topologyVersion\": {\"processId\": {\"$oid\": \"67b7e5814f77c1a87c56d054\"}}, \"maxBsonObjectSize\": 16777216, \"maxMessageSizeBytes\": 48000000, \"maxWriteBatchSize\": 100000, \"localTime\": {\"$date\": \"2025-03-13T10:13:37.795Z\"}, \"logicalSessionTimeoutMinutes\": 30, \"connectionId\": 13035, \"maxWireVersion\": 25, \"ok\": 1.0}", "message": "Server heartbeat succeeded"}
2025-03-13 15:13:37,786 - pymongo.topology - DEBUG - {"topologyId": {"$oid": "67d2afbc070cdfdfc09cddc3"}, "driverConnectionId": 1, "serverConnectionId": 13035, "serverHost": "3.144.134.141", "serverPort": 27017, "awaited": true, "message": "Server heartbeat started"}
2025-03-13 15:13:38,910 - pymongo.command - DEBUG - {"clientId": {"$oid": "67d2afbc070cdfdfc09cddc3"}, "message": "Command succeeded", "durationMS": 6763.299, "reply": "{\"cursor\": {\"ns\": \"opal_server.vehicleevents\"}, \"ok\": 1.0}", "commandName": "find", "databaseName": "opal_server", "requestId": 5705, "operationId": 5705, "driverConnectionId": 1, "serverConnectionId": 13036, "serverHost": "3.144.134.141", "serverPort": 27017}
2025-03-13 15:13:38,910 - pymongo.connection - DEBUG - {"clientId": {"$oid": "67d2afbc070cdfdfc09cddc3"}, "message": "Connection checked in", "serverHost": "3.144.134.141", "serverPort": 27017, "driverConnectionId": 1}
2025-03-13 15:13:38,911 - app.db.repositories.data_repository - DEBUG - Retrieved 0 vehicle events
2025-03-13 15:13:39,004 - app.api.endpoints.analytics - DEBUG - Retrieved violations: 1000
2025-03-13 15:13:39,005 - app.api.endpoints.analytics - DEBUG - Retrieved events: 0
2025-03-13 15:13:39,005 - app.api.endpoints.analytics - INFO - Analysis completed - Found 1000 violations and 75 drivers
2025-03-13 15:13:47,783 - pymongo.topology - DEBUG - {"topologyId": {"$oid": "67d2afbc070cdfdfc09cddc3"}, "driverConnectionId": 1, "serverConnectionId": 13035, "serverHost": "3.144.134.141", "serverPort": 27017, "awaited": true, "durationMS": 10000.0, "reply": "{\"isWritablePrimary\": true, \"topologyVersion\": {\"processId\": {\"$oid\": \"67b7e5814f77c1a87c56d054\"}}, \"maxBsonObjectSize\": 16777216, \"maxMessageSizeBytes\": 48000000, \"maxWriteBatchSize\": 100000, \"localTime\": {\"$date\": \"2025-03-13T10:13:47.795Z\"}, \"logicalSessionTimeoutMinutes\": 30, \"connectionId\": 13035, \"maxWireVersion\": 25, \"ok\": 1.0}", "message": "Server heartbeat succeeded"}
2025-03-13 15:13:47,783 - pymongo.topology - DEBUG - {"topologyId": {"$oid": "67d2afbc070cdfdfc09cddc3"}, "driverConnectionId": 1, "serverConnectionId": 13035, "serverHost": "3.144.134.141", "serverPort": 27017, "awaited": true, "message": "Server heartbeat started"}
2025-03-13 15:13:57,784 - pymongo.topology - DEBUG - {"topologyId": {"$oid": "67d2afbc070cdfdfc09cddc3"}, "driverConnectionId": 1, "serverConnectionId": 13035, "serverHost": "3.144.134.141", "serverPort": 27017, "awaited": true, "durationMS": 10000.0, "reply": "{\"isWritablePrimary\": true, \"topologyVersion\": {\"processId\": {\"$oid\": \"67b7e5814f77c1a87c56d054\"}}, \"maxBsonObjectSize\": 16777216, \"maxMessageSizeBytes\": 48000000, \"maxWriteBatchSize\": 100000, \"localTime\": {\"$date\": \"2025-03-13T10:13:57.797Z\"}, \"logicalSessionTimeoutMinutes\": 30, \"connectionId\": 13035, \"maxWireVersion\": 25, \"ok\": 1.0}", "message": "Server heartbeat succeeded"}
2025-03-13 15:13:57,785 - pymongo.topology - DEBUG - {"topologyId": {"$oid": "67d2afbc070cdfdfc09cddc3"}, "driverConnectionId": 1, "serverConnectionId": 13035, "serverHost": "3.144.134.141", "serverPort": 27017, "awaited": true, "message": "Server heartbeat started"}
2025-03-13 15:14:07,785 - pymongo.topology - DEBUG - {"topologyId": {"$oid": "67d2afbc070cdfdfc09cddc3"}, "driverConnectionId": 1, "serverConnectionId": 13035, "serverHost": "3.144.134.141", "serverPort": 27017, "awaited": true, "durationMS": 10000.0, "reply": "{\"isWritablePrimary\": true, \"topologyVersion\": {\"processId\": {\"$oid\": \"67b7e5814f77c1a87c56d054\"}}, \"maxBsonObjectSize\": 16777216, \"maxMessageSizeBytes\": 48000000, \"maxWriteBatchSize\": 100000, \"localTime\": {\"$date\": \"2025-03-13T10:14:07.797Z\"}, \"logicalSessionTimeoutMinutes\": 30, \"connectionId\": 13035, \"maxWireVersion\": 25, \"ok\": 1.0}", "message": "Server heartbeat succeeded"}
2025-03-13 15:14:07,785 - pymongo.topology - DEBUG - {"topologyId": {"$oid": "67d2afbc070cdfdfc09cddc3"}, "driverConnectionId": 1, "serverConnectionId": 13035, "serverHost": "3.144.134.141", "serverPort": 27017, "awaited": true, "message": "Server heartbeat started"}
2025-03-13 15:14:17,793 - pymongo.topology - DEBUG - {"topologyId": {"$oid": "67d2afbc070cdfdfc09cddc3"}, "driverConnectionId": 1, "serverConnectionId": 13035, "serverHost": "3.144.134.141", "serverPort": 27017, "awaited": true, "durationMS": 10016.00000000144, "reply": "{\"isWritablePrimary\": true, \"topologyVersion\": {\"processId\": {\"$oid\": \"67b7e5814f77c1a87c56d054\"}}, \"maxBsonObjectSize\": 16777216, \"maxMessageSizeBytes\": 48000000, \"maxWriteBatchSize\": 100000, \"localTime\": {\"$date\": \"2025-03-13T10:14:17.806Z\"}, \"logicalSessionTimeoutMinutes\": 30, \"connectionId\": 13035, \"maxWireVersion\": 25, \"ok\": 1.0}", "message": "Server heartbeat succeeded"}
2025-03-13 15:14:17,794 - pymongo.topology - DEBUG - {"topologyId": {"$oid": "67d2afbc070cdfdfc09cddc3"}, "driverConnectionId": 1, "serverConnectionId": 13035, "serverHost": "3.144.134.141", "serverPort": 27017, "awaited": true, "message": "Server heartbeat started"}
2025-03-13 15:14:27,804 - pymongo.topology - DEBUG - {"topologyId": {"$oid": "67d2afbc070cdfdfc09cddc3"}, "driverConnectionId": 1, "serverConnectionId": 13035, "serverHost": "3.144.134.141", "serverPort": 27017, "awaited": true, "durationMS": 10014.999999999418, "reply": "{\"isWritablePrimary\": true, \"topologyVersion\": {\"processId\": {\"$oid\": \"67b7e5814f77c1a87c56d054\"}}, \"maxBsonObjectSize\": 16777216, \"maxMessageSizeBytes\": 48000000, \"maxWriteBatchSize\": 100000, \"localTime\": {\"$date\": \"2025-03-13T10:14:27.816Z\"}, \"logicalSessionTimeoutMinutes\": 30, \"connectionId\": 13035, \"maxWireVersion\": 25, \"ok\": 1.0}", "message": "Server heartbeat succeeded"}
2025-03-13 15:14:27,805 - pymongo.topology - DEBUG - {"topologyId": {"$oid": "67d2afbc070cdfdfc09cddc3"}, "driverConnectionId": 1, "serverConnectionId": 13035, "serverHost": "3.144.134.141", "serverPort": 27017, "awaited": true, "message": "Server heartbeat started"}
2025-03-13 15:14:37,818 - pymongo.topology - DEBUG - {"topologyId": {"$oid": "67d2afbc070cdfdfc09cddc3"}, "driverConnectionId": 1, "serverConnectionId": 13035, "serverHost": "3.144.134.141", "serverPort": 27017, "awaited": true, "durationMS": 10000.0, "reply": "{\"isWritablePrimary\": true, \"topologyVersion\": {\"processId\": {\"$oid\": \"67b7e5814f77c1a87c56d054\"}}, \"maxBsonObjectSize\": 16777216, \"maxMessageSizeBytes\": 48000000, \"maxWriteBatchSize\": 100000, \"localTime\": {\"$date\": \"2025-03-13T10:14:37.826Z\"}, \"logicalSessionTimeoutMinutes\": 30, \"connectionId\": 13035, \"maxWireVersion\": 25, \"ok\": 1.0}", "message": "Server heartbeat succeeded"}
2025-03-13 15:14:37,819 - pymongo.topology - DEBUG - {"topologyId": {"$oid": "67d2afbc070cdfdfc09cddc3"}, "driverConnectionId": 1, "serverConnectionId": 13035, "serverHost": "3.144.134.141", "serverPort": 27017, "awaited": true, "message": "Server heartbeat started"}
2025-03-13 15:14:47,813 - pymongo.topology - DEBUG - {"topologyId": {"$oid": "67d2afbc070cdfdfc09cddc3"}, "driverConnectionId": 1, "serverConnectionId": 13035, "serverHost": "3.144.134.141", "serverPort": 27017, "awaited": true, "durationMS": 9984.000000000378, "reply": "{\"isWritablePrimary\": true, \"topologyVersion\": {\"processId\": {\"$oid\": \"67b7e5814f77c1a87c56d054\"}}, \"maxBsonObjectSize\": 16777216, \"maxMessageSizeBytes\": 48000000, \"maxWriteBatchSize\": 100000, \"localTime\": {\"$date\": \"2025-03-13T10:14:47.826Z\"}, \"logicalSessionTimeoutMinutes\": 30, \"connectionId\": 13035, \"maxWireVersion\": 25, \"ok\": 1.0}", "message": "Server heartbeat succeeded"}
2025-03-13 15:14:47,814 - pymongo.topology - DEBUG - {"topologyId": {"$oid": "67d2afbc070cdfdfc09cddc3"}, "driverConnectionId": 1, "serverConnectionId": 13035, "serverHost": "3.144.134.141", "serverPort": 27017, "awaited": true, "message": "Server heartbeat started"}
2025-03-13 15:14:57,814 - pymongo.topology - DEBUG - {"topologyId": {"$oid": "67d2afbc070cdfdfc09cddc3"}, "driverConnectionId": 1, "serverConnectionId": 13035, "serverHost": "3.144.134.141", "serverPort": 27017, "awaited": true, "durationMS": 10000.0, "reply": "{\"isWritablePrimary\": true, \"topologyVersion\": {\"processId\": {\"$oid\": \"67b7e5814f77c1a87c56d054\"}}, \"maxBsonObjectSize\": 16777216, \"maxMessageSizeBytes\": 48000000, \"maxWriteBatchSize\": 100000, \"localTime\": {\"$date\": \"2025-03-13T10:14:57.826Z\"}, \"logicalSessionTimeoutMinutes\": 30, \"connectionId\": 13035, \"maxWireVersion\": 25, \"ok\": 1.0}", "message": "Server heartbeat succeeded"}
2025-03-13 15:14:57,814 - pymongo.topology - DEBUG - {"topologyId": {"$oid": "67d2afbc070cdfdfc09cddc3"}, "driverConnectionId": 1, "serverConnectionId": 13035, "serverHost": "3.144.134.141", "serverPort": 27017, "awaited": true, "message": "Server heartbeat started"}
2025-03-13 15:15:00,056 - app.api.endpoints.analytics - DEBUG - Starting real-time analysis request - timeframe: 1h, driver_uuid: None
2025-03-13 15:15:00,056 - app.api.endpoints.analytics - INFO - Fetching data for time window: 1h, driver: all drivers
2025-03-13 15:15:00,056 - app.db.repositories.data_repository - DEBUG - Connected to database: opal_server
2025-03-13 15:15:00,057 - app.db.repositories.data_repository - DEBUG - Violations query: {'$or': [{'timestamp': {'$gte': datetime.datetime(2025, 3, 13, 14, 15, 0, 56813), '$lte': datetime.datetime(2025, 3, 13, 15, 15, 0, 56813)}}, {'event_time': {'$gte': datetime.datetime(2025, 3, 13, 14, 15, 0, 56813), '$lte': datetime.datetime(2025, 3, 13, 15, 15, 0, 56813)}}, {'created_at': {'$gte': datetime.datetime(2025, 3, 13, 14, 15, 0, 56813), '$lte': datetime.datetime(2025, 3, 13, 15, 15, 0, 56813)}}]}
2025-03-13 15:15:00,057 - app.db.repositories.data_repository - DEBUG - Using database: opal_server
2025-03-13 15:15:00,057 - pymongo.serverSelection - DEBUG - {"message": "Server selection started", "selector": "Primary()", "operation": "listCollections", "topologyDescription": "<TopologyDescription id: 67d2afbc070cdfdfc09cddc3, topology_type: Single, servers: [<ServerDescription ('3.144.134.141', 27017) server_type: Standalone, rtt: 0.24385088000014546>]>", "clientId": {"$oid": "67d2afbc070cdfdfc09cddc3"}}
2025-03-13 15:15:00,058 - pymongo.serverSelection - DEBUG - {"message": "Server selection succeeded", "selector": "Primary()", "operation": "listCollections", "topologyDescription": "<TopologyDescription id: 67d2afbc070cdfdfc09cddc3, topology_type: Single, servers: [<ServerDescription ('3.144.134.141', 27017) server_type: Standalone, rtt: 0.24385088000014546>]>", "clientId": {"$oid": "67d2afbc070cdfdfc09cddc3"}, "serverHost": "3.144.134.141", "serverPort": 27017}
2025-03-13 15:15:00,058 - pymongo.connection - DEBUG - {"clientId": {"$oid": "67d2afbc070cdfdfc09cddc3"}, "message": "Connection checkout started", "serverHost": "3.144.134.141", "serverPort": 27017}
2025-03-13 15:15:00,059 - pymongo.connection - DEBUG - {"clientId": {"$oid": "67d2afbc070cdfdfc09cddc3"}, "message": "Connection checked out", "serverHost": "3.144.134.141", "serverPort": 27017, "driverConnectionId": 1, "durationMS": 0.0}
2025-03-13 15:15:00,059 - pymongo.command - DEBUG - {"clientId": {"$oid": "67d2afbc070cdfdfc09cddc3"}, "message": "Command started", "command": "{\"listCollections\": 1, \"nameOnly\": true, \"lsid\": {\"id\": {\"$binary\": {\"base64\": \"BmlYhcUlTXGcxkWy7U/RzQ==\", \"subType\": \"04\"}}}, \"$db\": \"opal_server\"}", "commandName": "listCollections", "databaseName": "opal_server", "requestId": 28145, "operationId": 28145, "driverConnectionId": 1, "serverConnectionId": 13036, "serverHost": "3.144.134.141", "serverPort": 27017}
2025-03-13 15:15:00,305 - pymongo.command - DEBUG - {"clientId": {"$oid": "67d2afbc070cdfdfc09cddc3"}, "message": "Command succeeded", "durationMS": 245.761, "reply": "{\"cursor\": {\"ns\": \"opal_server.$cmd.listCollections\", \"firstBatch\": [{\"name\": \"rags\", \"type\": \"collection\"}, {\"name\": \"trips\", \"type\": \"collection\"}, {\"name\": \"vehicles\", \"type\": \"collection\"}, {\"name\": \"permissions\", \"type\": \"collection\"}, {\"name\": \"notifications\", \"type\": \"collection\"}, {\"name\": \"crash_events\", \"type\": \"collection\"}, {\"name\": \"violations-x\", \"type\": \"collection\"}, {\"name\": \"drivers\", \"type\": \"collection\"}, {\"name\": \"geofences\", \"type\": \"collection\"}, {\"name\": \"tickets\", \"type\": \"collection\"}, {\"name\": \"vehicleevents\", \"type\": \"collection\"}, {\"name\": \"vendors\", \"type\": \"collection\"}, {\"name\": \"roles\", \"type\": \"collection\"}, {\"name\": \"clients\", \"type\": \"collection\"}, {\"name\": \"vendordevices\", \"type\": \"collection\"}, {\"name\": \"settings\", \"type\": \"collection\"}, {\"name\": \"media\", \"type\": \"collection\"}, {\"name\": \"violation_rules\", \"type\": \"collection\"}, {\"name\": \"violations\", \"type\": \"collection\"}, {\"name\": \"users\", \"type\": \"collection\"}, {\"name\": \"companies\", \"type\": \"coll...", "commandName": "listCollections", "databaseName": "opal_server", "requestId": 28145, "operationId": 28145, "driverConnectionId": 1, "serverConnectionId": 13036, "serverHost": "3.144.134.141", "serverPort": 27017}
2025-03-13 15:15:00,305 - pymongo.connection - DEBUG - {"clientId": {"$oid": "67d2afbc070cdfdfc09cddc3"}, "message": "Connection checked in", "serverHost": "3.144.134.141", "serverPort": 27017, "driverConnectionId": 1}
2025-03-13 15:15:00,307 - app.db.repositories.data_repository - DEBUG - Available collections: ['rags', 'trips', 'vehicles', 'permissions', 'notifications', 'crash_events', 'violations-x', 'drivers', 'geofences', 'tickets', 'vehicleevents', 'vendors', 'roles', 'clients', 'vendordevices', 'settings', 'media', 'violation_rules', 'violations', 'users', 'companies']
2025-03-13 15:15:00,308 - app.db.repositories.data_repository - DEBUG - Checking collection: violations
2025-03-13 15:15:00,308 - pymongo.serverSelection - DEBUG - {"message": "Server selection started", "selector": "Primary()", "operation": "count", "topologyDescription": "<TopologyDescription id: 67d2afbc070cdfdfc09cddc3, topology_type: Single, servers: [<ServerDescription ('3.144.134.141', 27017) server_type: Standalone, rtt: 0.24385088000014546>]>", "clientId": {"$oid": "67d2afbc070cdfdfc09cddc3"}}
2025-03-13 15:15:00,308 - pymongo.serverSelection - DEBUG - {"message": "Server selection succeeded", "selector": "Primary()", "operation": "count", "topologyDescription": "<TopologyDescription id: 67d2afbc070cdfdfc09cddc3, topology_type: Single, servers: [<ServerDescription ('3.144.134.141', 27017) server_type: Standalone, rtt: 0.24385088000014546>]>", "clientId": {"$oid": "67d2afbc070cdfdfc09cddc3"}, "serverHost": "3.144.134.141", "serverPort": 27017}
2025-03-13 15:15:00,309 - pymongo.connection - DEBUG - {"clientId": {"$oid": "67d2afbc070cdfdfc09cddc3"}, "message": "Connection checkout started", "serverHost": "3.144.134.141", "serverPort": 27017}
2025-03-13 15:15:00,309 - pymongo.connection - DEBUG - {"clientId": {"$oid": "67d2afbc070cdfdfc09cddc3"}, "message": "Connection checked out", "serverHost": "3.144.134.141", "serverPort": 27017, "driverConnectionId": 1, "durationMS": 0.0}
2025-03-13 15:15:00,310 - pymongo.command - DEBUG - {"clientId": {"$oid": "67d2afbc070cdfdfc09cddc3"}, "message": "Command started", "command": "{\"aggregate\": \"violations\", \"pipeline\": [{\"$match\": {\"$or\": [{\"timestamp\": {\"$gte\": {\"$date\": \"2025-03-13T14:15:00.056Z\"}, \"$lte\": {\"$date\": \"2025-03-13T15:15:00.056Z\"}}}, {\"event_time\": {\"$gte\": {\"$date\": \"2025-03-13T14:15:00.056Z\"}, \"$lte\": {\"$date\": \"2025-03-13T15:15:00.056Z\"}}}, {\"created_at\": {\"$gte\": {\"$date\": \"2025-03-13T14:15:00.056Z\"}, \"$lte\": {\"$date\": \"2025-03-13T15:15:00.056Z\"}}}]}}, {\"$group\": {\"_id\": 1, \"n\": {\"$sum\": 1}}}], \"lsid\": {\"id\": {\"$binary\": {\"base64\": \"BmlYhcUlTXGcxkWy7U/RzQ==\", \"subType\": \"04\"}}}, \"$db\": \"opal_server\"}", "commandName": "aggregate", "databaseName": "opal_server", "requestId": 23281, "operationId": 23281, "driverConnectionId": 1, "serverConnectionId": 13036, "serverHost": "3.144.134.141", "serverPort": 27017}
2025-03-13 15:15:00,583 - pymongo.command - DEBUG - {"clientId": {"$oid": "67d2afbc070cdfdfc09cddc3"}, "message": "Command succeeded", "durationMS": 272.736, "reply": "{\"cursor\": {\"ns\": \"opal_server.violations\"}, \"ok\": 1.0}", "commandName": "aggregate", "databaseName": "opal_server", "requestId": 23281, "operationId": 23281, "driverConnectionId": 1, "serverConnectionId": 13036, "serverHost": "3.144.134.141", "serverPort": 27017}
2025-03-13 15:15:00,583 - pymongo.connection - DEBUG - {"clientId": {"$oid": "67d2afbc070cdfdfc09cddc3"}, "message": "Connection checked in", "serverHost": "3.144.134.141", "serverPort": 27017, "driverConnectionId": 1}
2025-03-13 15:15:00,584 - app.db.repositories.data_repository - WARNING - No violations found in any collection
2025-03-13 15:15:00,584 - app.db.repositories.data_repository - DEBUG - Fetching vehicle events from database: opal_server
2025-03-13 15:15:00,584 - app.db.repositories.data_repository - DEBUG - Vehicle events query: {'$or': [{'timestamp': {'$gte': datetime.datetime(2025, 3, 13, 14, 15, 0, 56813), '$lte': datetime.datetime(2025, 3, 13, 15, 15, 0, 56813)}}, {'event_time': {'$gte': datetime.datetime(2025, 3, 13, 14, 15, 0, 56813), '$lte': datetime.datetime(2025, 3, 13, 15, 15, 0, 56813)}}, {'created_at': {'$gte': datetime.datetime(2025, 3, 13, 14, 15, 0, 56813), '$lte': datetime.datetime(2025, 3, 13, 15, 15, 0, 56813)}}]}
2025-03-13 15:15:00,585 - app.db.repositories.data_repository - DEBUG - Time range: {'$gte': datetime.datetime(2025, 3, 13, 14, 15, 0, 56813), '$lte': datetime.datetime(2025, 3, 13, 15, 15, 0, 56813)}
2025-03-13 15:15:00,585 - pymongo.serverSelection - DEBUG - {"message": "Server selection started", "selector": "Primary()", "operation": "listCollections", "topologyDescription": "<TopologyDescription id: 67d2afbc070cdfdfc09cddc3, topology_type: Single, servers: [<ServerDescription ('3.144.134.141', 27017) server_type: Standalone, rtt: 0.24385088000014546>]>", "clientId": {"$oid": "67d2afbc070cdfdfc09cddc3"}}
2025-03-13 15:15:00,585 - pymongo.serverSelection - DEBUG - {"message": "Server selection succeeded", "selector": "Primary()", "operation": "listCollections", "topologyDescription": "<TopologyDescription id: 67d2afbc070cdfdfc09cddc3, topology_type: Single, servers: [<ServerDescription ('3.144.134.141', 27017) server_type: Standalone, rtt: 0.24385088000014546>]>", "clientId": {"$oid": "67d2afbc070cdfdfc09cddc3"}, "serverHost": "3.144.134.141", "serverPort": 27017}
2025-03-13 15:15:00,585 - pymongo.connection - DEBUG - {"clientId": {"$oid": "67d2afbc070cdfdfc09cddc3"}, "message": "Connection checkout started", "serverHost": "3.144.134.141", "serverPort": 27017}
2025-03-13 15:15:00,586 - pymongo.connection - DEBUG - {"clientId": {"$oid": "67d2afbc070cdfdfc09cddc3"}, "message": "Connection checked out", "serverHost": "3.144.134.141", "serverPort": 27017, "driverConnectionId": 1, "durationMS": 0.0}
2025-03-13 15:15:00,586 - pymongo.command - DEBUG - {"clientId": {"$oid": "67d2afbc070cdfdfc09cddc3"}, "message": "Command started", "command": "{\"listCollections\": 1, \"nameOnly\": true, \"lsid\": {\"id\": {\"$binary\": {\"base64\": \"BmlYhcUlTXGcxkWy7U/RzQ==\", \"subType\": \"04\"}}}, \"$db\": \"opal_server\"}", "commandName": "listCollections", "databaseName": "opal_server", "requestId": 16827, "operationId": 16827, "driverConnectionId": 1, "serverConnectionId": 13036, "serverHost": "3.144.134.141", "serverPort": 27017}
2025-03-13 15:15:00,831 - pymongo.command - DEBUG - {"clientId": {"$oid": "67d2afbc070cdfdfc09cddc3"}, "message": "Command succeeded", "durationMS": 244.4, "reply": "{\"cursor\": {\"ns\": \"opal_server.$cmd.listCollections\", \"firstBatch\": [{\"name\": \"rags\", \"type\": \"collection\"}, {\"name\": \"trips\", \"type\": \"collection\"}, {\"name\": \"vehicles\", \"type\": \"collection\"}, {\"name\": \"permissions\", \"type\": \"collection\"}, {\"name\": \"notifications\", \"type\": \"collection\"}, {\"name\": \"crash_events\", \"type\": \"collection\"}, {\"name\": \"violations-x\", \"type\": \"collection\"}, {\"name\": \"drivers\", \"type\": \"collection\"}, {\"name\": \"geofences\", \"type\": \"collection\"}, {\"name\": \"tickets\", \"type\": \"collection\"}, {\"name\": \"vehicleevents\", \"type\": \"collection\"}, {\"name\": \"vendors\", \"type\": \"collection\"}, {\"name\": \"roles\", \"type\": \"collection\"}, {\"name\": \"clients\", \"type\": \"collection\"}, {\"name\": \"vendordevices\", \"type\": \"collection\"}, {\"name\": \"settings\", \"type\": \"collection\"}, {\"name\": \"media\", \"type\": \"collection\"}, {\"name\": \"violation_rules\", \"type\": \"collection\"}, {\"name\": \"violations\", \"type\": \"collection\"}, {\"name\": \"users\", \"type\": \"collection\"}, {\"name\": \"companies\", \"type\": \"coll...", "commandName": "listCollections", "databaseName": "opal_server", "requestId": 16827, "operationId": 16827, "driverConnectionId": 1, "serverConnectionId": 13036, "serverHost": "3.144.134.141", "serverPort": 27017}
2025-03-13 15:15:00,832 - pymongo.connection - DEBUG - {"clientId": {"$oid": "67d2afbc070cdfdfc09cddc3"}, "message": "Connection checked in", "serverHost": "3.144.134.141", "serverPort": 27017, "driverConnectionId": 1}
2025-03-13 15:15:00,833 - app.db.repositories.data_repository - DEBUG - Available collections: ['rags', 'trips', 'vehicles', 'permissions', 'notifications', 'crash_events', 'violations-x', 'drivers', 'geofences', 'tickets', 'vehicleevents', 'vendors', 'roles', 'clients', 'vendordevices', 'settings', 'media', 'violation_rules', 'violations', 'users', 'companies']
2025-03-13 15:15:00,833 - pymongo.serverSelection - DEBUG - {"message": "Server selection started", "selector": "Primary()", "operation": "find", "topologyDescription": "<TopologyDescription id: 67d2afbc070cdfdfc09cddc3, topology_type: Single, servers: [<ServerDescription ('3.144.134.141', 27017) server_type: Standalone, rtt: 0.24385088000014546>]>", "clientId": {"$oid": "67d2afbc070cdfdfc09cddc3"}}
2025-03-13 15:15:00,834 - pymongo.serverSelection - DEBUG - {"message": "Server selection succeeded", "selector": "Primary()", "operation": "find", "topologyDescription": "<TopologyDescription id: 67d2afbc070cdfdfc09cddc3, topology_type: Single, servers: [<ServerDescription ('3.144.134.141', 27017) server_type: Standalone, rtt: 0.24385088000014546>]>", "clientId": {"$oid": "67d2afbc070cdfdfc09cddc3"}, "serverHost": "3.144.134.141", "serverPort": 27017}
2025-03-13 15:15:00,834 - pymongo.connection - DEBUG - {"clientId": {"$oid": "67d2afbc070cdfdfc09cddc3"}, "message": "Connection checkout started", "serverHost": "3.144.134.141", "serverPort": 27017}
2025-03-13 15:15:00,834 - pymongo.connection - DEBUG - {"clientId": {"$oid": "67d2afbc070cdfdfc09cddc3"}, "message": "Connection checked out", "serverHost": "3.144.134.141", "serverPort": 27017, "driverConnectionId": 1, "durationMS": 0.0}
2025-03-13 15:15:00,834 - pymongo.command - DEBUG - {"clientId": {"$oid": "67d2afbc070cdfdfc09cddc3"}, "message": "Command started", "command": "{\"find\": \"vehicleevents\", \"limit\": 1, \"singleBatch\": true, \"lsid\": {\"id\": {\"$binary\": {\"base64\": \"BmlYhcUlTXGcxkWy7U/RzQ==\", \"subType\": \"04\"}}}, \"$db\": \"opal_server\"}", "commandName": "find", "databaseName": "opal_server", "requestId": 9961, "operationId": 9961, "driverConnectionId": 1, "serverConnectionId": 13036, "serverHost": "3.144.134.141", "serverPort": 27017}
2025-03-13 15:15:01,080 - pymongo.command - DEBUG - {"clientId": {"$oid": "67d2afbc070cdfdfc09cddc3"}, "message": "Command succeeded", "durationMS": 246.595, "reply": "{\"cursor\": {\"firstBatch\": [{\"_id\": {\"$oid\": \"67441bdeb231195485d25272\"}, \"vendor\": {\"$oid\": \"6703ad7f70ba41e9473dd8e7\"}, \"deviceTime\": {\"$date\": \"2024-11-22T12:48:47Z\"}, \"serverTime\": {\"$date\": \"2024-11-22T12:48:47.958Z\"}, \"location\": {\"latitude\": 18.542048, \"longitude\": 55.852535, \"altitude\": 240}, \"ignition\": true, \"speed\": 68, \"heading\": 84, \"event\": {\"type\": \"DISTANCE_TRAVEL\", \"name\": \"Distance Traveled\"}, \"odometer\": 85198.52713696871, \"satellites\": 26, \"diff\": {\"distanceMeter\": 226.15911957109347, \"durationMillis\": 11000, \"ignitionOn\": true, \"moving\": true}, \"vehicle\": {\"license\": \"1765HW\", \"uuid\": \"f59c5202-eda5-4348-9d66-ec14718f076b\"}, \"device\": {\"imei\": \"358925430754727\"}, \"hdop\": 25.5, \"positionAccuracy\": 37.507210845177696, \"batteryVoltage\": 4.026, \"createdAt\": {\"$date\": \"2024-11-25T06:40:30.615Z\"}, \"updatedAt\": {\"$date\": \"2024-11-25T06:40:30.615Z\"}}], \"ns\": \"opal_server.vehicleevents\"}, \"ok\": 1.0}", "commandName": "find", "databaseName": "opal_server", "requestId": 9961, "operationId": 9961, "driverConnectionId": 1, "serverConnectionId": 13036, "serverHost": "3.144.134.141", "serverPort": 27017}
2025-03-13 15:15:01,081 - pymongo.connection - DEBUG - {"clientId": {"$oid": "67d2afbc070cdfdfc09cddc3"}, "message": "Connection checked in", "serverHost": "3.144.134.141", "serverPort": 27017, "driverConnectionId": 1}
2025-03-13 15:15:01,082 - app.db.repositories.data_repository - DEBUG - Sample document fields: ['_id', 'vendor', 'deviceTime', 'serverTime', 'location', 'ignition', 'speed', 'heading', 'event', 'odometer', 'satellites', 'wrongOrdered', 'diff', 'vehicle', 'device', 'hdop', 'positionAccuracy', 'batteryVoltage', '__v', 'createdAt', 'updatedAt']
2025-03-13 15:15:01,082 - pymongo.serverSelection - DEBUG - {"message": "Server selection started", "selector": "Primary()", "operation": "count", "topologyDescription": "<TopologyDescription id: 67d2afbc070cdfdfc09cddc3, topology_type: Single, servers: [<ServerDescription ('3.144.134.141', 27017) server_type: Standalone, rtt: 0.24385088000014546>]>", "clientId": {"$oid": "67d2afbc070cdfdfc09cddc3"}}
2025-03-13 15:15:01,082 - pymongo.serverSelection - DEBUG - {"message": "Server selection succeeded", "selector": "Primary()", "operation": "count", "topologyDescription": "<TopologyDescription id: 67d2afbc070cdfdfc09cddc3, topology_type: Single, servers: [<ServerDescription ('3.144.134.141', 27017) server_type: Standalone, rtt: 0.24385088000014546>]>", "clientId": {"$oid": "67d2afbc070cdfdfc09cddc3"}, "serverHost": "3.144.134.141", "serverPort": 27017}
2025-03-13 15:15:01,083 - pymongo.connection - DEBUG - {"clientId": {"$oid": "67d2afbc070cdfdfc09cddc3"}, "message": "Connection checkout started", "serverHost": "3.144.134.141", "serverPort": 27017}
2025-03-13 15:15:01,083 - pymongo.connection - DEBUG - {"clientId": {"$oid": "67d2afbc070cdfdfc09cddc3"}, "message": "Connection checked out", "serverHost": "3.144.134.141", "serverPort": 27017, "driverConnectionId": 1, "durationMS": 0.0}
2025-03-13 15:15:01,084 - pymongo.command - DEBUG - {"clientId": {"$oid": "67d2afbc070cdfdfc09cddc3"}, "message": "Command started", "command": "{\"aggregate\": \"vehicleevents\", \"pipeline\": [{\"$match\": {\"$or\": [{\"timestamp\": {\"$gte\": {\"$date\": \"2025-03-13T14:15:00.056Z\"}, \"$lte\": {\"$date\": \"2025-03-13T15:15:00.056Z\"}}}, {\"event_time\": {\"$gte\": {\"$date\": \"2025-03-13T14:15:00.056Z\"}, \"$lte\": {\"$date\": \"2025-03-13T15:15:00.056Z\"}}}, {\"created_at\": {\"$gte\": {\"$date\": \"2025-03-13T14:15:00.056Z\"}, \"$lte\": {\"$date\": \"2025-03-13T15:15:00.056Z\"}}}]}}, {\"$group\": {\"_id\": 1, \"n\": {\"$sum\": 1}}}], \"lsid\": {\"id\": {\"$binary\": {\"base64\": \"BmlYhcUlTXGcxkWy7U/RzQ==\", \"subType\": \"04\"}}}, \"$db\": \"opal_server\"}", "commandName": "aggregate", "databaseName": "opal_server", "requestId": 491, "operationId": 491, "driverConnectionId": 1, "serverConnectionId": 13036, "serverHost": "3.144.134.141", "serverPort": 27017}
2025-03-13 15:15:07,181 - pymongo.command - DEBUG - {"clientId": {"$oid": "67d2afbc070cdfdfc09cddc3"}, "message": "Command succeeded", "durationMS": 6096.614, "reply": "{\"cursor\": {\"ns\": \"opal_server.vehicleevents\"}, \"ok\": 1.0}", "commandName": "aggregate", "databaseName": "opal_server", "requestId": 491, "operationId": 491, "driverConnectionId": 1, "serverConnectionId": 13036, "serverHost": "3.144.134.141", "serverPort": 27017}
2025-03-13 15:15:07,182 - pymongo.connection - DEBUG - {"clientId": {"$oid": "67d2afbc070cdfdfc09cddc3"}, "message": "Connection checked in", "serverHost": "3.144.134.141", "serverPort": 27017, "driverConnectionId": 1}
2025-03-13 15:15:07,182 - app.db.repositories.data_repository - INFO - Found 0 matching vehicle events
2025-03-13 15:15:07,183 - pymongo.serverSelection - DEBUG - {"message": "Server selection started", "selector": "Primary()", "operation": "find", "topologyDescription": "<TopologyDescription id: 67d2afbc070cdfdfc09cddc3, topology_type: Single, servers: [<ServerDescription ('3.144.134.141', 27017) server_type: Standalone, rtt: 0.24385088000014546>]>", "clientId": {"$oid": "67d2afbc070cdfdfc09cddc3"}}
2025-03-13 15:15:07,183 - pymongo.serverSelection - DEBUG - {"message": "Server selection succeeded", "selector": "Primary()", "operation": "find", "topologyDescription": "<TopologyDescription id: 67d2afbc070cdfdfc09cddc3, topology_type: Single, servers: [<ServerDescription ('3.144.134.141', 27017) server_type: Standalone, rtt: 0.24385088000014546>]>", "clientId": {"$oid": "67d2afbc070cdfdfc09cddc3"}, "serverHost": "3.144.134.141", "serverPort": 27017}
2025-03-13 15:15:07,184 - pymongo.connection - DEBUG - {"clientId": {"$oid": "67d2afbc070cdfdfc09cddc3"}, "message": "Connection checkout started", "serverHost": "3.144.134.141", "serverPort": 27017}
2025-03-13 15:15:07,184 - pymongo.connection - DEBUG - {"clientId": {"$oid": "67d2afbc070cdfdfc09cddc3"}, "message": "Connection checked out", "serverHost": "3.144.134.141", "serverPort": 27017, "driverConnectionId": 1, "durationMS": 0.0}
2025-03-13 15:15:07,184 - pymongo.command - DEBUG - {"clientId": {"$oid": "67d2afbc070cdfdfc09cddc3"}, "message": "Command started", "command": "{\"find\": \"vehicleevents\", \"filter\": {\"$or\": [{\"timestamp\": {\"$gte\": {\"$date\": \"2025-03-13T14:15:00.056Z\"}, \"$lte\": {\"$date\": \"2025-03-13T15:15:00.056Z\"}}}, {\"event_time\": {\"$gte\": {\"$date\": \"2025-03-13T14:15:00.056Z\"}, \"$lte\": {\"$date\": \"2025-03-13T15:15:00.056Z\"}}}, {\"created_at\": {\"$gte\": {\"$date\": \"2025-03-13T14:15:00.056Z\"}, \"$lte\": {\"$date\": \"2025-03-13T15:15:00.056Z\"}}}]}, \"limit\": 1000, \"lsid\": {\"id\": {\"$binary\": {\"base64\": \"BmlYhcUlTXGcxkWy7U/RzQ==\", \"subType\": \"04\"}}}, \"$db\": \"opal_server\"}", "commandName": "find", "databaseName": "opal_server", "requestId": 2995, "operationId": 2995, "driverConnectionId": 1, "serverConnectionId": 13036, "serverHost": "3.144.134.141", "serverPort": 27017}
2025-03-13 15:15:07,825 - pymongo.topology - DEBUG - {"topologyId": {"$oid": "67d2afbc070cdfdfc09cddc3"}, "driverConnectionId": 1, "serverConnectionId": 13035, "serverHost": "3.144.134.141", "serverPort": 27017, "awaited": true, "durationMS": 10015.999999999622, "reply": "{\"isWritablePrimary\": true, \"topologyVersion\": {\"processId\": {\"$oid\": \"67b7e5814f77c1a87c56d054\"}}, \"maxBsonObjectSize\": 16777216, \"maxMessageSizeBytes\": 48000000, \"maxWriteBatchSize\": 100000, \"localTime\": {\"$date\": \"2025-03-13T10:15:07.836Z\"}, \"logicalSessionTimeoutMinutes\": 30, \"connectionId\": 13035, \"maxWireVersion\": 25, \"ok\": 1.0}", "message": "Server heartbeat succeeded"}
2025-03-13 15:15:07,826 - pymongo.topology - DEBUG - {"topologyId": {"$oid": "67d2afbc070cdfdfc09cddc3"}, "driverConnectionId": 1, "serverConnectionId": 13035, "serverHost": "3.144.134.141", "serverPort": 27017, "awaited": true, "message": "Server heartbeat started"}
2025-03-13 15:15:13,942 - pymongo.command - DEBUG - {"clientId": {"$oid": "67d2afbc070cdfdfc09cddc3"}, "message": "Command succeeded", "durationMS": 6757.8769999999995, "reply": "{\"cursor\": {\"ns\": \"opal_server.vehicleevents\"}, \"ok\": 1.0}", "commandName": "find", "databaseName": "opal_server", "requestId": 2995, "operationId": 2995, "driverConnectionId": 1, "serverConnectionId": 13036, "serverHost": "3.144.134.141", "serverPort": 27017}
2025-03-13 15:15:13,942 - pymongo.connection - DEBUG - {"clientId": {"$oid": "67d2afbc070cdfdfc09cddc3"}, "message": "Connection checked in", "serverHost": "3.144.134.141", "serverPort": 27017, "driverConnectionId": 1}
2025-03-13 15:15:13,943 - app.db.repositories.data_repository - DEBUG - Retrieved 0 vehicle events
2025-03-13 15:15:13,943 - app.api.endpoints.analytics - DEBUG - Retrieved violations: 0
2025-03-13 15:15:13,944 - app.api.endpoints.analytics - DEBUG - Retrieved events: 0
2025-03-13 15:15:13,944 - app.api.endpoints.analytics - INFO - Analysis completed - Found 0 violations and 0 drivers
2025-03-13 15:15:13,944 - app.api.endpoints.analytics - WARNING - No data found for the specified criteria
2025-03-13 15:15:17,826 - pymongo.topology - DEBUG - {"topologyId": {"$oid": "67d2afbc070cdfdfc09cddc3"}, "driverConnectionId": 1, "serverConnectionId": 13035, "serverHost": "3.144.134.141", "serverPort": 27017, "awaited": true, "durationMS": 10000.0, "reply": "{\"isWritablePrimary\": true, \"topologyVersion\": {\"processId\": {\"$oid\": \"67b7e5814f77c1a87c56d054\"}}, \"maxBsonObjectSize\": 16777216, \"maxMessageSizeBytes\": 48000000, \"maxWriteBatchSize\": 100000, \"localTime\": {\"$date\": \"2025-03-13T10:15:17.837Z\"}, \"logicalSessionTimeoutMinutes\": 30, \"connectionId\": 13035, \"maxWireVersion\": 25, \"ok\": 1.0}", "message": "Server heartbeat succeeded"}
2025-03-13 15:15:17,826 - pymongo.topology - DEBUG - {"topologyId": {"$oid": "67d2afbc070cdfdfc09cddc3"}, "driverConnectionId": 1, "serverConnectionId": 13035, "serverHost": "3.144.134.141", "serverPort": 27017, "awaited": true, "message": "Server heartbeat started"}
2025-03-13 15:15:27,827 - pymongo.topology - DEBUG - {"topologyId": {"$oid": "67d2afbc070cdfdfc09cddc3"}, "driverConnectionId": 1, "serverConnectionId": 13035, "serverHost": "3.144.134.141", "serverPort": 27017, "awaited": true, "durationMS": 10000.0, "reply": "{\"isWritablePrimary\": true, \"topologyVersion\": {\"processId\": {\"$oid\": \"67b7e5814f77c1a87c56d054\"}}, \"maxBsonObjectSize\": 16777216, \"maxMessageSizeBytes\": 48000000, \"maxWriteBatchSize\": 100000, \"localTime\": {\"$date\": \"2025-03-13T10:15:27.839Z\"}, \"logicalSessionTimeoutMinutes\": 30, \"connectionId\": 13035, \"maxWireVersion\": 25, \"ok\": 1.0}", "message": "Server heartbeat succeeded"}
2025-03-13 15:15:27,827 - pymongo.topology - DEBUG - {"topologyId": {"$oid": "67d2afbc070cdfdfc09cddc3"}, "driverConnectionId": 1, "serverConnectionId": 13035, "serverHost": "3.144.134.141", "serverPort": 27017, "awaited": true, "message": "Server heartbeat started"}
2025-03-13 15:15:37,828 - pymongo.topology - DEBUG - {"topologyId": {"$oid": "67d2afbc070cdfdfc09cddc3"}, "driverConnectionId": 1, "serverConnectionId": 13035, "serverHost": "3.144.134.141", "serverPort": 27017, "awaited": true, "durationMS": 10000.0, "reply": "{\"isWritablePrimary\": true, \"topologyVersion\": {\"processId\": {\"$oid\": \"67b7e5814f77c1a87c56d054\"}}, \"maxBsonObjectSize\": 16777216, \"maxMessageSizeBytes\": 48000000, \"maxWriteBatchSize\": 100000, \"localTime\": {\"$date\": \"2025-03-13T10:15:37.839Z\"}, \"logicalSessionTimeoutMinutes\": 30, \"connectionId\": 13035, \"maxWireVersion\": 25, \"ok\": 1.0}", "message": "Server heartbeat succeeded"}
2025-03-13 15:15:37,828 - pymongo.topology - DEBUG - {"topologyId": {"$oid": "67d2afbc070cdfdfc09cddc3"}, "driverConnectionId": 1, "serverConnectionId": 13035, "serverHost": "3.144.134.141", "serverPort": 27017, "awaited": true, "message": "Server heartbeat started"}
2025-03-13 15:15:47,829 - pymongo.topology - DEBUG - {"topologyId": {"$oid": "67d2afbc070cdfdfc09cddc3"}, "driverConnectionId": 1, "serverConnectionId": 13035, "serverHost": "3.144.134.141", "serverPort": 27017, "awaited": true, "durationMS": 10000.0, "reply": "{\"isWritablePrimary\": true, \"topologyVersion\": {\"processId\": {\"$oid\": \"67b7e5814f77c1a87c56d054\"}}, \"maxBsonObjectSize\": 16777216, \"maxMessageSizeBytes\": 48000000, \"maxWriteBatchSize\": 100000, \"localTime\": {\"$date\": \"2025-03-13T10:15:47.840Z\"}, \"logicalSessionTimeoutMinutes\": 30, \"connectionId\": 13035, \"maxWireVersion\": 25, \"ok\": 1.0}", "message": "Server heartbeat succeeded"}
2025-03-13 15:15:47,829 - pymongo.topology - DEBUG - {"topologyId": {"$oid": "67d2afbc070cdfdfc09cddc3"}, "driverConnectionId": 1, "serverConnectionId": 13035, "serverHost": "3.144.134.141", "serverPort": 27017, "awaited": true, "message": "Server heartbeat started"}
2025-03-13 15:15:57,828 - pymongo.topology - DEBUG - {"topologyId": {"$oid": "67d2afbc070cdfdfc09cddc3"}, "driverConnectionId": 1, "serverConnectionId": 13035, "serverHost": "3.144.134.141", "serverPort": 27017, "awaited": true, "durationMS": 10000.0, "reply": "{\"isWritablePrimary\": true, \"topologyVersion\": {\"processId\": {\"$oid\": \"67b7e5814f77c1a87c56d054\"}}, \"maxBsonObjectSize\": 16777216, \"maxMessageSizeBytes\": 48000000, \"maxWriteBatchSize\": 100000, \"localTime\": {\"$date\": \"2025-03-13T10:15:57.840Z\"}, \"logicalSessionTimeoutMinutes\": 30, \"connectionId\": 13035, \"maxWireVersion\": 25, \"ok\": 1.0}", "message": "Server heartbeat succeeded"}
2025-03-13 15:15:57,829 - pymongo.topology - DEBUG - {"topologyId": {"$oid": "67d2afbc070cdfdfc09cddc3"}, "driverConnectionId": 1, "serverConnectionId": 13035, "serverHost": "3.144.134.141", "serverPort": 27017, "awaited": true, "message": "Server heartbeat started"}
2025-03-13 15:16:07,832 - pymongo.topology - DEBUG - {"topologyId": {"$oid": "67d2afbc070cdfdfc09cddc3"}, "driverConnectionId": 1, "serverConnectionId": 13035, "serverHost": "3.144.134.141", "serverPort": 27017, "awaited": true, "durationMS": 10000.0, "reply": "{\"isWritablePrimary\": true, \"topologyVersion\": {\"processId\": {\"$oid\": \"67b7e5814f77c1a87c56d054\"}}, \"maxBsonObjectSize\": 16777216, \"maxMessageSizeBytes\": 48000000, \"maxWriteBatchSize\": 100000, \"localTime\": {\"$date\": \"2025-03-13T10:16:07.844Z\"}, \"logicalSessionTimeoutMinutes\": 30, \"connectionId\": 13035, \"maxWireVersion\": 25, \"ok\": 1.0}", "message": "Server heartbeat succeeded"}
2025-03-13 15:16:07,832 - pymongo.topology - DEBUG - {"topologyId": {"$oid": "67d2afbc070cdfdfc09cddc3"}, "driverConnectionId": 1, "serverConnectionId": 13035, "serverHost": "3.144.134.141", "serverPort": 27017, "awaited": true, "message": "Server heartbeat started"}
2025-03-13 15:16:17,833 - pymongo.topology - DEBUG - {"topologyId": {"$oid": "67d2afbc070cdfdfc09cddc3"}, "driverConnectionId": 1, "serverConnectionId": 13035, "serverHost": "3.144.134.141", "serverPort": 27017, "awaited": true, "durationMS": 10000.0, "reply": "{\"isWritablePrimary\": true, \"topologyVersion\": {\"processId\": {\"$oid\": \"67b7e5814f77c1a87c56d054\"}}, \"maxBsonObjectSize\": 16777216, \"maxMessageSizeBytes\": 48000000, \"maxWriteBatchSize\": 100000, \"localTime\": {\"$date\": \"2025-03-13T10:16:17.845Z\"}, \"logicalSessionTimeoutMinutes\": 30, \"connectionId\": 13035, \"maxWireVersion\": 25, \"ok\": 1.0}", "message": "Server heartbeat succeeded"}
2025-03-13 15:16:17,834 - pymongo.topology - DEBUG - {"topologyId": {"$oid": "67d2afbc070cdfdfc09cddc3"}, "driverConnectionId": 1, "serverConnectionId": 13035, "serverHost": "3.144.134.141", "serverPort": 27017, "awaited": true, "message": "Server heartbeat started"}
2025-03-13 15:16:27,834 - pymongo.topology - DEBUG - {"topologyId": {"$oid": "67d2afbc070cdfdfc09cddc3"}, "driverConnectionId": 1, "serverConnectionId": 13035, "serverHost": "3.144.134.141", "serverPort": 27017, "awaited": true, "durationMS": 10000.0, "reply": "{\"isWritablePrimary\": true, \"topologyVersion\": {\"processId\": {\"$oid\": \"67b7e5814f77c1a87c56d054\"}}, \"maxBsonObjectSize\": 16777216, \"maxMessageSizeBytes\": 48000000, \"maxWriteBatchSize\": 100000, \"localTime\": {\"$date\": \"2025-03-13T10:16:27.846Z\"}, \"logicalSessionTimeoutMinutes\": 30, \"connectionId\": 13035, \"maxWireVersion\": 25, \"ok\": 1.0}", "message": "Server heartbeat succeeded"}
2025-03-13 15:16:27,834 - pymongo.topology - DEBUG - {"topologyId": {"$oid": "67d2afbc070cdfdfc09cddc3"}, "driverConnectionId": 1, "serverConnectionId": 13035, "serverHost": "3.144.134.141", "serverPort": 27017, "awaited": true, "message": "Server heartbeat started"}
2025-03-13 15:16:37,840 - pymongo.topology - DEBUG - {"topologyId": {"$oid": "67d2afbc070cdfdfc09cddc3"}, "driverConnectionId": 1, "serverConnectionId": 13035, "serverHost": "3.144.134.141", "serverPort": 27017, "awaited": true, "durationMS": 10015.999999999622, "reply": "{\"isWritablePrimary\": true, \"topologyVersion\": {\"processId\": {\"$oid\": \"67b7e5814f77c1a87c56d054\"}}, \"maxBsonObjectSize\": 16777216, \"maxMessageSizeBytes\": 48000000, \"maxWriteBatchSize\": 100000, \"localTime\": {\"$date\": \"2025-03-13T10:16:37.852Z\"}, \"logicalSessionTimeoutMinutes\": 30, \"connectionId\": 13035, \"maxWireVersion\": 25, \"ok\": 1.0}", "message": "Server heartbeat succeeded"}
2025-03-13 15:16:37,840 - pymongo.topology - DEBUG - {"topologyId": {"$oid": "67d2afbc070cdfdfc09cddc3"}, "driverConnectionId": 1, "serverConnectionId": 13035, "serverHost": "3.144.134.141", "serverPort": 27017, "awaited": true, "message": "Server heartbeat started"}
2025-03-13 15:16:47,840 - pymongo.topology - DEBUG - {"topologyId": {"$oid": "67d2afbc070cdfdfc09cddc3"}, "driverConnectionId": 1, "serverConnectionId": 13035, "serverHost": "3.144.134.141", "serverPort": 27017, "awaited": true, "durationMS": 10000.0, "reply": "{\"isWritablePrimary\": true, \"topologyVersion\": {\"processId\": {\"$oid\": \"67b7e5814f77c1a87c56d054\"}}, \"maxBsonObjectSize\": 16777216, \"maxMessageSizeBytes\": 48000000, \"maxWriteBatchSize\": 100000, \"localTime\": {\"$date\": \"2025-03-13T10:16:47.852Z\"}, \"logicalSessionTimeoutMinutes\": 30, \"connectionId\": 13035, \"maxWireVersion\": 25, \"ok\": 1.0}", "message": "Server heartbeat succeeded"}
2025-03-13 15:16:47,841 - pymongo.topology - DEBUG - {"topologyId": {"$oid": "67d2afbc070cdfdfc09cddc3"}, "driverConnectionId": 1, "serverConnectionId": 13035, "serverHost": "3.144.134.141", "serverPort": 27017, "awaited": true, "message": "Server heartbeat started"}
2025-03-13 15:16:57,845 - pymongo.topology - DEBUG - {"topologyId": {"$oid": "67d2afbc070cdfdfc09cddc3"}, "driverConnectionId": 1, "serverConnectionId": 13035, "serverHost": "3.144.134.141", "serverPort": 27017, "awaited": true, "durationMS": 10000.0, "reply": "{\"isWritablePrimary\": true, \"topologyVersion\": {\"processId\": {\"$oid\": \"67b7e5814f77c1a87c56d054\"}}, \"maxBsonObjectSize\": 16777216, \"maxMessageSizeBytes\": 48000000, \"maxWriteBatchSize\": 100000, \"localTime\": {\"$date\": \"2025-03-13T10:16:57.857Z\"}, \"logicalSessionTimeoutMinutes\": 30, \"connectionId\": 13035, \"maxWireVersion\": 25, \"ok\": 1.0}", "message": "Server heartbeat succeeded"}
2025-03-13 15:16:57,846 - pymongo.topology - DEBUG - {"topologyId": {"$oid": "67d2afbc070cdfdfc09cddc3"}, "driverConnectionId": 1, "serverConnectionId": 13035, "serverHost": "3.144.134.141", "serverPort": 27017, "awaited": true, "message": "Server heartbeat started"}
2025-03-13 15:17:07,845 - pymongo.topology - DEBUG - {"topologyId": {"$oid": "67d2afbc070cdfdfc09cddc3"}, "driverConnectionId": 1, "serverConnectionId": 13035, "serverHost": "3.144.134.141", "serverPort": 27017, "awaited": true, "durationMS": 10000.0, "reply": "{\"isWritablePrimary\": true, \"topologyVersion\": {\"processId\": {\"$oid\": \"67b7e5814f77c1a87c56d054\"}}, \"maxBsonObjectSize\": 16777216, \"maxMessageSizeBytes\": 48000000, \"maxWriteBatchSize\": 100000, \"localTime\": {\"$date\": \"2025-03-13T10:17:07.857Z\"}, \"logicalSessionTimeoutMinutes\": 30, \"connectionId\": 13035, \"maxWireVersion\": 25, \"ok\": 1.0}", "message": "Server heartbeat succeeded"}
2025-03-13 15:17:07,845 - pymongo.topology - DEBUG - {"topologyId": {"$oid": "67d2afbc070cdfdfc09cddc3"}, "driverConnectionId": 1, "serverConnectionId": 13035, "serverHost": "3.144.134.141", "serverPort": 27017, "awaited": true, "message": "Server heartbeat started"}
2025-03-13 15:17:17,853 - pymongo.topology - DEBUG - {"topologyId": {"$oid": "67d2afbc070cdfdfc09cddc3"}, "driverConnectionId": 1, "serverConnectionId": 13035, "serverHost": "3.144.134.141", "serverPort": 27017, "awaited": true, "durationMS": 10015.000000001237, "reply": "{\"isWritablePrimary\": true, \"topologyVersion\": {\"processId\": {\"$oid\": \"67b7e5814f77c1a87c56d054\"}}, \"maxBsonObjectSize\": 16777216, \"maxMessageSizeBytes\": 48000000, \"maxWriteBatchSize\": 100000, \"localTime\": {\"$date\": \"2025-03-13T10:17:17.865Z\"}, \"logicalSessionTimeoutMinutes\": 30, \"connectionId\": 13035, \"maxWireVersion\": 25, \"ok\": 1.0}", "message": "Server heartbeat succeeded"}
2025-03-13 15:17:17,853 - pymongo.topology - DEBUG - {"topologyId": {"$oid": "67d2afbc070cdfdfc09cddc3"}, "driverConnectionId": 1, "serverConnectionId": 13035, "serverHost": "3.144.134.141", "serverPort": 27017, "awaited": true, "message": "Server heartbeat started"}
2025-03-13 15:17:27,854 - pymongo.topology - DEBUG - {"topologyId": {"$oid": "67d2afbc070cdfdfc09cddc3"}, "driverConnectionId": 1, "serverConnectionId": 13035, "serverHost": "3.144.134.141", "serverPort": 27017, "awaited": true, "durationMS": 10000.0, "reply": "{\"isWritablePrimary\": true, \"topologyVersion\": {\"processId\": {\"$oid\": \"67b7e5814f77c1a87c56d054\"}}, \"maxBsonObjectSize\": 16777216, \"maxMessageSizeBytes\": 48000000, \"maxWriteBatchSize\": 100000, \"localTime\": {\"$date\": \"2025-03-13T10:17:27.866Z\"}, \"logicalSessionTimeoutMinutes\": 30, \"connectionId\": 13035, \"maxWireVersion\": 25, \"ok\": 1.0}", "message": "Server heartbeat succeeded"}
2025-03-13 15:17:27,854 - pymongo.topology - DEBUG - {"topologyId": {"$oid": "67d2afbc070cdfdfc09cddc3"}, "driverConnectionId": 1, "serverConnectionId": 13035, "serverHost": "3.144.134.141", "serverPort": 27017, "awaited": true, "message": "Server heartbeat started"}
2025-03-13 15:17:37,858 - pymongo.topology - DEBUG - {"topologyId": {"$oid": "67d2afbc070cdfdfc09cddc3"}, "driverConnectionId": 1, "serverConnectionId": 13035, "serverHost": "3.144.134.141", "serverPort": 27017, "awaited": true, "durationMS": 10000.0, "reply": "{\"isWritablePrimary\": true, \"topologyVersion\": {\"processId\": {\"$oid\": \"67b7e5814f77c1a87c56d054\"}}, \"maxBsonObjectSize\": 16777216, \"maxMessageSizeBytes\": 48000000, \"maxWriteBatchSize\": 100000, \"localTime\": {\"$date\": \"2025-03-13T10:17:37.868Z\"}, \"logicalSessionTimeoutMinutes\": 30, \"connectionId\": 13035, \"maxWireVersion\": 25, \"ok\": 1.0}", "message": "Server heartbeat succeeded"}
2025-03-13 15:17:37,859 - pymongo.topology - DEBUG - {"topologyId": {"$oid": "67d2afbc070cdfdfc09cddc3"}, "driverConnectionId": 1, "serverConnectionId": 13035, "serverHost": "3.144.134.141", "serverPort": 27017, "awaited": true, "message": "Server heartbeat started"}
2025-03-13 15:17:47,856 - pymongo.topology - DEBUG - {"topologyId": {"$oid": "67d2afbc070cdfdfc09cddc3"}, "driverConnectionId": 1, "serverConnectionId": 13035, "serverHost": "3.144.134.141", "serverPort": 27017, "awaited": true, "durationMS": 10000.0, "reply": "{\"isWritablePrimary\": true, \"topologyVersion\": {\"processId\": {\"$oid\": \"67b7e5814f77c1a87c56d054\"}}, \"maxBsonObjectSize\": 16777216, \"maxMessageSizeBytes\": 48000000, \"maxWriteBatchSize\": 100000, \"localTime\": {\"$date\": \"2025-03-13T10:17:47.869Z\"}, \"logicalSessionTimeoutMinutes\": 30, \"connectionId\": 13035, \"maxWireVersion\": 25, \"ok\": 1.0}", "message": "Server heartbeat succeeded"}
2025-03-13 15:17:47,856 - pymongo.topology - DEBUG - {"topologyId": {"$oid": "67d2afbc070cdfdfc09cddc3"}, "driverConnectionId": 1, "serverConnectionId": 13035, "serverHost": "3.144.134.141", "serverPort": 27017, "awaited": true, "message": "Server heartbeat started"}
2025-03-13 15:17:57,857 - pymongo.topology - DEBUG - {"topologyId": {"$oid": "67d2afbc070cdfdfc09cddc3"}, "driverConnectionId": 1, "serverConnectionId": 13035, "serverHost": "3.144.134.141", "serverPort": 27017, "awaited": true, "durationMS": 10000.0, "reply": "{\"isWritablePrimary\": true, \"topologyVersion\": {\"processId\": {\"$oid\": \"67b7e5814f77c1a87c56d054\"}}, \"maxBsonObjectSize\": 16777216, \"maxMessageSizeBytes\": 48000000, \"maxWriteBatchSize\": 100000, \"localTime\": {\"$date\": \"2025-03-13T10:17:57.870Z\"}, \"logicalSessionTimeoutMinutes\": 30, \"connectionId\": 13035, \"maxWireVersion\": 25, \"ok\": 1.0}", "message": "Server heartbeat succeeded"}
2025-03-13 15:17:57,860 - pymongo.topology - DEBUG - {"topologyId": {"$oid": "67d2afbc070cdfdfc09cddc3"}, "driverConnectionId": 1, "serverConnectionId": 13035, "serverHost": "3.144.134.141", "serverPort": 27017, "awaited": true, "message": "Server heartbeat started"}
2025-03-13 15:19:52,388 - numexpr.utils - INFO - Note: NumExpr detected 12 cores but "NUMEXPR_MAX_THREADS" not set, so enforcing safe limit of 8.
2025-03-13 15:19:52,388 - numexpr.utils - INFO - NumExpr defaulting to 8 threads.
2025-03-13 15:19:53,654 - matplotlib - DEBUG - matplotlib data path: C:\Users\msameerakram\AppData\Local\anaconda3\Lib\site-packages\matplotlib\mpl-data
2025-03-13 15:19:53,660 - matplotlib - DEBUG - CONFIGDIR=C:\Users\msameerakram\.matplotlib
2025-03-13 15:19:53,661 - matplotlib - DEBUG - interactive is False
2025-03-13 15:19:53,661 - matplotlib - DEBUG - platform is win32
2025-03-13 15:19:53,719 - matplotlib - DEBUG - CACHEDIR=C:\Users\msameerakram\.matplotlib
2025-03-13 15:19:53,723 - matplotlib.font_manager - DEBUG - Using fontManager instance from C:\Users\msameerakram\.matplotlib\fontlist-v390.json
2025-03-13 15:19:56,253 - numexpr.utils - INFO - Note: NumExpr detected 12 cores but "NUMEXPR_MAX_THREADS" not set, so enforcing safe limit of 8.
2025-03-13 15:19:56,253 - numexpr.utils - INFO - NumExpr defaulting to 8 threads.
2025-03-13 15:19:57,511 - matplotlib - DEBUG - matplotlib data path: C:\Users\msameerakram\AppData\Local\anaconda3\Lib\site-packages\matplotlib\mpl-data
2025-03-13 15:19:57,517 - matplotlib - DEBUG - CONFIGDIR=C:\Users\msameerakram\.matplotlib
2025-03-13 15:19:57,519 - matplotlib - DEBUG - interactive is False
2025-03-13 15:19:57,519 - matplotlib - DEBUG - platform is win32
2025-03-13 15:19:57,579 - matplotlib - DEBUG - CACHEDIR=C:\Users\msameerakram\.matplotlib
2025-03-13 15:19:57,582 - matplotlib.font_manager - DEBUG - Using fontManager instance from C:\Users\msameerakram\.matplotlib\fontlist-v390.json
2025-03-13 15:19:58,927 - asyncio - DEBUG - Using selector: SelectSelector
2025-03-13 15:19:58,966 - pymongo.topology - DEBUG - {"topologyId": {"$oid": "67d2b14e79e6ca23f157491a"}, "message": "Starting topology monitoring"}
2025-03-13 15:19:58,966 - pymongo.topology - DEBUG - {"topologyId": {"$oid": "67d2b14e79e6ca23f157491a"}, "previousDescription": "<TopologyDescription id: 67d2b14e79e6ca23f157491a, topology_type: Unknown, servers: []>", "newDescription": "<TopologyDescription id: 67d2b14e79e6ca23f157491a, topology_type: Unknown, servers: [<ServerDescription ('3.144.134.141', 27017) server_type: Unknown, rtt: None>]>", "message": "Topology description changed"}
2025-03-13 15:19:58,966 - pymongo.topology - DEBUG - {"topologyId": {"$oid": "67d2b14e79e6ca23f157491a"}, "serverHost": "3.144.134.141", "serverPort": 27017, "message": "Starting server monitoring"}
2025-03-13 15:19:58,968 - pymongo.connection - DEBUG - {"clientId": {"$oid": "67d2b14e79e6ca23f157491a"}, "message": "Connection pool created", "serverHost": "3.144.134.141", "serverPort": 27017}
2025-03-13 15:19:58,969 - pymongo.serverSelection - DEBUG - {"message": "Server selection started", "selector": "Primary()", "operation": "ping", "topologyDescription": "<TopologyDescription id: 67d2b14e79e6ca23f157491a, topology_type: Unknown, servers: [<ServerDescription ('3.144.134.141', 27017) server_type: Unknown, rtt: None>]>", "clientId": {"$oid": "67d2b14e79e6ca23f157491a"}}
2025-03-13 15:19:58,969 - pymongo.serverSelection - DEBUG - {"message": "Waiting for suitable server to become available", "selector": "Primary()", "operation": "ping", "topologyDescription": "<TopologyDescription id: 67d2b14e79e6ca23f157491a, topology_type: Unknown, servers: [<ServerDescription ('3.144.134.141', 27017) server_type: Unknown, rtt: None>]>", "clientId": {"$oid": "67d2b14e79e6ca23f157491a"}, "remainingTimeMS": 30}
2025-03-13 15:19:59,232 - pymongo.topology - DEBUG - {"topologyId": {"$oid": "67d2b14e79e6ca23f157491a"}, "driverConnectionId": 1, "serverHost": "3.144.134.141", "serverPort": 27017, "awaited": false, "message": "Server heartbeat started"}
2025-03-13 15:19:59,478 - pymongo.topology - DEBUG - {"topologyId": {"$oid": "67d2b14e79e6ca23f157491a"}, "driverConnectionId": 1, "serverConnectionId": 13047, "serverHost": "3.144.134.141", "serverPort": 27017, "awaited": false, "durationMS": 250.0, "reply": "{\"helloOk\": true, \"ismaster\": true, \"topologyVersion\": {\"processId\": {\"$oid\": \"67b7e5814f77c1a87c56d054\"}}, \"maxBsonObjectSize\": 16777216, \"maxMessageSizeBytes\": 48000000, \"maxWriteBatchSize\": 100000, \"localTime\": {\"$date\": \"2025-03-13T10:19:59.494Z\"}, \"logicalSessionTimeoutMinutes\": 30, \"connectionId\": 13047, \"maxWireVersion\": 25, \"ok\": 1.0}", "message": "Server heartbeat succeeded"}
2025-03-13 15:19:59,479 - pymongo.connection - DEBUG - {"clientId": {"$oid": "67d2b14e79e6ca23f157491a"}, "message": "Connection pool ready", "serverHost": "3.144.134.141", "serverPort": 27017}
2025-03-13 15:19:59,479 - pymongo.topology - DEBUG - {"topologyId": {"$oid": "67d2b14e79e6ca23f157491a"}, "previousDescription": "<TopologyDescription id: 67d2b14e79e6ca23f157491a, topology_type: Unknown, servers: [<ServerDescription ('3.144.134.141', 27017) server_type: Unknown, rtt: None>]>", "newDescription": "<TopologyDescription id: 67d2b14e79e6ca23f157491a, topology_type: Single, servers: [<ServerDescription ('3.144.134.141', 27017) server_type: Standalone, rtt: 0.25>]>", "message": "Topology description changed"}
2025-03-13 15:19:59,480 - pymongo.serverSelection - DEBUG - {"message": "Server selection succeeded", "selector": "Primary()", "operation": "ping", "topologyDescription": "<TopologyDescription id: 67d2b14e79e6ca23f157491a, topology_type: Single, servers: [<ServerDescription ('3.144.134.141', 27017) server_type: Standalone, rtt: 0.25>]>", "clientId": {"$oid": "67d2b14e79e6ca23f157491a"}, "serverHost": "3.144.134.141", "serverPort": 27017}
2025-03-13 15:19:59,481 - pymongo.connection - DEBUG - {"clientId": {"$oid": "67d2b14e79e6ca23f157491a"}, "message": "Connection checkout started", "serverHost": "3.144.134.141", "serverPort": 27017}
2025-03-13 15:19:59,481 - pymongo.topology - DEBUG - {"topologyId": {"$oid": "67d2b14e79e6ca23f157491a"}, "driverConnectionId": 1, "serverConnectionId": 13047, "serverHost": "3.144.134.141", "serverPort": 27017, "awaited": true, "message": "Server heartbeat started"}
2025-03-13 15:19:59,481 - pymongo.connection - DEBUG - {"clientId": {"$oid": "67d2b14e79e6ca23f157491a"}, "message": "Connection created", "serverHost": "3.144.134.141", "serverPort": 27017, "driverConnectionId": 1}
2025-03-13 15:20:00,227 - pymongo.connection - DEBUG - {"clientId": {"$oid": "67d2b14e79e6ca23f157491a"}, "message": "Connection ready", "serverHost": "3.144.134.141", "serverPort": 27017, "driverConnectionId": 1, "durationMS": 0.5}
2025-03-13 15:20:00,228 - pymongo.connection - DEBUG - {"clientId": {"$oid": "67d2b14e79e6ca23f157491a"}, "message": "Connection checked out", "serverHost": "3.144.134.141", "serverPort": 27017, "driverConnectionId": 1, "durationMS": 0.75}
2025-03-13 15:20:00,228 - pymongo.command - DEBUG - {"clientId": {"$oid": "67d2b14e79e6ca23f157491a"}, "message": "Command started", "command": "{\"ping\": 1, \"lsid\": {\"id\": {\"$binary\": {\"base64\": \"0QHHtlwOQRC1RRlE3NX4dA==\", \"subType\": \"04\"}}}, \"$db\": \"opal_server\"}", "commandName": "ping", "databaseName": "opal_server", "requestId": 6334, "operationId": 6334, "driverConnectionId": 1, "serverConnectionId": 13048, "serverHost": "3.144.134.141", "serverPort": 27017}
2025-03-13 15:20:00,473 - pymongo.command - DEBUG - {"clientId": {"$oid": "67d2b14e79e6ca23f157491a"}, "message": "Command succeeded", "durationMS": 244.602, "reply": "{\"ok\": 1.0}", "commandName": "ping", "databaseName": "opal_server", "requestId": 6334, "operationId": 6334, "driverConnectionId": 1, "serverConnectionId": 13048, "serverHost": "3.144.134.141", "serverPort": 27017}
2025-03-13 15:20:00,473 - pymongo.connection - DEBUG - {"clientId": {"$oid": "67d2b14e79e6ca23f157491a"}, "message": "Connection checked in", "serverHost": "3.144.134.141", "serverPort": 27017, "driverConnectionId": 1}
2025-03-13 15:20:09,729 - pymongo.topology - DEBUG - {"topologyId": {"$oid": "67d2b14e79e6ca23f157491a"}, "driverConnectionId": 1, "serverConnectionId": 13047, "serverHost": "3.144.134.141", "serverPort": 27017, "awaited": true, "durationMS": 10250.0, "reply": "{\"isWritablePrimary\": true, \"topologyVersion\": {\"processId\": {\"$oid\": \"67b7e5814f77c1a87c56d054\"}}, \"maxBsonObjectSize\": 16777216, \"maxMessageSizeBytes\": 48000000, \"maxWriteBatchSize\": 100000, \"localTime\": {\"$date\": \"2025-03-13T10:20:09.744Z\"}, \"logicalSessionTimeoutMinutes\": 30, \"connectionId\": 13047, \"maxWireVersion\": 25, \"ok\": 1.0}", "message": "Server heartbeat succeeded"}
2025-03-13 15:20:09,730 - pymongo.topology - DEBUG - {"topologyId": {"$oid": "67d2b14e79e6ca23f157491a"}, "driverConnectionId": 1, "serverConnectionId": 13047, "serverHost": "3.144.134.141", "serverPort": 27017, "awaited": true, "message": "Server heartbeat started"}
2025-03-13 15:20:18,192 - app.api.endpoints.analytics - DEBUG - Starting real-time analysis request - timeframe: 4h, driver_uuid: None
2025-03-13 15:20:18,193 - app.api.endpoints.analytics - INFO - Fetching data for time window: 4h, driver: all drivers
2025-03-13 15:20:18,193 - app.services.predictive_analytics - DEBUG - Analyzing time window from 2025-03-13 11:20:18.193844 to 2025-03-13 15:20:18.193844
2025-03-13 15:20:18,193 - app.db.repositories.data_repository - DEBUG - Connected to database: opal_server
2025-03-13 15:20:18,194 - app.db.repositories.data_repository - DEBUG - Violations query: {'$or': [{'timestamp': {'$gte': datetime.datetime(2025, 3, 13, 11, 20, 18, 193844), '$lte': datetime.datetime(2025, 3, 13, 15, 20, 18, 193844)}}, {'event_time': {'$gte': datetime.datetime(2025, 3, 13, 11, 20, 18, 193844), '$lte': datetime.datetime(2025, 3, 13, 15, 20, 18, 193844)}}, {'created_at': {'$gte': datetime.datetime(2025, 3, 13, 11, 20, 18, 193844), '$lte': datetime.datetime(2025, 3, 13, 15, 20, 18, 193844)}}]}
2025-03-13 15:20:18,194 - app.db.repositories.data_repository - DEBUG - Using database: opal_server
2025-03-13 15:20:18,194 - pymongo.serverSelection - DEBUG - {"message": "Server selection started", "selector": "Primary()", "operation": "listCollections", "topologyDescription": "<TopologyDescription id: 67d2b14e79e6ca23f157491a, topology_type: Single, servers: [<ServerDescription ('3.144.134.141', 27017) server_type: Standalone, rtt: 0.25>]>", "clientId": {"$oid": "67d2b14e79e6ca23f157491a"}}
2025-03-13 15:20:18,195 - pymongo.serverSelection - DEBUG - {"message": "Server selection succeeded", "selector": "Primary()", "operation": "listCollections", "topologyDescription": "<TopologyDescription id: 67d2b14e79e6ca23f157491a, topology_type: Single, servers: [<ServerDescription ('3.144.134.141', 27017) server_type: Standalone, rtt: 0.25>]>", "clientId": {"$oid": "67d2b14e79e6ca23f157491a"}, "serverHost": "3.144.134.141", "serverPort": 27017}
2025-03-13 15:20:18,195 - pymongo.connection - DEBUG - {"clientId": {"$oid": "67d2b14e79e6ca23f157491a"}, "message": "Connection checkout started", "serverHost": "3.144.134.141", "serverPort": 27017}
2025-03-13 15:20:18,197 - pymongo.connection - DEBUG - {"clientId": {"$oid": "67d2b14e79e6ca23f157491a"}, "message": "Connection checked out", "serverHost": "3.144.134.141", "serverPort": 27017, "driverConnectionId": 1, "durationMS": 0.0}
2025-03-13 15:20:18,197 - pymongo.command - DEBUG - {"clientId": {"$oid": "67d2b14e79e6ca23f157491a"}, "message": "Command started", "command": "{\"listCollections\": 1, \"nameOnly\": true, \"lsid\": {\"id\": {\"$binary\": {\"base64\": \"0QHHtlwOQRC1RRlE3NX4dA==\", \"subType\": \"04\"}}}, \"$db\": \"opal_server\"}", "commandName": "listCollections", "databaseName": "opal_server", "requestId": 26500, "operationId": 26500, "driverConnectionId": 1, "serverConnectionId": 13048, "serverHost": "3.144.134.141", "serverPort": 27017}
2025-03-13 15:20:18,441 - pymongo.command - DEBUG - {"clientId": {"$oid": "67d2b14e79e6ca23f157491a"}, "message": "Command succeeded", "durationMS": 244.85399999999998, "reply": "{\"cursor\": {\"ns\": \"opal_server.$cmd.listCollections\", \"firstBatch\": [{\"name\": \"rags\", \"type\": \"collection\"}, {\"name\": \"trips\", \"type\": \"collection\"}, {\"name\": \"vehicles\", \"type\": \"collection\"}, {\"name\": \"permissions\", \"type\": \"collection\"}, {\"name\": \"notifications\", \"type\": \"collection\"}, {\"name\": \"crash_events\", \"type\": \"collection\"}, {\"name\": \"violations-x\", \"type\": \"collection\"}, {\"name\": \"drivers\", \"type\": \"collection\"}, {\"name\": \"geofences\", \"type\": \"collection\"}, {\"name\": \"tickets\", \"type\": \"collection\"}, {\"name\": \"vehicleevents\", \"type\": \"collection\"}, {\"name\": \"vendors\", \"type\": \"collection\"}, {\"name\": \"roles\", \"type\": \"collection\"}, {\"name\": \"clients\", \"type\": \"collection\"}, {\"name\": \"vendordevices\", \"type\": \"collection\"}, {\"name\": \"settings\", \"type\": \"collection\"}, {\"name\": \"media\", \"type\": \"collection\"}, {\"name\": \"violation_rules\", \"type\": \"collection\"}, {\"name\": \"violations\", \"type\": \"collection\"}, {\"name\": \"users\", \"type\": \"collection\"}, {\"name\": \"companies\", \"type\": \"coll...", "commandName": "listCollections", "databaseName": "opal_server", "requestId": 26500, "operationId": 26500, "driverConnectionId": 1, "serverConnectionId": 13048, "serverHost": "3.144.134.141", "serverPort": 27017}
2025-03-13 15:20:18,444 - pymongo.connection - DEBUG - {"clientId": {"$oid": "67d2b14e79e6ca23f157491a"}, "message": "Connection checked in", "serverHost": "3.144.134.141", "serverPort": 27017, "driverConnectionId": 1}
2025-03-13 15:20:18,445 - app.db.repositories.data_repository - DEBUG - Available collections: ['rags', 'trips', 'vehicles', 'permissions', 'notifications', 'crash_events', 'violations-x', 'drivers', 'geofences', 'tickets', 'vehicleevents', 'vendors', 'roles', 'clients', 'vendordevices', 'settings', 'media', 'violation_rules', 'violations', 'users', 'companies']
2025-03-13 15:20:18,445 - app.db.repositories.data_repository - DEBUG - Checking collection: violations
2025-03-13 15:20:18,446 - pymongo.serverSelection - DEBUG - {"message": "Server selection started", "selector": "Primary()", "operation": "count", "topologyDescription": "<TopologyDescription id: 67d2b14e79e6ca23f157491a, topology_type: Single, servers: [<ServerDescription ('3.144.134.141', 27017) server_type: Standalone, rtt: 0.25>]>", "clientId": {"$oid": "67d2b14e79e6ca23f157491a"}}
2025-03-13 15:20:18,446 - pymongo.serverSelection - DEBUG - {"message": "Server selection succeeded", "selector": "Primary()", "operation": "count", "topologyDescription": "<TopologyDescription id: 67d2b14e79e6ca23f157491a, topology_type: Single, servers: [<ServerDescription ('3.144.134.141', 27017) server_type: Standalone, rtt: 0.25>]>", "clientId": {"$oid": "67d2b14e79e6ca23f157491a"}, "serverHost": "3.144.134.141", "serverPort": 27017}
2025-03-13 15:20:18,447 - pymongo.connection - DEBUG - {"clientId": {"$oid": "67d2b14e79e6ca23f157491a"}, "message": "Connection checkout started", "serverHost": "3.144.134.141", "serverPort": 27017}
2025-03-13 15:20:18,447 - pymongo.connection - DEBUG - {"clientId": {"$oid": "67d2b14e79e6ca23f157491a"}, "message": "Connection checked out", "serverHost": "3.144.134.141", "serverPort": 27017, "driverConnectionId": 1, "durationMS": 0.0}
2025-03-13 15:20:18,447 - pymongo.command - DEBUG - {"clientId": {"$oid": "67d2b14e79e6ca23f157491a"}, "message": "Command started", "command": "{\"aggregate\": \"violations\", \"pipeline\": [{\"$match\": {\"$or\": [{\"timestamp\": {\"$gte\": {\"$date\": \"2025-03-13T11:20:18.193Z\"}, \"$lte\": {\"$date\": \"2025-03-13T15:20:18.193Z\"}}}, {\"event_time\": {\"$gte\": {\"$date\": \"2025-03-13T11:20:18.193Z\"}, \"$lte\": {\"$date\": \"2025-03-13T15:20:18.193Z\"}}}, {\"created_at\": {\"$gte\": {\"$date\": \"2025-03-13T11:20:18.193Z\"}, \"$lte\": {\"$date\": \"2025-03-13T15:20:18.193Z\"}}}]}}, {\"$group\": {\"_id\": 1, \"n\": {\"$sum\": 1}}}], \"lsid\": {\"id\": {\"$binary\": {\"base64\": \"0QHHtlwOQRC1RRlE3NX4dA==\", \"subType\": \"04\"}}}, \"$db\": \"opal_server\"}", "commandName": "aggregate", "databaseName": "opal_server", "requestId": 19169, "operationId": 19169, "driverConnectionId": 1, "serverConnectionId": 13048, "serverHost": "3.144.134.141", "serverPort": 27017}
2025-03-13 15:20:18,703 - pymongo.command - DEBUG - {"clientId": {"$oid": "67d2b14e79e6ca23f157491a"}, "message": "Command succeeded", "durationMS": 255.64199999999997, "reply": "{\"cursor\": {\"ns\": \"opal_server.violations\"}, \"ok\": 1.0}", "commandName": "aggregate", "databaseName": "opal_server", "requestId": 19169, "operationId": 19169, "driverConnectionId": 1, "serverConnectionId": 13048, "serverHost": "3.144.134.141", "serverPort": 27017}
2025-03-13 15:20:18,704 - pymongo.connection - DEBUG - {"clientId": {"$oid": "67d2b14e79e6ca23f157491a"}, "message": "Connection checked in", "serverHost": "3.144.134.141", "serverPort": 27017, "driverConnectionId": 1}
2025-03-13 15:20:18,704 - app.db.repositories.data_repository - WARNING - No violations found in any collection
2025-03-13 15:20:18,704 - app.db.repositories.data_repository - DEBUG - Fetching vehicle events from database: opal_server
2025-03-13 15:20:18,704 - app.db.repositories.data_repository - DEBUG - Vehicle events query: {'$or': [{'timestamp': {'$gte': datetime.datetime(2025, 3, 13, 11, 20, 18, 193844), '$lte': datetime.datetime(2025, 3, 13, 15, 20, 18, 193844)}}, {'event_time': {'$gte': datetime.datetime(2025, 3, 13, 11, 20, 18, 193844), '$lte': datetime.datetime(2025, 3, 13, 15, 20, 18, 193844)}}, {'created_at': {'$gte': datetime.datetime(2025, 3, 13, 11, 20, 18, 193844), '$lte': datetime.datetime(2025, 3, 13, 15, 20, 18, 193844)}}]}
2025-03-13 15:20:18,705 - app.db.repositories.data_repository - DEBUG - Time range: {'$gte': datetime.datetime(2025, 3, 13, 11, 20, 18, 193844), '$lte': datetime.datetime(2025, 3, 13, 15, 20, 18, 193844)}
2025-03-13 15:20:18,705 - pymongo.serverSelection - DEBUG - {"message": "Server selection started", "selector": "Primary()", "operation": "listCollections", "topologyDescription": "<TopologyDescription id: 67d2b14e79e6ca23f157491a, topology_type: Single, servers: [<ServerDescription ('3.144.134.141', 27017) server_type: Standalone, rtt: 0.25>]>", "clientId": {"$oid": "67d2b14e79e6ca23f157491a"}}
2025-03-13 15:20:18,705 - pymongo.serverSelection - DEBUG - {"message": "Server selection succeeded", "selector": "Primary()", "operation": "listCollections", "topologyDescription": "<TopologyDescription id: 67d2b14e79e6ca23f157491a, topology_type: Single, servers: [<ServerDescription ('3.144.134.141', 27017) server_type: Standalone, rtt: 0.25>]>", "clientId": {"$oid": "67d2b14e79e6ca23f157491a"}, "serverHost": "3.144.134.141", "serverPort": 27017}
2025-03-13 15:20:18,706 - pymongo.connection - DEBUG - {"clientId": {"$oid": "67d2b14e79e6ca23f157491a"}, "message": "Connection checkout started", "serverHost": "3.144.134.141", "serverPort": 27017}
2025-03-13 15:20:18,706 - pymongo.connection - DEBUG - {"clientId": {"$oid": "67d2b14e79e6ca23f157491a"}, "message": "Connection checked out", "serverHost": "3.144.134.141", "serverPort": 27017, "driverConnectionId": 1, "durationMS": 0.0}
2025-03-13 15:20:18,707 - pymongo.command - DEBUG - {"clientId": {"$oid": "67d2b14e79e6ca23f157491a"}, "message": "Command started", "command": "{\"listCollections\": 1, \"nameOnly\": true, \"lsid\": {\"id\": {\"$binary\": {\"base64\": \"0QHHtlwOQRC1RRlE3NX4dA==\", \"subType\": \"04\"}}}, \"$db\": \"opal_server\"}", "commandName": "listCollections", "databaseName": "opal_server", "requestId": 15724, "operationId": 15724, "driverConnectionId": 1, "serverConnectionId": 13048, "serverHost": "3.144.134.141", "serverPort": 27017}
2025-03-13 15:20:18,953 - pymongo.command - DEBUG - {"clientId": {"$oid": "67d2b14e79e6ca23f157491a"}, "message": "Command succeeded", "durationMS": 245.471, "reply": "{\"cursor\": {\"ns\": \"opal_server.$cmd.listCollections\", \"firstBatch\": [{\"name\": \"rags\", \"type\": \"collection\"}, {\"name\": \"trips\", \"type\": \"collection\"}, {\"name\": \"vehicles\", \"type\": \"collection\"}, {\"name\": \"permissions\", \"type\": \"collection\"}, {\"name\": \"notifications\", \"type\": \"collection\"}, {\"name\": \"crash_events\", \"type\": \"collection\"}, {\"name\": \"violations-x\", \"type\": \"collection\"}, {\"name\": \"drivers\", \"type\": \"collection\"}, {\"name\": \"geofences\", \"type\": \"collection\"}, {\"name\": \"tickets\", \"type\": \"collection\"}, {\"name\": \"vehicleevents\", \"type\": \"collection\"}, {\"name\": \"vendors\", \"type\": \"collection\"}, {\"name\": \"roles\", \"type\": \"collection\"}, {\"name\": \"clients\", \"type\": \"collection\"}, {\"name\": \"vendordevices\", \"type\": \"collection\"}, {\"name\": \"settings\", \"type\": \"collection\"}, {\"name\": \"media\", \"type\": \"collection\"}, {\"name\": \"violation_rules\", \"type\": \"collection\"}, {\"name\": \"violations\", \"type\": \"collection\"}, {\"name\": \"users\", \"type\": \"collection\"}, {\"name\": \"companies\", \"type\": \"coll...", "commandName": "listCollections", "databaseName": "opal_server", "requestId": 15724, "operationId": 15724, "driverConnectionId": 1, "serverConnectionId": 13048, "serverHost": "3.144.134.141", "serverPort": 27017}
2025-03-13 15:20:18,954 - pymongo.connection - DEBUG - {"clientId": {"$oid": "67d2b14e79e6ca23f157491a"}, "message": "Connection checked in", "serverHost": "3.144.134.141", "serverPort": 27017, "driverConnectionId": 1}
2025-03-13 15:20:18,954 - app.db.repositories.data_repository - DEBUG - Available collections: ['rags', 'trips', 'vehicles', 'permissions', 'notifications', 'crash_events', 'violations-x', 'drivers', 'geofences', 'tickets', 'vehicleevents', 'vendors', 'roles', 'clients', 'vendordevices', 'settings', 'media', 'violation_rules', 'violations', 'users', 'companies']
2025-03-13 15:20:18,955 - pymongo.serverSelection - DEBUG - {"message": "Server selection started", "selector": "Primary()", "operation": "find", "topologyDescription": "<TopologyDescription id: 67d2b14e79e6ca23f157491a, topology_type: Single, servers: [<ServerDescription ('3.144.134.141', 27017) server_type: Standalone, rtt: 0.25>]>", "clientId": {"$oid": "67d2b14e79e6ca23f157491a"}}
2025-03-13 15:20:18,955 - pymongo.serverSelection - DEBUG - {"message": "Server selection succeeded", "selector": "Primary()", "operation": "find", "topologyDescription": "<TopologyDescription id: 67d2b14e79e6ca23f157491a, topology_type: Single, servers: [<ServerDescription ('3.144.134.141', 27017) server_type: Standalone, rtt: 0.25>]>", "clientId": {"$oid": "67d2b14e79e6ca23f157491a"}, "serverHost": "3.144.134.141", "serverPort": 27017}
2025-03-13 15:20:18,955 - pymongo.connection - DEBUG - {"clientId": {"$oid": "67d2b14e79e6ca23f157491a"}, "message": "Connection checkout started", "serverHost": "3.144.134.141", "serverPort": 27017}
2025-03-13 15:20:18,956 - pymongo.connection - DEBUG - {"clientId": {"$oid": "67d2b14e79e6ca23f157491a"}, "message": "Connection checked out", "serverHost": "3.144.134.141", "serverPort": 27017, "driverConnectionId": 1, "durationMS": 0.0}
2025-03-13 15:20:18,956 - pymongo.command - DEBUG - {"clientId": {"$oid": "67d2b14e79e6ca23f157491a"}, "message": "Command started", "command": "{\"find\": \"vehicleevents\", \"limit\": 1, \"singleBatch\": true, \"lsid\": {\"id\": {\"$binary\": {\"base64\": \"0QHHtlwOQRC1RRlE3NX4dA==\", \"subType\": \"04\"}}}, \"$db\": \"opal_server\"}", "commandName": "find", "databaseName": "opal_server", "requestId": 11478, "operationId": 11478, "driverConnectionId": 1, "serverConnectionId": 13048, "serverHost": "3.144.134.141", "serverPort": 27017}
2025-03-13 15:20:19,204 - pymongo.command - DEBUG - {"clientId": {"$oid": "67d2b14e79e6ca23f157491a"}, "message": "Command succeeded", "durationMS": 248.359, "reply": "{\"cursor\": {\"firstBatch\": [{\"_id\": {\"$oid\": \"67441bdeb231195485d25272\"}, \"vendor\": {\"$oid\": \"6703ad7f70ba41e9473dd8e7\"}, \"deviceTime\": {\"$date\": \"2024-11-22T12:48:47Z\"}, \"serverTime\": {\"$date\": \"2024-11-22T12:48:47.958Z\"}, \"location\": {\"latitude\": 18.542048, \"longitude\": 55.852535, \"altitude\": 240}, \"ignition\": true, \"speed\": 68, \"heading\": 84, \"event\": {\"type\": \"DISTANCE_TRAVEL\", \"name\": \"Distance Traveled\"}, \"odometer\": 85198.52713696871, \"satellites\": 26, \"diff\": {\"distanceMeter\": 226.15911957109347, \"durationMillis\": 11000, \"ignitionOn\": true, \"moving\": true}, \"vehicle\": {\"license\": \"1765HW\", \"uuid\": \"f59c5202-eda5-4348-9d66-ec14718f076b\"}, \"device\": {\"imei\": \"358925430754727\"}, \"hdop\": 25.5, \"positionAccuracy\": 37.507210845177696, \"batteryVoltage\": 4.026, \"createdAt\": {\"$date\": \"2024-11-25T06:40:30.615Z\"}, \"updatedAt\": {\"$date\": \"2024-11-25T06:40:30.615Z\"}}], \"ns\": \"opal_server.vehicleevents\"}, \"ok\": 1.0}", "commandName": "find", "databaseName": "opal_server", "requestId": 11478, "operationId": 11478, "driverConnectionId": 1, "serverConnectionId": 13048, "serverHost": "3.144.134.141", "serverPort": 27017}
2025-03-13 15:20:19,205 - pymongo.connection - DEBUG - {"clientId": {"$oid": "67d2b14e79e6ca23f157491a"}, "message": "Connection checked in", "serverHost": "3.144.134.141", "serverPort": 27017, "driverConnectionId": 1}
2025-03-13 15:20:19,206 - app.db.repositories.data_repository - DEBUG - Sample document fields: ['_id', 'vendor', 'deviceTime', 'serverTime', 'location', 'ignition', 'speed', 'heading', 'event', 'odometer', 'satellites', 'wrongOrdered', 'diff', 'vehicle', 'device', 'hdop', 'positionAccuracy', 'batteryVoltage', '__v', 'createdAt', 'updatedAt']
2025-03-13 15:20:19,206 - pymongo.serverSelection - DEBUG - {"message": "Server selection started", "selector": "Primary()", "operation": "count", "topologyDescription": "<TopologyDescription id: 67d2b14e79e6ca23f157491a, topology_type: Single, servers: [<ServerDescription ('3.144.134.141', 27017) server_type: Standalone, rtt: 0.25>]>", "clientId": {"$oid": "67d2b14e79e6ca23f157491a"}}
2025-03-13 15:20:19,207 - pymongo.serverSelection - DEBUG - {"message": "Server selection succeeded", "selector": "Primary()", "operation": "count", "topologyDescription": "<TopologyDescription id: 67d2b14e79e6ca23f157491a, topology_type: Single, servers: [<ServerDescription ('3.144.134.141', 27017) server_type: Standalone, rtt: 0.25>]>", "clientId": {"$oid": "67d2b14e79e6ca23f157491a"}, "serverHost": "3.144.134.141", "serverPort": 27017}
2025-03-13 15:20:19,207 - pymongo.connection - DEBUG - {"clientId": {"$oid": "67d2b14e79e6ca23f157491a"}, "message": "Connection checkout started", "serverHost": "3.144.134.141", "serverPort": 27017}
2025-03-13 15:20:19,208 - pymongo.connection - DEBUG - {"clientId": {"$oid": "67d2b14e79e6ca23f157491a"}, "message": "Connection checked out", "serverHost": "3.144.134.141", "serverPort": 27017, "driverConnectionId": 1, "durationMS": 0.0}
2025-03-13 15:20:19,208 - pymongo.command - DEBUG - {"clientId": {"$oid": "67d2b14e79e6ca23f157491a"}, "message": "Command started", "command": "{\"aggregate\": \"vehicleevents\", \"pipeline\": [{\"$match\": {\"$or\": [{\"timestamp\": {\"$gte\": {\"$date\": \"2025-03-13T11:20:18.193Z\"}, \"$lte\": {\"$date\": \"2025-03-13T15:20:18.193Z\"}}}, {\"event_time\": {\"$gte\": {\"$date\": \"2025-03-13T11:20:18.193Z\"}, \"$lte\": {\"$date\": \"2025-03-13T15:20:18.193Z\"}}}, {\"created_at\": {\"$gte\": {\"$date\": \"2025-03-13T11:20:18.193Z\"}, \"$lte\": {\"$date\": \"2025-03-13T15:20:18.193Z\"}}}]}}, {\"$group\": {\"_id\": 1, \"n\": {\"$sum\": 1}}}], \"lsid\": {\"id\": {\"$binary\": {\"base64\": \"0QHHtlwOQRC1RRlE3NX4dA==\", \"subType\": \"04\"}}}, \"$db\": \"opal_server\"}", "commandName": "aggregate", "databaseName": "opal_server", "requestId": 29358, "operationId": 29358, "driverConnectionId": 1, "serverConnectionId": 13048, "serverHost": "3.144.134.141", "serverPort": 27017}
2025-03-13 15:20:19,740 - pymongo.topology - DEBUG - {"topologyId": {"$oid": "67d2b14e79e6ca23f157491a"}, "driverConnectionId": 1, "serverConnectionId": 13047, "serverHost": "3.144.134.141", "serverPort": 27017, "awaited": true, "durationMS": 10000.0, "reply": "{\"isWritablePrimary\": true, \"topologyVersion\": {\"processId\": {\"$oid\": \"67b7e5814f77c1a87c56d054\"}}, \"maxBsonObjectSize\": 16777216, \"maxMessageSizeBytes\": 48000000, \"maxWriteBatchSize\": 100000, \"localTime\": {\"$date\": \"2025-03-13T10:20:19.756Z\"}, \"logicalSessionTimeoutMinutes\": 30, \"connectionId\": 13047, \"maxWireVersion\": 25, \"ok\": 1.0}", "message": "Server heartbeat succeeded"}
2025-03-13 15:20:19,741 - pymongo.topology - DEBUG - {"topologyId": {"$oid": "67d2b14e79e6ca23f157491a"}, "driverConnectionId": 1, "serverConnectionId": 13047, "serverHost": "3.144.134.141", "serverPort": 27017, "awaited": true, "message": "Server heartbeat started"}
2025-03-13 15:20:25,507 - pymongo.command - DEBUG - {"clientId": {"$oid": "67d2b14e79e6ca23f157491a"}, "message": "Command succeeded", "durationMS": 6298.478, "reply": "{\"cursor\": {\"ns\": \"opal_server.vehicleevents\"}, \"ok\": 1.0}", "commandName": "aggregate", "databaseName": "opal_server", "requestId": 29358, "operationId": 29358, "driverConnectionId": 1, "serverConnectionId": 13048, "serverHost": "3.144.134.141", "serverPort": 27017}
2025-03-13 15:20:25,507 - pymongo.connection - DEBUG - {"clientId": {"$oid": "67d2b14e79e6ca23f157491a"}, "message": "Connection checked in", "serverHost": "3.144.134.141", "serverPort": 27017, "driverConnectionId": 1}
2025-03-13 15:20:25,508 - app.db.repositories.data_repository - INFO - Found 0 matching vehicle events
2025-03-13 15:20:25,508 - pymongo.serverSelection - DEBUG - {"message": "Server selection started", "selector": "Primary()", "operation": "find", "topologyDescription": "<TopologyDescription id: 67d2b14e79e6ca23f157491a, topology_type: Single, servers: [<ServerDescription ('3.144.134.141', 27017) server_type: Standalone, rtt: 0.25>]>", "clientId": {"$oid": "67d2b14e79e6ca23f157491a"}}
2025-03-13 15:20:25,509 - pymongo.serverSelection - DEBUG - {"message": "Server selection succeeded", "selector": "Primary()", "operation": "find", "topologyDescription": "<TopologyDescription id: 67d2b14e79e6ca23f157491a, topology_type: Single, servers: [<ServerDescription ('3.144.134.141', 27017) server_type: Standalone, rtt: 0.25>]>", "clientId": {"$oid": "67d2b14e79e6ca23f157491a"}, "serverHost": "3.144.134.141", "serverPort": 27017}
2025-03-13 15:20:25,509 - pymongo.connection - DEBUG - {"clientId": {"$oid": "67d2b14e79e6ca23f157491a"}, "message": "Connection checkout started", "serverHost": "3.144.134.141", "serverPort": 27017}
2025-03-13 15:20:25,509 - pymongo.connection - DEBUG - {"clientId": {"$oid": "67d2b14e79e6ca23f157491a"}, "message": "Connection checked out", "serverHost": "3.144.134.141", "serverPort": 27017, "driverConnectionId": 1, "durationMS": 0.0}
2025-03-13 15:20:25,509 - pymongo.command - DEBUG - {"clientId": {"$oid": "67d2b14e79e6ca23f157491a"}, "message": "Command started", "command": "{\"find\": \"vehicleevents\", \"filter\": {\"$or\": [{\"timestamp\": {\"$gte\": {\"$date\": \"2025-03-13T11:20:18.193Z\"}, \"$lte\": {\"$date\": \"2025-03-13T15:20:18.193Z\"}}}, {\"event_time\": {\"$gte\": {\"$date\": \"2025-03-13T11:20:18.193Z\"}, \"$lte\": {\"$date\": \"2025-03-13T15:20:18.193Z\"}}}, {\"created_at\": {\"$gte\": {\"$date\": \"2025-03-13T11:20:18.193Z\"}, \"$lte\": {\"$date\": \"2025-03-13T15:20:18.193Z\"}}}]}, \"limit\": 1000, \"lsid\": {\"id\": {\"$binary\": {\"base64\": \"0QHHtlwOQRC1RRlE3NX4dA==\", \"subType\": \"04\"}}}, \"$db\": \"opal_server\"}", "commandName": "find", "databaseName": "opal_server", "requestId": 26962, "operationId": 26962, "driverConnectionId": 1, "serverConnectionId": 13048, "serverHost": "3.144.134.141", "serverPort": 27017}
2025-03-13 15:20:29,751 - pymongo.topology - DEBUG - {"topologyId": {"$oid": "67d2b14e79e6ca23f157491a"}, "driverConnectionId": 1, "serverConnectionId": 13047, "serverHost": "3.144.134.141", "serverPort": 27017, "awaited": true, "durationMS": 10000.0, "reply": "{\"isWritablePrimary\": true, \"topologyVersion\": {\"processId\": {\"$oid\": \"67b7e5814f77c1a87c56d054\"}}, \"maxBsonObjectSize\": 16777216, \"maxMessageSizeBytes\": 48000000, \"maxWriteBatchSize\": 100000, \"localTime\": {\"$date\": \"2025-03-13T10:20:29.767Z\"}, \"logicalSessionTimeoutMinutes\": 30, \"connectionId\": 13047, \"maxWireVersion\": 25, \"ok\": 1.0}", "message": "Server heartbeat succeeded"}
2025-03-13 15:20:29,752 - pymongo.topology - DEBUG - {"topologyId": {"$oid": "67d2b14e79e6ca23f157491a"}, "driverConnectionId": 1, "serverConnectionId": 13047, "serverHost": "3.144.134.141", "serverPort": 27017, "awaited": true, "message": "Server heartbeat started"}
2025-03-13 15:20:32,424 - pymongo.command - DEBUG - {"clientId": {"$oid": "67d2b14e79e6ca23f157491a"}, "message": "Command succeeded", "durationMS": 6914.676, "reply": "{\"cursor\": {\"ns\": \"opal_server.vehicleevents\"}, \"ok\": 1.0}", "commandName": "find", "databaseName": "opal_server", "requestId": 26962, "operationId": 26962, "driverConnectionId": 1, "serverConnectionId": 13048, "serverHost": "3.144.134.141", "serverPort": 27017}
2025-03-13 15:20:32,425 - pymongo.connection - DEBUG - {"clientId": {"$oid": "67d2b14e79e6ca23f157491a"}, "message": "Connection checked in", "serverHost": "3.144.134.141", "serverPort": 27017, "driverConnectionId": 1}
2025-03-13 15:20:32,425 - app.db.repositories.data_repository - DEBUG - Retrieved 0 vehicle events
2025-03-13 15:20:32,425 - app.services.predictive_analytics - ERROR - Error in perform_real_time_analysis: cannot access local variable 'time_diff' where it is not associated with a value
Traceback (most recent call last):
  File "E:\Office\Opal\deep reports\app\services\predictive_analytics.py", line 476, in perform_real_time_analysis
    if time_diff.days > 0:
       ^^^^^^^^^
UnboundLocalError: cannot access local variable 'time_diff' where it is not associated with a value
2025-03-13 15:20:32,426 - app.api.endpoints.analytics - ERROR - Error performing real-time analysis: cannot access local variable 'time_diff' where it is not associated with a value
Traceback (most recent call last):
  File "E:\Office\Opal\deep reports\app\api\endpoints\analytics.py", line 60, in get_real_time_analysis
    data = await perform_real_time_analysis(timeframe=timeframe, driver_uuid=driver_uuid)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "E:\Office\Opal\deep reports\app\services\predictive_analytics.py", line 476, in perform_real_time_analysis
    if time_diff.days > 0:
       ^^^^^^^^^
UnboundLocalError: cannot access local variable 'time_diff' where it is not associated with a value
2025-03-13 15:20:39,752 - pymongo.topology - DEBUG - {"topologyId": {"$oid": "67d2b14e79e6ca23f157491a"}, "driverConnectionId": 1, "serverConnectionId": 13047, "serverHost": "3.144.134.141", "serverPort": 27017, "awaited": true, "durationMS": 10000.0, "reply": "{\"isWritablePrimary\": true, \"topologyVersion\": {\"processId\": {\"$oid\": \"67b7e5814f77c1a87c56d054\"}}, \"maxBsonObjectSize\": 16777216, \"maxMessageSizeBytes\": 48000000, \"maxWriteBatchSize\": 100000, \"localTime\": {\"$date\": \"2025-03-13T10:20:39.768Z\"}, \"logicalSessionTimeoutMinutes\": 30, \"connectionId\": 13047, \"maxWireVersion\": 25, \"ok\": 1.0}", "message": "Server heartbeat succeeded"}
2025-03-13 15:20:39,753 - pymongo.topology - DEBUG - {"topologyId": {"$oid": "67d2b14e79e6ca23f157491a"}, "driverConnectionId": 1, "serverConnectionId": 13047, "serverHost": "3.144.134.141", "serverPort": 27017, "awaited": true, "message": "Server heartbeat started"}
2025-03-13 15:20:49,760 - pymongo.topology - DEBUG - {"topologyId": {"$oid": "67d2b14e79e6ca23f157491a"}, "driverConnectionId": 1, "serverConnectionId": 13047, "serverHost": "3.144.134.141", "serverPort": 27017, "awaited": true, "durationMS": 10015.999999999622, "reply": "{\"isWritablePrimary\": true, \"topologyVersion\": {\"processId\": {\"$oid\": \"67b7e5814f77c1a87c56d054\"}}, \"maxBsonObjectSize\": 16777216, \"maxMessageSizeBytes\": 48000000, \"maxWriteBatchSize\": 100000, \"localTime\": {\"$date\": \"2025-03-13T10:20:49.775Z\"}, \"logicalSessionTimeoutMinutes\": 30, \"connectionId\": 13047, \"maxWireVersion\": 25, \"ok\": 1.0}", "message": "Server heartbeat succeeded"}
2025-03-13 15:20:49,760 - pymongo.topology - DEBUG - {"topologyId": {"$oid": "67d2b14e79e6ca23f157491a"}, "driverConnectionId": 1, "serverConnectionId": 13047, "serverHost": "3.144.134.141", "serverPort": 27017, "awaited": true, "message": "Server heartbeat started"}
2025-03-13 15:20:59,769 - pymongo.topology - DEBUG - {"topologyId": {"$oid": "67d2b14e79e6ca23f157491a"}, "driverConnectionId": 1, "serverConnectionId": 13047, "serverHost": "3.144.134.141", "serverPort": 27017, "awaited": true, "durationMS": 10000.0, "reply": "{\"isWritablePrimary\": true, \"topologyVersion\": {\"processId\": {\"$oid\": \"67b7e5814f77c1a87c56d054\"}}, \"maxBsonObjectSize\": 16777216, \"maxMessageSizeBytes\": 48000000, \"maxWriteBatchSize\": 100000, \"localTime\": {\"$date\": \"2025-03-13T10:20:59.785Z\"}, \"logicalSessionTimeoutMinutes\": 30, \"connectionId\": 13047, \"maxWireVersion\": 25, \"ok\": 1.0}", "message": "Server heartbeat succeeded"}
2025-03-13 15:20:59,769 - pymongo.topology - DEBUG - {"topologyId": {"$oid": "67d2b14e79e6ca23f157491a"}, "driverConnectionId": 1, "serverConnectionId": 13047, "serverHost": "3.144.134.141", "serverPort": 27017, "awaited": true, "message": "Server heartbeat started"}
2025-03-13 15:21:09,771 - pymongo.topology - DEBUG - {"topologyId": {"$oid": "67d2b14e79e6ca23f157491a"}, "driverConnectionId": 1, "serverConnectionId": 13047, "serverHost": "3.144.134.141", "serverPort": 27017, "awaited": true, "durationMS": 10000.0, "reply": "{\"isWritablePrimary\": true, \"topologyVersion\": {\"processId\": {\"$oid\": \"67b7e5814f77c1a87c56d054\"}}, \"maxBsonObjectSize\": 16777216, \"maxMessageSizeBytes\": 48000000, \"maxWriteBatchSize\": 100000, \"localTime\": {\"$date\": \"2025-03-13T10:21:09.787Z\"}, \"logicalSessionTimeoutMinutes\": 30, \"connectionId\": 13047, \"maxWireVersion\": 25, \"ok\": 1.0}", "message": "Server heartbeat succeeded"}
2025-03-13 15:21:09,771 - pymongo.topology - DEBUG - {"topologyId": {"$oid": "67d2b14e79e6ca23f157491a"}, "driverConnectionId": 1, "serverConnectionId": 13047, "serverHost": "3.144.134.141", "serverPort": 27017, "awaited": true, "message": "Server heartbeat started"}
2025-03-13 15:21:19,771 - pymongo.topology - DEBUG - {"topologyId": {"$oid": "67d2b14e79e6ca23f157491a"}, "driverConnectionId": 1, "serverConnectionId": 13047, "serverHost": "3.144.134.141", "serverPort": 27017, "awaited": true, "durationMS": 10000.0, "reply": "{\"isWritablePrimary\": true, \"topologyVersion\": {\"processId\": {\"$oid\": \"67b7e5814f77c1a87c56d054\"}}, \"maxBsonObjectSize\": 16777216, \"maxMessageSizeBytes\": 48000000, \"maxWriteBatchSize\": 100000, \"localTime\": {\"$date\": \"2025-03-13T10:21:19.788Z\"}, \"logicalSessionTimeoutMinutes\": 30, \"connectionId\": 13047, \"maxWireVersion\": 25, \"ok\": 1.0}", "message": "Server heartbeat succeeded"}
2025-03-13 15:21:19,771 - pymongo.topology - DEBUG - {"topologyId": {"$oid": "67d2b14e79e6ca23f157491a"}, "driverConnectionId": 1, "serverConnectionId": 13047, "serverHost": "3.144.134.141", "serverPort": 27017, "awaited": true, "message": "Server heartbeat started"}
2025-03-13 15:21:29,772 - pymongo.topology - DEBUG - {"topologyId": {"$oid": "67d2b14e79e6ca23f157491a"}, "driverConnectionId": 1, "serverConnectionId": 13047, "serverHost": "3.144.134.141", "serverPort": 27017, "awaited": true, "durationMS": 10014.999999999418, "reply": "{\"isWritablePrimary\": true, \"topologyVersion\": {\"processId\": {\"$oid\": \"67b7e5814f77c1a87c56d054\"}}, \"maxBsonObjectSize\": 16777216, \"maxMessageSizeBytes\": 48000000, \"maxWriteBatchSize\": 100000, \"localTime\": {\"$date\": \"2025-03-13T10:21:29.789Z\"}, \"logicalSessionTimeoutMinutes\": 30, \"connectionId\": 13047, \"maxWireVersion\": 25, \"ok\": 1.0}", "message": "Server heartbeat succeeded"}
2025-03-13 15:21:29,773 - pymongo.topology - DEBUG - {"topologyId": {"$oid": "67d2b14e79e6ca23f157491a"}, "driverConnectionId": 1, "serverConnectionId": 13047, "serverHost": "3.144.134.141", "serverPort": 27017, "awaited": true, "message": "Server heartbeat started"}
2025-03-13 15:21:39,773 - pymongo.topology - DEBUG - {"topologyId": {"$oid": "67d2b14e79e6ca23f157491a"}, "driverConnectionId": 1, "serverConnectionId": 13047, "serverHost": "3.144.134.141", "serverPort": 27017, "awaited": true, "durationMS": 10000.0, "reply": "{\"isWritablePrimary\": true, \"topologyVersion\": {\"processId\": {\"$oid\": \"67b7e5814f77c1a87c56d054\"}}, \"maxBsonObjectSize\": 16777216, \"maxMessageSizeBytes\": 48000000, \"maxWriteBatchSize\": 100000, \"localTime\": {\"$date\": \"2025-03-13T10:21:39.790Z\"}, \"logicalSessionTimeoutMinutes\": 30, \"connectionId\": 13047, \"maxWireVersion\": 25, \"ok\": 1.0}", "message": "Server heartbeat succeeded"}
2025-03-13 15:21:39,773 - pymongo.topology - DEBUG - {"topologyId": {"$oid": "67d2b14e79e6ca23f157491a"}, "driverConnectionId": 1, "serverConnectionId": 13047, "serverHost": "3.144.134.141", "serverPort": 27017, "awaited": true, "message": "Server heartbeat started"}
2025-03-13 15:21:49,775 - pymongo.topology - DEBUG - {"topologyId": {"$oid": "67d2b14e79e6ca23f157491a"}, "driverConnectionId": 1, "serverConnectionId": 13047, "serverHost": "3.144.134.141", "serverPort": 27017, "awaited": true, "durationMS": 10000.0, "reply": "{\"isWritablePrimary\": true, \"topologyVersion\": {\"processId\": {\"$oid\": \"67b7e5814f77c1a87c56d054\"}}, \"maxBsonObjectSize\": 16777216, \"maxMessageSizeBytes\": 48000000, \"maxWriteBatchSize\": 100000, \"localTime\": {\"$date\": \"2025-03-13T10:21:49.792Z\"}, \"logicalSessionTimeoutMinutes\": 30, \"connectionId\": 13047, \"maxWireVersion\": 25, \"ok\": 1.0}", "message": "Server heartbeat succeeded"}
2025-03-13 15:21:49,776 - pymongo.topology - DEBUG - {"topologyId": {"$oid": "67d2b14e79e6ca23f157491a"}, "driverConnectionId": 1, "serverConnectionId": 13047, "serverHost": "3.144.134.141", "serverPort": 27017, "awaited": true, "message": "Server heartbeat started"}
2025-03-13 15:21:59,784 - pymongo.topology - DEBUG - {"topologyId": {"$oid": "67d2b14e79e6ca23f157491a"}, "driverConnectionId": 1, "serverConnectionId": 13047, "serverHost": "3.144.134.141", "serverPort": 27017, "awaited": true, "durationMS": 10000.0, "reply": "{\"isWritablePrimary\": true, \"topologyVersion\": {\"processId\": {\"$oid\": \"67b7e5814f77c1a87c56d054\"}}, \"maxBsonObjectSize\": 16777216, \"maxMessageSizeBytes\": 48000000, \"maxWriteBatchSize\": 100000, \"localTime\": {\"$date\": \"2025-03-13T10:21:59.801Z\"}, \"logicalSessionTimeoutMinutes\": 30, \"connectionId\": 13047, \"maxWireVersion\": 25, \"ok\": 1.0}", "message": "Server heartbeat succeeded"}
2025-03-13 15:21:59,785 - pymongo.topology - DEBUG - {"topologyId": {"$oid": "67d2b14e79e6ca23f157491a"}, "driverConnectionId": 1, "serverConnectionId": 13047, "serverHost": "3.144.134.141", "serverPort": 27017, "awaited": true, "message": "Server heartbeat started"}
2025-03-13 15:22:09,784 - pymongo.topology - DEBUG - {"topologyId": {"$oid": "67d2b14e79e6ca23f157491a"}, "driverConnectionId": 1, "serverConnectionId": 13047, "serverHost": "3.144.134.141", "serverPort": 27017, "awaited": true, "durationMS": 10000.0, "reply": "{\"isWritablePrimary\": true, \"topologyVersion\": {\"processId\": {\"$oid\": \"67b7e5814f77c1a87c56d054\"}}, \"maxBsonObjectSize\": 16777216, \"maxMessageSizeBytes\": 48000000, \"maxWriteBatchSize\": 100000, \"localTime\": {\"$date\": \"2025-03-13T10:22:09.802Z\"}, \"logicalSessionTimeoutMinutes\": 30, \"connectionId\": 13047, \"maxWireVersion\": 25, \"ok\": 1.0}", "message": "Server heartbeat succeeded"}
2025-03-13 15:22:09,786 - pymongo.topology - DEBUG - {"topologyId": {"$oid": "67d2b14e79e6ca23f157491a"}, "driverConnectionId": 1, "serverConnectionId": 13047, "serverHost": "3.144.134.141", "serverPort": 27017, "awaited": true, "message": "Server heartbeat started"}
2025-03-13 15:22:18,530 - numexpr.utils - INFO - Note: NumExpr detected 12 cores but "NUMEXPR_MAX_THREADS" not set, so enforcing safe limit of 8.
2025-03-13 15:22:18,531 - numexpr.utils - INFO - NumExpr defaulting to 8 threads.
2025-03-13 15:22:19,800 - matplotlib - DEBUG - matplotlib data path: C:\Users\msameerakram\AppData\Local\anaconda3\Lib\site-packages\matplotlib\mpl-data
2025-03-13 15:22:19,807 - matplotlib - DEBUG - CONFIGDIR=C:\Users\msameerakram\.matplotlib
2025-03-13 15:22:19,809 - matplotlib - DEBUG - interactive is False
2025-03-13 15:22:19,809 - matplotlib - DEBUG - platform is win32
2025-03-13 15:22:19,871 - matplotlib - DEBUG - CACHEDIR=C:\Users\msameerakram\.matplotlib
2025-03-13 15:22:19,874 - matplotlib.font_manager - DEBUG - Using fontManager instance from C:\Users\msameerakram\.matplotlib\fontlist-v390.json
2025-03-13 15:22:22,365 - numexpr.utils - INFO - Note: NumExpr detected 12 cores but "NUMEXPR_MAX_THREADS" not set, so enforcing safe limit of 8.
2025-03-13 15:22:22,367 - numexpr.utils - INFO - NumExpr defaulting to 8 threads.
2025-03-13 15:22:23,657 - matplotlib - DEBUG - matplotlib data path: C:\Users\msameerakram\AppData\Local\anaconda3\Lib\site-packages\matplotlib\mpl-data
2025-03-13 15:22:23,662 - matplotlib - DEBUG - CONFIGDIR=C:\Users\msameerakram\.matplotlib
2025-03-13 15:22:23,664 - matplotlib - DEBUG - interactive is False
2025-03-13 15:22:23,664 - matplotlib - DEBUG - platform is win32
2025-03-13 15:22:23,723 - matplotlib - DEBUG - CACHEDIR=C:\Users\msameerakram\.matplotlib
2025-03-13 15:22:23,727 - matplotlib.font_manager - DEBUG - Using fontManager instance from C:\Users\msameerakram\.matplotlib\fontlist-v390.json
2025-03-13 15:22:25,157 - asyncio - DEBUG - Using selector: SelectSelector
2025-03-13 15:22:25,208 - pymongo.topology - DEBUG - {"topologyId": {"$oid": "67d2b1e1f4015777fa0580a9"}, "message": "Starting topology monitoring"}
2025-03-13 15:22:25,208 - pymongo.topology - DEBUG - {"topologyId": {"$oid": "67d2b1e1f4015777fa0580a9"}, "previousDescription": "<TopologyDescription id: 67d2b1e1f4015777fa0580a9, topology_type: Unknown, servers: []>", "newDescription": "<TopologyDescription id: 67d2b1e1f4015777fa0580a9, topology_type: Unknown, servers: [<ServerDescription ('3.144.134.141', 27017) server_type: Unknown, rtt: None>]>", "message": "Topology description changed"}
2025-03-13 15:22:25,209 - pymongo.topology - DEBUG - {"topologyId": {"$oid": "67d2b1e1f4015777fa0580a9"}, "serverHost": "3.144.134.141", "serverPort": 27017, "message": "Starting server monitoring"}
2025-03-13 15:22:25,210 - pymongo.connection - DEBUG - {"clientId": {"$oid": "67d2b1e1f4015777fa0580a9"}, "message": "Connection pool created", "serverHost": "3.144.134.141", "serverPort": 27017}
2025-03-13 15:22:25,210 - pymongo.serverSelection - DEBUG - {"message": "Server selection started", "selector": "Primary()", "operation": "ping", "topologyDescription": "<TopologyDescription id: 67d2b1e1f4015777fa0580a9, topology_type: Unknown, servers: [<ServerDescription ('3.144.134.141', 27017) server_type: Unknown, rtt: None>]>", "clientId": {"$oid": "67d2b1e1f4015777fa0580a9"}}
2025-03-13 15:22:25,211 - pymongo.serverSelection - DEBUG - {"message": "Waiting for suitable server to become available", "selector": "Primary()", "operation": "ping", "topologyDescription": "<TopologyDescription id: 67d2b1e1f4015777fa0580a9, topology_type: Unknown, servers: [<ServerDescription ('3.144.134.141', 27017) server_type: Unknown, rtt: None>]>", "clientId": {"$oid": "67d2b1e1f4015777fa0580a9"}, "remainingTimeMS": 30}
2025-03-13 15:22:25,474 - pymongo.topology - DEBUG - {"topologyId": {"$oid": "67d2b1e1f4015777fa0580a9"}, "driverConnectionId": 1, "serverHost": "3.144.134.141", "serverPort": 27017, "awaited": false, "message": "Server heartbeat started"}
2025-03-13 15:22:25,724 - pymongo.topology - DEBUG - {"topologyId": {"$oid": "67d2b1e1f4015777fa0580a9"}, "driverConnectionId": 1, "serverConnectionId": 13050, "serverHost": "3.144.134.141", "serverPort": 27017, "awaited": false, "durationMS": 250.0, "reply": "{\"helloOk\": true, \"ismaster\": true, \"topologyVersion\": {\"processId\": {\"$oid\": \"67b7e5814f77c1a87c56d054\"}}, \"maxBsonObjectSize\": 16777216, \"maxMessageSizeBytes\": 48000000, \"maxWriteBatchSize\": 100000, \"localTime\": {\"$date\": \"2025-03-13T10:22:25.740Z\"}, \"logicalSessionTimeoutMinutes\": 30, \"connectionId\": 13050, \"maxWireVersion\": 25, \"ok\": 1.0}", "message": "Server heartbeat succeeded"}
2025-03-13 15:22:25,724 - pymongo.connection - DEBUG - {"clientId": {"$oid": "67d2b1e1f4015777fa0580a9"}, "message": "Connection pool ready", "serverHost": "3.144.134.141", "serverPort": 27017}
2025-03-13 15:22:25,725 - pymongo.topology - DEBUG - {"topologyId": {"$oid": "67d2b1e1f4015777fa0580a9"}, "previousDescription": "<TopologyDescription id: 67d2b1e1f4015777fa0580a9, topology_type: Unknown, servers: [<ServerDescription ('3.144.134.141', 27017) server_type: Unknown, rtt: None>]>", "newDescription": "<TopologyDescription id: 67d2b1e1f4015777fa0580a9, topology_type: Single, servers: [<ServerDescription ('3.144.134.141', 27017) server_type: Standalone, rtt: 0.25>]>", "message": "Topology description changed"}
2025-03-13 15:22:25,725 - pymongo.serverSelection - DEBUG - {"message": "Server selection succeeded", "selector": "Primary()", "operation": "ping", "topologyDescription": "<TopologyDescription id: 67d2b1e1f4015777fa0580a9, topology_type: Single, servers: [<ServerDescription ('3.144.134.141', 27017) server_type: Standalone, rtt: 0.25>]>", "clientId": {"$oid": "67d2b1e1f4015777fa0580a9"}, "serverHost": "3.144.134.141", "serverPort": 27017}
2025-03-13 15:22:25,726 - pymongo.topology - DEBUG - {"topologyId": {"$oid": "67d2b1e1f4015777fa0580a9"}, "driverConnectionId": 1, "serverConnectionId": 13050, "serverHost": "3.144.134.141", "serverPort": 27017, "awaited": true, "message": "Server heartbeat started"}
2025-03-13 15:22:25,726 - pymongo.connection - DEBUG - {"clientId": {"$oid": "67d2b1e1f4015777fa0580a9"}, "message": "Connection checkout started", "serverHost": "3.144.134.141", "serverPort": 27017}
2025-03-13 15:22:25,727 - pymongo.connection - DEBUG - {"clientId": {"$oid": "67d2b1e1f4015777fa0580a9"}, "message": "Connection created", "serverHost": "3.144.134.141", "serverPort": 27017, "driverConnectionId": 1}
2025-03-13 15:22:26,491 - pymongo.connection - DEBUG - {"clientId": {"$oid": "67d2b1e1f4015777fa0580a9"}, "message": "Connection ready", "serverHost": "3.144.134.141", "serverPort": 27017, "driverConnectionId": 1, "durationMS": 0.5159999999996217}
2025-03-13 15:22:26,491 - pymongo.connection - DEBUG - {"clientId": {"$oid": "67d2b1e1f4015777fa0580a9"}, "message": "Connection checked out", "serverHost": "3.144.134.141", "serverPort": 27017, "driverConnectionId": 1, "durationMS": 0.7659999999996217}
2025-03-13 15:22:26,492 - pymongo.command - DEBUG - {"clientId": {"$oid": "67d2b1e1f4015777fa0580a9"}, "message": "Command started", "command": "{\"ping\": 1, \"lsid\": {\"id\": {\"$binary\": {\"base64\": \"SydOe269RsexkVWOgQEdUA==\", \"subType\": \"04\"}}}, \"$db\": \"opal_server\"}", "commandName": "ping", "databaseName": "opal_server", "requestId": 6334, "operationId": 6334, "driverConnectionId": 1, "serverConnectionId": 13052, "serverHost": "3.144.134.141", "serverPort": 27017}
2025-03-13 15:22:26,738 - pymongo.command - DEBUG - {"clientId": {"$oid": "67d2b1e1f4015777fa0580a9"}, "message": "Command succeeded", "durationMS": 246.0, "reply": "{\"ok\": 1.0}", "commandName": "ping", "databaseName": "opal_server", "requestId": 6334, "operationId": 6334, "driverConnectionId": 1, "serverConnectionId": 13052, "serverHost": "3.144.134.141", "serverPort": 27017}
2025-03-13 15:22:26,739 - pymongo.connection - DEBUG - {"clientId": {"$oid": "67d2b1e1f4015777fa0580a9"}, "message": "Connection checked in", "serverHost": "3.144.134.141", "serverPort": 27017, "driverConnectionId": 1}
2025-03-13 15:22:31,323 - app.api.endpoints.analytics - DEBUG - Starting real-time analysis request - timeframe: 4h, driver_uuid: None
2025-03-13 15:22:31,323 - app.api.endpoints.analytics - INFO - Fetching data for time window: 4h, driver: all drivers
2025-03-13 15:22:31,324 - app.services.predictive_analytics - DEBUG - Analyzing time window from 2025-03-13 11:22:31.324451 to 2025-03-13 15:22:31.324451
2025-03-13 15:22:31,324 - app.services.predictive_analytics - DEBUG - Time window: 4.0 hours
2025-03-13 15:22:31,324 - app.db.repositories.data_repository - DEBUG - Connected to database: opal_server
2025-03-13 15:22:31,324 - app.db.repositories.data_repository - DEBUG - Violations query: {'$or': [{'timestamp': {'$gte': datetime.datetime(2025, 3, 13, 11, 22, 31, 324451), '$lte': datetime.datetime(2025, 3, 13, 15, 22, 31, 324451)}}, {'event_time': {'$gte': datetime.datetime(2025, 3, 13, 11, 22, 31, 324451), '$lte': datetime.datetime(2025, 3, 13, 15, 22, 31, 324451)}}, {'created_at': {'$gte': datetime.datetime(2025, 3, 13, 11, 22, 31, 324451), '$lte': datetime.datetime(2025, 3, 13, 15, 22, 31, 324451)}}]}
2025-03-13 15:22:31,325 - app.db.repositories.data_repository - DEBUG - Using database: opal_server
2025-03-13 15:22:31,325 - pymongo.serverSelection - DEBUG - {"message": "Server selection started", "selector": "Primary()", "operation": "listCollections", "topologyDescription": "<TopologyDescription id: 67d2b1e1f4015777fa0580a9, topology_type: Single, servers: [<ServerDescription ('3.144.134.141', 27017) server_type: Standalone, rtt: 0.25>]>", "clientId": {"$oid": "67d2b1e1f4015777fa0580a9"}}
2025-03-13 15:22:31,326 - pymongo.serverSelection - DEBUG - {"message": "Server selection succeeded", "selector": "Primary()", "operation": "listCollections", "topologyDescription": "<TopologyDescription id: 67d2b1e1f4015777fa0580a9, topology_type: Single, servers: [<ServerDescription ('3.144.134.141', 27017) server_type: Standalone, rtt: 0.25>]>", "clientId": {"$oid": "67d2b1e1f4015777fa0580a9"}, "serverHost": "3.144.134.141", "serverPort": 27017}
2025-03-13 15:22:31,326 - pymongo.connection - DEBUG - {"clientId": {"$oid": "67d2b1e1f4015777fa0580a9"}, "message": "Connection checkout started", "serverHost": "3.144.134.141", "serverPort": 27017}
2025-03-13 15:22:31,326 - pymongo.connection - DEBUG - {"clientId": {"$oid": "67d2b1e1f4015777fa0580a9"}, "message": "Connection checked out", "serverHost": "3.144.134.141", "serverPort": 27017, "driverConnectionId": 1, "durationMS": 0.0}
2025-03-13 15:22:31,327 - pymongo.command - DEBUG - {"clientId": {"$oid": "67d2b1e1f4015777fa0580a9"}, "message": "Command started", "command": "{\"listCollections\": 1, \"nameOnly\": true, \"lsid\": {\"id\": {\"$binary\": {\"base64\": \"SydOe269RsexkVWOgQEdUA==\", \"subType\": \"04\"}}}, \"$db\": \"opal_server\"}", "commandName": "listCollections", "databaseName": "opal_server", "requestId": 26500, "operationId": 26500, "driverConnectionId": 1, "serverConnectionId": 13052, "serverHost": "3.144.134.141", "serverPort": 27017}
2025-03-13 15:22:31,572 - pymongo.command - DEBUG - {"clientId": {"$oid": "67d2b1e1f4015777fa0580a9"}, "message": "Command succeeded", "durationMS": 245.12, "reply": "{\"cursor\": {\"ns\": \"opal_server.$cmd.listCollections\", \"firstBatch\": [{\"name\": \"rags\", \"type\": \"collection\"}, {\"name\": \"trips\", \"type\": \"collection\"}, {\"name\": \"vehicles\", \"type\": \"collection\"}, {\"name\": \"permissions\", \"type\": \"collection\"}, {\"name\": \"notifications\", \"type\": \"collection\"}, {\"name\": \"crash_events\", \"type\": \"collection\"}, {\"name\": \"violations-x\", \"type\": \"collection\"}, {\"name\": \"drivers\", \"type\": \"collection\"}, {\"name\": \"geofences\", \"type\": \"collection\"}, {\"name\": \"tickets\", \"type\": \"collection\"}, {\"name\": \"vehicleevents\", \"type\": \"collection\"}, {\"name\": \"vendors\", \"type\": \"collection\"}, {\"name\": \"roles\", \"type\": \"collection\"}, {\"name\": \"clients\", \"type\": \"collection\"}, {\"name\": \"vendordevices\", \"type\": \"collection\"}, {\"name\": \"settings\", \"type\": \"collection\"}, {\"name\": \"media\", \"type\": \"collection\"}, {\"name\": \"violation_rules\", \"type\": \"collection\"}, {\"name\": \"violations\", \"type\": \"collection\"}, {\"name\": \"users\", \"type\": \"collection\"}, {\"name\": \"companies\", \"type\": \"coll...", "commandName": "listCollections", "databaseName": "opal_server", "requestId": 26500, "operationId": 26500, "driverConnectionId": 1, "serverConnectionId": 13052, "serverHost": "3.144.134.141", "serverPort": 27017}
2025-03-13 15:22:31,573 - pymongo.connection - DEBUG - {"clientId": {"$oid": "67d2b1e1f4015777fa0580a9"}, "message": "Connection checked in", "serverHost": "3.144.134.141", "serverPort": 27017, "driverConnectionId": 1}
2025-03-13 15:22:31,574 - app.db.repositories.data_repository - DEBUG - Available collections: ['rags', 'trips', 'vehicles', 'permissions', 'notifications', 'crash_events', 'violations-x', 'drivers', 'geofences', 'tickets', 'vehicleevents', 'vendors', 'roles', 'clients', 'vendordevices', 'settings', 'media', 'violation_rules', 'violations', 'users', 'companies']
2025-03-13 15:22:31,574 - app.db.repositories.data_repository - DEBUG - Checking collection: violations
2025-03-13 15:22:31,574 - pymongo.serverSelection - DEBUG - {"message": "Server selection started", "selector": "Primary()", "operation": "count", "topologyDescription": "<TopologyDescription id: 67d2b1e1f4015777fa0580a9, topology_type: Single, servers: [<ServerDescription ('3.144.134.141', 27017) server_type: Standalone, rtt: 0.25>]>", "clientId": {"$oid": "67d2b1e1f4015777fa0580a9"}}
2025-03-13 15:22:31,575 - pymongo.serverSelection - DEBUG - {"message": "Server selection succeeded", "selector": "Primary()", "operation": "count", "topologyDescription": "<TopologyDescription id: 67d2b1e1f4015777fa0580a9, topology_type: Single, servers: [<ServerDescription ('3.144.134.141', 27017) server_type: Standalone, rtt: 0.25>]>", "clientId": {"$oid": "67d2b1e1f4015777fa0580a9"}, "serverHost": "3.144.134.141", "serverPort": 27017}
2025-03-13 15:22:31,575 - pymongo.connection - DEBUG - {"clientId": {"$oid": "67d2b1e1f4015777fa0580a9"}, "message": "Connection checkout started", "serverHost": "3.144.134.141", "serverPort": 27017}
2025-03-13 15:22:31,575 - pymongo.connection - DEBUG - {"clientId": {"$oid": "67d2b1e1f4015777fa0580a9"}, "message": "Connection checked out", "serverHost": "3.144.134.141", "serverPort": 27017, "driverConnectionId": 1, "durationMS": 0.0}
2025-03-13 15:22:31,576 - pymongo.command - DEBUG - {"clientId": {"$oid": "67d2b1e1f4015777fa0580a9"}, "message": "Command started", "command": "{\"aggregate\": \"violations\", \"pipeline\": [{\"$match\": {\"$or\": [{\"timestamp\": {\"$gte\": {\"$date\": \"2025-03-13T11:22:31.324Z\"}, \"$lte\": {\"$date\": \"2025-03-13T15:22:31.324Z\"}}}, {\"event_time\": {\"$gte\": {\"$date\": \"2025-03-13T11:22:31.324Z\"}, \"$lte\": {\"$date\": \"2025-03-13T15:22:31.324Z\"}}}, {\"created_at\": {\"$gte\": {\"$date\": \"2025-03-13T11:22:31.324Z\"}, \"$lte\": {\"$date\": \"2025-03-13T15:22:31.324Z\"}}}]}}, {\"$group\": {\"_id\": 1, \"n\": {\"$sum\": 1}}}], \"lsid\": {\"id\": {\"$binary\": {\"base64\": \"SydOe269RsexkVWOgQEdUA==\", \"subType\": \"04\"}}}, \"$db\": \"opal_server\"}", "commandName": "aggregate", "databaseName": "opal_server", "requestId": 19169, "operationId": 19169, "driverConnectionId": 1, "serverConnectionId": 13052, "serverHost": "3.144.134.141", "serverPort": 27017}
2025-03-13 15:22:31,833 - pymongo.command - DEBUG - {"clientId": {"$oid": "67d2b1e1f4015777fa0580a9"}, "message": "Command succeeded", "durationMS": 255.84699999999998, "reply": "{\"cursor\": {\"ns\": \"opal_server.violations\"}, \"ok\": 1.0}", "commandName": "aggregate", "databaseName": "opal_server", "requestId": 19169, "operationId": 19169, "driverConnectionId": 1, "serverConnectionId": 13052, "serverHost": "3.144.134.141", "serverPort": 27017}
2025-03-13 15:22:31,833 - pymongo.connection - DEBUG - {"clientId": {"$oid": "67d2b1e1f4015777fa0580a9"}, "message": "Connection checked in", "serverHost": "3.144.134.141", "serverPort": 27017, "driverConnectionId": 1}
2025-03-13 15:22:31,834 - app.db.repositories.data_repository - WARNING - No violations found in any collection
2025-03-13 15:22:31,834 - app.db.repositories.data_repository - DEBUG - Fetching vehicle events from database: opal_server
2025-03-13 15:22:31,834 - app.db.repositories.data_repository - DEBUG - Vehicle events query: {'$or': [{'timestamp': {'$gte': datetime.datetime(2025, 3, 13, 11, 22, 31, 324451), '$lte': datetime.datetime(2025, 3, 13, 15, 22, 31, 324451)}}, {'event_time': {'$gte': datetime.datetime(2025, 3, 13, 11, 22, 31, 324451), '$lte': datetime.datetime(2025, 3, 13, 15, 22, 31, 324451)}}, {'created_at': {'$gte': datetime.datetime(2025, 3, 13, 11, 22, 31, 324451), '$lte': datetime.datetime(2025, 3, 13, 15, 22, 31, 324451)}}]}
2025-03-13 15:22:31,835 - app.db.repositories.data_repository - DEBUG - Time range: {'$gte': datetime.datetime(2025, 3, 13, 11, 22, 31, 324451), '$lte': datetime.datetime(2025, 3, 13, 15, 22, 31, 324451)}
2025-03-13 15:22:31,835 - pymongo.serverSelection - DEBUG - {"message": "Server selection started", "selector": "Primary()", "operation": "listCollections", "topologyDescription": "<TopologyDescription id: 67d2b1e1f4015777fa0580a9, topology_type: Single, servers: [<ServerDescription ('3.144.134.141', 27017) server_type: Standalone, rtt: 0.25>]>", "clientId": {"$oid": "67d2b1e1f4015777fa0580a9"}}
2025-03-13 15:22:31,835 - pymongo.serverSelection - DEBUG - {"message": "Server selection succeeded", "selector": "Primary()", "operation": "listCollections", "topologyDescription": "<TopologyDescription id: 67d2b1e1f4015777fa0580a9, topology_type: Single, servers: [<ServerDescription ('3.144.134.141', 27017) server_type: Standalone, rtt: 0.25>]>", "clientId": {"$oid": "67d2b1e1f4015777fa0580a9"}, "serverHost": "3.144.134.141", "serverPort": 27017}
2025-03-13 15:22:31,836 - pymongo.connection - DEBUG - {"clientId": {"$oid": "67d2b1e1f4015777fa0580a9"}, "message": "Connection checkout started", "serverHost": "3.144.134.141", "serverPort": 27017}
2025-03-13 15:22:31,836 - pymongo.connection - DEBUG - {"clientId": {"$oid": "67d2b1e1f4015777fa0580a9"}, "message": "Connection checked out", "serverHost": "3.144.134.141", "serverPort": 27017, "driverConnectionId": 1, "durationMS": 0.0}
2025-03-13 15:22:31,836 - pymongo.command - DEBUG - {"clientId": {"$oid": "67d2b1e1f4015777fa0580a9"}, "message": "Command started", "command": "{\"listCollections\": 1, \"nameOnly\": true, \"lsid\": {\"id\": {\"$binary\": {\"base64\": \"SydOe269RsexkVWOgQEdUA==\", \"subType\": \"04\"}}}, \"$db\": \"opal_server\"}", "commandName": "listCollections", "databaseName": "opal_server", "requestId": 15724, "operationId": 15724, "driverConnectionId": 1, "serverConnectionId": 13052, "serverHost": "3.144.134.141", "serverPort": 27017}
2025-03-13 15:22:32,080 - pymongo.command - DEBUG - {"clientId": {"$oid": "67d2b1e1f4015777fa0580a9"}, "message": "Command succeeded", "durationMS": 243.696, "reply": "{\"cursor\": {\"ns\": \"opal_server.$cmd.listCollections\", \"firstBatch\": [{\"name\": \"rags\", \"type\": \"collection\"}, {\"name\": \"trips\", \"type\": \"collection\"}, {\"name\": \"vehicles\", \"type\": \"collection\"}, {\"name\": \"permissions\", \"type\": \"collection\"}, {\"name\": \"notifications\", \"type\": \"collection\"}, {\"name\": \"crash_events\", \"type\": \"collection\"}, {\"name\": \"violations-x\", \"type\": \"collection\"}, {\"name\": \"drivers\", \"type\": \"collection\"}, {\"name\": \"geofences\", \"type\": \"collection\"}, {\"name\": \"tickets\", \"type\": \"collection\"}, {\"name\": \"vehicleevents\", \"type\": \"collection\"}, {\"name\": \"vendors\", \"type\": \"collection\"}, {\"name\": \"roles\", \"type\": \"collection\"}, {\"name\": \"clients\", \"type\": \"collection\"}, {\"name\": \"vendordevices\", \"type\": \"collection\"}, {\"name\": \"settings\", \"type\": \"collection\"}, {\"name\": \"media\", \"type\": \"collection\"}, {\"name\": \"violation_rules\", \"type\": \"collection\"}, {\"name\": \"violations\", \"type\": \"collection\"}, {\"name\": \"users\", \"type\": \"collection\"}, {\"name\": \"companies\", \"type\": \"coll...", "commandName": "listCollections", "databaseName": "opal_server", "requestId": 15724, "operationId": 15724, "driverConnectionId": 1, "serverConnectionId": 13052, "serverHost": "3.144.134.141", "serverPort": 27017}
2025-03-13 15:22:32,081 - pymongo.connection - DEBUG - {"clientId": {"$oid": "67d2b1e1f4015777fa0580a9"}, "message": "Connection checked in", "serverHost": "3.144.134.141", "serverPort": 27017, "driverConnectionId": 1}
2025-03-13 15:22:32,081 - app.db.repositories.data_repository - DEBUG - Available collections: ['rags', 'trips', 'vehicles', 'permissions', 'notifications', 'crash_events', 'violations-x', 'drivers', 'geofences', 'tickets', 'vehicleevents', 'vendors', 'roles', 'clients', 'vendordevices', 'settings', 'media', 'violation_rules', 'violations', 'users', 'companies']
2025-03-13 15:22:32,083 - pymongo.serverSelection - DEBUG - {"message": "Server selection started", "selector": "Primary()", "operation": "find", "topologyDescription": "<TopologyDescription id: 67d2b1e1f4015777fa0580a9, topology_type: Single, servers: [<ServerDescription ('3.144.134.141', 27017) server_type: Standalone, rtt: 0.25>]>", "clientId": {"$oid": "67d2b1e1f4015777fa0580a9"}}
2025-03-13 15:22:32,083 - pymongo.serverSelection - DEBUG - {"message": "Server selection succeeded", "selector": "Primary()", "operation": "find", "topologyDescription": "<TopologyDescription id: 67d2b1e1f4015777fa0580a9, topology_type: Single, servers: [<ServerDescription ('3.144.134.141', 27017) server_type: Standalone, rtt: 0.25>]>", "clientId": {"$oid": "67d2b1e1f4015777fa0580a9"}, "serverHost": "3.144.134.141", "serverPort": 27017}
2025-03-13 15:22:32,083 - pymongo.connection - DEBUG - {"clientId": {"$oid": "67d2b1e1f4015777fa0580a9"}, "message": "Connection checkout started", "serverHost": "3.144.134.141", "serverPort": 27017}
2025-03-13 15:22:32,084 - pymongo.connection - DEBUG - {"clientId": {"$oid": "67d2b1e1f4015777fa0580a9"}, "message": "Connection checked out", "serverHost": "3.144.134.141", "serverPort": 27017, "driverConnectionId": 1, "durationMS": 0.0}
2025-03-13 15:22:32,084 - pymongo.command - DEBUG - {"clientId": {"$oid": "67d2b1e1f4015777fa0580a9"}, "message": "Command started", "command": "{\"find\": \"vehicleevents\", \"limit\": 1, \"singleBatch\": true, \"lsid\": {\"id\": {\"$binary\": {\"base64\": \"SydOe269RsexkVWOgQEdUA==\", \"subType\": \"04\"}}}, \"$db\": \"opal_server\"}", "commandName": "find", "databaseName": "opal_server", "requestId": 11478, "operationId": 11478, "driverConnectionId": 1, "serverConnectionId": 13052, "serverHost": "3.144.134.141", "serverPort": 27017}
2025-03-13 15:22:32,329 - pymongo.command - DEBUG - {"clientId": {"$oid": "67d2b1e1f4015777fa0580a9"}, "message": "Command succeeded", "durationMS": 245.547, "reply": "{\"cursor\": {\"firstBatch\": [{\"_id\": {\"$oid\": \"67441bdeb231195485d25272\"}, \"vendor\": {\"$oid\": \"6703ad7f70ba41e9473dd8e7\"}, \"deviceTime\": {\"$date\": \"2024-11-22T12:48:47Z\"}, \"serverTime\": {\"$date\": \"2024-11-22T12:48:47.958Z\"}, \"location\": {\"latitude\": 18.542048, \"longitude\": 55.852535, \"altitude\": 240}, \"ignition\": true, \"speed\": 68, \"heading\": 84, \"event\": {\"type\": \"DISTANCE_TRAVEL\", \"name\": \"Distance Traveled\"}, \"odometer\": 85198.52713696871, \"satellites\": 26, \"diff\": {\"distanceMeter\": 226.15911957109347, \"durationMillis\": 11000, \"ignitionOn\": true, \"moving\": true}, \"vehicle\": {\"license\": \"1765HW\", \"uuid\": \"f59c5202-eda5-4348-9d66-ec14718f076b\"}, \"device\": {\"imei\": \"358925430754727\"}, \"hdop\": 25.5, \"positionAccuracy\": 37.507210845177696, \"batteryVoltage\": 4.026, \"createdAt\": {\"$date\": \"2024-11-25T06:40:30.615Z\"}, \"updatedAt\": {\"$date\": \"2024-11-25T06:40:30.615Z\"}}], \"ns\": \"opal_server.vehicleevents\"}, \"ok\": 1.0}", "commandName": "find", "databaseName": "opal_server", "requestId": 11478, "operationId": 11478, "driverConnectionId": 1, "serverConnectionId": 13052, "serverHost": "3.144.134.141", "serverPort": 27017}
2025-03-13 15:22:32,330 - pymongo.connection - DEBUG - {"clientId": {"$oid": "67d2b1e1f4015777fa0580a9"}, "message": "Connection checked in", "serverHost": "3.144.134.141", "serverPort": 27017, "driverConnectionId": 1}
2025-03-13 15:22:32,330 - app.db.repositories.data_repository - DEBUG - Sample document fields: ['_id', 'vendor', 'deviceTime', 'serverTime', 'location', 'ignition', 'speed', 'heading', 'event', 'odometer', 'satellites', 'wrongOrdered', 'diff', 'vehicle', 'device', 'hdop', 'positionAccuracy', 'batteryVoltage', '__v', 'createdAt', 'updatedAt']
2025-03-13 15:22:32,330 - pymongo.serverSelection - DEBUG - {"message": "Server selection started", "selector": "Primary()", "operation": "count", "topologyDescription": "<TopologyDescription id: 67d2b1e1f4015777fa0580a9, topology_type: Single, servers: [<ServerDescription ('3.144.134.141', 27017) server_type: Standalone, rtt: 0.25>]>", "clientId": {"$oid": "67d2b1e1f4015777fa0580a9"}}
2025-03-13 15:22:32,331 - pymongo.serverSelection - DEBUG - {"message": "Server selection succeeded", "selector": "Primary()", "operation": "count", "topologyDescription": "<TopologyDescription id: 67d2b1e1f4015777fa0580a9, topology_type: Single, servers: [<ServerDescription ('3.144.134.141', 27017) server_type: Standalone, rtt: 0.25>]>", "clientId": {"$oid": "67d2b1e1f4015777fa0580a9"}, "serverHost": "3.144.134.141", "serverPort": 27017}
2025-03-13 15:22:32,331 - pymongo.connection - DEBUG - {"clientId": {"$oid": "67d2b1e1f4015777fa0580a9"}, "message": "Connection checkout started", "serverHost": "3.144.134.141", "serverPort": 27017}
2025-03-13 15:22:32,331 - pymongo.connection - DEBUG - {"clientId": {"$oid": "67d2b1e1f4015777fa0580a9"}, "message": "Connection checked out", "serverHost": "3.144.134.141", "serverPort": 27017, "driverConnectionId": 1, "durationMS": 0.0}
2025-03-13 15:22:32,332 - pymongo.command - DEBUG - {"clientId": {"$oid": "67d2b1e1f4015777fa0580a9"}, "message": "Command started", "command": "{\"aggregate\": \"vehicleevents\", \"pipeline\": [{\"$match\": {\"$or\": [{\"timestamp\": {\"$gte\": {\"$date\": \"2025-03-13T11:22:31.324Z\"}, \"$lte\": {\"$date\": \"2025-03-13T15:22:31.324Z\"}}}, {\"event_time\": {\"$gte\": {\"$date\": \"2025-03-13T11:22:31.324Z\"}, \"$lte\": {\"$date\": \"2025-03-13T15:22:31.324Z\"}}}, {\"created_at\": {\"$gte\": {\"$date\": \"2025-03-13T11:22:31.324Z\"}, \"$lte\": {\"$date\": \"2025-03-13T15:22:31.324Z\"}}}]}}, {\"$group\": {\"_id\": 1, \"n\": {\"$sum\": 1}}}], \"lsid\": {\"id\": {\"$binary\": {\"base64\": \"SydOe269RsexkVWOgQEdUA==\", \"subType\": \"04\"}}}, \"$db\": \"opal_server\"}", "commandName": "aggregate", "databaseName": "opal_server", "requestId": 29358, "operationId": 29358, "driverConnectionId": 1, "serverConnectionId": 13052, "serverHost": "3.144.134.141", "serverPort": 27017}
2025-03-13 15:22:35,983 - pymongo.topology - DEBUG - {"topologyId": {"$oid": "67d2b1e1f4015777fa0580a9"}, "driverConnectionId": 1, "serverConnectionId": 13050, "serverHost": "3.144.134.141", "serverPort": 27017, "awaited": true, "durationMS": 10250.0, "reply": "{\"isWritablePrimary\": true, \"topologyVersion\": {\"processId\": {\"$oid\": \"67b7e5814f77c1a87c56d054\"}}, \"maxBsonObjectSize\": 16777216, \"maxMessageSizeBytes\": 48000000, \"maxWriteBatchSize\": 100000, \"localTime\": {\"$date\": \"2025-03-13T10:22:36Z\"}, \"logicalSessionTimeoutMinutes\": 30, \"connectionId\": 13050, \"maxWireVersion\": 25, \"ok\": 1.0}", "message": "Server heartbeat succeeded"}
2025-03-13 15:22:35,983 - pymongo.topology - DEBUG - {"topologyId": {"$oid": "67d2b1e1f4015777fa0580a9"}, "driverConnectionId": 1, "serverConnectionId": 13050, "serverHost": "3.144.134.141", "serverPort": 27017, "awaited": true, "message": "Server heartbeat started"}
2025-03-13 15:22:38,495 - pymongo.command - DEBUG - {"clientId": {"$oid": "67d2b1e1f4015777fa0580a9"}, "message": "Command succeeded", "durationMS": 6163.202, "reply": "{\"cursor\": {\"ns\": \"opal_server.vehicleevents\"}, \"ok\": 1.0}", "commandName": "aggregate", "databaseName": "opal_server", "requestId": 29358, "operationId": 29358, "driverConnectionId": 1, "serverConnectionId": 13052, "serverHost": "3.144.134.141", "serverPort": 27017}
2025-03-13 15:22:38,495 - pymongo.connection - DEBUG - {"clientId": {"$oid": "67d2b1e1f4015777fa0580a9"}, "message": "Connection checked in", "serverHost": "3.144.134.141", "serverPort": 27017, "driverConnectionId": 1}
2025-03-13 15:22:38,496 - app.db.repositories.data_repository - INFO - Found 0 matching vehicle events
2025-03-13 15:22:38,496 - pymongo.serverSelection - DEBUG - {"message": "Server selection started", "selector": "Primary()", "operation": "find", "topologyDescription": "<TopologyDescription id: 67d2b1e1f4015777fa0580a9, topology_type: Single, servers: [<ServerDescription ('3.144.134.141', 27017) server_type: Standalone, rtt: 0.25>]>", "clientId": {"$oid": "67d2b1e1f4015777fa0580a9"}}
2025-03-13 15:22:38,496 - pymongo.serverSelection - DEBUG - {"message": "Server selection succeeded", "selector": "Primary()", "operation": "find", "topologyDescription": "<TopologyDescription id: 67d2b1e1f4015777fa0580a9, topology_type: Single, servers: [<ServerDescription ('3.144.134.141', 27017) server_type: Standalone, rtt: 0.25>]>", "clientId": {"$oid": "67d2b1e1f4015777fa0580a9"}, "serverHost": "3.144.134.141", "serverPort": 27017}
2025-03-13 15:22:38,497 - pymongo.connection - DEBUG - {"clientId": {"$oid": "67d2b1e1f4015777fa0580a9"}, "message": "Connection checkout started", "serverHost": "3.144.134.141", "serverPort": 27017}
2025-03-13 15:22:38,497 - pymongo.connection - DEBUG - {"clientId": {"$oid": "67d2b1e1f4015777fa0580a9"}, "message": "Connection checked out", "serverHost": "3.144.134.141", "serverPort": 27017, "driverConnectionId": 1, "durationMS": 0.0}
2025-03-13 15:22:38,497 - pymongo.command - DEBUG - {"clientId": {"$oid": "67d2b1e1f4015777fa0580a9"}, "message": "Command started", "command": "{\"find\": \"vehicleevents\", \"filter\": {\"$or\": [{\"timestamp\": {\"$gte\": {\"$date\": \"2025-03-13T11:22:31.324Z\"}, \"$lte\": {\"$date\": \"2025-03-13T15:22:31.324Z\"}}}, {\"event_time\": {\"$gte\": {\"$date\": \"2025-03-13T11:22:31.324Z\"}, \"$lte\": {\"$date\": \"2025-03-13T15:22:31.324Z\"}}}, {\"created_at\": {\"$gte\": {\"$date\": \"2025-03-13T11:22:31.324Z\"}, \"$lte\": {\"$date\": \"2025-03-13T15:22:31.324Z\"}}}]}, \"limit\": 1000, \"lsid\": {\"id\": {\"$binary\": {\"base64\": \"SydOe269RsexkVWOgQEdUA==\", \"subType\": \"04\"}}}, \"$db\": \"opal_server\"}", "commandName": "find", "databaseName": "opal_server", "requestId": 26962, "operationId": 26962, "driverConnectionId": 1, "serverConnectionId": 13052, "serverHost": "3.144.134.141", "serverPort": 27017}
2025-03-13 15:22:45,255 - pymongo.command - DEBUG - {"clientId": {"$oid": "67d2b1e1f4015777fa0580a9"}, "message": "Command succeeded", "durationMS": 6757.543, "reply": "{\"cursor\": {\"ns\": \"opal_server.vehicleevents\"}, \"ok\": 1.0}", "commandName": "find", "databaseName": "opal_server", "requestId": 26962, "operationId": 26962, "driverConnectionId": 1, "serverConnectionId": 13052, "serverHost": "3.144.134.141", "serverPort": 27017}
2025-03-13 15:22:45,255 - pymongo.connection - DEBUG - {"clientId": {"$oid": "67d2b1e1f4015777fa0580a9"}, "message": "Connection checked in", "serverHost": "3.144.134.141", "serverPort": 27017, "driverConnectionId": 1}
2025-03-13 15:22:45,256 - app.db.repositories.data_repository - DEBUG - Retrieved 0 vehicle events
2025-03-13 15:22:45,256 - app.api.endpoints.analytics - DEBUG - Retrieved violations: 0
2025-03-13 15:22:45,257 - app.api.endpoints.analytics - DEBUG - Retrieved events: 0
2025-03-13 15:22:45,257 - app.api.endpoints.analytics - INFO - Analysis completed - Found 0 violations and 0 drivers
2025-03-13 15:22:45,257 - app.api.endpoints.analytics - WARNING - No data found for the specified criteria
2025-03-13 15:22:45,988 - pymongo.topology - DEBUG - {"topologyId": {"$oid": "67d2b1e1f4015777fa0580a9"}, "driverConnectionId": 1, "serverConnectionId": 13050, "serverHost": "3.144.134.141", "serverPort": 27017, "awaited": true, "durationMS": 10000.0, "reply": "{\"isWritablePrimary\": true, \"topologyVersion\": {\"processId\": {\"$oid\": \"67b7e5814f77c1a87c56d054\"}}, \"maxBsonObjectSize\": 16777216, \"maxMessageSizeBytes\": 48000000, \"maxWriteBatchSize\": 100000, \"localTime\": {\"$date\": \"2025-03-13T10:22:46.005Z\"}, \"logicalSessionTimeoutMinutes\": 30, \"connectionId\": 13050, \"maxWireVersion\": 25, \"ok\": 1.0}", "message": "Server heartbeat succeeded"}
2025-03-13 15:22:45,988 - pymongo.topology - DEBUG - {"topologyId": {"$oid": "67d2b1e1f4015777fa0580a9"}, "driverConnectionId": 1, "serverConnectionId": 13050, "serverHost": "3.144.134.141", "serverPort": 27017, "awaited": true, "message": "Server heartbeat started"}
2025-03-13 15:22:55,992 - pymongo.topology - DEBUG - {"topologyId": {"$oid": "67d2b1e1f4015777fa0580a9"}, "driverConnectionId": 1, "serverConnectionId": 13050, "serverHost": "3.144.134.141", "serverPort": 27017, "awaited": true, "durationMS": 10015.999999999622, "reply": "{\"isWritablePrimary\": true, \"topologyVersion\": {\"processId\": {\"$oid\": \"67b7e5814f77c1a87c56d054\"}}, \"maxBsonObjectSize\": 16777216, \"maxMessageSizeBytes\": 48000000, \"maxWriteBatchSize\": 100000, \"localTime\": {\"$date\": \"2025-03-13T10:22:56.009Z\"}, \"logicalSessionTimeoutMinutes\": 30, \"connectionId\": 13050, \"maxWireVersion\": 25, \"ok\": 1.0}", "message": "Server heartbeat succeeded"}
2025-03-13 15:22:55,993 - pymongo.topology - DEBUG - {"topologyId": {"$oid": "67d2b1e1f4015777fa0580a9"}, "driverConnectionId": 1, "serverConnectionId": 13050, "serverHost": "3.144.134.141", "serverPort": 27017, "awaited": true, "message": "Server heartbeat started"}
2025-03-13 15:23:04,950 - app.api.endpoints.analytics - DEBUG - Starting real-time analysis request - timeframe: 7h, driver_uuid: None
2025-03-13 15:23:04,952 - app.api.endpoints.analytics - INFO - Fetching data for time window: 7h, driver: all drivers
2025-03-13 15:23:04,952 - app.services.predictive_analytics - DEBUG - Analyzing time window from 2025-03-13 08:23:04.952280 to 2025-03-13 15:23:04.952280
2025-03-13 15:23:04,952 - app.services.predictive_analytics - DEBUG - Time window: 7.0 hours
2025-03-13 15:23:04,952 - app.db.repositories.data_repository - DEBUG - Connected to database: opal_server
2025-03-13 15:23:04,952 - app.db.repositories.data_repository - DEBUG - Violations query: {'$or': [{'timestamp': {'$gte': datetime.datetime(2025, 3, 13, 8, 23, 4, 952280), '$lte': datetime.datetime(2025, 3, 13, 15, 23, 4, 952280)}}, {'event_time': {'$gte': datetime.datetime(2025, 3, 13, 8, 23, 4, 952280), '$lte': datetime.datetime(2025, 3, 13, 15, 23, 4, 952280)}}, {'created_at': {'$gte': datetime.datetime(2025, 3, 13, 8, 23, 4, 952280), '$lte': datetime.datetime(2025, 3, 13, 15, 23, 4, 952280)}}]}
2025-03-13 15:23:04,953 - app.db.repositories.data_repository - DEBUG - Using database: opal_server
2025-03-13 15:23:04,953 - pymongo.serverSelection - DEBUG - {"message": "Server selection started", "selector": "Primary()", "operation": "listCollections", "topologyDescription": "<TopologyDescription id: 67d2b1e1f4015777fa0580a9, topology_type: Single, servers: [<ServerDescription ('3.144.134.141', 27017) server_type: Standalone, rtt: 0.24744000000006056>]>", "clientId": {"$oid": "67d2b1e1f4015777fa0580a9"}}
2025-03-13 15:23:04,953 - pymongo.serverSelection - DEBUG - {"message": "Server selection succeeded", "selector": "Primary()", "operation": "listCollections", "topologyDescription": "<TopologyDescription id: 67d2b1e1f4015777fa0580a9, topology_type: Single, servers: [<ServerDescription ('3.144.134.141', 27017) server_type: Standalone, rtt: 0.24744000000006056>]>", "clientId": {"$oid": "67d2b1e1f4015777fa0580a9"}, "serverHost": "3.144.134.141", "serverPort": 27017}
2025-03-13 15:23:04,954 - pymongo.connection - DEBUG - {"clientId": {"$oid": "67d2b1e1f4015777fa0580a9"}, "message": "Connection checkout started", "serverHost": "3.144.134.141", "serverPort": 27017}
2025-03-13 15:23:04,954 - pymongo.connection - DEBUG - {"clientId": {"$oid": "67d2b1e1f4015777fa0580a9"}, "message": "Connection checked out", "serverHost": "3.144.134.141", "serverPort": 27017, "driverConnectionId": 1, "durationMS": 0.0}
2025-03-13 15:23:04,955 - pymongo.command - DEBUG - {"clientId": {"$oid": "67d2b1e1f4015777fa0580a9"}, "message": "Command started", "command": "{\"listCollections\": 1, \"nameOnly\": true, \"lsid\": {\"id\": {\"$binary\": {\"base64\": \"SydOe269RsexkVWOgQEdUA==\", \"subType\": \"04\"}}}, \"$db\": \"opal_server\"}", "commandName": "listCollections", "databaseName": "opal_server", "requestId": 24464, "operationId": 24464, "driverConnectionId": 1, "serverConnectionId": 13052, "serverHost": "3.144.134.141", "serverPort": 27017}
2025-03-13 15:23:05,199 - pymongo.command - DEBUG - {"clientId": {"$oid": "67d2b1e1f4015777fa0580a9"}, "message": "Command succeeded", "durationMS": 243.98600000000002, "reply": "{\"cursor\": {\"ns\": \"opal_server.$cmd.listCollections\", \"firstBatch\": [{\"name\": \"rags\", \"type\": \"collection\"}, {\"name\": \"trips\", \"type\": \"collection\"}, {\"name\": \"vehicles\", \"type\": \"collection\"}, {\"name\": \"permissions\", \"type\": \"collection\"}, {\"name\": \"notifications\", \"type\": \"collection\"}, {\"name\": \"crash_events\", \"type\": \"collection\"}, {\"name\": \"violations-x\", \"type\": \"collection\"}, {\"name\": \"drivers\", \"type\": \"collection\"}, {\"name\": \"geofences\", \"type\": \"collection\"}, {\"name\": \"tickets\", \"type\": \"collection\"}, {\"name\": \"vehicleevents\", \"type\": \"collection\"}, {\"name\": \"vendors\", \"type\": \"collection\"}, {\"name\": \"roles\", \"type\": \"collection\"}, {\"name\": \"clients\", \"type\": \"collection\"}, {\"name\": \"vendordevices\", \"type\": \"collection\"}, {\"name\": \"settings\", \"type\": \"collection\"}, {\"name\": \"media\", \"type\": \"collection\"}, {\"name\": \"violation_rules\", \"type\": \"collection\"}, {\"name\": \"violations\", \"type\": \"collection\"}, {\"name\": \"users\", \"type\": \"collection\"}, {\"name\": \"companies\", \"type\": \"coll...", "commandName": "listCollections", "databaseName": "opal_server", "requestId": 24464, "operationId": 24464, "driverConnectionId": 1, "serverConnectionId": 13052, "serverHost": "3.144.134.141", "serverPort": 27017}
2025-03-13 15:23:05,200 - pymongo.connection - DEBUG - {"clientId": {"$oid": "67d2b1e1f4015777fa0580a9"}, "message": "Connection checked in", "serverHost": "3.144.134.141", "serverPort": 27017, "driverConnectionId": 1}
2025-03-13 15:23:05,200 - app.db.repositories.data_repository - DEBUG - Available collections: ['rags', 'trips', 'vehicles', 'permissions', 'notifications', 'crash_events', 'violations-x', 'drivers', 'geofences', 'tickets', 'vehicleevents', 'vendors', 'roles', 'clients', 'vendordevices', 'settings', 'media', 'violation_rules', 'violations', 'users', 'companies']
2025-03-13 15:23:05,201 - app.db.repositories.data_repository - DEBUG - Checking collection: violations
2025-03-13 15:23:05,201 - pymongo.serverSelection - DEBUG - {"message": "Server selection started", "selector": "Primary()", "operation": "count", "topologyDescription": "<TopologyDescription id: 67d2b1e1f4015777fa0580a9, topology_type: Single, servers: [<ServerDescription ('3.144.134.141', 27017) server_type: Standalone, rtt: 0.24744000000006056>]>", "clientId": {"$oid": "67d2b1e1f4015777fa0580a9"}}
2025-03-13 15:23:05,202 - pymongo.serverSelection - DEBUG - {"message": "Server selection succeeded", "selector": "Primary()", "operation": "count", "topologyDescription": "<TopologyDescription id: 67d2b1e1f4015777fa0580a9, topology_type: Single, servers: [<ServerDescription ('3.144.134.141', 27017) server_type: Standalone, rtt: 0.24744000000006056>]>", "clientId": {"$oid": "67d2b1e1f4015777fa0580a9"}, "serverHost": "3.144.134.141", "serverPort": 27017}
2025-03-13 15:23:05,202 - pymongo.connection - DEBUG - {"clientId": {"$oid": "67d2b1e1f4015777fa0580a9"}, "message": "Connection checkout started", "serverHost": "3.144.134.141", "serverPort": 27017}
2025-03-13 15:23:05,202 - pymongo.connection - DEBUG - {"clientId": {"$oid": "67d2b1e1f4015777fa0580a9"}, "message": "Connection checked out", "serverHost": "3.144.134.141", "serverPort": 27017, "driverConnectionId": 1, "durationMS": 0.0}
2025-03-13 15:23:05,202 - pymongo.command - DEBUG - {"clientId": {"$oid": "67d2b1e1f4015777fa0580a9"}, "message": "Command started", "command": "{\"aggregate\": \"violations\", \"pipeline\": [{\"$match\": {\"$or\": [{\"timestamp\": {\"$gte\": {\"$date\": \"2025-03-13T08:23:04.952Z\"}, \"$lte\": {\"$date\": \"2025-03-13T15:23:04.952Z\"}}}, {\"event_time\": {\"$gte\": {\"$date\": \"2025-03-13T08:23:04.952Z\"}, \"$lte\": {\"$date\": \"2025-03-13T15:23:04.952Z\"}}}, {\"created_at\": {\"$gte\": {\"$date\": \"2025-03-13T08:23:04.952Z\"}, \"$lte\": {\"$date\": \"2025-03-13T15:23:04.952Z\"}}}]}}, {\"$group\": {\"_id\": 1, \"n\": {\"$sum\": 1}}}], \"lsid\": {\"id\": {\"$binary\": {\"base64\": \"SydOe269RsexkVWOgQEdUA==\", \"subType\": \"04\"}}}, \"$db\": \"opal_server\"}", "commandName": "aggregate", "databaseName": "opal_server", "requestId": 5705, "operationId": 5705, "driverConnectionId": 1, "serverConnectionId": 13052, "serverHost": "3.144.134.141", "serverPort": 27017}
2025-03-13 15:23:05,477 - pymongo.command - DEBUG - {"clientId": {"$oid": "67d2b1e1f4015777fa0580a9"}, "message": "Command succeeded", "durationMS": 274.703, "reply": "{\"cursor\": {\"firstBatch\": [{\"_id\": 1, \"n\": 24}], \"ns\": \"opal_server.violations\"}, \"ok\": 1.0}", "commandName": "aggregate", "databaseName": "opal_server", "requestId": 5705, "operationId": 5705, "driverConnectionId": 1, "serverConnectionId": 13052, "serverHost": "3.144.134.141", "serverPort": 27017}
2025-03-13 15:23:05,477 - pymongo.connection - DEBUG - {"clientId": {"$oid": "67d2b1e1f4015777fa0580a9"}, "message": "Connection checked in", "serverHost": "3.144.134.141", "serverPort": 27017, "driverConnectionId": 1}
2025-03-13 15:23:05,478 - app.db.repositories.data_repository - INFO - Found 24 documents in violations
2025-03-13 15:23:05,478 - pymongo.serverSelection - DEBUG - {"message": "Server selection started", "selector": "Primary()", "operation": "find", "topologyDescription": "<TopologyDescription id: 67d2b1e1f4015777fa0580a9, topology_type: Single, servers: [<ServerDescription ('3.144.134.141', 27017) server_type: Standalone, rtt: 0.24744000000006056>]>", "clientId": {"$oid": "67d2b1e1f4015777fa0580a9"}}
2025-03-13 15:23:05,479 - pymongo.serverSelection - DEBUG - {"message": "Server selection succeeded", "selector": "Primary()", "operation": "find", "topologyDescription": "<TopologyDescription id: 67d2b1e1f4015777fa0580a9, topology_type: Single, servers: [<ServerDescription ('3.144.134.141', 27017) server_type: Standalone, rtt: 0.24744000000006056>]>", "clientId": {"$oid": "67d2b1e1f4015777fa0580a9"}, "serverHost": "3.144.134.141", "serverPort": 27017}
2025-03-13 15:23:05,479 - pymongo.connection - DEBUG - {"clientId": {"$oid": "67d2b1e1f4015777fa0580a9"}, "message": "Connection checkout started", "serverHost": "3.144.134.141", "serverPort": 27017}
2025-03-13 15:23:05,479 - pymongo.connection - DEBUG - {"clientId": {"$oid": "67d2b1e1f4015777fa0580a9"}, "message": "Connection checked out", "serverHost": "3.144.134.141", "serverPort": 27017, "driverConnectionId": 1, "durationMS": 0.0}
2025-03-13 15:23:05,480 - pymongo.command - DEBUG - {"clientId": {"$oid": "67d2b1e1f4015777fa0580a9"}, "message": "Command started", "command": "{\"find\": \"violations\", \"filter\": {\"$or\": [{\"timestamp\": {\"$gte\": {\"$date\": \"2025-03-13T08:23:04.952Z\"}, \"$lte\": {\"$date\": \"2025-03-13T15:23:04.952Z\"}}}, {\"event_time\": {\"$gte\": {\"$date\": \"2025-03-13T08:23:04.952Z\"}, \"$lte\": {\"$date\": \"2025-03-13T15:23:04.952Z\"}}}, {\"created_at\": {\"$gte\": {\"$date\": \"2025-03-13T08:23:04.952Z\"}, \"$lte\": {\"$date\": \"2025-03-13T15:23:04.952Z\"}}}]}, \"limit\": 1000, \"lsid\": {\"id\": {\"$binary\": {\"base64\": \"SydOe269RsexkVWOgQEdUA==\", \"subType\": \"04\"}}}, \"$db\": \"opal_server\"}", "commandName": "find", "databaseName": "opal_server", "requestId": 28145, "operationId": 28145, "driverConnectionId": 1, "serverConnectionId": 13052, "serverHost": "3.144.134.141", "serverPort": 27017}
2025-03-13 15:23:05,987 - pymongo.command - DEBUG - {"clientId": {"$oid": "67d2b1e1f4015777fa0580a9"}, "message": "Command succeeded", "durationMS": 507.45700000000005, "reply": "{\"cursor\": {\"firstBatch\": [{\"_id\": {\"$oid\": \"67d296667a0d0bdc125e9f47\"}, \"event_id\": \"VIO-0971fbfa-31d0-49aa-b599-54943e543ebd-SPEED_LOW-2025-03-13T08:25:00+00:00\", \"event_time\": {\"$date\": \"2025-03-13T08:25:10.304Z\"}, \"vendor\": {\"$oid\": \"6703ad7f70ba41e9473dd8e7\"}, \"vehicle_uuid\": \"0971fbfa-31d0-49aa-b599-54943e543ebd\", \"vehicle_license\": \"6024MR\", \"driver_uuid\": \"e604d5c5-e1a6-45c3-b619-73393f04097c\", \"driver_name\": \"Rajanaeem Khan # NEW\", \"violation_type\": \"SPEED_LOW\", \"severity\": \"LOW\", \"description\": \"Speed limit exceeded: 48.0 km/h\", \"threshold\": 40.0, \"actual_value\": 48.0, \"location\": {\"latitude\": 21.327774, \"longitude\": 56.715034, \"altitude\": 135.0}, \"rule\": {\"_id\": {\"$oid\": \"67c4c815ab2d5578275f1822\"}, \"name\": \"Speed Limit - Low\", \"description\": \"Vehicle exceeding speed limit (40 km/h)\", \"rule_type\": \"SPEED_LOW\", \"threshold\": 40.0, \"enabled\": true, \"severity\": \"LOW\", \"priority\": 1, \"cooldown_period\": 120, \"parameters\": {\"unit\": \"km/h\", \"min_duration\": 10, \"tolerance\": 2.0}}, \"c...", "commandName": "find", "databaseName": "opal_server", "requestId": 28145, "operationId": 28145, "driverConnectionId": 1, "serverConnectionId": 13052, "serverHost": "3.144.134.141", "serverPort": 27017}
2025-03-13 15:23:05,987 - pymongo.connection - DEBUG - {"clientId": {"$oid": "67d2b1e1f4015777fa0580a9"}, "message": "Connection checked in", "serverHost": "3.144.134.141", "serverPort": 27017, "driverConnectionId": 1}
2025-03-13 15:23:05,989 - app.db.repositories.data_repository - DEBUG - Fetching vehicle events from database: opal_server
2025-03-13 15:23:05,989 - app.db.repositories.data_repository - DEBUG - Vehicle events query: {'$or': [{'timestamp': {'$gte': datetime.datetime(2025, 3, 13, 8, 23, 4, 952280), '$lte': datetime.datetime(2025, 3, 13, 15, 23, 4, 952280)}}, {'event_time': {'$gte': datetime.datetime(2025, 3, 13, 8, 23, 4, 952280), '$lte': datetime.datetime(2025, 3, 13, 15, 23, 4, 952280)}}, {'created_at': {'$gte': datetime.datetime(2025, 3, 13, 8, 23, 4, 952280), '$lte': datetime.datetime(2025, 3, 13, 15, 23, 4, 952280)}}]}
2025-03-13 15:23:05,989 - app.db.repositories.data_repository - DEBUG - Time range: {'$gte': datetime.datetime(2025, 3, 13, 8, 23, 4, 952280), '$lte': datetime.datetime(2025, 3, 13, 15, 23, 4, 952280)}
2025-03-13 15:23:05,989 - pymongo.serverSelection - DEBUG - {"message": "Server selection started", "selector": "Primary()", "operation": "listCollections", "topologyDescription": "<TopologyDescription id: 67d2b1e1f4015777fa0580a9, topology_type: Single, servers: [<ServerDescription ('3.144.134.141', 27017) server_type: Standalone, rtt: 0.24744000000006056>]>", "clientId": {"$oid": "67d2b1e1f4015777fa0580a9"}}
2025-03-13 15:23:05,990 - pymongo.serverSelection - DEBUG - {"message": "Server selection succeeded", "selector": "Primary()", "operation": "listCollections", "topologyDescription": "<TopologyDescription id: 67d2b1e1f4015777fa0580a9, topology_type: Single, servers: [<ServerDescription ('3.144.134.141', 27017) server_type: Standalone, rtt: 0.24744000000006056>]>", "clientId": {"$oid": "67d2b1e1f4015777fa0580a9"}, "serverHost": "3.144.134.141", "serverPort": 27017}
2025-03-13 15:23:05,990 - pymongo.connection - DEBUG - {"clientId": {"$oid": "67d2b1e1f4015777fa0580a9"}, "message": "Connection checkout started", "serverHost": "3.144.134.141", "serverPort": 27017}
2025-03-13 15:23:05,990 - pymongo.connection - DEBUG - {"clientId": {"$oid": "67d2b1e1f4015777fa0580a9"}, "message": "Connection checked out", "serverHost": "3.144.134.141", "serverPort": 27017, "driverConnectionId": 1, "durationMS": 0.0}
2025-03-13 15:23:05,990 - pymongo.command - DEBUG - {"clientId": {"$oid": "67d2b1e1f4015777fa0580a9"}, "message": "Command started", "command": "{\"listCollections\": 1, \"nameOnly\": true, \"lsid\": {\"id\": {\"$binary\": {\"base64\": \"SydOe269RsexkVWOgQEdUA==\", \"subType\": \"04\"}}}, \"$db\": \"opal_server\"}", "commandName": "listCollections", "databaseName": "opal_server", "requestId": 23281, "operationId": 23281, "driverConnectionId": 1, "serverConnectionId": 13052, "serverHost": "3.144.134.141", "serverPort": 27017}
2025-03-13 15:23:05,994 - pymongo.topology - DEBUG - {"topologyId": {"$oid": "67d2b1e1f4015777fa0580a9"}, "driverConnectionId": 1, "serverConnectionId": 13050, "serverHost": "3.144.134.141", "serverPort": 27017, "awaited": true, "durationMS": 10000.0, "reply": "{\"isWritablePrimary\": true, \"topologyVersion\": {\"processId\": {\"$oid\": \"67b7e5814f77c1a87c56d054\"}}, \"maxBsonObjectSize\": 16777216, \"maxMessageSizeBytes\": 48000000, \"maxWriteBatchSize\": 100000, \"localTime\": {\"$date\": \"2025-03-13T10:23:06.012Z\"}, \"logicalSessionTimeoutMinutes\": 30, \"connectionId\": 13050, \"maxWireVersion\": 25, \"ok\": 1.0}", "message": "Server heartbeat succeeded"}
2025-03-13 15:23:05,995 - pymongo.topology - DEBUG - {"topologyId": {"$oid": "67d2b1e1f4015777fa0580a9"}, "driverConnectionId": 1, "serverConnectionId": 13050, "serverHost": "3.144.134.141", "serverPort": 27017, "awaited": true, "message": "Server heartbeat started"}
2025-03-13 15:23:06,233 - pymongo.command - DEBUG - {"clientId": {"$oid": "67d2b1e1f4015777fa0580a9"}, "message": "Command succeeded", "durationMS": 243.307, "reply": "{\"cursor\": {\"ns\": \"opal_server.$cmd.listCollections\", \"firstBatch\": [{\"name\": \"rags\", \"type\": \"collection\"}, {\"name\": \"trips\", \"type\": \"collection\"}, {\"name\": \"vehicles\", \"type\": \"collection\"}, {\"name\": \"permissions\", \"type\": \"collection\"}, {\"name\": \"notifications\", \"type\": \"collection\"}, {\"name\": \"crash_events\", \"type\": \"collection\"}, {\"name\": \"violations-x\", \"type\": \"collection\"}, {\"name\": \"drivers\", \"type\": \"collection\"}, {\"name\": \"geofences\", \"type\": \"collection\"}, {\"name\": \"tickets\", \"type\": \"collection\"}, {\"name\": \"vehicleevents\", \"type\": \"collection\"}, {\"name\": \"vendors\", \"type\": \"collection\"}, {\"name\": \"roles\", \"type\": \"collection\"}, {\"name\": \"clients\", \"type\": \"collection\"}, {\"name\": \"vendordevices\", \"type\": \"collection\"}, {\"name\": \"settings\", \"type\": \"collection\"}, {\"name\": \"media\", \"type\": \"collection\"}, {\"name\": \"violation_rules\", \"type\": \"collection\"}, {\"name\": \"violations\", \"type\": \"collection\"}, {\"name\": \"users\", \"type\": \"collection\"}, {\"name\": \"companies\", \"type\": \"coll...", "commandName": "listCollections", "databaseName": "opal_server", "requestId": 23281, "operationId": 23281, "driverConnectionId": 1, "serverConnectionId": 13052, "serverHost": "3.144.134.141", "serverPort": 27017}
2025-03-13 15:23:06,234 - pymongo.connection - DEBUG - {"clientId": {"$oid": "67d2b1e1f4015777fa0580a9"}, "message": "Connection checked in", "serverHost": "3.144.134.141", "serverPort": 27017, "driverConnectionId": 1}
2025-03-13 15:23:06,235 - app.db.repositories.data_repository - DEBUG - Available collections: ['rags', 'trips', 'vehicles', 'permissions', 'notifications', 'crash_events', 'violations-x', 'drivers', 'geofences', 'tickets', 'vehicleevents', 'vendors', 'roles', 'clients', 'vendordevices', 'settings', 'media', 'violation_rules', 'violations', 'users', 'companies']
2025-03-13 15:23:06,236 - pymongo.serverSelection - DEBUG - {"message": "Server selection started", "selector": "Primary()", "operation": "find", "topologyDescription": "<TopologyDescription id: 67d2b1e1f4015777fa0580a9, topology_type: Single, servers: [<ServerDescription ('3.144.134.141', 27017) server_type: Standalone, rtt: 0.24795200000004847>]>", "clientId": {"$oid": "67d2b1e1f4015777fa0580a9"}}
2025-03-13 15:23:06,236 - pymongo.serverSelection - DEBUG - {"message": "Server selection succeeded", "selector": "Primary()", "operation": "find", "topologyDescription": "<TopologyDescription id: 67d2b1e1f4015777fa0580a9, topology_type: Single, servers: [<ServerDescription ('3.144.134.141', 27017) server_type: Standalone, rtt: 0.24795200000004847>]>", "clientId": {"$oid": "67d2b1e1f4015777fa0580a9"}, "serverHost": "3.144.134.141", "serverPort": 27017}
2025-03-13 15:23:06,237 - pymongo.connection - DEBUG - {"clientId": {"$oid": "67d2b1e1f4015777fa0580a9"}, "message": "Connection checkout started", "serverHost": "3.144.134.141", "serverPort": 27017}
2025-03-13 15:23:06,237 - pymongo.connection - DEBUG - {"clientId": {"$oid": "67d2b1e1f4015777fa0580a9"}, "message": "Connection checked out", "serverHost": "3.144.134.141", "serverPort": 27017, "driverConnectionId": 1, "durationMS": 0.0}
2025-03-13 15:23:06,238 - pymongo.command - DEBUG - {"clientId": {"$oid": "67d2b1e1f4015777fa0580a9"}, "message": "Command started", "command": "{\"find\": \"vehicleevents\", \"limit\": 1, \"singleBatch\": true, \"lsid\": {\"id\": {\"$binary\": {\"base64\": \"SydOe269RsexkVWOgQEdUA==\", \"subType\": \"04\"}}}, \"$db\": \"opal_server\"}", "commandName": "find", "databaseName": "opal_server", "requestId": 16827, "operationId": 16827, "driverConnectionId": 1, "serverConnectionId": 13052, "serverHost": "3.144.134.141", "serverPort": 27017}
2025-03-13 15:23:06,482 - pymongo.command - DEBUG - {"clientId": {"$oid": "67d2b1e1f4015777fa0580a9"}, "message": "Command succeeded", "durationMS": 244.459, "reply": "{\"cursor\": {\"firstBatch\": [{\"_id\": {\"$oid\": \"67441bdeb231195485d25272\"}, \"vendor\": {\"$oid\": \"6703ad7f70ba41e9473dd8e7\"}, \"deviceTime\": {\"$date\": \"2024-11-22T12:48:47Z\"}, \"serverTime\": {\"$date\": \"2024-11-22T12:48:47.958Z\"}, \"location\": {\"latitude\": 18.542048, \"longitude\": 55.852535, \"altitude\": 240}, \"ignition\": true, \"speed\": 68, \"heading\": 84, \"event\": {\"type\": \"DISTANCE_TRAVEL\", \"name\": \"Distance Traveled\"}, \"odometer\": 85198.52713696871, \"satellites\": 26, \"diff\": {\"distanceMeter\": 226.15911957109347, \"durationMillis\": 11000, \"ignitionOn\": true, \"moving\": true}, \"vehicle\": {\"license\": \"1765HW\", \"uuid\": \"f59c5202-eda5-4348-9d66-ec14718f076b\"}, \"device\": {\"imei\": \"358925430754727\"}, \"hdop\": 25.5, \"positionAccuracy\": 37.507210845177696, \"batteryVoltage\": 4.026, \"createdAt\": {\"$date\": \"2024-11-25T06:40:30.615Z\"}, \"updatedAt\": {\"$date\": \"2024-11-25T06:40:30.615Z\"}}], \"ns\": \"opal_server.vehicleevents\"}, \"ok\": 1.0}", "commandName": "find", "databaseName": "opal_server", "requestId": 16827, "operationId": 16827, "driverConnectionId": 1, "serverConnectionId": 13052, "serverHost": "3.144.134.141", "serverPort": 27017}
2025-03-13 15:23:06,483 - pymongo.connection - DEBUG - {"clientId": {"$oid": "67d2b1e1f4015777fa0580a9"}, "message": "Connection checked in", "serverHost": "3.144.134.141", "serverPort": 27017, "driverConnectionId": 1}
2025-03-13 15:23:06,483 - app.db.repositories.data_repository - DEBUG - Sample document fields: ['_id', 'vendor', 'deviceTime', 'serverTime', 'location', 'ignition', 'speed', 'heading', 'event', 'odometer', 'satellites', 'wrongOrdered', 'diff', 'vehicle', 'device', 'hdop', 'positionAccuracy', 'batteryVoltage', '__v', 'createdAt', 'updatedAt']
2025-03-13 15:23:06,484 - pymongo.serverSelection - DEBUG - {"message": "Server selection started", "selector": "Primary()", "operation": "count", "topologyDescription": "<TopologyDescription id: 67d2b1e1f4015777fa0580a9, topology_type: Single, servers: [<ServerDescription ('3.144.134.141', 27017) server_type: Standalone, rtt: 0.24795200000004847>]>", "clientId": {"$oid": "67d2b1e1f4015777fa0580a9"}}
2025-03-13 15:23:06,484 - pymongo.serverSelection - DEBUG - {"message": "Server selection succeeded", "selector": "Primary()", "operation": "count", "topologyDescription": "<TopologyDescription id: 67d2b1e1f4015777fa0580a9, topology_type: Single, servers: [<ServerDescription ('3.144.134.141', 27017) server_type: Standalone, rtt: 0.24795200000004847>]>", "clientId": {"$oid": "67d2b1e1f4015777fa0580a9"}, "serverHost": "3.144.134.141", "serverPort": 27017}
2025-03-13 15:23:06,484 - pymongo.connection - DEBUG - {"clientId": {"$oid": "67d2b1e1f4015777fa0580a9"}, "message": "Connection checkout started", "serverHost": "3.144.134.141", "serverPort": 27017}
2025-03-13 15:23:06,485 - pymongo.connection - DEBUG - {"clientId": {"$oid": "67d2b1e1f4015777fa0580a9"}, "message": "Connection checked out", "serverHost": "3.144.134.141", "serverPort": 27017, "driverConnectionId": 1, "durationMS": 0.0}
2025-03-13 15:23:06,485 - pymongo.command - DEBUG - {"clientId": {"$oid": "67d2b1e1f4015777fa0580a9"}, "message": "Command started", "command": "{\"aggregate\": \"vehicleevents\", \"pipeline\": [{\"$match\": {\"$or\": [{\"timestamp\": {\"$gte\": {\"$date\": \"2025-03-13T08:23:04.952Z\"}, \"$lte\": {\"$date\": \"2025-03-13T15:23:04.952Z\"}}}, {\"event_time\": {\"$gte\": {\"$date\": \"2025-03-13T08:23:04.952Z\"}, \"$lte\": {\"$date\": \"2025-03-13T15:23:04.952Z\"}}}, {\"created_at\": {\"$gte\": {\"$date\": \"2025-03-13T08:23:04.952Z\"}, \"$lte\": {\"$date\": \"2025-03-13T15:23:04.952Z\"}}}]}}, {\"$group\": {\"_id\": 1, \"n\": {\"$sum\": 1}}}], \"lsid\": {\"id\": {\"$binary\": {\"base64\": \"SydOe269RsexkVWOgQEdUA==\", \"subType\": \"04\"}}}, \"$db\": \"opal_server\"}", "commandName": "aggregate", "databaseName": "opal_server", "requestId": 9961, "operationId": 9961, "driverConnectionId": 1, "serverConnectionId": 13052, "serverHost": "3.144.134.141", "serverPort": 27017}
2025-03-13 15:23:12,665 - pymongo.command - DEBUG - {"clientId": {"$oid": "67d2b1e1f4015777fa0580a9"}, "message": "Command succeeded", "durationMS": 6180.124, "reply": "{\"cursor\": {\"ns\": \"opal_server.vehicleevents\"}, \"ok\": 1.0}", "commandName": "aggregate", "databaseName": "opal_server", "requestId": 9961, "operationId": 9961, "driverConnectionId": 1, "serverConnectionId": 13052, "serverHost": "3.144.134.141", "serverPort": 27017}
2025-03-13 15:23:12,666 - pymongo.connection - DEBUG - {"clientId": {"$oid": "67d2b1e1f4015777fa0580a9"}, "message": "Connection checked in", "serverHost": "3.144.134.141", "serverPort": 27017, "driverConnectionId": 1}
2025-03-13 15:23:12,666 - app.db.repositories.data_repository - INFO - Found 0 matching vehicle events
2025-03-13 15:23:12,667 - pymongo.serverSelection - DEBUG - {"message": "Server selection started", "selector": "Primary()", "operation": "find", "topologyDescription": "<TopologyDescription id: 67d2b1e1f4015777fa0580a9, topology_type: Single, servers: [<ServerDescription ('3.144.134.141', 27017) server_type: Standalone, rtt: 0.24795200000004847>]>", "clientId": {"$oid": "67d2b1e1f4015777fa0580a9"}}
2025-03-13 15:23:12,667 - pymongo.serverSelection - DEBUG - {"message": "Server selection succeeded", "selector": "Primary()", "operation": "find", "topologyDescription": "<TopologyDescription id: 67d2b1e1f4015777fa0580a9, topology_type: Single, servers: [<ServerDescription ('3.144.134.141', 27017) server_type: Standalone, rtt: 0.24795200000004847>]>", "clientId": {"$oid": "67d2b1e1f4015777fa0580a9"}, "serverHost": "3.144.134.141", "serverPort": 27017}
2025-03-13 15:23:12,667 - pymongo.connection - DEBUG - {"clientId": {"$oid": "67d2b1e1f4015777fa0580a9"}, "message": "Connection checkout started", "serverHost": "3.144.134.141", "serverPort": 27017}
2025-03-13 15:23:12,668 - pymongo.connection - DEBUG - {"clientId": {"$oid": "67d2b1e1f4015777fa0580a9"}, "message": "Connection checked out", "serverHost": "3.144.134.141", "serverPort": 27017, "driverConnectionId": 1, "durationMS": 0.0}
2025-03-13 15:23:12,668 - pymongo.command - DEBUG - {"clientId": {"$oid": "67d2b1e1f4015777fa0580a9"}, "message": "Command started", "command": "{\"find\": \"vehicleevents\", \"filter\": {\"$or\": [{\"timestamp\": {\"$gte\": {\"$date\": \"2025-03-13T08:23:04.952Z\"}, \"$lte\": {\"$date\": \"2025-03-13T15:23:04.952Z\"}}}, {\"event_time\": {\"$gte\": {\"$date\": \"2025-03-13T08:23:04.952Z\"}, \"$lte\": {\"$date\": \"2025-03-13T15:23:04.952Z\"}}}, {\"created_at\": {\"$gte\": {\"$date\": \"2025-03-13T08:23:04.952Z\"}, \"$lte\": {\"$date\": \"2025-03-13T15:23:04.952Z\"}}}]}, \"limit\": 1000, \"lsid\": {\"id\": {\"$binary\": {\"base64\": \"SydOe269RsexkVWOgQEdUA==\", \"subType\": \"04\"}}}, \"$db\": \"opal_server\"}", "commandName": "find", "databaseName": "opal_server", "requestId": 491, "operationId": 491, "driverConnectionId": 1, "serverConnectionId": 13052, "serverHost": "3.144.134.141", "serverPort": 27017}
2025-03-13 15:23:16,004 - pymongo.topology - DEBUG - {"topologyId": {"$oid": "67d2b1e1f4015777fa0580a9"}, "driverConnectionId": 1, "serverConnectionId": 13050, "serverHost": "3.144.134.141", "serverPort": 27017, "awaited": true, "durationMS": 10000.0, "reply": "{\"isWritablePrimary\": true, \"topologyVersion\": {\"processId\": {\"$oid\": \"67b7e5814f77c1a87c56d054\"}}, \"maxBsonObjectSize\": 16777216, \"maxMessageSizeBytes\": 48000000, \"maxWriteBatchSize\": 100000, \"localTime\": {\"$date\": \"2025-03-13T10:23:16.022Z\"}, \"logicalSessionTimeoutMinutes\": 30, \"connectionId\": 13050, \"maxWireVersion\": 25, \"ok\": 1.0}", "message": "Server heartbeat succeeded"}
2025-03-13 15:23:16,005 - pymongo.topology - DEBUG - {"topologyId": {"$oid": "67d2b1e1f4015777fa0580a9"}, "driverConnectionId": 1, "serverConnectionId": 13050, "serverHost": "3.144.134.141", "serverPort": 27017, "awaited": true, "message": "Server heartbeat started"}
2025-03-13 15:23:19,455 - pymongo.command - DEBUG - {"clientId": {"$oid": "67d2b1e1f4015777fa0580a9"}, "message": "Command succeeded", "durationMS": 6786.215, "reply": "{\"cursor\": {\"ns\": \"opal_server.vehicleevents\"}, \"ok\": 1.0}", "commandName": "find", "databaseName": "opal_server", "requestId": 491, "operationId": 491, "driverConnectionId": 1, "serverConnectionId": 13052, "serverHost": "3.144.134.141", "serverPort": 27017}
2025-03-13 15:23:19,455 - pymongo.connection - DEBUG - {"clientId": {"$oid": "67d2b1e1f4015777fa0580a9"}, "message": "Connection checked in", "serverHost": "3.144.134.141", "serverPort": 27017, "driverConnectionId": 1}
2025-03-13 15:23:19,456 - app.db.repositories.data_repository - DEBUG - Retrieved 0 vehicle events
2025-03-13 15:23:19,456 - app.api.endpoints.analytics - DEBUG - Retrieved violations: 24
2025-03-13 15:23:19,456 - app.api.endpoints.analytics - DEBUG - Retrieved events: 0
2025-03-13 15:23:19,456 - app.api.endpoints.analytics - INFO - Analysis completed - Found 24 violations and 6 drivers
2025-03-13 15:23:26,005 - pymongo.topology - DEBUG - {"topologyId": {"$oid": "67d2b1e1f4015777fa0580a9"}, "driverConnectionId": 1, "serverConnectionId": 13050, "serverHost": "3.144.134.141", "serverPort": 27017, "awaited": true, "durationMS": 10000.0, "reply": "{\"isWritablePrimary\": true, \"topologyVersion\": {\"processId\": {\"$oid\": \"67b7e5814f77c1a87c56d054\"}}, \"maxBsonObjectSize\": 16777216, \"maxMessageSizeBytes\": 48000000, \"maxWriteBatchSize\": 100000, \"localTime\": {\"$date\": \"2025-03-13T10:23:26.022Z\"}, \"logicalSessionTimeoutMinutes\": 30, \"connectionId\": 13050, \"maxWireVersion\": 25, \"ok\": 1.0}", "message": "Server heartbeat succeeded"}
2025-03-13 15:23:26,006 - pymongo.topology - DEBUG - {"topologyId": {"$oid": "67d2b1e1f4015777fa0580a9"}, "driverConnectionId": 1, "serverConnectionId": 13050, "serverHost": "3.144.134.141", "serverPort": 27017, "awaited": true, "message": "Server heartbeat started"}
2025-03-13 15:23:36,004 - pymongo.topology - DEBUG - {"topologyId": {"$oid": "67d2b1e1f4015777fa0580a9"}, "driverConnectionId": 1, "serverConnectionId": 13050, "serverHost": "3.144.134.141", "serverPort": 27017, "awaited": true, "durationMS": 10000.0, "reply": "{\"isWritablePrimary\": true, \"topologyVersion\": {\"processId\": {\"$oid\": \"67b7e5814f77c1a87c56d054\"}}, \"maxBsonObjectSize\": 16777216, \"maxMessageSizeBytes\": 48000000, \"maxWriteBatchSize\": 100000, \"localTime\": {\"$date\": \"2025-03-13T10:23:36.022Z\"}, \"logicalSessionTimeoutMinutes\": 30, \"connectionId\": 13050, \"maxWireVersion\": 25, \"ok\": 1.0}", "message": "Server heartbeat succeeded"}
2025-03-13 15:23:36,004 - pymongo.topology - DEBUG - {"topologyId": {"$oid": "67d2b1e1f4015777fa0580a9"}, "driverConnectionId": 1, "serverConnectionId": 13050, "serverHost": "3.144.134.141", "serverPort": 27017, "awaited": true, "message": "Server heartbeat started"}
2025-03-13 15:23:46,005 - pymongo.topology - DEBUG - {"topologyId": {"$oid": "67d2b1e1f4015777fa0580a9"}, "driverConnectionId": 1, "serverConnectionId": 13050, "serverHost": "3.144.134.141", "serverPort": 27017, "awaited": true, "durationMS": 10000.0, "reply": "{\"isWritablePrimary\": true, \"topologyVersion\": {\"processId\": {\"$oid\": \"67b7e5814f77c1a87c56d054\"}}, \"maxBsonObjectSize\": 16777216, \"maxMessageSizeBytes\": 48000000, \"maxWriteBatchSize\": 100000, \"localTime\": {\"$date\": \"2025-03-13T10:23:46.023Z\"}, \"logicalSessionTimeoutMinutes\": 30, \"connectionId\": 13050, \"maxWireVersion\": 25, \"ok\": 1.0}", "message": "Server heartbeat succeeded"}
2025-03-13 15:23:46,005 - pymongo.topology - DEBUG - {"topologyId": {"$oid": "67d2b1e1f4015777fa0580a9"}, "driverConnectionId": 1, "serverConnectionId": 13050, "serverHost": "3.144.134.141", "serverPort": 27017, "awaited": true, "message": "Server heartbeat started"}
2025-03-13 15:23:56,006 - pymongo.topology - DEBUG - {"topologyId": {"$oid": "67d2b1e1f4015777fa0580a9"}, "driverConnectionId": 1, "serverConnectionId": 13050, "serverHost": "3.144.134.141", "serverPort": 27017, "awaited": true, "durationMS": 10000.0, "reply": "{\"isWritablePrimary\": true, \"topologyVersion\": {\"processId\": {\"$oid\": \"67b7e5814f77c1a87c56d054\"}}, \"maxBsonObjectSize\": 16777216, \"maxMessageSizeBytes\": 48000000, \"maxWriteBatchSize\": 100000, \"localTime\": {\"$date\": \"2025-03-13T10:23:56.023Z\"}, \"logicalSessionTimeoutMinutes\": 30, \"connectionId\": 13050, \"maxWireVersion\": 25, \"ok\": 1.0}", "message": "Server heartbeat succeeded"}
2025-03-13 15:23:56,006 - pymongo.topology - DEBUG - {"topologyId": {"$oid": "67d2b1e1f4015777fa0580a9"}, "driverConnectionId": 1, "serverConnectionId": 13050, "serverHost": "3.144.134.141", "serverPort": 27017, "awaited": true, "message": "Server heartbeat started"}
2025-03-13 15:23:56,385 - app.api.endpoints.analytics - DEBUG - Starting real-time analysis request - timeframe: 3d, driver_uuid: None
2025-03-13 15:23:56,385 - app.api.endpoints.analytics - INFO - Fetching data for time window: 3d, driver: all drivers
2025-03-13 15:23:56,386 - app.services.predictive_analytics - DEBUG - Analyzing time window from 2025-03-10 15:23:56.385484 to 2025-03-13 15:23:56.385484
2025-03-13 15:23:56,386 - app.services.predictive_analytics - DEBUG - Time window: 72.0 hours
2025-03-13 15:23:56,386 - app.db.repositories.data_repository - DEBUG - Connected to database: opal_server
2025-03-13 15:23:56,386 - app.db.repositories.data_repository - DEBUG - Violations query: {'$or': [{'timestamp': {'$gte': datetime.datetime(2025, 3, 10, 15, 23, 56, 385484), '$lte': datetime.datetime(2025, 3, 13, 15, 23, 56, 385484)}}, {'event_time': {'$gte': datetime.datetime(2025, 3, 10, 15, 23, 56, 385484), '$lte': datetime.datetime(2025, 3, 13, 15, 23, 56, 385484)}}, {'created_at': {'$gte': datetime.datetime(2025, 3, 10, 15, 23, 56, 385484), '$lte': datetime.datetime(2025, 3, 13, 15, 23, 56, 385484)}}]}
2025-03-13 15:23:56,386 - app.db.repositories.data_repository - DEBUG - Using database: opal_server
2025-03-13 15:23:56,387 - pymongo.serverSelection - DEBUG - {"message": "Server selection started", "selector": "Primary()", "operation": "listCollections", "topologyDescription": "<TopologyDescription id: 67d2b1e1f4015777fa0580a9, topology_type: Single, servers: [<ServerDescription ('3.144.134.141', 27017) server_type: Standalone, rtt: 0.2493289113600159>]>", "clientId": {"$oid": "67d2b1e1f4015777fa0580a9"}}
2025-03-13 15:23:56,387 - pymongo.serverSelection - DEBUG - {"message": "Server selection succeeded", "selector": "Primary()", "operation": "listCollections", "topologyDescription": "<TopologyDescription id: 67d2b1e1f4015777fa0580a9, topology_type: Single, servers: [<ServerDescription ('3.144.134.141', 27017) server_type: Standalone, rtt: 0.2493289113600159>]>", "clientId": {"$oid": "67d2b1e1f4015777fa0580a9"}, "serverHost": "3.144.134.141", "serverPort": 27017}
2025-03-13 15:23:56,388 - pymongo.connection - DEBUG - {"clientId": {"$oid": "67d2b1e1f4015777fa0580a9"}, "message": "Connection checkout started", "serverHost": "3.144.134.141", "serverPort": 27017}
2025-03-13 15:23:56,388 - pymongo.connection - DEBUG - {"clientId": {"$oid": "67d2b1e1f4015777fa0580a9"}, "message": "Connection checked out", "serverHost": "3.144.134.141", "serverPort": 27017, "driverConnectionId": 1, "durationMS": 0.0}
2025-03-13 15:23:56,389 - pymongo.command - DEBUG - {"clientId": {"$oid": "67d2b1e1f4015777fa0580a9"}, "message": "Command started", "command": "{\"listCollections\": 1, \"nameOnly\": true, \"lsid\": {\"id\": {\"$binary\": {\"base64\": \"SydOe269RsexkVWOgQEdUA==\", \"subType\": \"04\"}}}, \"$db\": \"opal_server\"}", "commandName": "listCollections", "databaseName": "opal_server", "requestId": 2995, "operationId": 2995, "driverConnectionId": 1, "serverConnectionId": 13052, "serverHost": "3.144.134.141", "serverPort": 27017}
2025-03-13 15:23:56,633 - pymongo.command - DEBUG - {"clientId": {"$oid": "67d2b1e1f4015777fa0580a9"}, "message": "Command succeeded", "durationMS": 243.431, "reply": "{\"cursor\": {\"ns\": \"opal_server.$cmd.listCollections\", \"firstBatch\": [{\"name\": \"rags\", \"type\": \"collection\"}, {\"name\": \"trips\", \"type\": \"collection\"}, {\"name\": \"vehicles\", \"type\": \"collection\"}, {\"name\": \"permissions\", \"type\": \"collection\"}, {\"name\": \"notifications\", \"type\": \"collection\"}, {\"name\": \"crash_events\", \"type\": \"collection\"}, {\"name\": \"violations-x\", \"type\": \"collection\"}, {\"name\": \"drivers\", \"type\": \"collection\"}, {\"name\": \"geofences\", \"type\": \"collection\"}, {\"name\": \"tickets\", \"type\": \"collection\"}, {\"name\": \"vehicleevents\", \"type\": \"collection\"}, {\"name\": \"vendors\", \"type\": \"collection\"}, {\"name\": \"roles\", \"type\": \"collection\"}, {\"name\": \"clients\", \"type\": \"collection\"}, {\"name\": \"vendordevices\", \"type\": \"collection\"}, {\"name\": \"settings\", \"type\": \"collection\"}, {\"name\": \"media\", \"type\": \"collection\"}, {\"name\": \"violation_rules\", \"type\": \"collection\"}, {\"name\": \"violations\", \"type\": \"collection\"}, {\"name\": \"users\", \"type\": \"collection\"}, {\"name\": \"companies\", \"type\": \"coll...", "commandName": "listCollections", "databaseName": "opal_server", "requestId": 2995, "operationId": 2995, "driverConnectionId": 1, "serverConnectionId": 13052, "serverHost": "3.144.134.141", "serverPort": 27017}
2025-03-13 15:23:56,634 - pymongo.connection - DEBUG - {"clientId": {"$oid": "67d2b1e1f4015777fa0580a9"}, "message": "Connection checked in", "serverHost": "3.144.134.141", "serverPort": 27017, "driverConnectionId": 1}
2025-03-13 15:23:56,635 - app.db.repositories.data_repository - DEBUG - Available collections: ['rags', 'trips', 'vehicles', 'permissions', 'notifications', 'crash_events', 'violations-x', 'drivers', 'geofences', 'tickets', 'vehicleevents', 'vendors', 'roles', 'clients', 'vendordevices', 'settings', 'media', 'violation_rules', 'violations', 'users', 'companies']
2025-03-13 15:23:56,635 - app.db.repositories.data_repository - DEBUG - Checking collection: violations
2025-03-13 15:23:56,635 - pymongo.serverSelection - DEBUG - {"message": "Server selection started", "selector": "Primary()", "operation": "count", "topologyDescription": "<TopologyDescription id: 67d2b1e1f4015777fa0580a9, topology_type: Single, servers: [<ServerDescription ('3.144.134.141', 27017) server_type: Standalone, rtt: 0.2493289113600159>]>", "clientId": {"$oid": "67d2b1e1f4015777fa0580a9"}}
2025-03-13 15:23:56,635 - pymongo.serverSelection - DEBUG - {"message": "Server selection succeeded", "selector": "Primary()", "operation": "count", "topologyDescription": "<TopologyDescription id: 67d2b1e1f4015777fa0580a9, topology_type: Single, servers: [<ServerDescription ('3.144.134.141', 27017) server_type: Standalone, rtt: 0.2493289113600159>]>", "clientId": {"$oid": "67d2b1e1f4015777fa0580a9"}, "serverHost": "3.144.134.141", "serverPort": 27017}
2025-03-13 15:23:56,636 - pymongo.connection - DEBUG - {"clientId": {"$oid": "67d2b1e1f4015777fa0580a9"}, "message": "Connection checkout started", "serverHost": "3.144.134.141", "serverPort": 27017}
2025-03-13 15:23:56,636 - pymongo.connection - DEBUG - {"clientId": {"$oid": "67d2b1e1f4015777fa0580a9"}, "message": "Connection checked out", "serverHost": "3.144.134.141", "serverPort": 27017, "driverConnectionId": 1, "durationMS": 0.0}
2025-03-13 15:23:56,636 - pymongo.command - DEBUG - {"clientId": {"$oid": "67d2b1e1f4015777fa0580a9"}, "message": "Command started", "command": "{\"aggregate\": \"violations\", \"pipeline\": [{\"$match\": {\"$or\": [{\"timestamp\": {\"$gte\": {\"$date\": \"2025-03-10T15:23:56.385Z\"}, \"$lte\": {\"$date\": \"2025-03-13T15:23:56.385Z\"}}}, {\"event_time\": {\"$gte\": {\"$date\": \"2025-03-10T15:23:56.385Z\"}, \"$lte\": {\"$date\": \"2025-03-13T15:23:56.385Z\"}}}, {\"created_at\": {\"$gte\": {\"$date\": \"2025-03-10T15:23:56.385Z\"}, \"$lte\": {\"$date\": \"2025-03-13T15:23:56.385Z\"}}}]}}, {\"$group\": {\"_id\": 1, \"n\": {\"$sum\": 1}}}], \"lsid\": {\"id\": {\"$binary\": {\"base64\": \"SydOe269RsexkVWOgQEdUA==\", \"subType\": \"04\"}}}, \"$db\": \"opal_server\"}", "commandName": "aggregate", "databaseName": "opal_server", "requestId": 11942, "operationId": 11942, "driverConnectionId": 1, "serverConnectionId": 13052, "serverHost": "3.144.134.141", "serverPort": 27017}
2025-03-13 15:23:56,908 - pymongo.command - DEBUG - {"clientId": {"$oid": "67d2b1e1f4015777fa0580a9"}, "message": "Command succeeded", "durationMS": 272.028, "reply": "{\"cursor\": {\"firstBatch\": [{\"_id\": 1, \"n\": 4199}], \"ns\": \"opal_server.violations\"}, \"ok\": 1.0}", "commandName": "aggregate", "databaseName": "opal_server", "requestId": 11942, "operationId": 11942, "driverConnectionId": 1, "serverConnectionId": 13052, "serverHost": "3.144.134.141", "serverPort": 27017}
2025-03-13 15:23:56,908 - pymongo.connection - DEBUG - {"clientId": {"$oid": "67d2b1e1f4015777fa0580a9"}, "message": "Connection checked in", "serverHost": "3.144.134.141", "serverPort": 27017, "driverConnectionId": 1}
2025-03-13 15:23:56,909 - app.db.repositories.data_repository - INFO - Found 4199 documents in violations
2025-03-13 15:23:56,909 - pymongo.serverSelection - DEBUG - {"message": "Server selection started", "selector": "Primary()", "operation": "find", "topologyDescription": "<TopologyDescription id: 67d2b1e1f4015777fa0580a9, topology_type: Single, servers: [<ServerDescription ('3.144.134.141', 27017) server_type: Standalone, rtt: 0.2493289113600159>]>", "clientId": {"$oid": "67d2b1e1f4015777fa0580a9"}}
2025-03-13 15:23:56,910 - pymongo.serverSelection - DEBUG - {"message": "Server selection succeeded", "selector": "Primary()", "operation": "find", "topologyDescription": "<TopologyDescription id: 67d2b1e1f4015777fa0580a9, topology_type: Single, servers: [<ServerDescription ('3.144.134.141', 27017) server_type: Standalone, rtt: 0.2493289113600159>]>", "clientId": {"$oid": "67d2b1e1f4015777fa0580a9"}, "serverHost": "3.144.134.141", "serverPort": 27017}
2025-03-13 15:23:56,910 - pymongo.connection - DEBUG - {"clientId": {"$oid": "67d2b1e1f4015777fa0580a9"}, "message": "Connection checkout started", "serverHost": "3.144.134.141", "serverPort": 27017}
2025-03-13 15:23:56,910 - pymongo.connection - DEBUG - {"clientId": {"$oid": "67d2b1e1f4015777fa0580a9"}, "message": "Connection checked out", "serverHost": "3.144.134.141", "serverPort": 27017, "driverConnectionId": 1, "durationMS": 0.0}
2025-03-13 15:23:56,912 - pymongo.command - DEBUG - {"clientId": {"$oid": "67d2b1e1f4015777fa0580a9"}, "message": "Command started", "command": "{\"find\": \"violations\", \"filter\": {\"$or\": [{\"timestamp\": {\"$gte\": {\"$date\": \"2025-03-10T15:23:56.385Z\"}, \"$lte\": {\"$date\": \"2025-03-13T15:23:56.385Z\"}}}, {\"event_time\": {\"$gte\": {\"$date\": \"2025-03-10T15:23:56.385Z\"}, \"$lte\": {\"$date\": \"2025-03-13T15:23:56.385Z\"}}}, {\"created_at\": {\"$gte\": {\"$date\": \"2025-03-10T15:23:56.385Z\"}, \"$lte\": {\"$date\": \"2025-03-13T15:23:56.385Z\"}}}]}, \"limit\": 1000, \"lsid\": {\"id\": {\"$binary\": {\"base64\": \"SydOe269RsexkVWOgQEdUA==\", \"subType\": \"04\"}}}, \"$db\": \"opal_server\"}", "commandName": "find", "databaseName": "opal_server", "requestId": 4827, "operationId": 4827, "driverConnectionId": 1, "serverConnectionId": 13052, "serverHost": "3.144.134.141", "serverPort": 27017}
2025-03-13 15:23:57,675 - pymongo.command - DEBUG - {"clientId": {"$oid": "67d2b1e1f4015777fa0580a9"}, "message": "Command succeeded", "durationMS": 764.494, "reply": "{\"cursor\": {\"firstBatch\": [{\"_id\": {\"$oid\": \"67cf04577a0d0bdc125e8ef8\"}, \"event_id\": \"VIO-12b24999-e068-4bc7-b4df-97c8e1a16675-SPEED_MEDIUM-2025-03-10T15:25:00+00:00\", \"event_time\": {\"$date\": \"2025-03-10T15:25:11.175Z\"}, \"vendor\": {\"$oid\": \"6703ad7f70ba41e9473dd8e7\"}, \"vehicle_uuid\": \"12b24999-e068-4bc7-b4df-97c8e1a16675\", \"vehicle_license\": \"1313YD\", \"driver_uuid\": \"3dd80f61-5ed1-4038-b3a8-5d2e37759893\", \"driver_name\": \"DALER SINGH\", \"violation_type\": \"SPEED_MEDIUM\", \"severity\": \"MEDIUM\", \"description\": \"Speed limit exceeded: 69.0 km/h\", \"threshold\": 60.0, \"actual_value\": 69.0, \"location\": {\"latitude\": 21.805754, \"longitude\": 57.348198, \"altitude\": 189.0}, \"rule\": {\"_id\": {\"$oid\": \"67c4c815ab2d5578275f1823\"}, \"name\": \"Speed Limit - Medium\", \"description\": \"Vehicle exceeding speed limit (60 km/h)\", \"rule_type\": \"SPEED_MEDIUM\", \"threshold\": 60.0, \"enabled\": true, \"severity\": \"MEDIUM\", \"priority\": 2, \"cooldown_period\": 60, \"parameters\": {\"unit\": \"km/h\", \"min_duration\": 5, \"tolerance\": 1....", "commandName": "find", "databaseName": "opal_server", "requestId": 4827, "operationId": 4827, "driverConnectionId": 1, "serverConnectionId": 13052, "serverHost": "3.144.134.141", "serverPort": 27017}
2025-03-13 15:23:57,675 - pymongo.connection - DEBUG - {"clientId": {"$oid": "67d2b1e1f4015777fa0580a9"}, "message": "Connection checked in", "serverHost": "3.144.134.141", "serverPort": 27017, "driverConnectionId": 1}
2025-03-13 15:23:57,676 - pymongo.serverSelection - DEBUG - {"message": "Server selection started", "selector": "<function any_server_selector at 0x000001AAE0FC85E0>", "operation": "getMore", "topologyDescription": "<TopologyDescription id: 67d2b1e1f4015777fa0580a9, topology_type: Single, servers: [<ServerDescription ('3.144.134.141', 27017) server_type: Standalone, rtt: 0.2493289113600159>]>", "clientId": {"$oid": "67d2b1e1f4015777fa0580a9"}}
2025-03-13 15:23:57,676 - pymongo.serverSelection - DEBUG - {"message": "Server selection succeeded", "selector": "<function any_server_selector at 0x000001AAE0FC85E0>", "operation": "getMore", "topologyDescription": "<TopologyDescription id: 67d2b1e1f4015777fa0580a9, topology_type: Single, servers: [<ServerDescription ('3.144.134.141', 27017) server_type: Standalone, rtt: 0.2493289113600159>]>", "clientId": {"$oid": "67d2b1e1f4015777fa0580a9"}, "serverHost": "3.144.134.141", "serverPort": 27017}
2025-03-13 15:23:57,676 - pymongo.connection - DEBUG - {"clientId": {"$oid": "67d2b1e1f4015777fa0580a9"}, "message": "Connection checkout started", "serverHost": "3.144.134.141", "serverPort": 27017}
2025-03-13 15:23:57,677 - pymongo.connection - DEBUG - {"clientId": {"$oid": "67d2b1e1f4015777fa0580a9"}, "message": "Connection checked out", "serverHost": "3.144.134.141", "serverPort": 27017, "driverConnectionId": 1, "durationMS": 0.0}
2025-03-13 15:23:57,677 - pymongo.command - DEBUG - {"clientId": {"$oid": "67d2b1e1f4015777fa0580a9"}, "message": "Command started", "command": "{\"getMore\": 4791360498839313771, \"collection\": \"violations\", \"batchSize\": 899, \"lsid\": {\"id\": {\"$binary\": {\"base64\": \"SydOe269RsexkVWOgQEdUA==\", \"subType\": \"04\"}}}, \"$db\": \"opal_server\"}", "commandName": "getMore", "databaseName": "opal_server", "requestId": 5436, "operationId": 5436, "driverConnectionId": 1, "serverConnectionId": 13052, "serverHost": "3.144.134.141", "serverPort": 27017}
2025-03-13 15:23:58,687 - pymongo.command - DEBUG - {"clientId": {"$oid": "67d2b1e1f4015777fa0580a9"}, "message": "Command succeeded", "durationMS": 1009.968, "reply": "{\"cursor\": {\"nextBatch\": [{\"_id\": {\"$oid\": \"67cf177b7a0d0bdc125e8f5d\"}, \"event_id\": \"VIO-860665050646099-SPEED_LOW-2025-03-10T16:46:00+00:00\", \"event_time\": {\"$date\": \"2025-03-10T16:46:51.129Z\"}, \"vendor\": {\"$oid\": \"6703ad7f70ba41e9473dd8e7\"}, \"vehicle_uuid\": \"860665050646099\", \"vehicle_license\": \"860665050646099\", \"driver_uuid\": \"12990571\", \"driver_name\": \"Unknown\", \"violation_type\": \"SPEED_LOW\", \"severity\": \"LOW\", \"description\": \"Speed limit exceeded: 55.0 km/h\", \"threshold\": 40.0, \"actual_value\": 55.0, \"location\": {\"latitude\": 23.58736, \"longitude\": 58.382555, \"altitude\": 25.0}, \"rule\": {\"_id\": {\"$oid\": \"67c4c815ab2d5578275f1822\"}, \"name\": \"Speed Limit - Low\", \"description\": \"Vehicle exceeding speed limit (40 km/h)\", \"rule_type\": \"SPEED_LOW\", \"threshold\": 40.0, \"enabled\": true, \"severity\": \"LOW\", \"priority\": 1, \"cooldown_period\": 120, \"parameters\": {\"unit\": \"km/h\", \"min_duration\": 10, \"tolerance\": 2.0}}, \"created_at\": {\"$date\": \"2025-03-10T16:46:51.129Z\"}}, {\"_id\": {\"$oid\": \"67cf179...", "commandName": "getMore", "databaseName": "opal_server", "requestId": 5436, "operationId": 5436, "driverConnectionId": 1, "serverConnectionId": 13052, "serverHost": "3.144.134.141", "serverPort": 27017}
2025-03-13 15:23:58,688 - pymongo.connection - DEBUG - {"clientId": {"$oid": "67d2b1e1f4015777fa0580a9"}, "message": "Connection checked in", "serverHost": "3.144.134.141", "serverPort": 27017, "driverConnectionId": 1}
2025-03-13 15:23:58,689 - app.db.repositories.data_repository - DEBUG - Fetching vehicle events from database: opal_server
2025-03-13 15:23:58,689 - app.db.repositories.data_repository - DEBUG - Vehicle events query: {'$or': [{'timestamp': {'$gte': datetime.datetime(2025, 3, 10, 15, 23, 56, 385484), '$lte': datetime.datetime(2025, 3, 13, 15, 23, 56, 385484)}}, {'event_time': {'$gte': datetime.datetime(2025, 3, 10, 15, 23, 56, 385484), '$lte': datetime.datetime(2025, 3, 13, 15, 23, 56, 385484)}}, {'created_at': {'$gte': datetime.datetime(2025, 3, 10, 15, 23, 56, 385484), '$lte': datetime.datetime(2025, 3, 13, 15, 23, 56, 385484)}}]}
2025-03-13 15:23:58,689 - app.db.repositories.data_repository - DEBUG - Time range: {'$gte': datetime.datetime(2025, 3, 10, 15, 23, 56, 385484), '$lte': datetime.datetime(2025, 3, 13, 15, 23, 56, 385484)}
2025-03-13 15:23:58,689 - pymongo.serverSelection - DEBUG - {"message": "Server selection started", "selector": "Primary()", "operation": "listCollections", "topologyDescription": "<TopologyDescription id: 67d2b1e1f4015777fa0580a9, topology_type: Single, servers: [<ServerDescription ('3.144.134.141', 27017) server_type: Standalone, rtt: 0.2493289113600159>]>", "clientId": {"$oid": "67d2b1e1f4015777fa0580a9"}}
2025-03-13 15:23:58,690 - pymongo.serverSelection - DEBUG - {"message": "Server selection succeeded", "selector": "Primary()", "operation": "listCollections", "topologyDescription": "<TopologyDescription id: 67d2b1e1f4015777fa0580a9, topology_type: Single, servers: [<ServerDescription ('3.144.134.141', 27017) server_type: Standalone, rtt: 0.2493289113600159>]>", "clientId": {"$oid": "67d2b1e1f4015777fa0580a9"}, "serverHost": "3.144.134.141", "serverPort": 27017}
2025-03-13 15:23:58,690 - pymongo.connection - DEBUG - {"clientId": {"$oid": "67d2b1e1f4015777fa0580a9"}, "message": "Connection checkout started", "serverHost": "3.144.134.141", "serverPort": 27017}
2025-03-13 15:23:58,690 - pymongo.connection - DEBUG - {"clientId": {"$oid": "67d2b1e1f4015777fa0580a9"}, "message": "Connection checked out", "serverHost": "3.144.134.141", "serverPort": 27017, "driverConnectionId": 1, "durationMS": 0.0}
2025-03-13 15:23:58,691 - pymongo.command - DEBUG - {"clientId": {"$oid": "67d2b1e1f4015777fa0580a9"}, "message": "Command started", "command": "{\"listCollections\": 1, \"nameOnly\": true, \"lsid\": {\"id\": {\"$binary\": {\"base64\": \"SydOe269RsexkVWOgQEdUA==\", \"subType\": \"04\"}}}, \"$db\": \"opal_server\"}", "commandName": "listCollections", "databaseName": "opal_server", "requestId": 32391, "operationId": 32391, "driverConnectionId": 1, "serverConnectionId": 13052, "serverHost": "3.144.134.141", "serverPort": 27017}
2025-03-13 15:23:58,934 - pymongo.command - DEBUG - {"clientId": {"$oid": "67d2b1e1f4015777fa0580a9"}, "message": "Command succeeded", "durationMS": 243.252, "reply": "{\"cursor\": {\"ns\": \"opal_server.$cmd.listCollections\", \"firstBatch\": [{\"name\": \"rags\", \"type\": \"collection\"}, {\"name\": \"trips\", \"type\": \"collection\"}, {\"name\": \"vehicles\", \"type\": \"collection\"}, {\"name\": \"permissions\", \"type\": \"collection\"}, {\"name\": \"notifications\", \"type\": \"collection\"}, {\"name\": \"crash_events\", \"type\": \"collection\"}, {\"name\": \"violations-x\", \"type\": \"collection\"}, {\"name\": \"drivers\", \"type\": \"collection\"}, {\"name\": \"geofences\", \"type\": \"collection\"}, {\"name\": \"tickets\", \"type\": \"collection\"}, {\"name\": \"vehicleevents\", \"type\": \"collection\"}, {\"name\": \"vendors\", \"type\": \"collection\"}, {\"name\": \"roles\", \"type\": \"collection\"}, {\"name\": \"clients\", \"type\": \"collection\"}, {\"name\": \"vendordevices\", \"type\": \"collection\"}, {\"name\": \"settings\", \"type\": \"collection\"}, {\"name\": \"media\", \"type\": \"collection\"}, {\"name\": \"violation_rules\", \"type\": \"collection\"}, {\"name\": \"violations\", \"type\": \"collection\"}, {\"name\": \"users\", \"type\": \"collection\"}, {\"name\": \"companies\", \"type\": \"coll...", "commandName": "listCollections", "databaseName": "opal_server", "requestId": 32391, "operationId": 32391, "driverConnectionId": 1, "serverConnectionId": 13052, "serverHost": "3.144.134.141", "serverPort": 27017}
2025-03-13 15:23:58,934 - pymongo.connection - DEBUG - {"clientId": {"$oid": "67d2b1e1f4015777fa0580a9"}, "message": "Connection checked in", "serverHost": "3.144.134.141", "serverPort": 27017, "driverConnectionId": 1}
2025-03-13 15:23:58,935 - app.db.repositories.data_repository - DEBUG - Available collections: ['rags', 'trips', 'vehicles', 'permissions', 'notifications', 'crash_events', 'violations-x', 'drivers', 'geofences', 'tickets', 'vehicleevents', 'vendors', 'roles', 'clients', 'vendordevices', 'settings', 'media', 'violation_rules', 'violations', 'users', 'companies']
2025-03-13 15:23:58,935 - pymongo.serverSelection - DEBUG - {"message": "Server selection started", "selector": "Primary()", "operation": "find", "topologyDescription": "<TopologyDescription id: 67d2b1e1f4015777fa0580a9, topology_type: Single, servers: [<ServerDescription ('3.144.134.141', 27017) server_type: Standalone, rtt: 0.2493289113600159>]>", "clientId": {"$oid": "67d2b1e1f4015777fa0580a9"}}
2025-03-13 15:23:58,936 - pymongo.serverSelection - DEBUG - {"message": "Server selection succeeded", "selector": "Primary()", "operation": "find", "topologyDescription": "<TopologyDescription id: 67d2b1e1f4015777fa0580a9, topology_type: Single, servers: [<ServerDescription ('3.144.134.141', 27017) server_type: Standalone, rtt: 0.2493289113600159>]>", "clientId": {"$oid": "67d2b1e1f4015777fa0580a9"}, "serverHost": "3.144.134.141", "serverPort": 27017}
2025-03-13 15:23:58,936 - pymongo.connection - DEBUG - {"clientId": {"$oid": "67d2b1e1f4015777fa0580a9"}, "message": "Connection checkout started", "serverHost": "3.144.134.141", "serverPort": 27017}
2025-03-13 15:23:58,936 - pymongo.connection - DEBUG - {"clientId": {"$oid": "67d2b1e1f4015777fa0580a9"}, "message": "Connection checked out", "serverHost": "3.144.134.141", "serverPort": 27017, "driverConnectionId": 1, "durationMS": 0.0}
2025-03-13 15:23:58,937 - pymongo.command - DEBUG - {"clientId": {"$oid": "67d2b1e1f4015777fa0580a9"}, "message": "Command started", "command": "{\"find\": \"vehicleevents\", \"limit\": 1, \"singleBatch\": true, \"lsid\": {\"id\": {\"$binary\": {\"base64\": \"SydOe269RsexkVWOgQEdUA==\", \"subType\": \"04\"}}}, \"$db\": \"opal_server\"}", "commandName": "find", "databaseName": "opal_server", "requestId": 14604, "operationId": 14604, "driverConnectionId": 1, "serverConnectionId": 13052, "serverHost": "3.144.134.141", "serverPort": 27017}
2025-03-13 15:23:59,182 - pymongo.command - DEBUG - {"clientId": {"$oid": "67d2b1e1f4015777fa0580a9"}, "message": "Command succeeded", "durationMS": 245.821, "reply": "{\"cursor\": {\"firstBatch\": [{\"_id\": {\"$oid\": \"67441bdeb231195485d25272\"}, \"vendor\": {\"$oid\": \"6703ad7f70ba41e9473dd8e7\"}, \"deviceTime\": {\"$date\": \"2024-11-22T12:48:47Z\"}, \"serverTime\": {\"$date\": \"2024-11-22T12:48:47.958Z\"}, \"location\": {\"latitude\": 18.542048, \"longitude\": 55.852535, \"altitude\": 240}, \"ignition\": true, \"speed\": 68, \"heading\": 84, \"event\": {\"type\": \"DISTANCE_TRAVEL\", \"name\": \"Distance Traveled\"}, \"odometer\": 85198.52713696871, \"satellites\": 26, \"diff\": {\"distanceMeter\": 226.15911957109347, \"durationMillis\": 11000, \"ignitionOn\": true, \"moving\": true}, \"vehicle\": {\"license\": \"1765HW\", \"uuid\": \"f59c5202-eda5-4348-9d66-ec14718f076b\"}, \"device\": {\"imei\": \"358925430754727\"}, \"hdop\": 25.5, \"positionAccuracy\": 37.507210845177696, \"batteryVoltage\": 4.026, \"createdAt\": {\"$date\": \"2024-11-25T06:40:30.615Z\"}, \"updatedAt\": {\"$date\": \"2024-11-25T06:40:30.615Z\"}}], \"ns\": \"opal_server.vehicleevents\"}, \"ok\": 1.0}", "commandName": "find", "databaseName": "opal_server", "requestId": 14604, "operationId": 14604, "driverConnectionId": 1, "serverConnectionId": 13052, "serverHost": "3.144.134.141", "serverPort": 27017}
2025-03-13 15:23:59,183 - pymongo.connection - DEBUG - {"clientId": {"$oid": "67d2b1e1f4015777fa0580a9"}, "message": "Connection checked in", "serverHost": "3.144.134.141", "serverPort": 27017, "driverConnectionId": 1}
2025-03-13 15:23:59,184 - app.db.repositories.data_repository - DEBUG - Sample document fields: ['_id', 'vendor', 'deviceTime', 'serverTime', 'location', 'ignition', 'speed', 'heading', 'event', 'odometer', 'satellites', 'wrongOrdered', 'diff', 'vehicle', 'device', 'hdop', 'positionAccuracy', 'batteryVoltage', '__v', 'createdAt', 'updatedAt']
2025-03-13 15:23:59,184 - pymongo.serverSelection - DEBUG - {"message": "Server selection started", "selector": "Primary()", "operation": "count", "topologyDescription": "<TopologyDescription id: 67d2b1e1f4015777fa0580a9, topology_type: Single, servers: [<ServerDescription ('3.144.134.141', 27017) server_type: Standalone, rtt: 0.2493289113600159>]>", "clientId": {"$oid": "67d2b1e1f4015777fa0580a9"}}
2025-03-13 15:23:59,184 - pymongo.serverSelection - DEBUG - {"message": "Server selection succeeded", "selector": "Primary()", "operation": "count", "topologyDescription": "<TopologyDescription id: 67d2b1e1f4015777fa0580a9, topology_type: Single, servers: [<ServerDescription ('3.144.134.141', 27017) server_type: Standalone, rtt: 0.2493289113600159>]>", "clientId": {"$oid": "67d2b1e1f4015777fa0580a9"}, "serverHost": "3.144.134.141", "serverPort": 27017}
2025-03-13 15:23:59,185 - pymongo.connection - DEBUG - {"clientId": {"$oid": "67d2b1e1f4015777fa0580a9"}, "message": "Connection checkout started", "serverHost": "3.144.134.141", "serverPort": 27017}
2025-03-13 15:23:59,185 - pymongo.connection - DEBUG - {"clientId": {"$oid": "67d2b1e1f4015777fa0580a9"}, "message": "Connection checked out", "serverHost": "3.144.134.141", "serverPort": 27017, "driverConnectionId": 1, "durationMS": 0.0}
2025-03-13 15:23:59,185 - pymongo.command - DEBUG - {"clientId": {"$oid": "67d2b1e1f4015777fa0580a9"}, "message": "Command started", "command": "{\"aggregate\": \"vehicleevents\", \"pipeline\": [{\"$match\": {\"$or\": [{\"timestamp\": {\"$gte\": {\"$date\": \"2025-03-10T15:23:56.385Z\"}, \"$lte\": {\"$date\": \"2025-03-13T15:23:56.385Z\"}}}, {\"event_time\": {\"$gte\": {\"$date\": \"2025-03-10T15:23:56.385Z\"}, \"$lte\": {\"$date\": \"2025-03-13T15:23:56.385Z\"}}}, {\"created_at\": {\"$gte\": {\"$date\": \"2025-03-10T15:23:56.385Z\"}, \"$lte\": {\"$date\": \"2025-03-13T15:23:56.385Z\"}}}]}}, {\"$group\": {\"_id\": 1, \"n\": {\"$sum\": 1}}}], \"lsid\": {\"id\": {\"$binary\": {\"base64\": \"SydOe269RsexkVWOgQEdUA==\", \"subType\": \"04\"}}}, \"$db\": \"opal_server\"}", "commandName": "aggregate", "databaseName": "opal_server", "requestId": 3902, "operationId": 3902, "driverConnectionId": 1, "serverConnectionId": 13052, "serverHost": "3.144.134.141", "serverPort": 27017}
2025-03-13 15:24:05,303 - pymongo.command - DEBUG - {"clientId": {"$oid": "67d2b1e1f4015777fa0580a9"}, "message": "Command succeeded", "durationMS": 6117.753000000001, "reply": "{\"cursor\": {\"ns\": \"opal_server.vehicleevents\"}, \"ok\": 1.0}", "commandName": "aggregate", "databaseName": "opal_server", "requestId": 3902, "operationId": 3902, "driverConnectionId": 1, "serverConnectionId": 13052, "serverHost": "3.144.134.141", "serverPort": 27017}
2025-03-13 15:24:05,304 - pymongo.connection - DEBUG - {"clientId": {"$oid": "67d2b1e1f4015777fa0580a9"}, "message": "Connection checked in", "serverHost": "3.144.134.141", "serverPort": 27017, "driverConnectionId": 1}
2025-03-13 15:24:05,304 - app.db.repositories.data_repository - INFO - Found 0 matching vehicle events
2025-03-13 15:24:05,305 - pymongo.serverSelection - DEBUG - {"message": "Server selection started", "selector": "Primary()", "operation": "find", "topologyDescription": "<TopologyDescription id: 67d2b1e1f4015777fa0580a9, topology_type: Single, servers: [<ServerDescription ('3.144.134.141', 27017) server_type: Standalone, rtt: 0.2493289113600159>]>", "clientId": {"$oid": "67d2b1e1f4015777fa0580a9"}}
2025-03-13 15:24:05,306 - pymongo.serverSelection - DEBUG - {"message": "Server selection succeeded", "selector": "Primary()", "operation": "find", "topologyDescription": "<TopologyDescription id: 67d2b1e1f4015777fa0580a9, topology_type: Single, servers: [<ServerDescription ('3.144.134.141', 27017) server_type: Standalone, rtt: 0.2493289113600159>]>", "clientId": {"$oid": "67d2b1e1f4015777fa0580a9"}, "serverHost": "3.144.134.141", "serverPort": 27017}
2025-03-13 15:24:05,306 - pymongo.connection - DEBUG - {"clientId": {"$oid": "67d2b1e1f4015777fa0580a9"}, "message": "Connection checkout started", "serverHost": "3.144.134.141", "serverPort": 27017}
2025-03-13 15:24:05,306 - pymongo.connection - DEBUG - {"clientId": {"$oid": "67d2b1e1f4015777fa0580a9"}, "message": "Connection checked out", "serverHost": "3.144.134.141", "serverPort": 27017, "driverConnectionId": 1, "durationMS": 0.0}
2025-03-13 15:24:05,307 - pymongo.command - DEBUG - {"clientId": {"$oid": "67d2b1e1f4015777fa0580a9"}, "message": "Command started", "command": "{\"find\": \"vehicleevents\", \"filter\": {\"$or\": [{\"timestamp\": {\"$gte\": {\"$date\": \"2025-03-10T15:23:56.385Z\"}, \"$lte\": {\"$date\": \"2025-03-13T15:23:56.385Z\"}}}, {\"event_time\": {\"$gte\": {\"$date\": \"2025-03-10T15:23:56.385Z\"}, \"$lte\": {\"$date\": \"2025-03-13T15:23:56.385Z\"}}}, {\"created_at\": {\"$gte\": {\"$date\": \"2025-03-10T15:23:56.385Z\"}, \"$lte\": {\"$date\": \"2025-03-13T15:23:56.385Z\"}}}]}, \"limit\": 1000, \"lsid\": {\"id\": {\"$binary\": {\"base64\": \"SydOe269RsexkVWOgQEdUA==\", \"subType\": \"04\"}}}, \"$db\": \"opal_server\"}", "commandName": "find", "databaseName": "opal_server", "requestId": 153, "operationId": 153, "driverConnectionId": 1, "serverConnectionId": 13052, "serverHost": "3.144.134.141", "serverPort": 27017}
2025-03-13 15:24:06,016 - pymongo.topology - DEBUG - {"topologyId": {"$oid": "67d2b1e1f4015777fa0580a9"}, "driverConnectionId": 1, "serverConnectionId": 13050, "serverHost": "3.144.134.141", "serverPort": 27017, "awaited": true, "durationMS": 10000.0, "reply": "{\"isWritablePrimary\": true, \"topologyVersion\": {\"processId\": {\"$oid\": \"67b7e5814f77c1a87c56d054\"}}, \"maxBsonObjectSize\": 16777216, \"maxMessageSizeBytes\": 48000000, \"maxWriteBatchSize\": 100000, \"localTime\": {\"$date\": \"2025-03-13T10:24:06.033Z\"}, \"logicalSessionTimeoutMinutes\": 30, \"connectionId\": 13050, \"maxWireVersion\": 25, \"ok\": 1.0}", "message": "Server heartbeat succeeded"}
2025-03-13 15:24:06,016 - pymongo.topology - DEBUG - {"topologyId": {"$oid": "67d2b1e1f4015777fa0580a9"}, "driverConnectionId": 1, "serverConnectionId": 13050, "serverHost": "3.144.134.141", "serverPort": 27017, "awaited": true, "message": "Server heartbeat started"}
2025-03-13 15:24:12,005 - pymongo.command - DEBUG - {"clientId": {"$oid": "67d2b1e1f4015777fa0580a9"}, "message": "Command succeeded", "durationMS": 6699.104, "reply": "{\"cursor\": {\"ns\": \"opal_server.vehicleevents\"}, \"ok\": 1.0}", "commandName": "find", "databaseName": "opal_server", "requestId": 153, "operationId": 153, "driverConnectionId": 1, "serverConnectionId": 13052, "serverHost": "3.144.134.141", "serverPort": 27017}
2025-03-13 15:24:12,006 - pymongo.connection - DEBUG - {"clientId": {"$oid": "67d2b1e1f4015777fa0580a9"}, "message": "Connection checked in", "serverHost": "3.144.134.141", "serverPort": 27017, "driverConnectionId": 1}
2025-03-13 15:24:12,006 - app.db.repositories.data_repository - DEBUG - Retrieved 0 vehicle events
2025-03-13 15:24:12,095 - app.api.endpoints.analytics - DEBUG - Retrieved violations: 1000
2025-03-13 15:24:12,096 - app.api.endpoints.analytics - DEBUG - Retrieved events: 0
2025-03-13 15:24:12,096 - app.api.endpoints.analytics - INFO - Analysis completed - Found 1000 violations and 63 drivers
2025-03-13 15:24:16,025 - pymongo.topology - DEBUG - {"topologyId": {"$oid": "67d2b1e1f4015777fa0580a9"}, "driverConnectionId": 1, "serverConnectionId": 13050, "serverHost": "3.144.134.141", "serverPort": 27017, "awaited": true, "durationMS": 10014.999999999418, "reply": "{\"isWritablePrimary\": true, \"topologyVersion\": {\"processId\": {\"$oid\": \"67b7e5814f77c1a87c56d054\"}}, \"maxBsonObjectSize\": 16777216, \"maxMessageSizeBytes\": 48000000, \"maxWriteBatchSize\": 100000, \"localTime\": {\"$date\": \"2025-03-13T10:24:16.043Z\"}, \"logicalSessionTimeoutMinutes\": 30, \"connectionId\": 13050, \"maxWireVersion\": 25, \"ok\": 1.0}", "message": "Server heartbeat succeeded"}
2025-03-13 15:24:16,026 - pymongo.topology - DEBUG - {"topologyId": {"$oid": "67d2b1e1f4015777fa0580a9"}, "driverConnectionId": 1, "serverConnectionId": 13050, "serverHost": "3.144.134.141", "serverPort": 27017, "awaited": true, "message": "Server heartbeat started"}
2025-03-13 15:24:26,031 - pymongo.topology - DEBUG - {"topologyId": {"$oid": "67d2b1e1f4015777fa0580a9"}, "driverConnectionId": 1, "serverConnectionId": 13050, "serverHost": "3.144.134.141", "serverPort": 27017, "awaited": true, "durationMS": 10000.0, "reply": "{\"isWritablePrimary\": true, \"topologyVersion\": {\"processId\": {\"$oid\": \"67b7e5814f77c1a87c56d054\"}}, \"maxBsonObjectSize\": 16777216, \"maxMessageSizeBytes\": 48000000, \"maxWriteBatchSize\": 100000, \"localTime\": {\"$date\": \"2025-03-13T10:24:26.049Z\"}, \"logicalSessionTimeoutMinutes\": 30, \"connectionId\": 13050, \"maxWireVersion\": 25, \"ok\": 1.0}", "message": "Server heartbeat succeeded"}
2025-03-13 15:24:26,032 - pymongo.topology - DEBUG - {"topologyId": {"$oid": "67d2b1e1f4015777fa0580a9"}, "driverConnectionId": 1, "serverConnectionId": 13050, "serverHost": "3.144.134.141", "serverPort": 27017, "awaited": true, "message": "Server heartbeat started"}
2025-03-13 15:24:36,032 - pymongo.topology - DEBUG - {"topologyId": {"$oid": "67d2b1e1f4015777fa0580a9"}, "driverConnectionId": 1, "serverConnectionId": 13050, "serverHost": "3.144.134.141", "serverPort": 27017, "awaited": true, "durationMS": 10000.0, "reply": "{\"isWritablePrimary\": true, \"topologyVersion\": {\"processId\": {\"$oid\": \"67b7e5814f77c1a87c56d054\"}}, \"maxBsonObjectSize\": 16777216, \"maxMessageSizeBytes\": 48000000, \"maxWriteBatchSize\": 100000, \"localTime\": {\"$date\": \"2025-03-13T10:24:36.049Z\"}, \"logicalSessionTimeoutMinutes\": 30, \"connectionId\": 13050, \"maxWireVersion\": 25, \"ok\": 1.0}", "message": "Server heartbeat succeeded"}
2025-03-13 15:24:36,032 - pymongo.topology - DEBUG - {"topologyId": {"$oid": "67d2b1e1f4015777fa0580a9"}, "driverConnectionId": 1, "serverConnectionId": 13050, "serverHost": "3.144.134.141", "serverPort": 27017, "awaited": true, "message": "Server heartbeat started"}
2025-03-13 15:24:46,032 - pymongo.topology - DEBUG - {"topologyId": {"$oid": "67d2b1e1f4015777fa0580a9"}, "driverConnectionId": 1, "serverConnectionId": 13050, "serverHost": "3.144.134.141", "serverPort": 27017, "awaited": true, "durationMS": 10000.0, "reply": "{\"isWritablePrimary\": true, \"topologyVersion\": {\"processId\": {\"$oid\": \"67b7e5814f77c1a87c56d054\"}}, \"maxBsonObjectSize\": 16777216, \"maxMessageSizeBytes\": 48000000, \"maxWriteBatchSize\": 100000, \"localTime\": {\"$date\": \"2025-03-13T10:24:46.050Z\"}, \"logicalSessionTimeoutMinutes\": 30, \"connectionId\": 13050, \"maxWireVersion\": 25, \"ok\": 1.0}", "message": "Server heartbeat succeeded"}
2025-03-13 15:24:46,033 - pymongo.topology - DEBUG - {"topologyId": {"$oid": "67d2b1e1f4015777fa0580a9"}, "driverConnectionId": 1, "serverConnectionId": 13050, "serverHost": "3.144.134.141", "serverPort": 27017, "awaited": true, "message": "Server heartbeat started"}
2025-03-13 15:24:56,033 - pymongo.topology - DEBUG - {"topologyId": {"$oid": "67d2b1e1f4015777fa0580a9"}, "driverConnectionId": 1, "serverConnectionId": 13050, "serverHost": "3.144.134.141", "serverPort": 27017, "awaited": true, "durationMS": 10000.0, "reply": "{\"isWritablePrimary\": true, \"topologyVersion\": {\"processId\": {\"$oid\": \"67b7e5814f77c1a87c56d054\"}}, \"maxBsonObjectSize\": 16777216, \"maxMessageSizeBytes\": 48000000, \"maxWriteBatchSize\": 100000, \"localTime\": {\"$date\": \"2025-03-13T10:24:56.052Z\"}, \"logicalSessionTimeoutMinutes\": 30, \"connectionId\": 13050, \"maxWireVersion\": 25, \"ok\": 1.0}", "message": "Server heartbeat succeeded"}
2025-03-13 15:24:56,034 - pymongo.topology - DEBUG - {"topologyId": {"$oid": "67d2b1e1f4015777fa0580a9"}, "driverConnectionId": 1, "serverConnectionId": 13050, "serverHost": "3.144.134.141", "serverPort": 27017, "awaited": true, "message": "Server heartbeat started"}
2025-03-13 15:25:06,034 - pymongo.topology - DEBUG - {"topologyId": {"$oid": "67d2b1e1f4015777fa0580a9"}, "driverConnectionId": 1, "serverConnectionId": 13050, "serverHost": "3.144.134.141", "serverPort": 27017, "awaited": true, "durationMS": 10000.0, "reply": "{\"isWritablePrimary\": true, \"topologyVersion\": {\"processId\": {\"$oid\": \"67b7e5814f77c1a87c56d054\"}}, \"maxBsonObjectSize\": 16777216, \"maxMessageSizeBytes\": 48000000, \"maxWriteBatchSize\": 100000, \"localTime\": {\"$date\": \"2025-03-13T10:25:06.052Z\"}, \"logicalSessionTimeoutMinutes\": 30, \"connectionId\": 13050, \"maxWireVersion\": 25, \"ok\": 1.0}", "message": "Server heartbeat succeeded"}
2025-03-13 15:25:06,035 - pymongo.topology - DEBUG - {"topologyId": {"$oid": "67d2b1e1f4015777fa0580a9"}, "driverConnectionId": 1, "serverConnectionId": 13050, "serverHost": "3.144.134.141", "serverPort": 27017, "awaited": true, "message": "Server heartbeat started"}
2025-03-13 15:25:16,035 - pymongo.topology - DEBUG - {"topologyId": {"$oid": "67d2b1e1f4015777fa0580a9"}, "driverConnectionId": 1, "serverConnectionId": 13050, "serverHost": "3.144.134.141", "serverPort": 27017, "awaited": true, "durationMS": 10000.0, "reply": "{\"isWritablePrimary\": true, \"topologyVersion\": {\"processId\": {\"$oid\": \"67b7e5814f77c1a87c56d054\"}}, \"maxBsonObjectSize\": 16777216, \"maxMessageSizeBytes\": 48000000, \"maxWriteBatchSize\": 100000, \"localTime\": {\"$date\": \"2025-03-13T10:25:16.054Z\"}, \"logicalSessionTimeoutMinutes\": 30, \"connectionId\": 13050, \"maxWireVersion\": 25, \"ok\": 1.0}", "message": "Server heartbeat succeeded"}
2025-03-13 15:25:16,036 - pymongo.topology - DEBUG - {"topologyId": {"$oid": "67d2b1e1f4015777fa0580a9"}, "driverConnectionId": 1, "serverConnectionId": 13050, "serverHost": "3.144.134.141", "serverPort": 27017, "awaited": true, "message": "Server heartbeat started"}
2025-03-13 15:25:26,045 - pymongo.topology - DEBUG - {"topologyId": {"$oid": "67d2b1e1f4015777fa0580a9"}, "driverConnectionId": 1, "serverConnectionId": 13050, "serverHost": "3.144.134.141", "serverPort": 27017, "awaited": true, "durationMS": 10016.00000000144, "reply": "{\"isWritablePrimary\": true, \"topologyVersion\": {\"processId\": {\"$oid\": \"67b7e5814f77c1a87c56d054\"}}, \"maxBsonObjectSize\": 16777216, \"maxMessageSizeBytes\": 48000000, \"maxWriteBatchSize\": 100000, \"localTime\": {\"$date\": \"2025-03-13T10:25:26.063Z\"}, \"logicalSessionTimeoutMinutes\": 30, \"connectionId\": 13050, \"maxWireVersion\": 25, \"ok\": 1.0}", "message": "Server heartbeat succeeded"}
2025-03-13 15:25:26,046 - pymongo.topology - DEBUG - {"topologyId": {"$oid": "67d2b1e1f4015777fa0580a9"}, "driverConnectionId": 1, "serverConnectionId": 13050, "serverHost": "3.144.134.141", "serverPort": 27017, "awaited": true, "message": "Server heartbeat started"}
2025-03-13 15:25:36,054 - pymongo.topology - DEBUG - {"topologyId": {"$oid": "67d2b1e1f4015777fa0580a9"}, "driverConnectionId": 1, "serverConnectionId": 13050, "serverHost": "3.144.134.141", "serverPort": 27017, "awaited": true, "durationMS": 10014.999999999418, "reply": "{\"isWritablePrimary\": true, \"topologyVersion\": {\"processId\": {\"$oid\": \"67b7e5814f77c1a87c56d054\"}}, \"maxBsonObjectSize\": 16777216, \"maxMessageSizeBytes\": 48000000, \"maxWriteBatchSize\": 100000, \"localTime\": {\"$date\": \"2025-03-13T10:25:36.073Z\"}, \"logicalSessionTimeoutMinutes\": 30, \"connectionId\": 13050, \"maxWireVersion\": 25, \"ok\": 1.0}", "message": "Server heartbeat succeeded"}
2025-03-13 15:25:36,055 - pymongo.topology - DEBUG - {"topologyId": {"$oid": "67d2b1e1f4015777fa0580a9"}, "driverConnectionId": 1, "serverConnectionId": 13050, "serverHost": "3.144.134.141", "serverPort": 27017, "awaited": true, "message": "Server heartbeat started"}
2025-03-13 15:25:46,062 - pymongo.topology - DEBUG - {"topologyId": {"$oid": "67d2b1e1f4015777fa0580a9"}, "driverConnectionId": 1, "serverConnectionId": 13050, "serverHost": "3.144.134.141", "serverPort": 27017, "awaited": true, "durationMS": 10000.0, "reply": "{\"isWritablePrimary\": true, \"topologyVersion\": {\"processId\": {\"$oid\": \"67b7e5814f77c1a87c56d054\"}}, \"maxBsonObjectSize\": 16777216, \"maxMessageSizeBytes\": 48000000, \"maxWriteBatchSize\": 100000, \"localTime\": {\"$date\": \"2025-03-13T10:25:46.075Z\"}, \"logicalSessionTimeoutMinutes\": 30, \"connectionId\": 13050, \"maxWireVersion\": 25, \"ok\": 1.0}", "message": "Server heartbeat succeeded"}
2025-03-13 15:25:46,063 - pymongo.topology - DEBUG - {"topologyId": {"$oid": "67d2b1e1f4015777fa0580a9"}, "driverConnectionId": 1, "serverConnectionId": 13050, "serverHost": "3.144.134.141", "serverPort": 27017, "awaited": true, "message": "Server heartbeat started"}
2025-03-13 15:25:56,064 - pymongo.topology - DEBUG - {"topologyId": {"$oid": "67d2b1e1f4015777fa0580a9"}, "driverConnectionId": 1, "serverConnectionId": 13050, "serverHost": "3.144.134.141", "serverPort": 27017, "awaited": true, "durationMS": 10000.0, "reply": "{\"isWritablePrimary\": true, \"topologyVersion\": {\"processId\": {\"$oid\": \"67b7e5814f77c1a87c56d054\"}}, \"maxBsonObjectSize\": 16777216, \"maxMessageSizeBytes\": 48000000, \"maxWriteBatchSize\": 100000, \"localTime\": {\"$date\": \"2025-03-13T10:25:56.084Z\"}, \"logicalSessionTimeoutMinutes\": 30, \"connectionId\": 13050, \"maxWireVersion\": 25, \"ok\": 1.0}", "message": "Server heartbeat succeeded"}
2025-03-13 15:25:56,065 - pymongo.topology - DEBUG - {"topologyId": {"$oid": "67d2b1e1f4015777fa0580a9"}, "driverConnectionId": 1, "serverConnectionId": 13050, "serverHost": "3.144.134.141", "serverPort": 27017, "awaited": true, "message": "Server heartbeat started"}
2025-03-13 15:26:06,066 - pymongo.topology - DEBUG - {"topologyId": {"$oid": "67d2b1e1f4015777fa0580a9"}, "driverConnectionId": 1, "serverConnectionId": 13050, "serverHost": "3.144.134.141", "serverPort": 27017, "awaited": true, "durationMS": 10000.0, "reply": "{\"isWritablePrimary\": true, \"topologyVersion\": {\"processId\": {\"$oid\": \"67b7e5814f77c1a87c56d054\"}}, \"maxBsonObjectSize\": 16777216, \"maxMessageSizeBytes\": 48000000, \"maxWriteBatchSize\": 100000, \"localTime\": {\"$date\": \"2025-03-13T10:26:06.084Z\"}, \"logicalSessionTimeoutMinutes\": 30, \"connectionId\": 13050, \"maxWireVersion\": 25, \"ok\": 1.0}", "message": "Server heartbeat succeeded"}
2025-03-13 15:26:06,066 - pymongo.topology - DEBUG - {"topologyId": {"$oid": "67d2b1e1f4015777fa0580a9"}, "driverConnectionId": 1, "serverConnectionId": 13050, "serverHost": "3.144.134.141", "serverPort": 27017, "awaited": true, "message": "Server heartbeat started"}
2025-03-13 15:26:16,068 - pymongo.topology - DEBUG - {"topologyId": {"$oid": "67d2b1e1f4015777fa0580a9"}, "driverConnectionId": 1, "serverConnectionId": 13050, "serverHost": "3.144.134.141", "serverPort": 27017, "awaited": true, "durationMS": 10000.0, "reply": "{\"isWritablePrimary\": true, \"topologyVersion\": {\"processId\": {\"$oid\": \"67b7e5814f77c1a87c56d054\"}}, \"maxBsonObjectSize\": 16777216, \"maxMessageSizeBytes\": 48000000, \"maxWriteBatchSize\": 100000, \"localTime\": {\"$date\": \"2025-03-13T10:26:16.087Z\"}, \"logicalSessionTimeoutMinutes\": 30, \"connectionId\": 13050, \"maxWireVersion\": 25, \"ok\": 1.0}", "message": "Server heartbeat succeeded"}
2025-03-13 15:26:16,068 - pymongo.topology - DEBUG - {"topologyId": {"$oid": "67d2b1e1f4015777fa0580a9"}, "driverConnectionId": 1, "serverConnectionId": 13050, "serverHost": "3.144.134.141", "serverPort": 27017, "awaited": true, "message": "Server heartbeat started"}
2025-03-13 15:26:26,078 - pymongo.topology - DEBUG - {"topologyId": {"$oid": "67d2b1e1f4015777fa0580a9"}, "driverConnectionId": 1, "serverConnectionId": 13050, "serverHost": "3.144.134.141", "serverPort": 27017, "awaited": true, "durationMS": 10000.0, "reply": "{\"isWritablePrimary\": true, \"topologyVersion\": {\"processId\": {\"$oid\": \"67b7e5814f77c1a87c56d054\"}}, \"maxBsonObjectSize\": 16777216, \"maxMessageSizeBytes\": 48000000, \"maxWriteBatchSize\": 100000, \"localTime\": {\"$date\": \"2025-03-13T10:26:26.097Z\"}, \"logicalSessionTimeoutMinutes\": 30, \"connectionId\": 13050, \"maxWireVersion\": 25, \"ok\": 1.0}", "message": "Server heartbeat succeeded"}
2025-03-13 15:26:26,079 - pymongo.topology - DEBUG - {"topologyId": {"$oid": "67d2b1e1f4015777fa0580a9"}, "driverConnectionId": 1, "serverConnectionId": 13050, "serverHost": "3.144.134.141", "serverPort": 27017, "awaited": true, "message": "Server heartbeat started"}
2025-03-13 15:27:07,800 - numexpr.utils - INFO - Note: NumExpr detected 12 cores but "NUMEXPR_MAX_THREADS" not set, so enforcing safe limit of 8.
2025-03-13 15:27:07,801 - numexpr.utils - INFO - NumExpr defaulting to 8 threads.
2025-03-13 15:27:09,221 - matplotlib - DEBUG - matplotlib data path: C:\Users\msameerakram\AppData\Local\anaconda3\Lib\site-packages\matplotlib\mpl-data
2025-03-13 15:27:09,226 - matplotlib - DEBUG - CONFIGDIR=C:\Users\msameerakram\.matplotlib
2025-03-13 15:27:09,228 - matplotlib - DEBUG - interactive is False
2025-03-13 15:27:09,228 - matplotlib - DEBUG - platform is win32
2025-03-13 15:27:09,294 - matplotlib - DEBUG - CACHEDIR=C:\Users\msameerakram\.matplotlib
2025-03-13 15:27:09,297 - matplotlib.font_manager - DEBUG - Using fontManager instance from C:\Users\msameerakram\.matplotlib\fontlist-v390.json
2025-03-13 15:27:12,177 - numexpr.utils - INFO - Note: NumExpr detected 12 cores but "NUMEXPR_MAX_THREADS" not set, so enforcing safe limit of 8.
2025-03-13 15:27:12,178 - numexpr.utils - INFO - NumExpr defaulting to 8 threads.
2025-03-13 15:27:13,705 - matplotlib - DEBUG - matplotlib data path: C:\Users\msameerakram\AppData\Local\anaconda3\Lib\site-packages\matplotlib\mpl-data
2025-03-13 15:27:13,710 - matplotlib - DEBUG - CONFIGDIR=C:\Users\msameerakram\.matplotlib
2025-03-13 15:27:13,711 - matplotlib - DEBUG - interactive is False
2025-03-13 15:27:13,713 - matplotlib - DEBUG - platform is win32
2025-03-13 15:27:13,784 - matplotlib - DEBUG - CACHEDIR=C:\Users\msameerakram\.matplotlib
2025-03-13 15:27:13,787 - matplotlib.font_manager - DEBUG - Using fontManager instance from C:\Users\msameerakram\.matplotlib\fontlist-v390.json
2025-03-13 15:27:15,277 - asyncio - DEBUG - Using selector: SelectSelector
2025-03-13 15:27:15,314 - pymongo.topology - DEBUG - {"topologyId": {"$oid": "67d2b303bd860d541789df93"}, "message": "Starting topology monitoring"}
2025-03-13 15:27:15,314 - pymongo.topology - DEBUG - {"topologyId": {"$oid": "67d2b303bd860d541789df93"}, "previousDescription": "<TopologyDescription id: 67d2b303bd860d541789df93, topology_type: Unknown, servers: []>", "newDescription": "<TopologyDescription id: 67d2b303bd860d541789df93, topology_type: Unknown, servers: [<ServerDescription ('3.144.134.141', 27017) server_type: Unknown, rtt: None>]>", "message": "Topology description changed"}
2025-03-13 15:27:15,315 - pymongo.topology - DEBUG - {"topologyId": {"$oid": "67d2b303bd860d541789df93"}, "serverHost": "3.144.134.141", "serverPort": 27017, "message": "Starting server monitoring"}
2025-03-13 15:27:15,317 - pymongo.connection - DEBUG - {"clientId": {"$oid": "67d2b303bd860d541789df93"}, "message": "Connection pool created", "serverHost": "3.144.134.141", "serverPort": 27017}
2025-03-13 15:27:15,318 - pymongo.serverSelection - DEBUG - {"message": "Server selection started", "selector": "Primary()", "operation": "ping", "topologyDescription": "<TopologyDescription id: 67d2b303bd860d541789df93, topology_type: Unknown, servers: [<ServerDescription ('3.144.134.141', 27017) server_type: Unknown, rtt: None>]>", "clientId": {"$oid": "67d2b303bd860d541789df93"}}
2025-03-13 15:27:15,318 - pymongo.serverSelection - DEBUG - {"message": "Waiting for suitable server to become available", "selector": "Primary()", "operation": "ping", "topologyDescription": "<TopologyDescription id: 67d2b303bd860d541789df93, topology_type: Unknown, servers: [<ServerDescription ('3.144.134.141', 27017) server_type: Unknown, rtt: None>]>", "clientId": {"$oid": "67d2b303bd860d541789df93"}, "remainingTimeMS": 30}
2025-03-13 15:27:15,564 - pymongo.topology - DEBUG - {"topologyId": {"$oid": "67d2b303bd860d541789df93"}, "driverConnectionId": 1, "serverHost": "3.144.134.141", "serverPort": 27017, "awaited": false, "message": "Server heartbeat started"}
2025-03-13 15:27:15,816 - pymongo.topology - DEBUG - {"topologyId": {"$oid": "67d2b303bd860d541789df93"}, "driverConnectionId": 1, "serverConnectionId": 13080, "serverHost": "3.144.134.141", "serverPort": 27017, "awaited": false, "durationMS": 250.0, "reply": "{\"helloOk\": true, \"ismaster\": true, \"topologyVersion\": {\"processId\": {\"$oid\": \"67b7e5814f77c1a87c56d054\"}}, \"maxBsonObjectSize\": 16777216, \"maxMessageSizeBytes\": 48000000, \"maxWriteBatchSize\": 100000, \"localTime\": {\"$date\": \"2025-03-13T10:27:15.832Z\"}, \"logicalSessionTimeoutMinutes\": 30, \"connectionId\": 13080, \"maxWireVersion\": 25, \"ok\": 1.0}", "message": "Server heartbeat succeeded"}
2025-03-13 15:27:15,816 - pymongo.connection - DEBUG - {"clientId": {"$oid": "67d2b303bd860d541789df93"}, "message": "Connection pool ready", "serverHost": "3.144.134.141", "serverPort": 27017}
2025-03-13 15:27:15,817 - pymongo.topology - DEBUG - {"topologyId": {"$oid": "67d2b303bd860d541789df93"}, "previousDescription": "<TopologyDescription id: 67d2b303bd860d541789df93, topology_type: Unknown, servers: [<ServerDescription ('3.144.134.141', 27017) server_type: Unknown, rtt: None>]>", "newDescription": "<TopologyDescription id: 67d2b303bd860d541789df93, topology_type: Single, servers: [<ServerDescription ('3.144.134.141', 27017) server_type: Standalone, rtt: 0.25>]>", "message": "Topology description changed"}
2025-03-13 15:27:15,817 - pymongo.serverSelection - DEBUG - {"message": "Server selection succeeded", "selector": "Primary()", "operation": "ping", "topologyDescription": "<TopologyDescription id: 67d2b303bd860d541789df93, topology_type: Single, servers: [<ServerDescription ('3.144.134.141', 27017) server_type: Standalone, rtt: 0.25>]>", "clientId": {"$oid": "67d2b303bd860d541789df93"}, "serverHost": "3.144.134.141", "serverPort": 27017}
2025-03-13 15:27:15,818 - pymongo.connection - DEBUG - {"clientId": {"$oid": "67d2b303bd860d541789df93"}, "message": "Connection checkout started", "serverHost": "3.144.134.141", "serverPort": 27017}
2025-03-13 15:27:15,819 - pymongo.topology - DEBUG - {"topologyId": {"$oid": "67d2b303bd860d541789df93"}, "driverConnectionId": 1, "serverConnectionId": 13080, "serverHost": "3.144.134.141", "serverPort": 27017, "awaited": true, "message": "Server heartbeat started"}
2025-03-13 15:27:15,819 - pymongo.connection - DEBUG - {"clientId": {"$oid": "67d2b303bd860d541789df93"}, "message": "Connection created", "serverHost": "3.144.134.141", "serverPort": 27017, "driverConnectionId": 1}
2025-03-13 15:27:16,591 - pymongo.connection - DEBUG - {"clientId": {"$oid": "67d2b303bd860d541789df93"}, "message": "Connection ready", "serverHost": "3.144.134.141", "serverPort": 27017, "driverConnectionId": 1, "durationMS": 0.5}
2025-03-13 15:27:16,592 - pymongo.connection - DEBUG - {"clientId": {"$oid": "67d2b303bd860d541789df93"}, "message": "Connection checked out", "serverHost": "3.144.134.141", "serverPort": 27017, "driverConnectionId": 1, "durationMS": 0.7819999999992433}
2025-03-13 15:27:16,593 - pymongo.command - DEBUG - {"clientId": {"$oid": "67d2b303bd860d541789df93"}, "message": "Command started", "command": "{\"ping\": 1, \"lsid\": {\"id\": {\"$binary\": {\"base64\": \"TNq8p2s2R/in4vZN/xABYw==\", \"subType\": \"04\"}}}, \"$db\": \"opal_server\"}", "commandName": "ping", "databaseName": "opal_server", "requestId": 6334, "operationId": 6334, "driverConnectionId": 1, "serverConnectionId": 13081, "serverHost": "3.144.134.141", "serverPort": 27017}
2025-03-13 15:27:16,837 - pymongo.command - DEBUG - {"clientId": {"$oid": "67d2b303bd860d541789df93"}, "message": "Command succeeded", "durationMS": 244.072, "reply": "{\"ok\": 1.0}", "commandName": "ping", "databaseName": "opal_server", "requestId": 6334, "operationId": 6334, "driverConnectionId": 1, "serverConnectionId": 13081, "serverHost": "3.144.134.141", "serverPort": 27017}
2025-03-13 15:27:16,838 - pymongo.connection - DEBUG - {"clientId": {"$oid": "67d2b303bd860d541789df93"}, "message": "Connection checked in", "serverHost": "3.144.134.141", "serverPort": 27017, "driverConnectionId": 1}
2025-03-13 15:27:16,945 - app.api.endpoints.analytics - DEBUG - Starting real-time analysis request - timeframe: 1h, driver_uuid: None
2025-03-13 15:27:16,946 - app.api.endpoints.analytics - INFO - Fetching data for time window: 1h, driver: all drivers
2025-03-13 15:27:16,946 - app.services.predictive_analytics - DEBUG - Analyzing time window from 2025-03-13 14:27:16.946425 to 2025-03-13 15:27:16.946425
2025-03-13 15:27:16,946 - app.services.predictive_analytics - DEBUG - Time window: 1.0 hours
2025-03-13 15:27:16,946 - app.db.repositories.data_repository - DEBUG - Connected to database: opal_server
2025-03-13 15:27:16,946 - app.db.repositories.data_repository - DEBUG - Violations pipeline: [{'$match': {'$or': [{'timestamp': {'$gte': datetime.datetime(2025, 3, 13, 14, 27, 16, 946425), '$lte': datetime.datetime(2025, 3, 13, 15, 27, 16, 946425)}}, {'event_time': {'$gte': datetime.datetime(2025, 3, 13, 14, 27, 16, 946425), '$lte': datetime.datetime(2025, 3, 13, 15, 27, 16, 946425)}}, {'created_at': {'$gte': datetime.datetime(2025, 3, 13, 14, 27, 16, 946425), '$lte': datetime.datetime(2025, 3, 13, 15, 27, 16, 946425)}}]}}, {'$lookup': {'from': 'drivers', 'localField': 'driver_uuid', 'foreignField': 'driver_id', 'as': 'driver_info'}}, {'$addFields': {'driver_name': {'$cond': [{'$gt': [{'$size': '$driver_info'}, 0]}, {'$arrayElemAt': ['$driver_info.name', 0]}, {'$cond': [{'$eq': ['$driver_uuid', 'unknown']}, 'Unassigned Driver', {'$concat': ['Driver ', {'$toString': '$driver_uuid'}]}]}]}}}]
2025-03-13 15:27:16,947 - pymongo.serverSelection - DEBUG - {"message": "Server selection started", "selector": "Primary()", "operation": "listCollections", "topologyDescription": "<TopologyDescription id: 67d2b303bd860d541789df93, topology_type: Single, servers: [<ServerDescription ('3.144.134.141', 27017) server_type: Standalone, rtt: 0.25>]>", "clientId": {"$oid": "67d2b303bd860d541789df93"}}
2025-03-13 15:27:16,947 - pymongo.serverSelection - DEBUG - {"message": "Server selection succeeded", "selector": "Primary()", "operation": "listCollections", "topologyDescription": "<TopologyDescription id: 67d2b303bd860d541789df93, topology_type: Single, servers: [<ServerDescription ('3.144.134.141', 27017) server_type: Standalone, rtt: 0.25>]>", "clientId": {"$oid": "67d2b303bd860d541789df93"}, "serverHost": "3.144.134.141", "serverPort": 27017}
2025-03-13 15:27:16,947 - pymongo.connection - DEBUG - {"clientId": {"$oid": "67d2b303bd860d541789df93"}, "message": "Connection checkout started", "serverHost": "3.144.134.141", "serverPort": 27017}
2025-03-13 15:27:16,948 - pymongo.connection - DEBUG - {"clientId": {"$oid": "67d2b303bd860d541789df93"}, "message": "Connection checked out", "serverHost": "3.144.134.141", "serverPort": 27017, "driverConnectionId": 1, "durationMS": 0.0}
2025-03-13 15:27:16,948 - pymongo.command - DEBUG - {"clientId": {"$oid": "67d2b303bd860d541789df93"}, "message": "Command started", "command": "{\"listCollections\": 1, \"nameOnly\": true, \"lsid\": {\"id\": {\"$binary\": {\"base64\": \"TNq8p2s2R/in4vZN/xABYw==\", \"subType\": \"04\"}}}, \"$db\": \"opal_server\"}", "commandName": "listCollections", "databaseName": "opal_server", "requestId": 26500, "operationId": 26500, "driverConnectionId": 1, "serverConnectionId": 13081, "serverHost": "3.144.134.141", "serverPort": 27017}
2025-03-13 15:27:17,192 - pymongo.command - DEBUG - {"clientId": {"$oid": "67d2b303bd860d541789df93"}, "message": "Command succeeded", "durationMS": 244.018, "reply": "{\"cursor\": {\"ns\": \"opal_server.$cmd.listCollections\", \"firstBatch\": [{\"name\": \"rags\", \"type\": \"collection\"}, {\"name\": \"trips\", \"type\": \"collection\"}, {\"name\": \"vehicles\", \"type\": \"collection\"}, {\"name\": \"permissions\", \"type\": \"collection\"}, {\"name\": \"notifications\", \"type\": \"collection\"}, {\"name\": \"crash_events\", \"type\": \"collection\"}, {\"name\": \"violations-x\", \"type\": \"collection\"}, {\"name\": \"drivers\", \"type\": \"collection\"}, {\"name\": \"geofences\", \"type\": \"collection\"}, {\"name\": \"tickets\", \"type\": \"collection\"}, {\"name\": \"vehicleevents\", \"type\": \"collection\"}, {\"name\": \"vendors\", \"type\": \"collection\"}, {\"name\": \"roles\", \"type\": \"collection\"}, {\"name\": \"clients\", \"type\": \"collection\"}, {\"name\": \"vendordevices\", \"type\": \"collection\"}, {\"name\": \"settings\", \"type\": \"collection\"}, {\"name\": \"media\", \"type\": \"collection\"}, {\"name\": \"violation_rules\", \"type\": \"collection\"}, {\"name\": \"violations\", \"type\": \"collection\"}, {\"name\": \"users\", \"type\": \"collection\"}, {\"name\": \"companies\", \"type\": \"coll...", "commandName": "listCollections", "databaseName": "opal_server", "requestId": 26500, "operationId": 26500, "driverConnectionId": 1, "serverConnectionId": 13081, "serverHost": "3.144.134.141", "serverPort": 27017}
2025-03-13 15:27:17,194 - pymongo.connection - DEBUG - {"clientId": {"$oid": "67d2b303bd860d541789df93"}, "message": "Connection checked in", "serverHost": "3.144.134.141", "serverPort": 27017, "driverConnectionId": 1}
2025-03-13 15:27:17,195 - app.db.repositories.data_repository - DEBUG - Available collections: ['rags', 'trips', 'vehicles', 'permissions', 'notifications', 'crash_events', 'violations-x', 'drivers', 'geofences', 'tickets', 'vehicleevents', 'vendors', 'roles', 'clients', 'vendordevices', 'settings', 'media', 'violation_rules', 'violations', 'users', 'companies']
2025-03-13 15:27:17,195 - app.db.repositories.data_repository - DEBUG - Checking collection: violations
2025-03-13 15:27:17,195 - pymongo.serverSelection - DEBUG - {"message": "Server selection started", "selector": "Primary()", "operation": "count", "topologyDescription": "<TopologyDescription id: 67d2b303bd860d541789df93, topology_type: Single, servers: [<ServerDescription ('3.144.134.141', 27017) server_type: Standalone, rtt: 0.25>]>", "clientId": {"$oid": "67d2b303bd860d541789df93"}}
2025-03-13 15:27:17,196 - pymongo.serverSelection - DEBUG - {"message": "Server selection succeeded", "selector": "Primary()", "operation": "count", "topologyDescription": "<TopologyDescription id: 67d2b303bd860d541789df93, topology_type: Single, servers: [<ServerDescription ('3.144.134.141', 27017) server_type: Standalone, rtt: 0.25>]>", "clientId": {"$oid": "67d2b303bd860d541789df93"}, "serverHost": "3.144.134.141", "serverPort": 27017}
2025-03-13 15:27:17,196 - pymongo.connection - DEBUG - {"clientId": {"$oid": "67d2b303bd860d541789df93"}, "message": "Connection checkout started", "serverHost": "3.144.134.141", "serverPort": 27017}
2025-03-13 15:27:17,197 - pymongo.connection - DEBUG - {"clientId": {"$oid": "67d2b303bd860d541789df93"}, "message": "Connection checked out", "serverHost": "3.144.134.141", "serverPort": 27017, "driverConnectionId": 1, "durationMS": 0.0}
2025-03-13 15:27:17,197 - pymongo.command - DEBUG - {"clientId": {"$oid": "67d2b303bd860d541789df93"}, "message": "Command started", "command": "{\"aggregate\": \"violations\", \"pipeline\": [{\"$match\": {\"$or\": [{\"timestamp\": {\"$gte\": {\"$date\": \"2025-03-13T14:27:16.946Z\"}, \"$lte\": {\"$date\": \"2025-03-13T15:27:16.946Z\"}}}, {\"event_time\": {\"$gte\": {\"$date\": \"2025-03-13T14:27:16.946Z\"}, \"$lte\": {\"$date\": \"2025-03-13T15:27:16.946Z\"}}}, {\"created_at\": {\"$gte\": {\"$date\": \"2025-03-13T14:27:16.946Z\"}, \"$lte\": {\"$date\": \"2025-03-13T15:27:16.946Z\"}}}]}}, {\"$group\": {\"_id\": 1, \"n\": {\"$sum\": 1}}}], \"lsid\": {\"id\": {\"$binary\": {\"base64\": \"TNq8p2s2R/in4vZN/xABYw==\", \"subType\": \"04\"}}}, \"$db\": \"opal_server\"}", "commandName": "aggregate", "databaseName": "opal_server", "requestId": 19169, "operationId": 19169, "driverConnectionId": 1, "serverConnectionId": 13081, "serverHost": "3.144.134.141", "serverPort": 27017}
2025-03-13 15:27:17,471 - pymongo.command - DEBUG - {"clientId": {"$oid": "67d2b303bd860d541789df93"}, "message": "Command succeeded", "durationMS": 273.878, "reply": "{\"cursor\": {\"ns\": \"opal_server.violations\"}, \"ok\": 1.0}", "commandName": "aggregate", "databaseName": "opal_server", "requestId": 19169, "operationId": 19169, "driverConnectionId": 1, "serverConnectionId": 13081, "serverHost": "3.144.134.141", "serverPort": 27017}
2025-03-13 15:27:17,471 - pymongo.connection - DEBUG - {"clientId": {"$oid": "67d2b303bd860d541789df93"}, "message": "Connection checked in", "serverHost": "3.144.134.141", "serverPort": 27017, "driverConnectionId": 1}
2025-03-13 15:27:17,472 - app.db.repositories.data_repository - WARNING - No violations found in any collection
2025-03-13 15:27:17,472 - app.db.repositories.data_repository - DEBUG - Fetching vehicle events from database: opal_server
2025-03-13 15:27:17,473 - app.db.repositories.data_repository - DEBUG - Vehicle events query: {'$or': [{'timestamp': {'$gte': datetime.datetime(2025, 3, 13, 14, 27, 16, 946425), '$lte': datetime.datetime(2025, 3, 13, 15, 27, 16, 946425)}}, {'event_time': {'$gte': datetime.datetime(2025, 3, 13, 14, 27, 16, 946425), '$lte': datetime.datetime(2025, 3, 13, 15, 27, 16, 946425)}}, {'created_at': {'$gte': datetime.datetime(2025, 3, 13, 14, 27, 16, 946425), '$lte': datetime.datetime(2025, 3, 13, 15, 27, 16, 946425)}}]}
2025-03-13 15:27:17,473 - app.db.repositories.data_repository - DEBUG - Time range: {'$gte': datetime.datetime(2025, 3, 13, 14, 27, 16, 946425), '$lte': datetime.datetime(2025, 3, 13, 15, 27, 16, 946425)}
2025-03-13 15:27:17,474 - pymongo.serverSelection - DEBUG - {"message": "Server selection started", "selector": "Primary()", "operation": "listCollections", "topologyDescription": "<TopologyDescription id: 67d2b303bd860d541789df93, topology_type: Single, servers: [<ServerDescription ('3.144.134.141', 27017) server_type: Standalone, rtt: 0.25>]>", "clientId": {"$oid": "67d2b303bd860d541789df93"}}
2025-03-13 15:27:17,474 - pymongo.serverSelection - DEBUG - {"message": "Server selection succeeded", "selector": "Primary()", "operation": "listCollections", "topologyDescription": "<TopologyDescription id: 67d2b303bd860d541789df93, topology_type: Single, servers: [<ServerDescription ('3.144.134.141', 27017) server_type: Standalone, rtt: 0.25>]>", "clientId": {"$oid": "67d2b303bd860d541789df93"}, "serverHost": "3.144.134.141", "serverPort": 27017}
2025-03-13 15:27:17,475 - pymongo.connection - DEBUG - {"clientId": {"$oid": "67d2b303bd860d541789df93"}, "message": "Connection checkout started", "serverHost": "3.144.134.141", "serverPort": 27017}
2025-03-13 15:27:17,475 - pymongo.connection - DEBUG - {"clientId": {"$oid": "67d2b303bd860d541789df93"}, "message": "Connection checked out", "serverHost": "3.144.134.141", "serverPort": 27017, "driverConnectionId": 1, "durationMS": 0.0}
2025-03-13 15:27:17,475 - pymongo.command - DEBUG - {"clientId": {"$oid": "67d2b303bd860d541789df93"}, "message": "Command started", "command": "{\"listCollections\": 1, \"nameOnly\": true, \"lsid\": {\"id\": {\"$binary\": {\"base64\": \"TNq8p2s2R/in4vZN/xABYw==\", \"subType\": \"04\"}}}, \"$db\": \"opal_server\"}", "commandName": "listCollections", "databaseName": "opal_server", "requestId": 15724, "operationId": 15724, "driverConnectionId": 1, "serverConnectionId": 13081, "serverHost": "3.144.134.141", "serverPort": 27017}
2025-03-13 15:27:17,720 - pymongo.command - DEBUG - {"clientId": {"$oid": "67d2b303bd860d541789df93"}, "message": "Command succeeded", "durationMS": 244.224, "reply": "{\"cursor\": {\"ns\": \"opal_server.$cmd.listCollections\", \"firstBatch\": [{\"name\": \"rags\", \"type\": \"collection\"}, {\"name\": \"trips\", \"type\": \"collection\"}, {\"name\": \"vehicles\", \"type\": \"collection\"}, {\"name\": \"permissions\", \"type\": \"collection\"}, {\"name\": \"notifications\", \"type\": \"collection\"}, {\"name\": \"crash_events\", \"type\": \"collection\"}, {\"name\": \"violations-x\", \"type\": \"collection\"}, {\"name\": \"drivers\", \"type\": \"collection\"}, {\"name\": \"geofences\", \"type\": \"collection\"}, {\"name\": \"tickets\", \"type\": \"collection\"}, {\"name\": \"vehicleevents\", \"type\": \"collection\"}, {\"name\": \"vendors\", \"type\": \"collection\"}, {\"name\": \"roles\", \"type\": \"collection\"}, {\"name\": \"clients\", \"type\": \"collection\"}, {\"name\": \"vendordevices\", \"type\": \"collection\"}, {\"name\": \"settings\", \"type\": \"collection\"}, {\"name\": \"media\", \"type\": \"collection\"}, {\"name\": \"violation_rules\", \"type\": \"collection\"}, {\"name\": \"violations\", \"type\": \"collection\"}, {\"name\": \"users\", \"type\": \"collection\"}, {\"name\": \"companies\", \"type\": \"coll...", "commandName": "listCollections", "databaseName": "opal_server", "requestId": 15724, "operationId": 15724, "driverConnectionId": 1, "serverConnectionId": 13081, "serverHost": "3.144.134.141", "serverPort": 27017}
2025-03-13 15:27:17,721 - pymongo.connection - DEBUG - {"clientId": {"$oid": "67d2b303bd860d541789df93"}, "message": "Connection checked in", "serverHost": "3.144.134.141", "serverPort": 27017, "driverConnectionId": 1}
2025-03-13 15:27:17,722 - app.db.repositories.data_repository - DEBUG - Available collections: ['rags', 'trips', 'vehicles', 'permissions', 'notifications', 'crash_events', 'violations-x', 'drivers', 'geofences', 'tickets', 'vehicleevents', 'vendors', 'roles', 'clients', 'vendordevices', 'settings', 'media', 'violation_rules', 'violations', 'users', 'companies']
2025-03-13 15:27:17,723 - pymongo.serverSelection - DEBUG - {"message": "Server selection started", "selector": "Primary()", "operation": "find", "topologyDescription": "<TopologyDescription id: 67d2b303bd860d541789df93, topology_type: Single, servers: [<ServerDescription ('3.144.134.141', 27017) server_type: Standalone, rtt: 0.25>]>", "clientId": {"$oid": "67d2b303bd860d541789df93"}}
2025-03-13 15:27:17,724 - pymongo.serverSelection - DEBUG - {"message": "Server selection succeeded", "selector": "Primary()", "operation": "find", "topologyDescription": "<TopologyDescription id: 67d2b303bd860d541789df93, topology_type: Single, servers: [<ServerDescription ('3.144.134.141', 27017) server_type: Standalone, rtt: 0.25>]>", "clientId": {"$oid": "67d2b303bd860d541789df93"}, "serverHost": "3.144.134.141", "serverPort": 27017}
2025-03-13 15:27:17,724 - pymongo.connection - DEBUG - {"clientId": {"$oid": "67d2b303bd860d541789df93"}, "message": "Connection checkout started", "serverHost": "3.144.134.141", "serverPort": 27017}
2025-03-13 15:27:17,724 - pymongo.connection - DEBUG - {"clientId": {"$oid": "67d2b303bd860d541789df93"}, "message": "Connection checked out", "serverHost": "3.144.134.141", "serverPort": 27017, "driverConnectionId": 1, "durationMS": 0.0}
2025-03-13 15:27:17,725 - pymongo.command - DEBUG - {"clientId": {"$oid": "67d2b303bd860d541789df93"}, "message": "Command started", "command": "{\"find\": \"vehicleevents\", \"limit\": 1, \"singleBatch\": true, \"lsid\": {\"id\": {\"$binary\": {\"base64\": \"TNq8p2s2R/in4vZN/xABYw==\", \"subType\": \"04\"}}}, \"$db\": \"opal_server\"}", "commandName": "find", "databaseName": "opal_server", "requestId": 11478, "operationId": 11478, "driverConnectionId": 1, "serverConnectionId": 13081, "serverHost": "3.144.134.141", "serverPort": 27017}
2025-03-13 15:27:17,970 - pymongo.command - DEBUG - {"clientId": {"$oid": "67d2b303bd860d541789df93"}, "message": "Command succeeded", "durationMS": 245.167, "reply": "{\"cursor\": {\"firstBatch\": [{\"_id\": {\"$oid\": \"67441bdeb231195485d25272\"}, \"vendor\": {\"$oid\": \"6703ad7f70ba41e9473dd8e7\"}, \"deviceTime\": {\"$date\": \"2024-11-22T12:48:47Z\"}, \"serverTime\": {\"$date\": \"2024-11-22T12:48:47.958Z\"}, \"location\": {\"latitude\": 18.542048, \"longitude\": 55.852535, \"altitude\": 240}, \"ignition\": true, \"speed\": 68, \"heading\": 84, \"event\": {\"type\": \"DISTANCE_TRAVEL\", \"name\": \"Distance Traveled\"}, \"odometer\": 85198.52713696871, \"satellites\": 26, \"diff\": {\"distanceMeter\": 226.15911957109347, \"durationMillis\": 11000, \"ignitionOn\": true, \"moving\": true}, \"vehicle\": {\"license\": \"1765HW\", \"uuid\": \"f59c5202-eda5-4348-9d66-ec14718f076b\"}, \"device\": {\"imei\": \"358925430754727\"}, \"hdop\": 25.5, \"positionAccuracy\": 37.507210845177696, \"batteryVoltage\": 4.026, \"createdAt\": {\"$date\": \"2024-11-25T06:40:30.615Z\"}, \"updatedAt\": {\"$date\": \"2024-11-25T06:40:30.615Z\"}}], \"ns\": \"opal_server.vehicleevents\"}, \"ok\": 1.0}", "commandName": "find", "databaseName": "opal_server", "requestId": 11478, "operationId": 11478, "driverConnectionId": 1, "serverConnectionId": 13081, "serverHost": "3.144.134.141", "serverPort": 27017}
2025-03-13 15:27:17,970 - pymongo.connection - DEBUG - {"clientId": {"$oid": "67d2b303bd860d541789df93"}, "message": "Connection checked in", "serverHost": "3.144.134.141", "serverPort": 27017, "driverConnectionId": 1}
2025-03-13 15:27:17,971 - app.db.repositories.data_repository - DEBUG - Sample document fields: ['_id', 'vendor', 'deviceTime', 'serverTime', 'location', 'ignition', 'speed', 'heading', 'event', 'odometer', 'satellites', 'wrongOrdered', 'diff', 'vehicle', 'device', 'hdop', 'positionAccuracy', 'batteryVoltage', '__v', 'createdAt', 'updatedAt']
2025-03-13 15:27:17,971 - pymongo.serverSelection - DEBUG - {"message": "Server selection started", "selector": "Primary()", "operation": "count", "topologyDescription": "<TopologyDescription id: 67d2b303bd860d541789df93, topology_type: Single, servers: [<ServerDescription ('3.144.134.141', 27017) server_type: Standalone, rtt: 0.25>]>", "clientId": {"$oid": "67d2b303bd860d541789df93"}}
2025-03-13 15:27:17,972 - pymongo.serverSelection - DEBUG - {"message": "Server selection succeeded", "selector": "Primary()", "operation": "count", "topologyDescription": "<TopologyDescription id: 67d2b303bd860d541789df93, topology_type: Single, servers: [<ServerDescription ('3.144.134.141', 27017) server_type: Standalone, rtt: 0.25>]>", "clientId": {"$oid": "67d2b303bd860d541789df93"}, "serverHost": "3.144.134.141", "serverPort": 27017}
2025-03-13 15:27:17,972 - pymongo.connection - DEBUG - {"clientId": {"$oid": "67d2b303bd860d541789df93"}, "message": "Connection checkout started", "serverHost": "3.144.134.141", "serverPort": 27017}
2025-03-13 15:27:17,973 - pymongo.connection - DEBUG - {"clientId": {"$oid": "67d2b303bd860d541789df93"}, "message": "Connection checked out", "serverHost": "3.144.134.141", "serverPort": 27017, "driverConnectionId": 1, "durationMS": 0.0}
2025-03-13 15:27:17,973 - pymongo.command - DEBUG - {"clientId": {"$oid": "67d2b303bd860d541789df93"}, "message": "Command started", "command": "{\"aggregate\": \"vehicleevents\", \"pipeline\": [{\"$match\": {\"$or\": [{\"timestamp\": {\"$gte\": {\"$date\": \"2025-03-13T14:27:16.946Z\"}, \"$lte\": {\"$date\": \"2025-03-13T15:27:16.946Z\"}}}, {\"event_time\": {\"$gte\": {\"$date\": \"2025-03-13T14:27:16.946Z\"}, \"$lte\": {\"$date\": \"2025-03-13T15:27:16.946Z\"}}}, {\"created_at\": {\"$gte\": {\"$date\": \"2025-03-13T14:27:16.946Z\"}, \"$lte\": {\"$date\": \"2025-03-13T15:27:16.946Z\"}}}]}}, {\"$group\": {\"_id\": 1, \"n\": {\"$sum\": 1}}}], \"lsid\": {\"id\": {\"$binary\": {\"base64\": \"TNq8p2s2R/in4vZN/xABYw==\", \"subType\": \"04\"}}}, \"$db\": \"opal_server\"}", "commandName": "aggregate", "databaseName": "opal_server", "requestId": 29358, "operationId": 29358, "driverConnectionId": 1, "serverConnectionId": 13081, "serverHost": "3.144.134.141", "serverPort": 27017}
2025-03-13 15:27:24,044 - pymongo.command - DEBUG - {"clientId": {"$oid": "67d2b303bd860d541789df93"}, "message": "Command succeeded", "durationMS": 6071.112, "reply": "{\"cursor\": {\"ns\": \"opal_server.vehicleevents\"}, \"ok\": 1.0}", "commandName": "aggregate", "databaseName": "opal_server", "requestId": 29358, "operationId": 29358, "driverConnectionId": 1, "serverConnectionId": 13081, "serverHost": "3.144.134.141", "serverPort": 27017}
2025-03-13 15:27:24,044 - pymongo.connection - DEBUG - {"clientId": {"$oid": "67d2b303bd860d541789df93"}, "message": "Connection checked in", "serverHost": "3.144.134.141", "serverPort": 27017, "driverConnectionId": 1}
2025-03-13 15:27:24,046 - app.db.repositories.data_repository - INFO - Found 0 matching vehicle events
2025-03-13 15:27:24,046 - pymongo.serverSelection - DEBUG - {"message": "Server selection started", "selector": "Primary()", "operation": "find", "topologyDescription": "<TopologyDescription id: 67d2b303bd860d541789df93, topology_type: Single, servers: [<ServerDescription ('3.144.134.141', 27017) server_type: Standalone, rtt: 0.25>]>", "clientId": {"$oid": "67d2b303bd860d541789df93"}}
2025-03-13 15:27:24,047 - pymongo.serverSelection - DEBUG - {"message": "Server selection succeeded", "selector": "Primary()", "operation": "find", "topologyDescription": "<TopologyDescription id: 67d2b303bd860d541789df93, topology_type: Single, servers: [<ServerDescription ('3.144.134.141', 27017) server_type: Standalone, rtt: 0.25>]>", "clientId": {"$oid": "67d2b303bd860d541789df93"}, "serverHost": "3.144.134.141", "serverPort": 27017}
2025-03-13 15:27:24,047 - pymongo.connection - DEBUG - {"clientId": {"$oid": "67d2b303bd860d541789df93"}, "message": "Connection checkout started", "serverHost": "3.144.134.141", "serverPort": 27017}
2025-03-13 15:27:24,047 - pymongo.connection - DEBUG - {"clientId": {"$oid": "67d2b303bd860d541789df93"}, "message": "Connection checked out", "serverHost": "3.144.134.141", "serverPort": 27017, "driverConnectionId": 1, "durationMS": 0.0}
2025-03-13 15:27:24,047 - pymongo.command - DEBUG - {"clientId": {"$oid": "67d2b303bd860d541789df93"}, "message": "Command started", "command": "{\"find\": \"vehicleevents\", \"filter\": {\"$or\": [{\"timestamp\": {\"$gte\": {\"$date\": \"2025-03-13T14:27:16.946Z\"}, \"$lte\": {\"$date\": \"2025-03-13T15:27:16.946Z\"}}}, {\"event_time\": {\"$gte\": {\"$date\": \"2025-03-13T14:27:16.946Z\"}, \"$lte\": {\"$date\": \"2025-03-13T15:27:16.946Z\"}}}, {\"created_at\": {\"$gte\": {\"$date\": \"2025-03-13T14:27:16.946Z\"}, \"$lte\": {\"$date\": \"2025-03-13T15:27:16.946Z\"}}}]}, \"limit\": 1000, \"lsid\": {\"id\": {\"$binary\": {\"base64\": \"TNq8p2s2R/in4vZN/xABYw==\", \"subType\": \"04\"}}}, \"$db\": \"opal_server\"}", "commandName": "find", "databaseName": "opal_server", "requestId": 26962, "operationId": 26962, "driverConnectionId": 1, "serverConnectionId": 13081, "serverHost": "3.144.134.141", "serverPort": 27017}
2025-03-13 15:27:26,076 - pymongo.topology - DEBUG - {"topologyId": {"$oid": "67d2b303bd860d541789df93"}, "driverConnectionId": 1, "serverConnectionId": 13080, "serverHost": "3.144.134.141", "serverPort": 27017, "awaited": true, "durationMS": 10250.0, "reply": "{\"isWritablePrimary\": true, \"topologyVersion\": {\"processId\": {\"$oid\": \"67b7e5814f77c1a87c56d054\"}}, \"maxBsonObjectSize\": 16777216, \"maxMessageSizeBytes\": 48000000, \"maxWriteBatchSize\": 100000, \"localTime\": {\"$date\": \"2025-03-13T10:27:26.096Z\"}, \"logicalSessionTimeoutMinutes\": 30, \"connectionId\": 13080, \"maxWireVersion\": 25, \"ok\": 1.0}", "message": "Server heartbeat succeeded"}
2025-03-13 15:27:26,077 - pymongo.topology - DEBUG - {"topologyId": {"$oid": "67d2b303bd860d541789df93"}, "driverConnectionId": 1, "serverConnectionId": 13080, "serverHost": "3.144.134.141", "serverPort": 27017, "awaited": true, "message": "Server heartbeat started"}
2025-03-13 15:27:30,824 - pymongo.command - DEBUG - {"clientId": {"$oid": "67d2b303bd860d541789df93"}, "message": "Command succeeded", "durationMS": 6776.846, "reply": "{\"cursor\": {\"ns\": \"opal_server.vehicleevents\"}, \"ok\": 1.0}", "commandName": "find", "databaseName": "opal_server", "requestId": 26962, "operationId": 26962, "driverConnectionId": 1, "serverConnectionId": 13081, "serverHost": "3.144.134.141", "serverPort": 27017}
2025-03-13 15:27:30,824 - pymongo.connection - DEBUG - {"clientId": {"$oid": "67d2b303bd860d541789df93"}, "message": "Connection checked in", "serverHost": "3.144.134.141", "serverPort": 27017, "driverConnectionId": 1}
2025-03-13 15:27:30,825 - app.db.repositories.data_repository - DEBUG - Retrieved 0 vehicle events
2025-03-13 15:27:30,825 - app.api.endpoints.analytics - DEBUG - Retrieved violations: 0
2025-03-13 15:27:30,825 - app.api.endpoints.analytics - DEBUG - Retrieved events: 0
2025-03-13 15:27:30,826 - app.api.endpoints.analytics - INFO - Analysis completed - Found 0 violations and 0 drivers
2025-03-13 15:27:30,826 - app.api.endpoints.analytics - WARNING - No data found for the specified criteria
2025-03-13 15:27:36,077 - pymongo.topology - DEBUG - {"topologyId": {"$oid": "67d2b303bd860d541789df93"}, "driverConnectionId": 1, "serverConnectionId": 13080, "serverHost": "3.144.134.141", "serverPort": 27017, "awaited": true, "durationMS": 10000.0, "reply": "{\"isWritablePrimary\": true, \"topologyVersion\": {\"processId\": {\"$oid\": \"67b7e5814f77c1a87c56d054\"}}, \"maxBsonObjectSize\": 16777216, \"maxMessageSizeBytes\": 48000000, \"maxWriteBatchSize\": 100000, \"localTime\": {\"$date\": \"2025-03-13T10:27:36.096Z\"}, \"logicalSessionTimeoutMinutes\": 30, \"connectionId\": 13080, \"maxWireVersion\": 25, \"ok\": 1.0}", "message": "Server heartbeat succeeded"}
2025-03-13 15:27:36,078 - pymongo.topology - DEBUG - {"topologyId": {"$oid": "67d2b303bd860d541789df93"}, "driverConnectionId": 1, "serverConnectionId": 13080, "serverHost": "3.144.134.141", "serverPort": 27017, "awaited": true, "message": "Server heartbeat started"}
2025-03-13 15:27:46,081 - pymongo.topology - DEBUG - {"topologyId": {"$oid": "67d2b303bd860d541789df93"}, "driverConnectionId": 1, "serverConnectionId": 13080, "serverHost": "3.144.134.141", "serverPort": 27017, "awaited": true, "durationMS": 10000.0, "reply": "{\"isWritablePrimary\": true, \"topologyVersion\": {\"processId\": {\"$oid\": \"67b7e5814f77c1a87c56d054\"}}, \"maxBsonObjectSize\": 16777216, \"maxMessageSizeBytes\": 48000000, \"maxWriteBatchSize\": 100000, \"localTime\": {\"$date\": \"2025-03-13T10:27:46.101Z\"}, \"logicalSessionTimeoutMinutes\": 30, \"connectionId\": 13080, \"maxWireVersion\": 25, \"ok\": 1.0}", "message": "Server heartbeat succeeded"}
2025-03-13 15:27:46,081 - pymongo.topology - DEBUG - {"topologyId": {"$oid": "67d2b303bd860d541789df93"}, "driverConnectionId": 1, "serverConnectionId": 13080, "serverHost": "3.144.134.141", "serverPort": 27017, "awaited": true, "message": "Server heartbeat started"}
2025-03-13 15:27:56,085 - pymongo.topology - DEBUG - {"topologyId": {"$oid": "67d2b303bd860d541789df93"}, "driverConnectionId": 1, "serverConnectionId": 13080, "serverHost": "3.144.134.141", "serverPort": 27017, "awaited": true, "durationMS": 10015.999999999622, "reply": "{\"isWritablePrimary\": true, \"topologyVersion\": {\"processId\": {\"$oid\": \"67b7e5814f77c1a87c56d054\"}}, \"maxBsonObjectSize\": 16777216, \"maxMessageSizeBytes\": 48000000, \"maxWriteBatchSize\": 100000, \"localTime\": {\"$date\": \"2025-03-13T10:27:56.105Z\"}, \"logicalSessionTimeoutMinutes\": 30, \"connectionId\": 13080, \"maxWireVersion\": 25, \"ok\": 1.0}", "message": "Server heartbeat succeeded"}
2025-03-13 15:27:56,085 - pymongo.topology - DEBUG - {"topologyId": {"$oid": "67d2b303bd860d541789df93"}, "driverConnectionId": 1, "serverConnectionId": 13080, "serverHost": "3.144.134.141", "serverPort": 27017, "awaited": true, "message": "Server heartbeat started"}
2025-03-13 15:28:06,086 - pymongo.topology - DEBUG - {"topologyId": {"$oid": "67d2b303bd860d541789df93"}, "driverConnectionId": 1, "serverConnectionId": 13080, "serverHost": "3.144.134.141", "serverPort": 27017, "awaited": true, "durationMS": 10000.0, "reply": "{\"isWritablePrimary\": true, \"topologyVersion\": {\"processId\": {\"$oid\": \"67b7e5814f77c1a87c56d054\"}}, \"maxBsonObjectSize\": 16777216, \"maxMessageSizeBytes\": 48000000, \"maxWriteBatchSize\": 100000, \"localTime\": {\"$date\": \"2025-03-13T10:28:06.106Z\"}, \"logicalSessionTimeoutMinutes\": 30, \"connectionId\": 13080, \"maxWireVersion\": 25, \"ok\": 1.0}", "message": "Server heartbeat succeeded"}
2025-03-13 15:28:06,087 - pymongo.topology - DEBUG - {"topologyId": {"$oid": "67d2b303bd860d541789df93"}, "driverConnectionId": 1, "serverConnectionId": 13080, "serverHost": "3.144.134.141", "serverPort": 27017, "awaited": true, "message": "Server heartbeat started"}
2025-03-13 15:28:16,088 - pymongo.topology - DEBUG - {"topologyId": {"$oid": "67d2b303bd860d541789df93"}, "driverConnectionId": 1, "serverConnectionId": 13080, "serverHost": "3.144.134.141", "serverPort": 27017, "awaited": true, "durationMS": 10000.0, "reply": "{\"isWritablePrimary\": true, \"topologyVersion\": {\"processId\": {\"$oid\": \"67b7e5814f77c1a87c56d054\"}}, \"maxBsonObjectSize\": 16777216, \"maxMessageSizeBytes\": 48000000, \"maxWriteBatchSize\": 100000, \"localTime\": {\"$date\": \"2025-03-13T10:28:16.107Z\"}, \"logicalSessionTimeoutMinutes\": 30, \"connectionId\": 13080, \"maxWireVersion\": 25, \"ok\": 1.0}", "message": "Server heartbeat succeeded"}
2025-03-13 15:28:16,089 - pymongo.topology - DEBUG - {"topologyId": {"$oid": "67d2b303bd860d541789df93"}, "driverConnectionId": 1, "serverConnectionId": 13080, "serverHost": "3.144.134.141", "serverPort": 27017, "awaited": true, "message": "Server heartbeat started"}
2025-03-13 15:28:26,095 - pymongo.topology - DEBUG - {"topologyId": {"$oid": "67d2b303bd860d541789df93"}, "driverConnectionId": 1, "serverConnectionId": 13080, "serverHost": "3.144.134.141", "serverPort": 27017, "awaited": true, "durationMS": 10000.0, "reply": "{\"isWritablePrimary\": true, \"topologyVersion\": {\"processId\": {\"$oid\": \"67b7e5814f77c1a87c56d054\"}}, \"maxBsonObjectSize\": 16777216, \"maxMessageSizeBytes\": 48000000, \"maxWriteBatchSize\": 100000, \"localTime\": {\"$date\": \"2025-03-13T10:28:26.107Z\"}, \"logicalSessionTimeoutMinutes\": 30, \"connectionId\": 13080, \"maxWireVersion\": 25, \"ok\": 1.0}", "message": "Server heartbeat succeeded"}
2025-03-13 15:28:26,095 - pymongo.topology - DEBUG - {"topologyId": {"$oid": "67d2b303bd860d541789df93"}, "driverConnectionId": 1, "serverConnectionId": 13080, "serverHost": "3.144.134.141", "serverPort": 27017, "awaited": true, "message": "Server heartbeat started"}
2025-03-13 15:28:36,088 - pymongo.topology - DEBUG - {"topologyId": {"$oid": "67d2b303bd860d541789df93"}, "driverConnectionId": 1, "serverConnectionId": 13080, "serverHost": "3.144.134.141", "serverPort": 27017, "awaited": true, "durationMS": 10000.0, "reply": "{\"isWritablePrimary\": true, \"topologyVersion\": {\"processId\": {\"$oid\": \"67b7e5814f77c1a87c56d054\"}}, \"maxBsonObjectSize\": 16777216, \"maxMessageSizeBytes\": 48000000, \"maxWriteBatchSize\": 100000, \"localTime\": {\"$date\": \"2025-03-13T10:28:36.108Z\"}, \"logicalSessionTimeoutMinutes\": 30, \"connectionId\": 13080, \"maxWireVersion\": 25, \"ok\": 1.0}", "message": "Server heartbeat succeeded"}
2025-03-13 15:28:36,088 - pymongo.topology - DEBUG - {"topologyId": {"$oid": "67d2b303bd860d541789df93"}, "driverConnectionId": 1, "serverConnectionId": 13080, "serverHost": "3.144.134.141", "serverPort": 27017, "awaited": true, "message": "Server heartbeat started"}
2025-03-13 15:28:46,088 - pymongo.topology - DEBUG - {"topologyId": {"$oid": "67d2b303bd860d541789df93"}, "driverConnectionId": 1, "serverConnectionId": 13080, "serverHost": "3.144.134.141", "serverPort": 27017, "awaited": true, "durationMS": 10000.0, "reply": "{\"isWritablePrimary\": true, \"topologyVersion\": {\"processId\": {\"$oid\": \"67b7e5814f77c1a87c56d054\"}}, \"maxBsonObjectSize\": 16777216, \"maxMessageSizeBytes\": 48000000, \"maxWriteBatchSize\": 100000, \"localTime\": {\"$date\": \"2025-03-13T10:28:46.108Z\"}, \"logicalSessionTimeoutMinutes\": 30, \"connectionId\": 13080, \"maxWireVersion\": 25, \"ok\": 1.0}", "message": "Server heartbeat succeeded"}
2025-03-13 15:28:46,088 - pymongo.topology - DEBUG - {"topologyId": {"$oid": "67d2b303bd860d541789df93"}, "driverConnectionId": 1, "serverConnectionId": 13080, "serverHost": "3.144.134.141", "serverPort": 27017, "awaited": true, "message": "Server heartbeat started"}
2025-03-13 15:28:56,089 - pymongo.topology - DEBUG - {"topologyId": {"$oid": "67d2b303bd860d541789df93"}, "driverConnectionId": 1, "serverConnectionId": 13080, "serverHost": "3.144.134.141", "serverPort": 27017, "awaited": true, "durationMS": 10000.0, "reply": "{\"isWritablePrimary\": true, \"topologyVersion\": {\"processId\": {\"$oid\": \"67b7e5814f77c1a87c56d054\"}}, \"maxBsonObjectSize\": 16777216, \"maxMessageSizeBytes\": 48000000, \"maxWriteBatchSize\": 100000, \"localTime\": {\"$date\": \"2025-03-13T10:28:56.109Z\"}, \"logicalSessionTimeoutMinutes\": 30, \"connectionId\": 13080, \"maxWireVersion\": 25, \"ok\": 1.0}", "message": "Server heartbeat succeeded"}
2025-03-13 15:28:56,089 - pymongo.topology - DEBUG - {"topologyId": {"$oid": "67d2b303bd860d541789df93"}, "driverConnectionId": 1, "serverConnectionId": 13080, "serverHost": "3.144.134.141", "serverPort": 27017, "awaited": true, "message": "Server heartbeat started"}
2025-03-13 15:29:06,088 - pymongo.topology - DEBUG - {"topologyId": {"$oid": "67d2b303bd860d541789df93"}, "driverConnectionId": 1, "serverConnectionId": 13080, "serverHost": "3.144.134.141", "serverPort": 27017, "awaited": true, "durationMS": 10000.0, "reply": "{\"isWritablePrimary\": true, \"topologyVersion\": {\"processId\": {\"$oid\": \"67b7e5814f77c1a87c56d054\"}}, \"maxBsonObjectSize\": 16777216, \"maxMessageSizeBytes\": 48000000, \"maxWriteBatchSize\": 100000, \"localTime\": {\"$date\": \"2025-03-13T10:29:06.109Z\"}, \"logicalSessionTimeoutMinutes\": 30, \"connectionId\": 13080, \"maxWireVersion\": 25, \"ok\": 1.0}", "message": "Server heartbeat succeeded"}
2025-03-13 15:29:06,089 - pymongo.topology - DEBUG - {"topologyId": {"$oid": "67d2b303bd860d541789df93"}, "driverConnectionId": 1, "serverConnectionId": 13080, "serverHost": "3.144.134.141", "serverPort": 27017, "awaited": true, "message": "Server heartbeat started"}
2025-03-13 15:29:16,089 - pymongo.topology - DEBUG - {"topologyId": {"$oid": "67d2b303bd860d541789df93"}, "driverConnectionId": 1, "serverConnectionId": 13080, "serverHost": "3.144.134.141", "serverPort": 27017, "awaited": true, "durationMS": 10000.0, "reply": "{\"isWritablePrimary\": true, \"topologyVersion\": {\"processId\": {\"$oid\": \"67b7e5814f77c1a87c56d054\"}}, \"maxBsonObjectSize\": 16777216, \"maxMessageSizeBytes\": 48000000, \"maxWriteBatchSize\": 100000, \"localTime\": {\"$date\": \"2025-03-13T10:29:16.110Z\"}, \"logicalSessionTimeoutMinutes\": 30, \"connectionId\": 13080, \"maxWireVersion\": 25, \"ok\": 1.0}", "message": "Server heartbeat succeeded"}
2025-03-13 15:29:16,089 - pymongo.topology - DEBUG - {"topologyId": {"$oid": "67d2b303bd860d541789df93"}, "driverConnectionId": 1, "serverConnectionId": 13080, "serverHost": "3.144.134.141", "serverPort": 27017, "awaited": true, "message": "Server heartbeat started"}
2025-03-13 15:29:26,098 - pymongo.topology - DEBUG - {"topologyId": {"$oid": "67d2b303bd860d541789df93"}, "driverConnectionId": 1, "serverConnectionId": 13080, "serverHost": "3.144.134.141", "serverPort": 27017, "awaited": true, "durationMS": 10000.0, "reply": "{\"isWritablePrimary\": true, \"topologyVersion\": {\"processId\": {\"$oid\": \"67b7e5814f77c1a87c56d054\"}}, \"maxBsonObjectSize\": 16777216, \"maxMessageSizeBytes\": 48000000, \"maxWriteBatchSize\": 100000, \"localTime\": {\"$date\": \"2025-03-13T10:29:26.119Z\"}, \"logicalSessionTimeoutMinutes\": 30, \"connectionId\": 13080, \"maxWireVersion\": 25, \"ok\": 1.0}", "message": "Server heartbeat succeeded"}
2025-03-13 15:29:26,099 - pymongo.topology - DEBUG - {"topologyId": {"$oid": "67d2b303bd860d541789df93"}, "driverConnectionId": 1, "serverConnectionId": 13080, "serverHost": "3.144.134.141", "serverPort": 27017, "awaited": true, "message": "Server heartbeat started"}
2025-03-13 15:29:38,454 - numexpr.utils - INFO - Note: NumExpr detected 12 cores but "NUMEXPR_MAX_THREADS" not set, so enforcing safe limit of 8.
2025-03-13 15:29:38,454 - numexpr.utils - INFO - NumExpr defaulting to 8 threads.
2025-03-13 15:29:39,747 - matplotlib - DEBUG - matplotlib data path: C:\Users\msameerakram\AppData\Local\anaconda3\Lib\site-packages\matplotlib\mpl-data
2025-03-13 15:29:39,752 - matplotlib - DEBUG - CONFIGDIR=C:\Users\msameerakram\.matplotlib
2025-03-13 15:29:39,755 - matplotlib - DEBUG - interactive is False
2025-03-13 15:29:39,755 - matplotlib - DEBUG - platform is win32
2025-03-13 15:29:39,818 - matplotlib - DEBUG - CACHEDIR=C:\Users\msameerakram\.matplotlib
2025-03-13 15:29:39,821 - matplotlib.font_manager - DEBUG - Using fontManager instance from C:\Users\msameerakram\.matplotlib\fontlist-v390.json
2025-03-13 15:29:42,302 - numexpr.utils - INFO - Note: NumExpr detected 12 cores but "NUMEXPR_MAX_THREADS" not set, so enforcing safe limit of 8.
2025-03-13 15:29:42,302 - numexpr.utils - INFO - NumExpr defaulting to 8 threads.
2025-03-13 15:29:43,568 - matplotlib - DEBUG - matplotlib data path: C:\Users\msameerakram\AppData\Local\anaconda3\Lib\site-packages\matplotlib\mpl-data
2025-03-13 15:29:43,573 - matplotlib - DEBUG - CONFIGDIR=C:\Users\msameerakram\.matplotlib
2025-03-13 15:29:43,574 - matplotlib - DEBUG - interactive is False
2025-03-13 15:29:43,575 - matplotlib - DEBUG - platform is win32
2025-03-13 15:29:43,638 - matplotlib - DEBUG - CACHEDIR=C:\Users\msameerakram\.matplotlib
2025-03-13 15:29:43,641 - matplotlib.font_manager - DEBUG - Using fontManager instance from C:\Users\msameerakram\.matplotlib\fontlist-v390.json
2025-03-13 15:29:45,162 - asyncio - DEBUG - Using selector: SelectSelector
2025-03-13 15:29:45,200 - pymongo.topology - DEBUG - {"topologyId": {"$oid": "67d2b399dc3bf3a83804d41f"}, "message": "Starting topology monitoring"}
2025-03-13 15:29:45,201 - pymongo.topology - DEBUG - {"topologyId": {"$oid": "67d2b399dc3bf3a83804d41f"}, "previousDescription": "<TopologyDescription id: 67d2b399dc3bf3a83804d41f, topology_type: Unknown, servers: []>", "newDescription": "<TopologyDescription id: 67d2b399dc3bf3a83804d41f, topology_type: Unknown, servers: [<ServerDescription ('3.144.134.141', 27017) server_type: Unknown, rtt: None>]>", "message": "Topology description changed"}
2025-03-13 15:29:45,201 - pymongo.topology - DEBUG - {"topologyId": {"$oid": "67d2b399dc3bf3a83804d41f"}, "serverHost": "3.144.134.141", "serverPort": 27017, "message": "Starting server monitoring"}
2025-03-13 15:29:45,203 - pymongo.connection - DEBUG - {"clientId": {"$oid": "67d2b399dc3bf3a83804d41f"}, "message": "Connection pool created", "serverHost": "3.144.134.141", "serverPort": 27017}
2025-03-13 15:29:45,206 - pymongo.serverSelection - DEBUG - {"message": "Server selection started", "selector": "Primary()", "operation": "ping", "topologyDescription": "<TopologyDescription id: 67d2b399dc3bf3a83804d41f, topology_type: Unknown, servers: [<ServerDescription ('3.144.134.141', 27017) server_type: Unknown, rtt: None>]>", "clientId": {"$oid": "67d2b399dc3bf3a83804d41f"}}
2025-03-13 15:29:45,206 - pymongo.serverSelection - DEBUG - {"message": "Waiting for suitable server to become available", "selector": "Primary()", "operation": "ping", "topologyDescription": "<TopologyDescription id: 67d2b399dc3bf3a83804d41f, topology_type: Unknown, servers: [<ServerDescription ('3.144.134.141', 27017) server_type: Unknown, rtt: None>]>", "clientId": {"$oid": "67d2b399dc3bf3a83804d41f"}, "remainingTimeMS": 30}
2025-03-13 15:29:45,455 - pymongo.topology - DEBUG - {"topologyId": {"$oid": "67d2b399dc3bf3a83804d41f"}, "driverConnectionId": 1, "serverHost": "3.144.134.141", "serverPort": 27017, "awaited": false, "message": "Server heartbeat started"}
2025-03-13 15:29:45,705 - pymongo.topology - DEBUG - {"topologyId": {"$oid": "67d2b399dc3bf3a83804d41f"}, "driverConnectionId": 1, "serverConnectionId": 13102, "serverHost": "3.144.134.141", "serverPort": 27017, "awaited": false, "durationMS": 250.0, "reply": "{\"helloOk\": true, \"ismaster\": true, \"topologyVersion\": {\"processId\": {\"$oid\": \"67b7e5814f77c1a87c56d054\"}}, \"maxBsonObjectSize\": 16777216, \"maxMessageSizeBytes\": 48000000, \"maxWriteBatchSize\": 100000, \"localTime\": {\"$date\": \"2025-03-13T10:29:45.724Z\"}, \"logicalSessionTimeoutMinutes\": 30, \"connectionId\": 13102, \"maxWireVersion\": 25, \"ok\": 1.0}", "message": "Server heartbeat succeeded"}
2025-03-13 15:29:45,706 - pymongo.connection - DEBUG - {"clientId": {"$oid": "67d2b399dc3bf3a83804d41f"}, "message": "Connection pool ready", "serverHost": "3.144.134.141", "serverPort": 27017}
2025-03-13 15:29:45,706 - pymongo.topology - DEBUG - {"topologyId": {"$oid": "67d2b399dc3bf3a83804d41f"}, "previousDescription": "<TopologyDescription id: 67d2b399dc3bf3a83804d41f, topology_type: Unknown, servers: [<ServerDescription ('3.144.134.141', 27017) server_type: Unknown, rtt: None>]>", "newDescription": "<TopologyDescription id: 67d2b399dc3bf3a83804d41f, topology_type: Single, servers: [<ServerDescription ('3.144.134.141', 27017) server_type: Standalone, rtt: 0.25>]>", "message": "Topology description changed"}
2025-03-13 15:29:45,706 - pymongo.serverSelection - DEBUG - {"message": "Server selection succeeded", "selector": "Primary()", "operation": "ping", "topologyDescription": "<TopologyDescription id: 67d2b399dc3bf3a83804d41f, topology_type: Single, servers: [<ServerDescription ('3.144.134.141', 27017) server_type: Standalone, rtt: 0.25>]>", "clientId": {"$oid": "67d2b399dc3bf3a83804d41f"}, "serverHost": "3.144.134.141", "serverPort": 27017}
2025-03-13 15:29:45,707 - pymongo.connection - DEBUG - {"clientId": {"$oid": "67d2b399dc3bf3a83804d41f"}, "message": "Connection checkout started", "serverHost": "3.144.134.141", "serverPort": 27017}
2025-03-13 15:29:45,707 - pymongo.topology - DEBUG - {"topologyId": {"$oid": "67d2b399dc3bf3a83804d41f"}, "driverConnectionId": 1, "serverConnectionId": 13102, "serverHost": "3.144.134.141", "serverPort": 27017, "awaited": true, "message": "Server heartbeat started"}
2025-03-13 15:29:45,708 - pymongo.connection - DEBUG - {"clientId": {"$oid": "67d2b399dc3bf3a83804d41f"}, "message": "Connection created", "serverHost": "3.144.134.141", "serverPort": 27017, "driverConnectionId": 1}
2025-03-13 15:29:46,466 - pymongo.connection - DEBUG - {"clientId": {"$oid": "67d2b399dc3bf3a83804d41f"}, "message": "Connection ready", "serverHost": "3.144.134.141", "serverPort": 27017, "driverConnectionId": 1, "durationMS": 0.5}
2025-03-13 15:29:46,466 - pymongo.connection - DEBUG - {"clientId": {"$oid": "67d2b399dc3bf3a83804d41f"}, "message": "Connection checked out", "serverHost": "3.144.134.141", "serverPort": 27017, "driverConnectionId": 1, "durationMS": 0.7659999999996217}
2025-03-13 15:29:46,467 - pymongo.command - DEBUG - {"clientId": {"$oid": "67d2b399dc3bf3a83804d41f"}, "message": "Command started", "command": "{\"ping\": 1, \"lsid\": {\"id\": {\"$binary\": {\"base64\": \"wvKWnVW3R7KtDVfkZktQAQ==\", \"subType\": \"04\"}}}, \"$db\": \"opal_server\"}", "commandName": "ping", "databaseName": "opal_server", "requestId": 6334, "operationId": 6334, "driverConnectionId": 1, "serverConnectionId": 13103, "serverHost": "3.144.134.141", "serverPort": 27017}
2025-03-13 15:29:46,713 - pymongo.command - DEBUG - {"clientId": {"$oid": "67d2b399dc3bf3a83804d41f"}, "message": "Command succeeded", "durationMS": 245.558, "reply": "{\"ok\": 1.0}", "commandName": "ping", "databaseName": "opal_server", "requestId": 6334, "operationId": 6334, "driverConnectionId": 1, "serverConnectionId": 13103, "serverHost": "3.144.134.141", "serverPort": 27017}
2025-03-13 15:29:46,713 - pymongo.connection - DEBUG - {"clientId": {"$oid": "67d2b399dc3bf3a83804d41f"}, "message": "Connection checked in", "serverHost": "3.144.134.141", "serverPort": 27017, "driverConnectionId": 1}
2025-03-13 15:29:47,317 - app.services.predictive_analytics - DEBUG - Analyzing time window from 2025-03-13 14:29:47.317626 to 2025-03-13 15:29:47.317626
2025-03-13 15:29:47,318 - app.services.predictive_analytics - DEBUG - Time window: 1.0 hours
2025-03-13 15:29:47,318 - app.db.repositories.data_repository - DEBUG - Connected to database: opal_server
2025-03-13 15:29:47,318 - app.db.repositories.data_repository - DEBUG - Violations pipeline: [{'$match': {'$or': [{'timestamp': {'$gte': datetime.datetime(2025, 3, 13, 14, 29, 47, 317626), '$lte': datetime.datetime(2025, 3, 13, 15, 29, 47, 317626)}}, {'event_time': {'$gte': datetime.datetime(2025, 3, 13, 14, 29, 47, 317626), '$lte': datetime.datetime(2025, 3, 13, 15, 29, 47, 317626)}}, {'created_at': {'$gte': datetime.datetime(2025, 3, 13, 14, 29, 47, 317626), '$lte': datetime.datetime(2025, 3, 13, 15, 29, 47, 317626)}}]}}, {'$lookup': {'from': 'drivers', 'localField': 'driver_uuid', 'foreignField': 'driver_id', 'as': 'driver_info'}}, {'$addFields': {'driver_name': {'$cond': [{'$gt': [{'$size': '$driver_info'}, 0]}, {'$arrayElemAt': ['$driver_info.name', 0]}, {'$cond': [{'$eq': ['$driver_uuid', 'unknown']}, 'Unassigned Driver', {'$concat': ['Driver ', {'$toString': '$driver_uuid'}]}]}]}}}]
2025-03-13 15:29:47,318 - pymongo.serverSelection - DEBUG - {"message": "Server selection started", "selector": "Primary()", "operation": "listCollections", "topologyDescription": "<TopologyDescription id: 67d2b399dc3bf3a83804d41f, topology_type: Single, servers: [<ServerDescription ('3.144.134.141', 27017) server_type: Standalone, rtt: 0.25>]>", "clientId": {"$oid": "67d2b399dc3bf3a83804d41f"}}
2025-03-13 15:29:47,319 - pymongo.serverSelection - DEBUG - {"message": "Server selection succeeded", "selector": "Primary()", "operation": "listCollections", "topologyDescription": "<TopologyDescription id: 67d2b399dc3bf3a83804d41f, topology_type: Single, servers: [<ServerDescription ('3.144.134.141', 27017) server_type: Standalone, rtt: 0.25>]>", "clientId": {"$oid": "67d2b399dc3bf3a83804d41f"}, "serverHost": "3.144.134.141", "serverPort": 27017}
2025-03-13 15:29:47,319 - pymongo.connection - DEBUG - {"clientId": {"$oid": "67d2b399dc3bf3a83804d41f"}, "message": "Connection checkout started", "serverHost": "3.144.134.141", "serverPort": 27017}
2025-03-13 15:29:47,320 - pymongo.connection - DEBUG - {"clientId": {"$oid": "67d2b399dc3bf3a83804d41f"}, "message": "Connection checked out", "serverHost": "3.144.134.141", "serverPort": 27017, "driverConnectionId": 1, "durationMS": 0.0}
2025-03-13 15:29:47,320 - pymongo.command - DEBUG - {"clientId": {"$oid": "67d2b399dc3bf3a83804d41f"}, "message": "Command started", "command": "{\"listCollections\": 1, \"nameOnly\": true, \"lsid\": {\"id\": {\"$binary\": {\"base64\": \"wvKWnVW3R7KtDVfkZktQAQ==\", \"subType\": \"04\"}}}, \"$db\": \"opal_server\"}", "commandName": "listCollections", "databaseName": "opal_server", "requestId": 26500, "operationId": 26500, "driverConnectionId": 1, "serverConnectionId": 13103, "serverHost": "3.144.134.141", "serverPort": 27017}
2025-03-13 15:29:47,567 - pymongo.command - DEBUG - {"clientId": {"$oid": "67d2b399dc3bf3a83804d41f"}, "message": "Command succeeded", "durationMS": 246.488, "reply": "{\"cursor\": {\"ns\": \"opal_server.$cmd.listCollections\", \"firstBatch\": [{\"name\": \"rags\", \"type\": \"collection\"}, {\"name\": \"trips\", \"type\": \"collection\"}, {\"name\": \"vehicles\", \"type\": \"collection\"}, {\"name\": \"permissions\", \"type\": \"collection\"}, {\"name\": \"notifications\", \"type\": \"collection\"}, {\"name\": \"crash_events\", \"type\": \"collection\"}, {\"name\": \"violations-x\", \"type\": \"collection\"}, {\"name\": \"drivers\", \"type\": \"collection\"}, {\"name\": \"geofences\", \"type\": \"collection\"}, {\"name\": \"tickets\", \"type\": \"collection\"}, {\"name\": \"vehicleevents\", \"type\": \"collection\"}, {\"name\": \"vendors\", \"type\": \"collection\"}, {\"name\": \"roles\", \"type\": \"collection\"}, {\"name\": \"clients\", \"type\": \"collection\"}, {\"name\": \"vendordevices\", \"type\": \"collection\"}, {\"name\": \"settings\", \"type\": \"collection\"}, {\"name\": \"media\", \"type\": \"collection\"}, {\"name\": \"violation_rules\", \"type\": \"collection\"}, {\"name\": \"violations\", \"type\": \"collection\"}, {\"name\": \"users\", \"type\": \"collection\"}, {\"name\": \"companies\", \"type\": \"coll...", "commandName": "listCollections", "databaseName": "opal_server", "requestId": 26500, "operationId": 26500, "driverConnectionId": 1, "serverConnectionId": 13103, "serverHost": "3.144.134.141", "serverPort": 27017}
2025-03-13 15:29:47,569 - pymongo.connection - DEBUG - {"clientId": {"$oid": "67d2b399dc3bf3a83804d41f"}, "message": "Connection checked in", "serverHost": "3.144.134.141", "serverPort": 27017, "driverConnectionId": 1}
2025-03-13 15:29:47,570 - app.db.repositories.data_repository - DEBUG - Available collections: ['rags', 'trips', 'vehicles', 'permissions', 'notifications', 'crash_events', 'violations-x', 'drivers', 'geofences', 'tickets', 'vehicleevents', 'vendors', 'roles', 'clients', 'vendordevices', 'settings', 'media', 'violation_rules', 'violations', 'users', 'companies']
2025-03-13 15:29:47,570 - app.db.repositories.data_repository - DEBUG - Checking collection: violations
2025-03-13 15:29:47,571 - pymongo.serverSelection - DEBUG - {"message": "Server selection started", "selector": "Primary()", "operation": "count", "topologyDescription": "<TopologyDescription id: 67d2b399dc3bf3a83804d41f, topology_type: Single, servers: [<ServerDescription ('3.144.134.141', 27017) server_type: Standalone, rtt: 0.25>]>", "clientId": {"$oid": "67d2b399dc3bf3a83804d41f"}}
2025-03-13 15:29:47,572 - pymongo.serverSelection - DEBUG - {"message": "Server selection succeeded", "selector": "Primary()", "operation": "count", "topologyDescription": "<TopologyDescription id: 67d2b399dc3bf3a83804d41f, topology_type: Single, servers: [<ServerDescription ('3.144.134.141', 27017) server_type: Standalone, rtt: 0.25>]>", "clientId": {"$oid": "67d2b399dc3bf3a83804d41f"}, "serverHost": "3.144.134.141", "serverPort": 27017}
2025-03-13 15:29:47,572 - pymongo.connection - DEBUG - {"clientId": {"$oid": "67d2b399dc3bf3a83804d41f"}, "message": "Connection checkout started", "serverHost": "3.144.134.141", "serverPort": 27017}
2025-03-13 15:29:47,573 - pymongo.connection - DEBUG - {"clientId": {"$oid": "67d2b399dc3bf3a83804d41f"}, "message": "Connection checked out", "serverHost": "3.144.134.141", "serverPort": 27017, "driverConnectionId": 1, "durationMS": 0.0}
2025-03-13 15:29:47,573 - pymongo.command - DEBUG - {"clientId": {"$oid": "67d2b399dc3bf3a83804d41f"}, "message": "Command started", "command": "{\"aggregate\": \"violations\", \"pipeline\": [{\"$match\": {\"$or\": [{\"timestamp\": {\"$gte\": {\"$date\": \"2025-03-13T14:29:47.317Z\"}, \"$lte\": {\"$date\": \"2025-03-13T15:29:47.317Z\"}}}, {\"event_time\": {\"$gte\": {\"$date\": \"2025-03-13T14:29:47.317Z\"}, \"$lte\": {\"$date\": \"2025-03-13T15:29:47.317Z\"}}}, {\"created_at\": {\"$gte\": {\"$date\": \"2025-03-13T14:29:47.317Z\"}, \"$lte\": {\"$date\": \"2025-03-13T15:29:47.317Z\"}}}]}}, {\"$group\": {\"_id\": 1, \"n\": {\"$sum\": 1}}}], \"lsid\": {\"id\": {\"$binary\": {\"base64\": \"wvKWnVW3R7KtDVfkZktQAQ==\", \"subType\": \"04\"}}}, \"$db\": \"opal_server\"}", "commandName": "aggregate", "databaseName": "opal_server", "requestId": 19169, "operationId": 19169, "driverConnectionId": 1, "serverConnectionId": 13103, "serverHost": "3.144.134.141", "serverPort": 27017}
2025-03-13 15:29:47,829 - pymongo.command - DEBUG - {"clientId": {"$oid": "67d2b399dc3bf3a83804d41f"}, "message": "Command succeeded", "durationMS": 256.778, "reply": "{\"cursor\": {\"ns\": \"opal_server.violations\"}, \"ok\": 1.0}", "commandName": "aggregate", "databaseName": "opal_server", "requestId": 19169, "operationId": 19169, "driverConnectionId": 1, "serverConnectionId": 13103, "serverHost": "3.144.134.141", "serverPort": 27017}
2025-03-13 15:29:47,829 - pymongo.connection - DEBUG - {"clientId": {"$oid": "67d2b399dc3bf3a83804d41f"}, "message": "Connection checked in", "serverHost": "3.144.134.141", "serverPort": 27017, "driverConnectionId": 1}
2025-03-13 15:29:47,830 - app.db.repositories.data_repository - WARNING - No violations found in any collection
2025-03-13 15:29:47,830 - app.db.repositories.data_repository - DEBUG - Fetching vehicle events from database: opal_server
2025-03-13 15:29:47,830 - app.db.repositories.data_repository - DEBUG - Vehicle events query: {'$or': [{'timestamp': {'$gte': datetime.datetime(2025, 3, 13, 14, 29, 47, 317626), '$lte': datetime.datetime(2025, 3, 13, 15, 29, 47, 317626)}}, {'event_time': {'$gte': datetime.datetime(2025, 3, 13, 14, 29, 47, 317626), '$lte': datetime.datetime(2025, 3, 13, 15, 29, 47, 317626)}}, {'created_at': {'$gte': datetime.datetime(2025, 3, 13, 14, 29, 47, 317626), '$lte': datetime.datetime(2025, 3, 13, 15, 29, 47, 317626)}}]}
2025-03-13 15:29:47,830 - app.db.repositories.data_repository - DEBUG - Time range: {'$gte': datetime.datetime(2025, 3, 13, 14, 29, 47, 317626), '$lte': datetime.datetime(2025, 3, 13, 15, 29, 47, 317626)}
2025-03-13 15:29:47,831 - pymongo.serverSelection - DEBUG - {"message": "Server selection started", "selector": "Primary()", "operation": "listCollections", "topologyDescription": "<TopologyDescription id: 67d2b399dc3bf3a83804d41f, topology_type: Single, servers: [<ServerDescription ('3.144.134.141', 27017) server_type: Standalone, rtt: 0.25>]>", "clientId": {"$oid": "67d2b399dc3bf3a83804d41f"}}
2025-03-13 15:29:47,831 - pymongo.serverSelection - DEBUG - {"message": "Server selection succeeded", "selector": "Primary()", "operation": "listCollections", "topologyDescription": "<TopologyDescription id: 67d2b399dc3bf3a83804d41f, topology_type: Single, servers: [<ServerDescription ('3.144.134.141', 27017) server_type: Standalone, rtt: 0.25>]>", "clientId": {"$oid": "67d2b399dc3bf3a83804d41f"}, "serverHost": "3.144.134.141", "serverPort": 27017}
2025-03-13 15:29:47,831 - pymongo.connection - DEBUG - {"clientId": {"$oid": "67d2b399dc3bf3a83804d41f"}, "message": "Connection checkout started", "serverHost": "3.144.134.141", "serverPort": 27017}
2025-03-13 15:29:47,832 - pymongo.connection - DEBUG - {"clientId": {"$oid": "67d2b399dc3bf3a83804d41f"}, "message": "Connection checked out", "serverHost": "3.144.134.141", "serverPort": 27017, "driverConnectionId": 1, "durationMS": 0.0}
2025-03-13 15:29:47,832 - pymongo.command - DEBUG - {"clientId": {"$oid": "67d2b399dc3bf3a83804d41f"}, "message": "Command started", "command": "{\"listCollections\": 1, \"nameOnly\": true, \"lsid\": {\"id\": {\"$binary\": {\"base64\": \"wvKWnVW3R7KtDVfkZktQAQ==\", \"subType\": \"04\"}}}, \"$db\": \"opal_server\"}", "commandName": "listCollections", "databaseName": "opal_server", "requestId": 15724, "operationId": 15724, "driverConnectionId": 1, "serverConnectionId": 13103, "serverHost": "3.144.134.141", "serverPort": 27017}
2025-03-13 15:29:48,079 - pymongo.command - DEBUG - {"clientId": {"$oid": "67d2b399dc3bf3a83804d41f"}, "message": "Command succeeded", "durationMS": 245.49, "reply": "{\"cursor\": {\"ns\": \"opal_server.$cmd.listCollections\", \"firstBatch\": [{\"name\": \"rags\", \"type\": \"collection\"}, {\"name\": \"trips\", \"type\": \"collection\"}, {\"name\": \"vehicles\", \"type\": \"collection\"}, {\"name\": \"permissions\", \"type\": \"collection\"}, {\"name\": \"notifications\", \"type\": \"collection\"}, {\"name\": \"crash_events\", \"type\": \"collection\"}, {\"name\": \"violations-x\", \"type\": \"collection\"}, {\"name\": \"drivers\", \"type\": \"collection\"}, {\"name\": \"geofences\", \"type\": \"collection\"}, {\"name\": \"tickets\", \"type\": \"collection\"}, {\"name\": \"vehicleevents\", \"type\": \"collection\"}, {\"name\": \"vendors\", \"type\": \"collection\"}, {\"name\": \"roles\", \"type\": \"collection\"}, {\"name\": \"clients\", \"type\": \"collection\"}, {\"name\": \"vendordevices\", \"type\": \"collection\"}, {\"name\": \"settings\", \"type\": \"collection\"}, {\"name\": \"media\", \"type\": \"collection\"}, {\"name\": \"violation_rules\", \"type\": \"collection\"}, {\"name\": \"violations\", \"type\": \"collection\"}, {\"name\": \"users\", \"type\": \"collection\"}, {\"name\": \"companies\", \"type\": \"coll...", "commandName": "listCollections", "databaseName": "opal_server", "requestId": 15724, "operationId": 15724, "driverConnectionId": 1, "serverConnectionId": 13103, "serverHost": "3.144.134.141", "serverPort": 27017}
2025-03-13 15:29:48,079 - pymongo.connection - DEBUG - {"clientId": {"$oid": "67d2b399dc3bf3a83804d41f"}, "message": "Connection checked in", "serverHost": "3.144.134.141", "serverPort": 27017, "driverConnectionId": 1}
2025-03-13 15:29:48,080 - app.db.repositories.data_repository - DEBUG - Available collections: ['rags', 'trips', 'vehicles', 'permissions', 'notifications', 'crash_events', 'violations-x', 'drivers', 'geofences', 'tickets', 'vehicleevents', 'vendors', 'roles', 'clients', 'vendordevices', 'settings', 'media', 'violation_rules', 'violations', 'users', 'companies']
2025-03-13 15:29:48,081 - pymongo.serverSelection - DEBUG - {"message": "Server selection started", "selector": "Primary()", "operation": "find", "topologyDescription": "<TopologyDescription id: 67d2b399dc3bf3a83804d41f, topology_type: Single, servers: [<ServerDescription ('3.144.134.141', 27017) server_type: Standalone, rtt: 0.25>]>", "clientId": {"$oid": "67d2b399dc3bf3a83804d41f"}}
2025-03-13 15:29:48,081 - pymongo.serverSelection - DEBUG - {"message": "Server selection succeeded", "selector": "Primary()", "operation": "find", "topologyDescription": "<TopologyDescription id: 67d2b399dc3bf3a83804d41f, topology_type: Single, servers: [<ServerDescription ('3.144.134.141', 27017) server_type: Standalone, rtt: 0.25>]>", "clientId": {"$oid": "67d2b399dc3bf3a83804d41f"}, "serverHost": "3.144.134.141", "serverPort": 27017}
2025-03-13 15:29:48,081 - pymongo.connection - DEBUG - {"clientId": {"$oid": "67d2b399dc3bf3a83804d41f"}, "message": "Connection checkout started", "serverHost": "3.144.134.141", "serverPort": 27017}
2025-03-13 15:29:48,081 - pymongo.connection - DEBUG - {"clientId": {"$oid": "67d2b399dc3bf3a83804d41f"}, "message": "Connection checked out", "serverHost": "3.144.134.141", "serverPort": 27017, "driverConnectionId": 1, "durationMS": 0.0}
2025-03-13 15:29:48,082 - pymongo.command - DEBUG - {"clientId": {"$oid": "67d2b399dc3bf3a83804d41f"}, "message": "Command started", "command": "{\"find\": \"vehicleevents\", \"limit\": 1, \"singleBatch\": true, \"lsid\": {\"id\": {\"$binary\": {\"base64\": \"wvKWnVW3R7KtDVfkZktQAQ==\", \"subType\": \"04\"}}}, \"$db\": \"opal_server\"}", "commandName": "find", "databaseName": "opal_server", "requestId": 11478, "operationId": 11478, "driverConnectionId": 1, "serverConnectionId": 13103, "serverHost": "3.144.134.141", "serverPort": 27017}
2025-03-13 15:29:48,329 - pymongo.command - DEBUG - {"clientId": {"$oid": "67d2b399dc3bf3a83804d41f"}, "message": "Command succeeded", "durationMS": 247.258, "reply": "{\"cursor\": {\"firstBatch\": [{\"_id\": {\"$oid\": \"67441bdeb231195485d25272\"}, \"vendor\": {\"$oid\": \"6703ad7f70ba41e9473dd8e7\"}, \"deviceTime\": {\"$date\": \"2024-11-22T12:48:47Z\"}, \"serverTime\": {\"$date\": \"2024-11-22T12:48:47.958Z\"}, \"location\": {\"latitude\": 18.542048, \"longitude\": 55.852535, \"altitude\": 240}, \"ignition\": true, \"speed\": 68, \"heading\": 84, \"event\": {\"type\": \"DISTANCE_TRAVEL\", \"name\": \"Distance Traveled\"}, \"odometer\": 85198.52713696871, \"satellites\": 26, \"diff\": {\"distanceMeter\": 226.15911957109347, \"durationMillis\": 11000, \"ignitionOn\": true, \"moving\": true}, \"vehicle\": {\"license\": \"1765HW\", \"uuid\": \"f59c5202-eda5-4348-9d66-ec14718f076b\"}, \"device\": {\"imei\": \"358925430754727\"}, \"hdop\": 25.5, \"positionAccuracy\": 37.507210845177696, \"batteryVoltage\": 4.026, \"createdAt\": {\"$date\": \"2024-11-25T06:40:30.615Z\"}, \"updatedAt\": {\"$date\": \"2024-11-25T06:40:30.615Z\"}}], \"ns\": \"opal_server.vehicleevents\"}, \"ok\": 1.0}", "commandName": "find", "databaseName": "opal_server", "requestId": 11478, "operationId": 11478, "driverConnectionId": 1, "serverConnectionId": 13103, "serverHost": "3.144.134.141", "serverPort": 27017}
2025-03-13 15:29:48,329 - pymongo.connection - DEBUG - {"clientId": {"$oid": "67d2b399dc3bf3a83804d41f"}, "message": "Connection checked in", "serverHost": "3.144.134.141", "serverPort": 27017, "driverConnectionId": 1}
2025-03-13 15:29:48,330 - app.db.repositories.data_repository - DEBUG - Sample document fields: ['_id', 'vendor', 'deviceTime', 'serverTime', 'location', 'ignition', 'speed', 'heading', 'event', 'odometer', 'satellites', 'wrongOrdered', 'diff', 'vehicle', 'device', 'hdop', 'positionAccuracy', 'batteryVoltage', '__v', 'createdAt', 'updatedAt']
2025-03-13 15:29:48,330 - pymongo.serverSelection - DEBUG - {"message": "Server selection started", "selector": "Primary()", "operation": "count", "topologyDescription": "<TopologyDescription id: 67d2b399dc3bf3a83804d41f, topology_type: Single, servers: [<ServerDescription ('3.144.134.141', 27017) server_type: Standalone, rtt: 0.25>]>", "clientId": {"$oid": "67d2b399dc3bf3a83804d41f"}}
2025-03-13 15:29:48,330 - pymongo.serverSelection - DEBUG - {"message": "Server selection succeeded", "selector": "Primary()", "operation": "count", "topologyDescription": "<TopologyDescription id: 67d2b399dc3bf3a83804d41f, topology_type: Single, servers: [<ServerDescription ('3.144.134.141', 27017) server_type: Standalone, rtt: 0.25>]>", "clientId": {"$oid": "67d2b399dc3bf3a83804d41f"}, "serverHost": "3.144.134.141", "serverPort": 27017}
2025-03-13 15:29:48,331 - pymongo.connection - DEBUG - {"clientId": {"$oid": "67d2b399dc3bf3a83804d41f"}, "message": "Connection checkout started", "serverHost": "3.144.134.141", "serverPort": 27017}
2025-03-13 15:29:48,331 - pymongo.connection - DEBUG - {"clientId": {"$oid": "67d2b399dc3bf3a83804d41f"}, "message": "Connection checked out", "serverHost": "3.144.134.141", "serverPort": 27017, "driverConnectionId": 1, "durationMS": 0.0}
2025-03-13 15:29:48,331 - pymongo.command - DEBUG - {"clientId": {"$oid": "67d2b399dc3bf3a83804d41f"}, "message": "Command started", "command": "{\"aggregate\": \"vehicleevents\", \"pipeline\": [{\"$match\": {\"$or\": [{\"timestamp\": {\"$gte\": {\"$date\": \"2025-03-13T14:29:47.317Z\"}, \"$lte\": {\"$date\": \"2025-03-13T15:29:47.317Z\"}}}, {\"event_time\": {\"$gte\": {\"$date\": \"2025-03-13T14:29:47.317Z\"}, \"$lte\": {\"$date\": \"2025-03-13T15:29:47.317Z\"}}}, {\"created_at\": {\"$gte\": {\"$date\": \"2025-03-13T14:29:47.317Z\"}, \"$lte\": {\"$date\": \"2025-03-13T15:29:47.317Z\"}}}]}}, {\"$group\": {\"_id\": 1, \"n\": {\"$sum\": 1}}}], \"lsid\": {\"id\": {\"$binary\": {\"base64\": \"wvKWnVW3R7KtDVfkZktQAQ==\", \"subType\": \"04\"}}}, \"$db\": \"opal_server\"}", "commandName": "aggregate", "databaseName": "opal_server", "requestId": 29358, "operationId": 29358, "driverConnectionId": 1, "serverConnectionId": 13103, "serverHost": "3.144.134.141", "serverPort": 27017}
2025-03-13 15:29:54,421 - pymongo.command - DEBUG - {"clientId": {"$oid": "67d2b399dc3bf3a83804d41f"}, "message": "Command succeeded", "durationMS": 6088.997, "reply": "{\"cursor\": {\"ns\": \"opal_server.vehicleevents\"}, \"ok\": 1.0}", "commandName": "aggregate", "databaseName": "opal_server", "requestId": 29358, "operationId": 29358, "driverConnectionId": 1, "serverConnectionId": 13103, "serverHost": "3.144.134.141", "serverPort": 27017}
2025-03-13 15:29:54,421 - pymongo.connection - DEBUG - {"clientId": {"$oid": "67d2b399dc3bf3a83804d41f"}, "message": "Connection checked in", "serverHost": "3.144.134.141", "serverPort": 27017, "driverConnectionId": 1}
2025-03-13 15:29:54,421 - app.db.repositories.data_repository - INFO - Found 0 matching vehicle events
2025-03-13 15:29:54,422 - pymongo.serverSelection - DEBUG - {"message": "Server selection started", "selector": "Primary()", "operation": "find", "topologyDescription": "<TopologyDescription id: 67d2b399dc3bf3a83804d41f, topology_type: Single, servers: [<ServerDescription ('3.144.134.141', 27017) server_type: Standalone, rtt: 0.25>]>", "clientId": {"$oid": "67d2b399dc3bf3a83804d41f"}}
2025-03-13 15:29:54,422 - pymongo.serverSelection - DEBUG - {"message": "Server selection succeeded", "selector": "Primary()", "operation": "find", "topologyDescription": "<TopologyDescription id: 67d2b399dc3bf3a83804d41f, topology_type: Single, servers: [<ServerDescription ('3.144.134.141', 27017) server_type: Standalone, rtt: 0.25>]>", "clientId": {"$oid": "67d2b399dc3bf3a83804d41f"}, "serverHost": "3.144.134.141", "serverPort": 27017}
2025-03-13 15:29:54,423 - pymongo.connection - DEBUG - {"clientId": {"$oid": "67d2b399dc3bf3a83804d41f"}, "message": "Connection checkout started", "serverHost": "3.144.134.141", "serverPort": 27017}
2025-03-13 15:29:54,423 - pymongo.connection - DEBUG - {"clientId": {"$oid": "67d2b399dc3bf3a83804d41f"}, "message": "Connection checked out", "serverHost": "3.144.134.141", "serverPort": 27017, "driverConnectionId": 1, "durationMS": 0.0}
2025-03-13 15:29:54,423 - pymongo.command - DEBUG - {"clientId": {"$oid": "67d2b399dc3bf3a83804d41f"}, "message": "Command started", "command": "{\"find\": \"vehicleevents\", \"filter\": {\"$or\": [{\"timestamp\": {\"$gte\": {\"$date\": \"2025-03-13T14:29:47.317Z\"}, \"$lte\": {\"$date\": \"2025-03-13T15:29:47.317Z\"}}}, {\"event_time\": {\"$gte\": {\"$date\": \"2025-03-13T14:29:47.317Z\"}, \"$lte\": {\"$date\": \"2025-03-13T15:29:47.317Z\"}}}, {\"created_at\": {\"$gte\": {\"$date\": \"2025-03-13T14:29:47.317Z\"}, \"$lte\": {\"$date\": \"2025-03-13T15:29:47.317Z\"}}}]}, \"limit\": 1000, \"lsid\": {\"id\": {\"$binary\": {\"base64\": \"wvKWnVW3R7KtDVfkZktQAQ==\", \"subType\": \"04\"}}}, \"$db\": \"opal_server\"}", "commandName": "find", "databaseName": "opal_server", "requestId": 26962, "operationId": 26962, "driverConnectionId": 1, "serverConnectionId": 13103, "serverHost": "3.144.134.141", "serverPort": 27017}
2025-03-13 15:29:55,965 - pymongo.topology - DEBUG - {"topologyId": {"$oid": "67d2b399dc3bf3a83804d41f"}, "driverConnectionId": 1, "serverConnectionId": 13102, "serverHost": "3.144.134.141", "serverPort": 27017, "awaited": true, "durationMS": 10265.999999999622, "reply": "{\"isWritablePrimary\": true, \"topologyVersion\": {\"processId\": {\"$oid\": \"67b7e5814f77c1a87c56d054\"}}, \"maxBsonObjectSize\": 16777216, \"maxMessageSizeBytes\": 48000000, \"maxWriteBatchSize\": 100000, \"localTime\": {\"$date\": \"2025-03-13T10:29:55.986Z\"}, \"logicalSessionTimeoutMinutes\": 30, \"connectionId\": 13102, \"maxWireVersion\": 25, \"ok\": 1.0}", "message": "Server heartbeat succeeded"}
2025-03-13 15:29:55,965 - pymongo.topology - DEBUG - {"topologyId": {"$oid": "67d2b399dc3bf3a83804d41f"}, "driverConnectionId": 1, "serverConnectionId": 13102, "serverHost": "3.144.134.141", "serverPort": 27017, "awaited": true, "message": "Server heartbeat started"}
2025-03-13 15:30:01,206 - pymongo.command - DEBUG - {"clientId": {"$oid": "67d2b399dc3bf3a83804d41f"}, "message": "Command succeeded", "durationMS": 6783.013000000001, "reply": "{\"cursor\": {\"ns\": \"opal_server.vehicleevents\"}, \"ok\": 1.0}", "commandName": "find", "databaseName": "opal_server", "requestId": 26962, "operationId": 26962, "driverConnectionId": 1, "serverConnectionId": 13103, "serverHost": "3.144.134.141", "serverPort": 27017}
2025-03-13 15:30:01,206 - pymongo.connection - DEBUG - {"clientId": {"$oid": "67d2b399dc3bf3a83804d41f"}, "message": "Connection checked in", "serverHost": "3.144.134.141", "serverPort": 27017, "driverConnectionId": 1}
2025-03-13 15:30:01,207 - app.db.repositories.data_repository - DEBUG - Retrieved 0 vehicle events
2025-03-13 15:30:05,975 - pymongo.topology - DEBUG - {"topologyId": {"$oid": "67d2b399dc3bf3a83804d41f"}, "driverConnectionId": 1, "serverConnectionId": 13102, "serverHost": "3.144.134.141", "serverPort": 27017, "awaited": true, "durationMS": 10015.000000001237, "reply": "{\"isWritablePrimary\": true, \"topologyVersion\": {\"processId\": {\"$oid\": \"67b7e5814f77c1a87c56d054\"}}, \"maxBsonObjectSize\": 16777216, \"maxMessageSizeBytes\": 48000000, \"maxWriteBatchSize\": 100000, \"localTime\": {\"$date\": \"2025-03-13T10:30:05.996Z\"}, \"logicalSessionTimeoutMinutes\": 30, \"connectionId\": 13102, \"maxWireVersion\": 25, \"ok\": 1.0}", "message": "Server heartbeat succeeded"}
2025-03-13 15:30:05,975 - pymongo.topology - DEBUG - {"topologyId": {"$oid": "67d2b399dc3bf3a83804d41f"}, "driverConnectionId": 1, "serverConnectionId": 13102, "serverHost": "3.144.134.141", "serverPort": 27017, "awaited": true, "message": "Server heartbeat started"}
2025-03-13 15:30:08,467 - app.services.predictive_analytics - DEBUG - Analyzing time window from 2025-03-13 07:30:08.467983 to 2025-03-13 15:30:08.467983
2025-03-13 15:30:08,467 - app.services.predictive_analytics - DEBUG - Time window: 8.0 hours
2025-03-13 15:30:08,467 - app.db.repositories.data_repository - DEBUG - Connected to database: opal_server
2025-03-13 15:30:08,467 - app.db.repositories.data_repository - DEBUG - Violations pipeline: [{'$match': {'$or': [{'timestamp': {'$gte': datetime.datetime(2025, 3, 13, 7, 30, 8, 467983), '$lte': datetime.datetime(2025, 3, 13, 15, 30, 8, 467983)}}, {'event_time': {'$gte': datetime.datetime(2025, 3, 13, 7, 30, 8, 467983), '$lte': datetime.datetime(2025, 3, 13, 15, 30, 8, 467983)}}, {'created_at': {'$gte': datetime.datetime(2025, 3, 13, 7, 30, 8, 467983), '$lte': datetime.datetime(2025, 3, 13, 15, 30, 8, 467983)}}]}}, {'$lookup': {'from': 'drivers', 'localField': 'driver_uuid', 'foreignField': 'driver_id', 'as': 'driver_info'}}, {'$addFields': {'driver_name': {'$cond': [{'$gt': [{'$size': '$driver_info'}, 0]}, {'$arrayElemAt': ['$driver_info.name', 0]}, {'$cond': [{'$eq': ['$driver_uuid', 'unknown']}, 'Unassigned Driver', {'$concat': ['Driver ', {'$toString': '$driver_uuid'}]}]}]}}}]
2025-03-13 15:30:08,468 - pymongo.serverSelection - DEBUG - {"message": "Server selection started", "selector": "Primary()", "operation": "listCollections", "topologyDescription": "<TopologyDescription id: 67d2b399dc3bf3a83804d41f, topology_type: Single, servers: [<ServerDescription ('3.144.134.141', 27017) server_type: Standalone, rtt: 0.25>]>", "clientId": {"$oid": "67d2b399dc3bf3a83804d41f"}}
2025-03-13 15:30:08,468 - pymongo.serverSelection - DEBUG - {"message": "Server selection succeeded", "selector": "Primary()", "operation": "listCollections", "topologyDescription": "<TopologyDescription id: 67d2b399dc3bf3a83804d41f, topology_type: Single, servers: [<ServerDescription ('3.144.134.141', 27017) server_type: Standalone, rtt: 0.25>]>", "clientId": {"$oid": "67d2b399dc3bf3a83804d41f"}, "serverHost": "3.144.134.141", "serverPort": 27017}
2025-03-13 15:30:08,469 - pymongo.connection - DEBUG - {"clientId": {"$oid": "67d2b399dc3bf3a83804d41f"}, "message": "Connection checkout started", "serverHost": "3.144.134.141", "serverPort": 27017}
2025-03-13 15:30:08,469 - pymongo.connection - DEBUG - {"clientId": {"$oid": "67d2b399dc3bf3a83804d41f"}, "message": "Connection checked out", "serverHost": "3.144.134.141", "serverPort": 27017, "driverConnectionId": 1, "durationMS": 0.0}
2025-03-13 15:30:08,470 - pymongo.command - DEBUG - {"clientId": {"$oid": "67d2b399dc3bf3a83804d41f"}, "message": "Command started", "command": "{\"listCollections\": 1, \"nameOnly\": true, \"lsid\": {\"id\": {\"$binary\": {\"base64\": \"wvKWnVW3R7KtDVfkZktQAQ==\", \"subType\": \"04\"}}}, \"$db\": \"opal_server\"}", "commandName": "listCollections", "databaseName": "opal_server", "requestId": 24464, "operationId": 24464, "driverConnectionId": 1, "serverConnectionId": 13103, "serverHost": "3.144.134.141", "serverPort": 27017}
2025-03-13 15:30:08,715 - pymongo.command - DEBUG - {"clientId": {"$oid": "67d2b399dc3bf3a83804d41f"}, "message": "Command succeeded", "durationMS": 244.949, "reply": "{\"cursor\": {\"ns\": \"opal_server.$cmd.listCollections\", \"firstBatch\": [{\"name\": \"rags\", \"type\": \"collection\"}, {\"name\": \"trips\", \"type\": \"collection\"}, {\"name\": \"vehicles\", \"type\": \"collection\"}, {\"name\": \"permissions\", \"type\": \"collection\"}, {\"name\": \"notifications\", \"type\": \"collection\"}, {\"name\": \"crash_events\", \"type\": \"collection\"}, {\"name\": \"violations-x\", \"type\": \"collection\"}, {\"name\": \"drivers\", \"type\": \"collection\"}, {\"name\": \"geofences\", \"type\": \"collection\"}, {\"name\": \"tickets\", \"type\": \"collection\"}, {\"name\": \"vehicleevents\", \"type\": \"collection\"}, {\"name\": \"vendors\", \"type\": \"collection\"}, {\"name\": \"roles\", \"type\": \"collection\"}, {\"name\": \"clients\", \"type\": \"collection\"}, {\"name\": \"vendordevices\", \"type\": \"collection\"}, {\"name\": \"settings\", \"type\": \"collection\"}, {\"name\": \"media\", \"type\": \"collection\"}, {\"name\": \"violation_rules\", \"type\": \"collection\"}, {\"name\": \"violations\", \"type\": \"collection\"}, {\"name\": \"users\", \"type\": \"collection\"}, {\"name\": \"companies\", \"type\": \"coll...", "commandName": "listCollections", "databaseName": "opal_server", "requestId": 24464, "operationId": 24464, "driverConnectionId": 1, "serverConnectionId": 13103, "serverHost": "3.144.134.141", "serverPort": 27017}
2025-03-13 15:30:08,717 - pymongo.connection - DEBUG - {"clientId": {"$oid": "67d2b399dc3bf3a83804d41f"}, "message": "Connection checked in", "serverHost": "3.144.134.141", "serverPort": 27017, "driverConnectionId": 1}
2025-03-13 15:30:08,718 - app.db.repositories.data_repository - DEBUG - Available collections: ['rags', 'trips', 'vehicles', 'permissions', 'notifications', 'crash_events', 'violations-x', 'drivers', 'geofences', 'tickets', 'vehicleevents', 'vendors', 'roles', 'clients', 'vendordevices', 'settings', 'media', 'violation_rules', 'violations', 'users', 'companies']
2025-03-13 15:30:08,718 - app.db.repositories.data_repository - DEBUG - Checking collection: violations
2025-03-13 15:30:08,718 - pymongo.serverSelection - DEBUG - {"message": "Server selection started", "selector": "Primary()", "operation": "count", "topologyDescription": "<TopologyDescription id: 67d2b399dc3bf3a83804d41f, topology_type: Single, servers: [<ServerDescription ('3.144.134.141', 27017) server_type: Standalone, rtt: 0.25>]>", "clientId": {"$oid": "67d2b399dc3bf3a83804d41f"}}
2025-03-13 15:30:08,719 - pymongo.serverSelection - DEBUG - {"message": "Server selection succeeded", "selector": "Primary()", "operation": "count", "topologyDescription": "<TopologyDescription id: 67d2b399dc3bf3a83804d41f, topology_type: Single, servers: [<ServerDescription ('3.144.134.141', 27017) server_type: Standalone, rtt: 0.25>]>", "clientId": {"$oid": "67d2b399dc3bf3a83804d41f"}, "serverHost": "3.144.134.141", "serverPort": 27017}
2025-03-13 15:30:08,719 - pymongo.connection - DEBUG - {"clientId": {"$oid": "67d2b399dc3bf3a83804d41f"}, "message": "Connection checkout started", "serverHost": "3.144.134.141", "serverPort": 27017}
2025-03-13 15:30:08,719 - pymongo.connection - DEBUG - {"clientId": {"$oid": "67d2b399dc3bf3a83804d41f"}, "message": "Connection checked out", "serverHost": "3.144.134.141", "serverPort": 27017, "driverConnectionId": 1, "durationMS": 0.0}
2025-03-13 15:30:08,720 - pymongo.command - DEBUG - {"clientId": {"$oid": "67d2b399dc3bf3a83804d41f"}, "message": "Command started", "command": "{\"aggregate\": \"violations\", \"pipeline\": [{\"$match\": {\"$or\": [{\"timestamp\": {\"$gte\": {\"$date\": \"2025-03-13T07:30:08.467Z\"}, \"$lte\": {\"$date\": \"2025-03-13T15:30:08.467Z\"}}}, {\"event_time\": {\"$gte\": {\"$date\": \"2025-03-13T07:30:08.467Z\"}, \"$lte\": {\"$date\": \"2025-03-13T15:30:08.467Z\"}}}, {\"created_at\": {\"$gte\": {\"$date\": \"2025-03-13T07:30:08.467Z\"}, \"$lte\": {\"$date\": \"2025-03-13T15:30:08.467Z\"}}}]}}, {\"$group\": {\"_id\": 1, \"n\": {\"$sum\": 1}}}], \"lsid\": {\"id\": {\"$binary\": {\"base64\": \"wvKWnVW3R7KtDVfkZktQAQ==\", \"subType\": \"04\"}}}, \"$db\": \"opal_server\"}", "commandName": "aggregate", "databaseName": "opal_server", "requestId": 5705, "operationId": 5705, "driverConnectionId": 1, "serverConnectionId": 13103, "serverHost": "3.144.134.141", "serverPort": 27017}
2025-03-13 15:30:08,999 - pymongo.command - DEBUG - {"clientId": {"$oid": "67d2b399dc3bf3a83804d41f"}, "message": "Command succeeded", "durationMS": 278.796, "reply": "{\"cursor\": {\"firstBatch\": [{\"_id\": 1, \"n\": 54}], \"ns\": \"opal_server.violations\"}, \"ok\": 1.0}", "commandName": "aggregate", "databaseName": "opal_server", "requestId": 5705, "operationId": 5705, "driverConnectionId": 1, "serverConnectionId": 13103, "serverHost": "3.144.134.141", "serverPort": 27017}
2025-03-13 15:30:08,999 - pymongo.connection - DEBUG - {"clientId": {"$oid": "67d2b399dc3bf3a83804d41f"}, "message": "Connection checked in", "serverHost": "3.144.134.141", "serverPort": 27017, "driverConnectionId": 1}
2025-03-13 15:30:09,000 - app.db.repositories.data_repository - INFO - Found 54 documents in violations
2025-03-13 15:30:09,001 - pymongo.serverSelection - DEBUG - {"message": "Server selection started", "selector": "Primary()", "operation": "aggregate", "topologyDescription": "<TopologyDescription id: 67d2b399dc3bf3a83804d41f, topology_type: Single, servers: [<ServerDescription ('3.144.134.141', 27017) server_type: Standalone, rtt: 0.25>]>", "clientId": {"$oid": "67d2b399dc3bf3a83804d41f"}}
2025-03-13 15:30:09,001 - pymongo.serverSelection - DEBUG - {"message": "Server selection succeeded", "selector": "Primary()", "operation": "aggregate", "topologyDescription": "<TopologyDescription id: 67d2b399dc3bf3a83804d41f, topology_type: Single, servers: [<ServerDescription ('3.144.134.141', 27017) server_type: Standalone, rtt: 0.25>]>", "clientId": {"$oid": "67d2b399dc3bf3a83804d41f"}, "serverHost": "3.144.134.141", "serverPort": 27017}
2025-03-13 15:30:09,002 - pymongo.connection - DEBUG - {"clientId": {"$oid": "67d2b399dc3bf3a83804d41f"}, "message": "Connection checkout started", "serverHost": "3.144.134.141", "serverPort": 27017}
2025-03-13 15:30:09,002 - pymongo.connection - DEBUG - {"clientId": {"$oid": "67d2b399dc3bf3a83804d41f"}, "message": "Connection checked out", "serverHost": "3.144.134.141", "serverPort": 27017, "driverConnectionId": 1, "durationMS": 0.0}
2025-03-13 15:30:09,003 - pymongo.command - DEBUG - {"clientId": {"$oid": "67d2b399dc3bf3a83804d41f"}, "message": "Command started", "command": "{\"aggregate\": \"violations\", \"pipeline\": [{\"$match\": {\"$or\": [{\"timestamp\": {\"$gte\": {\"$date\": \"2025-03-13T07:30:08.467Z\"}, \"$lte\": {\"$date\": \"2025-03-13T15:30:08.467Z\"}}}, {\"event_time\": {\"$gte\": {\"$date\": \"2025-03-13T07:30:08.467Z\"}, \"$lte\": {\"$date\": \"2025-03-13T15:30:08.467Z\"}}}, {\"created_at\": {\"$gte\": {\"$date\": \"2025-03-13T07:30:08.467Z\"}, \"$lte\": {\"$date\": \"2025-03-13T15:30:08.467Z\"}}}]}}, {\"$lookup\": {\"from\": \"drivers\", \"localField\": \"driver_uuid\", \"foreignField\": \"driver_id\", \"as\": \"driver_info\"}}, {\"$addFields\": {\"driver_name\": {\"$cond\": [{\"$gt\": [{\"$size\": \"$driver_info\"}]}, {\"$arrayElemAt\": [\"$driver_info.name\"]}, {\"$cond\": [{\"$eq\": [\"$driver_uuid\", \"unknown\"]}, \"Unassigned Driver\", {\"$concat\": [\"Driver \", {\"$toString\": \"$driver_uuid\"}]}]}]}}}], \"lsid\": {\"id\": {\"$binary\": {\"base64\": \"wvKWnVW3R7KtDVfkZktQAQ==\", \"subType\": \"04\"}}}, \"$db\": \"opal_server\"}", "commandName": "aggregate", "databaseName": "opal_server", "requestId": 28145, "operationId": 28145, "driverConnectionId": 1, "serverConnectionId": 13103, "serverHost": "3.144.134.141", "serverPort": 27017}
2025-03-13 15:30:09,779 - pymongo.command - DEBUG - {"clientId": {"$oid": "67d2b399dc3bf3a83804d41f"}, "message": "Command succeeded", "durationMS": 776.2289999999999, "reply": "{\"cursor\": {\"firstBatch\": [{\"_id\": {\"$oid\": \"67d289977a0d0bdc125e9f2e\"}, \"event_id\": \"VIO-dd5425a6-e99c-44f2-a994-e50cdd60a20a-SPEED_LOW-2025-03-13T07:30:00+00:00\", \"event_time\": {\"$date\": \"2025-03-13T07:30:31.414Z\"}, \"vendor\": {\"$oid\": \"6703ad7f70ba41e9473dd8e7\"}, \"vehicle_uuid\": \"dd5425a6-e99c-44f2-a994-e50cdd60a20a\", \"vehicle_license\": \"4683MA\", \"driver_uuid\": \"e889d91f-af57-48a5-a384-fdac719f7426\", \"driver_name\": \"Driver e889d91f-af57-48a5-a384-fdac719f7426\", \"violation_type\": \"SPEED_LOW\", \"severity\": \"LOW\", \"description\": \"Speed limit exceeded: 54.0 km/h\", \"threshold\": 40.0, \"actual_value\": 54.0, \"location\": {\"latitude\": 23.281399, \"longitude\": 58.126425, \"altitude\": 340.0}, \"rule\": {\"_id\": {\"$oid\": \"67c4c815ab2d5578275f1822\"}, \"name\": \"Speed Limit - Low\", \"description\": \"Vehicle exceeding speed limit (40 km/h)\", \"rule_type\": \"SPEED_LOW\", \"threshold\": 40.0, \"enabled\": true, \"severity\": \"LOW\", \"priority\": 1, \"cooldown_period\": 120, \"parameters\": {\"unit\": \"km/h\", \"min_duration\": 10,...", "commandName": "aggregate", "databaseName": "opal_server", "requestId": 28145, "operationId": 28145, "driverConnectionId": 1, "serverConnectionId": 13103, "serverHost": "3.144.134.141", "serverPort": 27017}
2025-03-13 15:30:09,779 - pymongo.connection - DEBUG - {"clientId": {"$oid": "67d2b399dc3bf3a83804d41f"}, "message": "Connection checked in", "serverHost": "3.144.134.141", "serverPort": 27017, "driverConnectionId": 1}
2025-03-13 15:30:09,780 - app.db.repositories.data_repository - DEBUG - Fetching vehicle events from database: opal_server
2025-03-13 15:30:09,781 - app.db.repositories.data_repository - DEBUG - Vehicle events query: {'$or': [{'timestamp': {'$gte': datetime.datetime(2025, 3, 13, 7, 30, 8, 467983), '$lte': datetime.datetime(2025, 3, 13, 15, 30, 8, 467983)}}, {'event_time': {'$gte': datetime.datetime(2025, 3, 13, 7, 30, 8, 467983), '$lte': datetime.datetime(2025, 3, 13, 15, 30, 8, 467983)}}, {'created_at': {'$gte': datetime.datetime(2025, 3, 13, 7, 30, 8, 467983), '$lte': datetime.datetime(2025, 3, 13, 15, 30, 8, 467983)}}]}
2025-03-13 15:30:09,781 - app.db.repositories.data_repository - DEBUG - Time range: {'$gte': datetime.datetime(2025, 3, 13, 7, 30, 8, 467983), '$lte': datetime.datetime(2025, 3, 13, 15, 30, 8, 467983)}
2025-03-13 15:30:09,781 - pymongo.serverSelection - DEBUG - {"message": "Server selection started", "selector": "Primary()", "operation": "listCollections", "topologyDescription": "<TopologyDescription id: 67d2b399dc3bf3a83804d41f, topology_type: Single, servers: [<ServerDescription ('3.144.134.141', 27017) server_type: Standalone, rtt: 0.25>]>", "clientId": {"$oid": "67d2b399dc3bf3a83804d41f"}}
2025-03-13 15:30:09,782 - pymongo.serverSelection - DEBUG - {"message": "Server selection succeeded", "selector": "Primary()", "operation": "listCollections", "topologyDescription": "<TopologyDescription id: 67d2b399dc3bf3a83804d41f, topology_type: Single, servers: [<ServerDescription ('3.144.134.141', 27017) server_type: Standalone, rtt: 0.25>]>", "clientId": {"$oid": "67d2b399dc3bf3a83804d41f"}, "serverHost": "3.144.134.141", "serverPort": 27017}
2025-03-13 15:30:09,782 - pymongo.connection - DEBUG - {"clientId": {"$oid": "67d2b399dc3bf3a83804d41f"}, "message": "Connection checkout started", "serverHost": "3.144.134.141", "serverPort": 27017}
2025-03-13 15:30:09,782 - pymongo.connection - DEBUG - {"clientId": {"$oid": "67d2b399dc3bf3a83804d41f"}, "message": "Connection checked out", "serverHost": "3.144.134.141", "serverPort": 27017, "driverConnectionId": 1, "durationMS": 0.0}
2025-03-13 15:30:09,782 - pymongo.command - DEBUG - {"clientId": {"$oid": "67d2b399dc3bf3a83804d41f"}, "message": "Command started", "command": "{\"listCollections\": 1, \"nameOnly\": true, \"lsid\": {\"id\": {\"$binary\": {\"base64\": \"wvKWnVW3R7KtDVfkZktQAQ==\", \"subType\": \"04\"}}}, \"$db\": \"opal_server\"}", "commandName": "listCollections", "databaseName": "opal_server", "requestId": 23281, "operationId": 23281, "driverConnectionId": 1, "serverConnectionId": 13103, "serverHost": "3.144.134.141", "serverPort": 27017}
2025-03-13 15:30:10,028 - pymongo.command - DEBUG - {"clientId": {"$oid": "67d2b399dc3bf3a83804d41f"}, "message": "Command succeeded", "durationMS": 245.79899999999998, "reply": "{\"cursor\": {\"ns\": \"opal_server.$cmd.listCollections\", \"firstBatch\": [{\"name\": \"rags\", \"type\": \"collection\"}, {\"name\": \"trips\", \"type\": \"collection\"}, {\"name\": \"vehicles\", \"type\": \"collection\"}, {\"name\": \"permissions\", \"type\": \"collection\"}, {\"name\": \"notifications\", \"type\": \"collection\"}, {\"name\": \"crash_events\", \"type\": \"collection\"}, {\"name\": \"violations-x\", \"type\": \"collection\"}, {\"name\": \"drivers\", \"type\": \"collection\"}, {\"name\": \"geofences\", \"type\": \"collection\"}, {\"name\": \"tickets\", \"type\": \"collection\"}, {\"name\": \"vehicleevents\", \"type\": \"collection\"}, {\"name\": \"vendors\", \"type\": \"collection\"}, {\"name\": \"roles\", \"type\": \"collection\"}, {\"name\": \"clients\", \"type\": \"collection\"}, {\"name\": \"vendordevices\", \"type\": \"collection\"}, {\"name\": \"settings\", \"type\": \"collection\"}, {\"name\": \"media\", \"type\": \"collection\"}, {\"name\": \"violation_rules\", \"type\": \"collection\"}, {\"name\": \"violations\", \"type\": \"collection\"}, {\"name\": \"users\", \"type\": \"collection\"}, {\"name\": \"companies\", \"type\": \"coll...", "commandName": "listCollections", "databaseName": "opal_server", "requestId": 23281, "operationId": 23281, "driverConnectionId": 1, "serverConnectionId": 13103, "serverHost": "3.144.134.141", "serverPort": 27017}
2025-03-13 15:30:10,028 - pymongo.connection - DEBUG - {"clientId": {"$oid": "67d2b399dc3bf3a83804d41f"}, "message": "Connection checked in", "serverHost": "3.144.134.141", "serverPort": 27017, "driverConnectionId": 1}
2025-03-13 15:30:10,030 - app.db.repositories.data_repository - DEBUG - Available collections: ['rags', 'trips', 'vehicles', 'permissions', 'notifications', 'crash_events', 'violations-x', 'drivers', 'geofences', 'tickets', 'vehicleevents', 'vendors', 'roles', 'clients', 'vendordevices', 'settings', 'media', 'violation_rules', 'violations', 'users', 'companies']
2025-03-13 15:30:10,030 - pymongo.serverSelection - DEBUG - {"message": "Server selection started", "selector": "Primary()", "operation": "find", "topologyDescription": "<TopologyDescription id: 67d2b399dc3bf3a83804d41f, topology_type: Single, servers: [<ServerDescription ('3.144.134.141', 27017) server_type: Standalone, rtt: 0.25>]>", "clientId": {"$oid": "67d2b399dc3bf3a83804d41f"}}
2025-03-13 15:30:10,030 - pymongo.serverSelection - DEBUG - {"message": "Server selection succeeded", "selector": "Primary()", "operation": "find", "topologyDescription": "<TopologyDescription id: 67d2b399dc3bf3a83804d41f, topology_type: Single, servers: [<ServerDescription ('3.144.134.141', 27017) server_type: Standalone, rtt: 0.25>]>", "clientId": {"$oid": "67d2b399dc3bf3a83804d41f"}, "serverHost": "3.144.134.141", "serverPort": 27017}
2025-03-13 15:30:10,031 - pymongo.connection - DEBUG - {"clientId": {"$oid": "67d2b399dc3bf3a83804d41f"}, "message": "Connection checkout started", "serverHost": "3.144.134.141", "serverPort": 27017}
2025-03-13 15:30:10,031 - pymongo.connection - DEBUG - {"clientId": {"$oid": "67d2b399dc3bf3a83804d41f"}, "message": "Connection checked out", "serverHost": "3.144.134.141", "serverPort": 27017, "driverConnectionId": 1, "durationMS": 0.0}
2025-03-13 15:30:10,031 - pymongo.command - DEBUG - {"clientId": {"$oid": "67d2b399dc3bf3a83804d41f"}, "message": "Command started", "command": "{\"find\": \"vehicleevents\", \"limit\": 1, \"singleBatch\": true, \"lsid\": {\"id\": {\"$binary\": {\"base64\": \"wvKWnVW3R7KtDVfkZktQAQ==\", \"subType\": \"04\"}}}, \"$db\": \"opal_server\"}", "commandName": "find", "databaseName": "opal_server", "requestId": 16827, "operationId": 16827, "driverConnectionId": 1, "serverConnectionId": 13103, "serverHost": "3.144.134.141", "serverPort": 27017}
2025-03-13 15:30:10,277 - pymongo.command - DEBUG - {"clientId": {"$oid": "67d2b399dc3bf3a83804d41f"}, "message": "Command succeeded", "durationMS": 246.644, "reply": "{\"cursor\": {\"firstBatch\": [{\"_id\": {\"$oid\": \"67441bdeb231195485d25272\"}, \"vendor\": {\"$oid\": \"6703ad7f70ba41e9473dd8e7\"}, \"deviceTime\": {\"$date\": \"2024-11-22T12:48:47Z\"}, \"serverTime\": {\"$date\": \"2024-11-22T12:48:47.958Z\"}, \"location\": {\"latitude\": 18.542048, \"longitude\": 55.852535, \"altitude\": 240}, \"ignition\": true, \"speed\": 68, \"heading\": 84, \"event\": {\"type\": \"DISTANCE_TRAVEL\", \"name\": \"Distance Traveled\"}, \"odometer\": 85198.52713696871, \"satellites\": 26, \"diff\": {\"distanceMeter\": 226.15911957109347, \"durationMillis\": 11000, \"ignitionOn\": true, \"moving\": true}, \"vehicle\": {\"license\": \"1765HW\", \"uuid\": \"f59c5202-eda5-4348-9d66-ec14718f076b\"}, \"device\": {\"imei\": \"358925430754727\"}, \"hdop\": 25.5, \"positionAccuracy\": 37.507210845177696, \"batteryVoltage\": 4.026, \"createdAt\": {\"$date\": \"2024-11-25T06:40:30.615Z\"}, \"updatedAt\": {\"$date\": \"2024-11-25T06:40:30.615Z\"}}], \"ns\": \"opal_server.vehicleevents\"}, \"ok\": 1.0}", "commandName": "find", "databaseName": "opal_server", "requestId": 16827, "operationId": 16827, "driverConnectionId": 1, "serverConnectionId": 13103, "serverHost": "3.144.134.141", "serverPort": 27017}
2025-03-13 15:30:10,278 - pymongo.connection - DEBUG - {"clientId": {"$oid": "67d2b399dc3bf3a83804d41f"}, "message": "Connection checked in", "serverHost": "3.144.134.141", "serverPort": 27017, "driverConnectionId": 1}
2025-03-13 15:30:10,279 - app.db.repositories.data_repository - DEBUG - Sample document fields: ['_id', 'vendor', 'deviceTime', 'serverTime', 'location', 'ignition', 'speed', 'heading', 'event', 'odometer', 'satellites', 'wrongOrdered', 'diff', 'vehicle', 'device', 'hdop', 'positionAccuracy', 'batteryVoltage', '__v', 'createdAt', 'updatedAt']
2025-03-13 15:30:10,279 - pymongo.serverSelection - DEBUG - {"message": "Server selection started", "selector": "Primary()", "operation": "count", "topologyDescription": "<TopologyDescription id: 67d2b399dc3bf3a83804d41f, topology_type: Single, servers: [<ServerDescription ('3.144.134.141', 27017) server_type: Standalone, rtt: 0.25>]>", "clientId": {"$oid": "67d2b399dc3bf3a83804d41f"}}
2025-03-13 15:30:10,280 - pymongo.serverSelection - DEBUG - {"message": "Server selection succeeded", "selector": "Primary()", "operation": "count", "topologyDescription": "<TopologyDescription id: 67d2b399dc3bf3a83804d41f, topology_type: Single, servers: [<ServerDescription ('3.144.134.141', 27017) server_type: Standalone, rtt: 0.25>]>", "clientId": {"$oid": "67d2b399dc3bf3a83804d41f"}, "serverHost": "3.144.134.141", "serverPort": 27017}
2025-03-13 15:30:10,280 - pymongo.connection - DEBUG - {"clientId": {"$oid": "67d2b399dc3bf3a83804d41f"}, "message": "Connection checkout started", "serverHost": "3.144.134.141", "serverPort": 27017}
2025-03-13 15:30:10,280 - pymongo.connection - DEBUG - {"clientId": {"$oid": "67d2b399dc3bf3a83804d41f"}, "message": "Connection checked out", "serverHost": "3.144.134.141", "serverPort": 27017, "driverConnectionId": 1, "durationMS": 0.0}
2025-03-13 15:30:10,281 - pymongo.command - DEBUG - {"clientId": {"$oid": "67d2b399dc3bf3a83804d41f"}, "message": "Command started", "command": "{\"aggregate\": \"vehicleevents\", \"pipeline\": [{\"$match\": {\"$or\": [{\"timestamp\": {\"$gte\": {\"$date\": \"2025-03-13T07:30:08.467Z\"}, \"$lte\": {\"$date\": \"2025-03-13T15:30:08.467Z\"}}}, {\"event_time\": {\"$gte\": {\"$date\": \"2025-03-13T07:30:08.467Z\"}, \"$lte\": {\"$date\": \"2025-03-13T15:30:08.467Z\"}}}, {\"created_at\": {\"$gte\": {\"$date\": \"2025-03-13T07:30:08.467Z\"}, \"$lte\": {\"$date\": \"2025-03-13T15:30:08.467Z\"}}}]}}, {\"$group\": {\"_id\": 1, \"n\": {\"$sum\": 1}}}], \"lsid\": {\"id\": {\"$binary\": {\"base64\": \"wvKWnVW3R7KtDVfkZktQAQ==\", \"subType\": \"04\"}}}, \"$db\": \"opal_server\"}", "commandName": "aggregate", "databaseName": "opal_server", "requestId": 9961, "operationId": 9961, "driverConnectionId": 1, "serverConnectionId": 13103, "serverHost": "3.144.134.141", "serverPort": 27017}
2025-03-13 15:30:15,984 - pymongo.topology - DEBUG - {"topologyId": {"$oid": "67d2b399dc3bf3a83804d41f"}, "driverConnectionId": 1, "serverConnectionId": 13102, "serverHost": "3.144.134.141", "serverPort": 27017, "awaited": true, "durationMS": 10000.0, "reply": "{\"isWritablePrimary\": true, \"topologyVersion\": {\"processId\": {\"$oid\": \"67b7e5814f77c1a87c56d054\"}}, \"maxBsonObjectSize\": 16777216, \"maxMessageSizeBytes\": 48000000, \"maxWriteBatchSize\": 100000, \"localTime\": {\"$date\": \"2025-03-13T10:30:16.005Z\"}, \"logicalSessionTimeoutMinutes\": 30, \"connectionId\": 13102, \"maxWireVersion\": 25, \"ok\": 1.0}", "message": "Server heartbeat succeeded"}
2025-03-13 15:30:15,984 - pymongo.topology - DEBUG - {"topologyId": {"$oid": "67d2b399dc3bf3a83804d41f"}, "driverConnectionId": 1, "serverConnectionId": 13102, "serverHost": "3.144.134.141", "serverPort": 27017, "awaited": true, "message": "Server heartbeat started"}
2025-03-13 15:30:16,361 - pymongo.command - DEBUG - {"clientId": {"$oid": "67d2b399dc3bf3a83804d41f"}, "message": "Command succeeded", "durationMS": 6079.778, "reply": "{\"cursor\": {\"ns\": \"opal_server.vehicleevents\"}, \"ok\": 1.0}", "commandName": "aggregate", "databaseName": "opal_server", "requestId": 9961, "operationId": 9961, "driverConnectionId": 1, "serverConnectionId": 13103, "serverHost": "3.144.134.141", "serverPort": 27017}
2025-03-13 15:30:16,361 - pymongo.connection - DEBUG - {"clientId": {"$oid": "67d2b399dc3bf3a83804d41f"}, "message": "Connection checked in", "serverHost": "3.144.134.141", "serverPort": 27017, "driverConnectionId": 1}
2025-03-13 15:30:16,362 - app.db.repositories.data_repository - INFO - Found 0 matching vehicle events
2025-03-13 15:30:16,363 - pymongo.serverSelection - DEBUG - {"message": "Server selection started", "selector": "Primary()", "operation": "find", "topologyDescription": "<TopologyDescription id: 67d2b399dc3bf3a83804d41f, topology_type: Single, servers: [<ServerDescription ('3.144.134.141', 27017) server_type: Standalone, rtt: 0.2530000000002474>]>", "clientId": {"$oid": "67d2b399dc3bf3a83804d41f"}}
2025-03-13 15:30:16,363 - pymongo.serverSelection - DEBUG - {"message": "Server selection succeeded", "selector": "Primary()", "operation": "find", "topologyDescription": "<TopologyDescription id: 67d2b399dc3bf3a83804d41f, topology_type: Single, servers: [<ServerDescription ('3.144.134.141', 27017) server_type: Standalone, rtt: 0.2530000000002474>]>", "clientId": {"$oid": "67d2b399dc3bf3a83804d41f"}, "serverHost": "3.144.134.141", "serverPort": 27017}
2025-03-13 15:30:16,363 - pymongo.connection - DEBUG - {"clientId": {"$oid": "67d2b399dc3bf3a83804d41f"}, "message": "Connection checkout started", "serverHost": "3.144.134.141", "serverPort": 27017}
2025-03-13 15:30:16,363 - pymongo.connection - DEBUG - {"clientId": {"$oid": "67d2b399dc3bf3a83804d41f"}, "message": "Connection checked out", "serverHost": "3.144.134.141", "serverPort": 27017, "driverConnectionId": 1, "durationMS": 0.0}
2025-03-13 15:30:16,365 - pymongo.command - DEBUG - {"clientId": {"$oid": "67d2b399dc3bf3a83804d41f"}, "message": "Command started", "command": "{\"find\": \"vehicleevents\", \"filter\": {\"$or\": [{\"timestamp\": {\"$gte\": {\"$date\": \"2025-03-13T07:30:08.467Z\"}, \"$lte\": {\"$date\": \"2025-03-13T15:30:08.467Z\"}}}, {\"event_time\": {\"$gte\": {\"$date\": \"2025-03-13T07:30:08.467Z\"}, \"$lte\": {\"$date\": \"2025-03-13T15:30:08.467Z\"}}}, {\"created_at\": {\"$gte\": {\"$date\": \"2025-03-13T07:30:08.467Z\"}, \"$lte\": {\"$date\": \"2025-03-13T15:30:08.467Z\"}}}]}, \"limit\": 1000, \"lsid\": {\"id\": {\"$binary\": {\"base64\": \"wvKWnVW3R7KtDVfkZktQAQ==\", \"subType\": \"04\"}}}, \"$db\": \"opal_server\"}", "commandName": "find", "databaseName": "opal_server", "requestId": 491, "operationId": 491, "driverConnectionId": 1, "serverConnectionId": 13103, "serverHost": "3.144.134.141", "serverPort": 27017}
2025-03-13 15:30:23,055 - pymongo.command - DEBUG - {"clientId": {"$oid": "67d2b399dc3bf3a83804d41f"}, "message": "Command succeeded", "durationMS": 6690.496, "reply": "{\"cursor\": {\"ns\": \"opal_server.vehicleevents\"}, \"ok\": 1.0}", "commandName": "find", "databaseName": "opal_server", "requestId": 491, "operationId": 491, "driverConnectionId": 1, "serverConnectionId": 13103, "serverHost": "3.144.134.141", "serverPort": 27017}
2025-03-13 15:30:23,056 - pymongo.connection - DEBUG - {"clientId": {"$oid": "67d2b399dc3bf3a83804d41f"}, "message": "Connection checked in", "serverHost": "3.144.134.141", "serverPort": 27017, "driverConnectionId": 1}
2025-03-13 15:30:23,057 - app.db.repositories.data_repository - DEBUG - Retrieved 0 vehicle events
2025-03-13 15:30:25,985 - pymongo.topology - DEBUG - {"topologyId": {"$oid": "67d2b399dc3bf3a83804d41f"}, "driverConnectionId": 1, "serverConnectionId": 13102, "serverHost": "3.144.134.141", "serverPort": 27017, "awaited": true, "durationMS": 10000.0, "reply": "{\"isWritablePrimary\": true, \"topologyVersion\": {\"processId\": {\"$oid\": \"67b7e5814f77c1a87c56d054\"}}, \"maxBsonObjectSize\": 16777216, \"maxMessageSizeBytes\": 48000000, \"maxWriteBatchSize\": 100000, \"localTime\": {\"$date\": \"2025-03-13T10:30:26.006Z\"}, \"logicalSessionTimeoutMinutes\": 30, \"connectionId\": 13102, \"maxWireVersion\": 25, \"ok\": 1.0}", "message": "Server heartbeat succeeded"}
2025-03-13 15:30:25,986 - pymongo.topology - DEBUG - {"topologyId": {"$oid": "67d2b399dc3bf3a83804d41f"}, "driverConnectionId": 1, "serverConnectionId": 13102, "serverHost": "3.144.134.141", "serverPort": 27017, "awaited": true, "message": "Server heartbeat started"}
2025-03-13 15:30:35,987 - pymongo.topology - DEBUG - {"topologyId": {"$oid": "67d2b399dc3bf3a83804d41f"}, "driverConnectionId": 1, "serverConnectionId": 13102, "serverHost": "3.144.134.141", "serverPort": 27017, "awaited": true, "durationMS": 10000.0, "reply": "{\"isWritablePrimary\": true, \"topologyVersion\": {\"processId\": {\"$oid\": \"67b7e5814f77c1a87c56d054\"}}, \"maxBsonObjectSize\": 16777216, \"maxMessageSizeBytes\": 48000000, \"maxWriteBatchSize\": 100000, \"localTime\": {\"$date\": \"2025-03-13T10:30:36.008Z\"}, \"logicalSessionTimeoutMinutes\": 30, \"connectionId\": 13102, \"maxWireVersion\": 25, \"ok\": 1.0}", "message": "Server heartbeat succeeded"}
2025-03-13 15:30:35,988 - pymongo.topology - DEBUG - {"topologyId": {"$oid": "67d2b399dc3bf3a83804d41f"}, "driverConnectionId": 1, "serverConnectionId": 13102, "serverHost": "3.144.134.141", "serverPort": 27017, "awaited": true, "message": "Server heartbeat started"}
2025-03-13 15:30:45,990 - pymongo.topology - DEBUG - {"topologyId": {"$oid": "67d2b399dc3bf3a83804d41f"}, "driverConnectionId": 1, "serverConnectionId": 13102, "serverHost": "3.144.134.141", "serverPort": 27017, "awaited": true, "durationMS": 10000.0, "reply": "{\"isWritablePrimary\": true, \"topologyVersion\": {\"processId\": {\"$oid\": \"67b7e5814f77c1a87c56d054\"}}, \"maxBsonObjectSize\": 16777216, \"maxMessageSizeBytes\": 48000000, \"maxWriteBatchSize\": 100000, \"localTime\": {\"$date\": \"2025-03-13T10:30:46.012Z\"}, \"logicalSessionTimeoutMinutes\": 30, \"connectionId\": 13102, \"maxWireVersion\": 25, \"ok\": 1.0}", "message": "Server heartbeat succeeded"}
2025-03-13 15:30:45,991 - pymongo.topology - DEBUG - {"topologyId": {"$oid": "67d2b399dc3bf3a83804d41f"}, "driverConnectionId": 1, "serverConnectionId": 13102, "serverHost": "3.144.134.141", "serverPort": 27017, "awaited": true, "message": "Server heartbeat started"}
2025-03-13 15:30:51,006 - app.services.predictive_analytics - DEBUG - Analyzing time window from 2025-03-13 07:30:51.006872 to 2025-03-13 15:30:51.006872
2025-03-13 15:30:51,007 - app.services.predictive_analytics - DEBUG - Time window: 8.0 hours
2025-03-13 15:30:51,007 - app.db.repositories.data_repository - DEBUG - Connected to database: opal_server
2025-03-13 15:30:51,007 - app.db.repositories.data_repository - DEBUG - Violations pipeline: [{'$match': {'$or': [{'timestamp': {'$gte': datetime.datetime(2025, 3, 13, 7, 30, 51, 6872), '$lte': datetime.datetime(2025, 3, 13, 15, 30, 51, 6872)}}, {'event_time': {'$gte': datetime.datetime(2025, 3, 13, 7, 30, 51, 6872), '$lte': datetime.datetime(2025, 3, 13, 15, 30, 51, 6872)}}, {'created_at': {'$gte': datetime.datetime(2025, 3, 13, 7, 30, 51, 6872), '$lte': datetime.datetime(2025, 3, 13, 15, 30, 51, 6872)}}]}}, {'$lookup': {'from': 'drivers', 'localField': 'driver_uuid', 'foreignField': 'driver_id', 'as': 'driver_info'}}, {'$addFields': {'driver_name': {'$cond': [{'$gt': [{'$size': '$driver_info'}, 0]}, {'$arrayElemAt': ['$driver_info.name', 0]}, {'$cond': [{'$eq': ['$driver_uuid', 'unknown']}, 'Unassigned Driver', {'$concat': ['Driver ', {'$toString': '$driver_uuid'}]}]}]}}}]
2025-03-13 15:30:51,007 - pymongo.serverSelection - DEBUG - {"message": "Server selection started", "selector": "Primary()", "operation": "listCollections", "topologyDescription": "<TopologyDescription id: 67d2b399dc3bf3a83804d41f, topology_type: Single, servers: [<ServerDescription ('3.144.134.141', 27017) server_type: Standalone, rtt: 0.2483360000002024>]>", "clientId": {"$oid": "67d2b399dc3bf3a83804d41f"}}
2025-03-13 15:30:51,008 - pymongo.serverSelection - DEBUG - {"message": "Server selection succeeded", "selector": "Primary()", "operation": "listCollections", "topologyDescription": "<TopologyDescription id: 67d2b399dc3bf3a83804d41f, topology_type: Single, servers: [<ServerDescription ('3.144.134.141', 27017) server_type: Standalone, rtt: 0.2483360000002024>]>", "clientId": {"$oid": "67d2b399dc3bf3a83804d41f"}, "serverHost": "3.144.134.141", "serverPort": 27017}
2025-03-13 15:30:51,008 - pymongo.connection - DEBUG - {"clientId": {"$oid": "67d2b399dc3bf3a83804d41f"}, "message": "Connection checkout started", "serverHost": "3.144.134.141", "serverPort": 27017}
2025-03-13 15:30:51,008 - pymongo.connection - DEBUG - {"clientId": {"$oid": "67d2b399dc3bf3a83804d41f"}, "message": "Connection checked out", "serverHost": "3.144.134.141", "serverPort": 27017, "driverConnectionId": 1, "durationMS": 0.0}
2025-03-13 15:30:51,009 - pymongo.command - DEBUG - {"clientId": {"$oid": "67d2b399dc3bf3a83804d41f"}, "message": "Command started", "command": "{\"listCollections\": 1, \"nameOnly\": true, \"lsid\": {\"id\": {\"$binary\": {\"base64\": \"wvKWnVW3R7KtDVfkZktQAQ==\", \"subType\": \"04\"}}}, \"$db\": \"opal_server\"}", "commandName": "listCollections", "databaseName": "opal_server", "requestId": 2995, "operationId": 2995, "driverConnectionId": 1, "serverConnectionId": 13103, "serverHost": "3.144.134.141", "serverPort": 27017}
2025-03-13 15:30:51,254 - pymongo.command - DEBUG - {"clientId": {"$oid": "67d2b399dc3bf3a83804d41f"}, "message": "Command succeeded", "durationMS": 244.655, "reply": "{\"cursor\": {\"ns\": \"opal_server.$cmd.listCollections\", \"firstBatch\": [{\"name\": \"rags\", \"type\": \"collection\"}, {\"name\": \"trips\", \"type\": \"collection\"}, {\"name\": \"vehicles\", \"type\": \"collection\"}, {\"name\": \"permissions\", \"type\": \"collection\"}, {\"name\": \"notifications\", \"type\": \"collection\"}, {\"name\": \"crash_events\", \"type\": \"collection\"}, {\"name\": \"violations-x\", \"type\": \"collection\"}, {\"name\": \"drivers\", \"type\": \"collection\"}, {\"name\": \"geofences\", \"type\": \"collection\"}, {\"name\": \"tickets\", \"type\": \"collection\"}, {\"name\": \"vehicleevents\", \"type\": \"collection\"}, {\"name\": \"vendors\", \"type\": \"collection\"}, {\"name\": \"roles\", \"type\": \"collection\"}, {\"name\": \"clients\", \"type\": \"collection\"}, {\"name\": \"vendordevices\", \"type\": \"collection\"}, {\"name\": \"settings\", \"type\": \"collection\"}, {\"name\": \"media\", \"type\": \"collection\"}, {\"name\": \"violation_rules\", \"type\": \"collection\"}, {\"name\": \"violations\", \"type\": \"collection\"}, {\"name\": \"users\", \"type\": \"collection\"}, {\"name\": \"companies\", \"type\": \"coll...", "commandName": "listCollections", "databaseName": "opal_server", "requestId": 2995, "operationId": 2995, "driverConnectionId": 1, "serverConnectionId": 13103, "serverHost": "3.144.134.141", "serverPort": 27017}
2025-03-13 15:30:51,255 - pymongo.connection - DEBUG - {"clientId": {"$oid": "67d2b399dc3bf3a83804d41f"}, "message": "Connection checked in", "serverHost": "3.144.134.141", "serverPort": 27017, "driverConnectionId": 1}
2025-03-13 15:30:51,255 - app.db.repositories.data_repository - DEBUG - Available collections: ['rags', 'trips', 'vehicles', 'permissions', 'notifications', 'crash_events', 'violations-x', 'drivers', 'geofences', 'tickets', 'vehicleevents', 'vendors', 'roles', 'clients', 'vendordevices', 'settings', 'media', 'violation_rules', 'violations', 'users', 'companies']
2025-03-13 15:30:51,255 - app.db.repositories.data_repository - DEBUG - Checking collection: violations
2025-03-13 15:30:51,255 - pymongo.serverSelection - DEBUG - {"message": "Server selection started", "selector": "Primary()", "operation": "count", "topologyDescription": "<TopologyDescription id: 67d2b399dc3bf3a83804d41f, topology_type: Single, servers: [<ServerDescription ('3.144.134.141', 27017) server_type: Standalone, rtt: 0.2483360000002024>]>", "clientId": {"$oid": "67d2b399dc3bf3a83804d41f"}}
2025-03-13 15:30:51,256 - pymongo.serverSelection - DEBUG - {"message": "Server selection succeeded", "selector": "Primary()", "operation": "count", "topologyDescription": "<TopologyDescription id: 67d2b399dc3bf3a83804d41f, topology_type: Single, servers: [<ServerDescription ('3.144.134.141', 27017) server_type: Standalone, rtt: 0.2483360000002024>]>", "clientId": {"$oid": "67d2b399dc3bf3a83804d41f"}, "serverHost": "3.144.134.141", "serverPort": 27017}
2025-03-13 15:30:51,256 - pymongo.connection - DEBUG - {"clientId": {"$oid": "67d2b399dc3bf3a83804d41f"}, "message": "Connection checkout started", "serverHost": "3.144.134.141", "serverPort": 27017}
2025-03-13 15:30:51,256 - pymongo.connection - DEBUG - {"clientId": {"$oid": "67d2b399dc3bf3a83804d41f"}, "message": "Connection checked out", "serverHost": "3.144.134.141", "serverPort": 27017, "driverConnectionId": 1, "durationMS": 0.0}
2025-03-13 15:30:51,257 - pymongo.command - DEBUG - {"clientId": {"$oid": "67d2b399dc3bf3a83804d41f"}, "message": "Command started", "command": "{\"aggregate\": \"violations\", \"pipeline\": [{\"$match\": {\"$or\": [{\"timestamp\": {\"$gte\": {\"$date\": \"2025-03-13T07:30:51.006Z\"}, \"$lte\": {\"$date\": \"2025-03-13T15:30:51.006Z\"}}}, {\"event_time\": {\"$gte\": {\"$date\": \"2025-03-13T07:30:51.006Z\"}, \"$lte\": {\"$date\": \"2025-03-13T15:30:51.006Z\"}}}, {\"created_at\": {\"$gte\": {\"$date\": \"2025-03-13T07:30:51.006Z\"}, \"$lte\": {\"$date\": \"2025-03-13T15:30:51.006Z\"}}}]}}, {\"$group\": {\"_id\": 1, \"n\": {\"$sum\": 1}}}], \"lsid\": {\"id\": {\"$binary\": {\"base64\": \"wvKWnVW3R7KtDVfkZktQAQ==\", \"subType\": \"04\"}}}, \"$db\": \"opal_server\"}", "commandName": "aggregate", "databaseName": "opal_server", "requestId": 11942, "operationId": 11942, "driverConnectionId": 1, "serverConnectionId": 13103, "serverHost": "3.144.134.141", "serverPort": 27017}
2025-03-13 15:30:51,529 - pymongo.command - DEBUG - {"clientId": {"$oid": "67d2b399dc3bf3a83804d41f"}, "message": "Command succeeded", "durationMS": 272.90500000000003, "reply": "{\"cursor\": {\"firstBatch\": [{\"_id\": 1, \"n\": 53}], \"ns\": \"opal_server.violations\"}, \"ok\": 1.0}", "commandName": "aggregate", "databaseName": "opal_server", "requestId": 11942, "operationId": 11942, "driverConnectionId": 1, "serverConnectionId": 13103, "serverHost": "3.144.134.141", "serverPort": 27017}
2025-03-13 15:30:51,530 - pymongo.connection - DEBUG - {"clientId": {"$oid": "67d2b399dc3bf3a83804d41f"}, "message": "Connection checked in", "serverHost": "3.144.134.141", "serverPort": 27017, "driverConnectionId": 1}
2025-03-13 15:30:51,530 - app.db.repositories.data_repository - INFO - Found 53 documents in violations
2025-03-13 15:30:51,531 - pymongo.serverSelection - DEBUG - {"message": "Server selection started", "selector": "Primary()", "operation": "aggregate", "topologyDescription": "<TopologyDescription id: 67d2b399dc3bf3a83804d41f, topology_type: Single, servers: [<ServerDescription ('3.144.134.141', 27017) server_type: Standalone, rtt: 0.2483360000002024>]>", "clientId": {"$oid": "67d2b399dc3bf3a83804d41f"}}
2025-03-13 15:30:51,531 - pymongo.serverSelection - DEBUG - {"message": "Server selection succeeded", "selector": "Primary()", "operation": "aggregate", "topologyDescription": "<TopologyDescription id: 67d2b399dc3bf3a83804d41f, topology_type: Single, servers: [<ServerDescription ('3.144.134.141', 27017) server_type: Standalone, rtt: 0.2483360000002024>]>", "clientId": {"$oid": "67d2b399dc3bf3a83804d41f"}, "serverHost": "3.144.134.141", "serverPort": 27017}
2025-03-13 15:30:51,531 - pymongo.connection - DEBUG - {"clientId": {"$oid": "67d2b399dc3bf3a83804d41f"}, "message": "Connection checkout started", "serverHost": "3.144.134.141", "serverPort": 27017}
2025-03-13 15:30:51,531 - pymongo.connection - DEBUG - {"clientId": {"$oid": "67d2b399dc3bf3a83804d41f"}, "message": "Connection checked out", "serverHost": "3.144.134.141", "serverPort": 27017, "driverConnectionId": 1, "durationMS": 0.0}
2025-03-13 15:30:51,532 - pymongo.command - DEBUG - {"clientId": {"$oid": "67d2b399dc3bf3a83804d41f"}, "message": "Command started", "command": "{\"aggregate\": \"violations\", \"pipeline\": [{\"$match\": {\"$or\": [{\"timestamp\": {\"$gte\": {\"$date\": \"2025-03-13T07:30:51.006Z\"}, \"$lte\": {\"$date\": \"2025-03-13T15:30:51.006Z\"}}}, {\"event_time\": {\"$gte\": {\"$date\": \"2025-03-13T07:30:51.006Z\"}, \"$lte\": {\"$date\": \"2025-03-13T15:30:51.006Z\"}}}, {\"created_at\": {\"$gte\": {\"$date\": \"2025-03-13T07:30:51.006Z\"}, \"$lte\": {\"$date\": \"2025-03-13T15:30:51.006Z\"}}}]}}, {\"$lookup\": {\"from\": \"drivers\", \"localField\": \"driver_uuid\", \"foreignField\": \"driver_id\", \"as\": \"driver_info\"}}, {\"$addFields\": {\"driver_name\": {\"$cond\": [{\"$gt\": [{\"$size\": \"$driver_info\"}]}, {\"$arrayElemAt\": [\"$driver_info.name\"]}, {\"$cond\": [{\"$eq\": [\"$driver_uuid\", \"unknown\"]}, \"Unassigned Driver\", {\"$concat\": [\"Driver \", {\"$toString\": \"$driver_uuid\"}]}]}]}}}], \"lsid\": {\"id\": {\"$binary\": {\"base64\": \"wvKWnVW3R7KtDVfkZktQAQ==\", \"subType\": \"04\"}}}, \"$db\": \"opal_server\"}", "commandName": "aggregate", "databaseName": "opal_server", "requestId": 4827, "operationId": 4827, "driverConnectionId": 1, "serverConnectionId": 13103, "serverHost": "3.144.134.141", "serverPort": 27017}
2025-03-13 15:30:52,282 - pymongo.command - DEBUG - {"clientId": {"$oid": "67d2b399dc3bf3a83804d41f"}, "message": "Command succeeded", "durationMS": 749.5079999999999, "reply": "{\"cursor\": {\"firstBatch\": [{\"_id\": {\"$oid\": \"67d28abd7a0d0bdc125e9f2f\"}, \"event_id\": \"VIO-0971fbfa-31d0-49aa-b599-54943e543ebd-SPEED_LOW-2025-03-13T07:35:00+00:00\", \"event_time\": {\"$date\": \"2025-03-13T07:35:25.665Z\"}, \"vendor\": {\"$oid\": \"6703ad7f70ba41e9473dd8e7\"}, \"vehicle_uuid\": \"0971fbfa-31d0-49aa-b599-54943e543ebd\", \"vehicle_license\": \"6024MR\", \"driver_uuid\": \"e604d5c5-e1a6-45c3-b619-73393f04097c\", \"driver_name\": \"Driver e604d5c5-e1a6-45c3-b619-73393f04097c\", \"violation_type\": \"SPEED_LOW\", \"severity\": \"LOW\", \"description\": \"Speed limit exceeded: 46.0 km/h\", \"threshold\": 40.0, \"actual_value\": 46.0, \"location\": {\"latitude\": 21.253861, \"longitude\": 56.321392, \"altitude\": 113.0}, \"rule\": {\"_id\": {\"$oid\": \"67c4c815ab2d5578275f1822\"}, \"name\": \"Speed Limit - Low\", \"description\": \"Vehicle exceeding speed limit (40 km/h)\", \"rule_type\": \"SPEED_LOW\", \"threshold\": 40.0, \"enabled\": true, \"severity\": \"LOW\", \"priority\": 1, \"cooldown_period\": 120, \"parameters\": {\"unit\": \"km/h\", \"min_duration\": 10,...", "commandName": "aggregate", "databaseName": "opal_server", "requestId": 4827, "operationId": 4827, "driverConnectionId": 1, "serverConnectionId": 13103, "serverHost": "3.144.134.141", "serverPort": 27017}
2025-03-13 15:30:52,282 - pymongo.connection - DEBUG - {"clientId": {"$oid": "67d2b399dc3bf3a83804d41f"}, "message": "Connection checked in", "serverHost": "3.144.134.141", "serverPort": 27017, "driverConnectionId": 1}
2025-03-13 15:30:52,283 - app.db.repositories.data_repository - DEBUG - Fetching vehicle events from database: opal_server
2025-03-13 15:30:52,283 - app.db.repositories.data_repository - DEBUG - Vehicle events query: {'$or': [{'timestamp': {'$gte': datetime.datetime(2025, 3, 13, 7, 30, 51, 6872), '$lte': datetime.datetime(2025, 3, 13, 15, 30, 51, 6872)}}, {'event_time': {'$gte': datetime.datetime(2025, 3, 13, 7, 30, 51, 6872), '$lte': datetime.datetime(2025, 3, 13, 15, 30, 51, 6872)}}, {'created_at': {'$gte': datetime.datetime(2025, 3, 13, 7, 30, 51, 6872), '$lte': datetime.datetime(2025, 3, 13, 15, 30, 51, 6872)}}]}
2025-03-13 15:30:52,285 - app.db.repositories.data_repository - DEBUG - Time range: {'$gte': datetime.datetime(2025, 3, 13, 7, 30, 51, 6872), '$lte': datetime.datetime(2025, 3, 13, 15, 30, 51, 6872)}
2025-03-13 15:30:52,285 - pymongo.serverSelection - DEBUG - {"message": "Server selection started", "selector": "Primary()", "operation": "listCollections", "topologyDescription": "<TopologyDescription id: 67d2b399dc3bf3a83804d41f, topology_type: Single, servers: [<ServerDescription ('3.144.134.141', 27017) server_type: Standalone, rtt: 0.2483360000002024>]>", "clientId": {"$oid": "67d2b399dc3bf3a83804d41f"}}
2025-03-13 15:30:52,286 - pymongo.serverSelection - DEBUG - {"message": "Server selection succeeded", "selector": "Primary()", "operation": "listCollections", "topologyDescription": "<TopologyDescription id: 67d2b399dc3bf3a83804d41f, topology_type: Single, servers: [<ServerDescription ('3.144.134.141', 27017) server_type: Standalone, rtt: 0.2483360000002024>]>", "clientId": {"$oid": "67d2b399dc3bf3a83804d41f"}, "serverHost": "3.144.134.141", "serverPort": 27017}
2025-03-13 15:30:52,286 - pymongo.connection - DEBUG - {"clientId": {"$oid": "67d2b399dc3bf3a83804d41f"}, "message": "Connection checkout started", "serverHost": "3.144.134.141", "serverPort": 27017}
2025-03-13 15:30:52,287 - pymongo.connection - DEBUG - {"clientId": {"$oid": "67d2b399dc3bf3a83804d41f"}, "message": "Connection checked out", "serverHost": "3.144.134.141", "serverPort": 27017, "driverConnectionId": 1, "durationMS": 0.0}
2025-03-13 15:30:52,287 - pymongo.command - DEBUG - {"clientId": {"$oid": "67d2b399dc3bf3a83804d41f"}, "message": "Command started", "command": "{\"listCollections\": 1, \"nameOnly\": true, \"lsid\": {\"id\": {\"$binary\": {\"base64\": \"wvKWnVW3R7KtDVfkZktQAQ==\", \"subType\": \"04\"}}}, \"$db\": \"opal_server\"}", "commandName": "listCollections", "databaseName": "opal_server", "requestId": 5436, "operationId": 5436, "driverConnectionId": 1, "serverConnectionId": 13103, "serverHost": "3.144.134.141", "serverPort": 27017}
2025-03-13 15:30:52,533 - pymongo.command - DEBUG - {"clientId": {"$oid": "67d2b399dc3bf3a83804d41f"}, "message": "Command succeeded", "durationMS": 245.03, "reply": "{\"cursor\": {\"ns\": \"opal_server.$cmd.listCollections\", \"firstBatch\": [{\"name\": \"rags\", \"type\": \"collection\"}, {\"name\": \"trips\", \"type\": \"collection\"}, {\"name\": \"vehicles\", \"type\": \"collection\"}, {\"name\": \"permissions\", \"type\": \"collection\"}, {\"name\": \"notifications\", \"type\": \"collection\"}, {\"name\": \"crash_events\", \"type\": \"collection\"}, {\"name\": \"violations-x\", \"type\": \"collection\"}, {\"name\": \"drivers\", \"type\": \"collection\"}, {\"name\": \"geofences\", \"type\": \"collection\"}, {\"name\": \"tickets\", \"type\": \"collection\"}, {\"name\": \"vehicleevents\", \"type\": \"collection\"}, {\"name\": \"vendors\", \"type\": \"collection\"}, {\"name\": \"roles\", \"type\": \"collection\"}, {\"name\": \"clients\", \"type\": \"collection\"}, {\"name\": \"vendordevices\", \"type\": \"collection\"}, {\"name\": \"settings\", \"type\": \"collection\"}, {\"name\": \"media\", \"type\": \"collection\"}, {\"name\": \"violation_rules\", \"type\": \"collection\"}, {\"name\": \"violations\", \"type\": \"collection\"}, {\"name\": \"users\", \"type\": \"collection\"}, {\"name\": \"companies\", \"type\": \"coll...", "commandName": "listCollections", "databaseName": "opal_server", "requestId": 5436, "operationId": 5436, "driverConnectionId": 1, "serverConnectionId": 13103, "serverHost": "3.144.134.141", "serverPort": 27017}
2025-03-13 15:30:52,533 - pymongo.connection - DEBUG - {"clientId": {"$oid": "67d2b399dc3bf3a83804d41f"}, "message": "Connection checked in", "serverHost": "3.144.134.141", "serverPort": 27017, "driverConnectionId": 1}
2025-03-13 15:30:52,534 - app.db.repositories.data_repository - DEBUG - Available collections: ['rags', 'trips', 'vehicles', 'permissions', 'notifications', 'crash_events', 'violations-x', 'drivers', 'geofences', 'tickets', 'vehicleevents', 'vendors', 'roles', 'clients', 'vendordevices', 'settings', 'media', 'violation_rules', 'violations', 'users', 'companies']
2025-03-13 15:30:52,534 - pymongo.serverSelection - DEBUG - {"message": "Server selection started", "selector": "Primary()", "operation": "find", "topologyDescription": "<TopologyDescription id: 67d2b399dc3bf3a83804d41f, topology_type: Single, servers: [<ServerDescription ('3.144.134.141', 27017) server_type: Standalone, rtt: 0.2483360000002024>]>", "clientId": {"$oid": "67d2b399dc3bf3a83804d41f"}}
2025-03-13 15:30:52,534 - pymongo.serverSelection - DEBUG - {"message": "Server selection succeeded", "selector": "Primary()", "operation": "find", "topologyDescription": "<TopologyDescription id: 67d2b399dc3bf3a83804d41f, topology_type: Single, servers: [<ServerDescription ('3.144.134.141', 27017) server_type: Standalone, rtt: 0.2483360000002024>]>", "clientId": {"$oid": "67d2b399dc3bf3a83804d41f"}, "serverHost": "3.144.134.141", "serverPort": 27017}
2025-03-13 15:30:52,535 - pymongo.connection - DEBUG - {"clientId": {"$oid": "67d2b399dc3bf3a83804d41f"}, "message": "Connection checkout started", "serverHost": "3.144.134.141", "serverPort": 27017}
2025-03-13 15:30:52,535 - pymongo.connection - DEBUG - {"clientId": {"$oid": "67d2b399dc3bf3a83804d41f"}, "message": "Connection checked out", "serverHost": "3.144.134.141", "serverPort": 27017, "driverConnectionId": 1, "durationMS": 0.0}
2025-03-13 15:30:52,535 - pymongo.command - DEBUG - {"clientId": {"$oid": "67d2b399dc3bf3a83804d41f"}, "message": "Command started", "command": "{\"find\": \"vehicleevents\", \"limit\": 1, \"singleBatch\": true, \"lsid\": {\"id\": {\"$binary\": {\"base64\": \"wvKWnVW3R7KtDVfkZktQAQ==\", \"subType\": \"04\"}}}, \"$db\": \"opal_server\"}", "commandName": "find", "databaseName": "opal_server", "requestId": 32391, "operationId": 32391, "driverConnectionId": 1, "serverConnectionId": 13103, "serverHost": "3.144.134.141", "serverPort": 27017}
2025-03-13 15:30:52,785 - pymongo.command - DEBUG - {"clientId": {"$oid": "67d2b399dc3bf3a83804d41f"}, "message": "Command succeeded", "durationMS": 249.839, "reply": "{\"cursor\": {\"firstBatch\": [{\"_id\": {\"$oid\": \"67441bdeb231195485d25272\"}, \"vendor\": {\"$oid\": \"6703ad7f70ba41e9473dd8e7\"}, \"deviceTime\": {\"$date\": \"2024-11-22T12:48:47Z\"}, \"serverTime\": {\"$date\": \"2024-11-22T12:48:47.958Z\"}, \"location\": {\"latitude\": 18.542048, \"longitude\": 55.852535, \"altitude\": 240}, \"ignition\": true, \"speed\": 68, \"heading\": 84, \"event\": {\"type\": \"DISTANCE_TRAVEL\", \"name\": \"Distance Traveled\"}, \"odometer\": 85198.52713696871, \"satellites\": 26, \"diff\": {\"distanceMeter\": 226.15911957109347, \"durationMillis\": 11000, \"ignitionOn\": true, \"moving\": true}, \"vehicle\": {\"license\": \"1765HW\", \"uuid\": \"f59c5202-eda5-4348-9d66-ec14718f076b\"}, \"device\": {\"imei\": \"358925430754727\"}, \"hdop\": 25.5, \"positionAccuracy\": 37.507210845177696, \"batteryVoltage\": 4.026, \"createdAt\": {\"$date\": \"2024-11-25T06:40:30.615Z\"}, \"updatedAt\": {\"$date\": \"2024-11-25T06:40:30.615Z\"}}], \"ns\": \"opal_server.vehicleevents\"}, \"ok\": 1.0}", "commandName": "find", "databaseName": "opal_server", "requestId": 32391, "operationId": 32391, "driverConnectionId": 1, "serverConnectionId": 13103, "serverHost": "3.144.134.141", "serverPort": 27017}
2025-03-13 15:30:52,786 - pymongo.connection - DEBUG - {"clientId": {"$oid": "67d2b399dc3bf3a83804d41f"}, "message": "Connection checked in", "serverHost": "3.144.134.141", "serverPort": 27017, "driverConnectionId": 1}
2025-03-13 15:30:52,787 - app.db.repositories.data_repository - DEBUG - Sample document fields: ['_id', 'vendor', 'deviceTime', 'serverTime', 'location', 'ignition', 'speed', 'heading', 'event', 'odometer', 'satellites', 'wrongOrdered', 'diff', 'vehicle', 'device', 'hdop', 'positionAccuracy', 'batteryVoltage', '__v', 'createdAt', 'updatedAt']
2025-03-13 15:30:52,787 - pymongo.serverSelection - DEBUG - {"message": "Server selection started", "selector": "Primary()", "operation": "count", "topologyDescription": "<TopologyDescription id: 67d2b399dc3bf3a83804d41f, topology_type: Single, servers: [<ServerDescription ('3.144.134.141', 27017) server_type: Standalone, rtt: 0.2483360000002024>]>", "clientId": {"$oid": "67d2b399dc3bf3a83804d41f"}}
2025-03-13 15:30:52,788 - pymongo.serverSelection - DEBUG - {"message": "Server selection succeeded", "selector": "Primary()", "operation": "count", "topologyDescription": "<TopologyDescription id: 67d2b399dc3bf3a83804d41f, topology_type: Single, servers: [<ServerDescription ('3.144.134.141', 27017) server_type: Standalone, rtt: 0.2483360000002024>]>", "clientId": {"$oid": "67d2b399dc3bf3a83804d41f"}, "serverHost": "3.144.134.141", "serverPort": 27017}
2025-03-13 15:30:52,788 - pymongo.connection - DEBUG - {"clientId": {"$oid": "67d2b399dc3bf3a83804d41f"}, "message": "Connection checkout started", "serverHost": "3.144.134.141", "serverPort": 27017}
2025-03-13 15:30:52,789 - pymongo.connection - DEBUG - {"clientId": {"$oid": "67d2b399dc3bf3a83804d41f"}, "message": "Connection checked out", "serverHost": "3.144.134.141", "serverPort": 27017, "driverConnectionId": 1, "durationMS": 0.0}
2025-03-13 15:30:52,789 - pymongo.command - DEBUG - {"clientId": {"$oid": "67d2b399dc3bf3a83804d41f"}, "message": "Command started", "command": "{\"aggregate\": \"vehicleevents\", \"pipeline\": [{\"$match\": {\"$or\": [{\"timestamp\": {\"$gte\": {\"$date\": \"2025-03-13T07:30:51.006Z\"}, \"$lte\": {\"$date\": \"2025-03-13T15:30:51.006Z\"}}}, {\"event_time\": {\"$gte\": {\"$date\": \"2025-03-13T07:30:51.006Z\"}, \"$lte\": {\"$date\": \"2025-03-13T15:30:51.006Z\"}}}, {\"created_at\": {\"$gte\": {\"$date\": \"2025-03-13T07:30:51.006Z\"}, \"$lte\": {\"$date\": \"2025-03-13T15:30:51.006Z\"}}}]}}, {\"$group\": {\"_id\": 1, \"n\": {\"$sum\": 1}}}], \"lsid\": {\"id\": {\"$binary\": {\"base64\": \"wvKWnVW3R7KtDVfkZktQAQ==\", \"subType\": \"04\"}}}, \"$db\": \"opal_server\"}", "commandName": "aggregate", "databaseName": "opal_server", "requestId": 14604, "operationId": 14604, "driverConnectionId": 1, "serverConnectionId": 13103, "serverHost": "3.144.134.141", "serverPort": 27017}
2025-03-13 15:30:56,001 - pymongo.topology - DEBUG - {"topologyId": {"$oid": "67d2b399dc3bf3a83804d41f"}, "driverConnectionId": 1, "serverConnectionId": 13102, "serverHost": "3.144.134.141", "serverPort": 27017, "awaited": true, "durationMS": 10000.0, "reply": "{\"isWritablePrimary\": true, \"topologyVersion\": {\"processId\": {\"$oid\": \"67b7e5814f77c1a87c56d054\"}}, \"maxBsonObjectSize\": 16777216, \"maxMessageSizeBytes\": 48000000, \"maxWriteBatchSize\": 100000, \"localTime\": {\"$date\": \"2025-03-13T10:30:56.022Z\"}, \"logicalSessionTimeoutMinutes\": 30, \"connectionId\": 13102, \"maxWireVersion\": 25, \"ok\": 1.0}", "message": "Server heartbeat succeeded"}
2025-03-13 15:30:56,002 - pymongo.topology - DEBUG - {"topologyId": {"$oid": "67d2b399dc3bf3a83804d41f"}, "driverConnectionId": 1, "serverConnectionId": 13102, "serverHost": "3.144.134.141", "serverPort": 27017, "awaited": true, "message": "Server heartbeat started"}
2025-03-13 15:30:58,743 - pymongo.command - DEBUG - {"clientId": {"$oid": "67d2b399dc3bf3a83804d41f"}, "message": "Command succeeded", "durationMS": 5954.189, "reply": "{\"cursor\": {\"ns\": \"opal_server.vehicleevents\"}, \"ok\": 1.0}", "commandName": "aggregate", "databaseName": "opal_server", "requestId": 14604, "operationId": 14604, "driverConnectionId": 1, "serverConnectionId": 13103, "serverHost": "3.144.134.141", "serverPort": 27017}
2025-03-13 15:30:58,743 - pymongo.connection - DEBUG - {"clientId": {"$oid": "67d2b399dc3bf3a83804d41f"}, "message": "Connection checked in", "serverHost": "3.144.134.141", "serverPort": 27017, "driverConnectionId": 1}
2025-03-13 15:30:58,744 - app.db.repositories.data_repository - INFO - Found 0 matching vehicle events
2025-03-13 15:30:58,745 - pymongo.serverSelection - DEBUG - {"message": "Server selection started", "selector": "Primary()", "operation": "find", "topologyDescription": "<TopologyDescription id: 67d2b399dc3bf3a83804d41f, topology_type: Single, servers: [<ServerDescription ('3.144.134.141', 27017) server_type: Standalone, rtt: 0.2642688000000659>]>", "clientId": {"$oid": "67d2b399dc3bf3a83804d41f"}}
2025-03-13 15:30:58,745 - pymongo.serverSelection - DEBUG - {"message": "Server selection succeeded", "selector": "Primary()", "operation": "find", "topologyDescription": "<TopologyDescription id: 67d2b399dc3bf3a83804d41f, topology_type: Single, servers: [<ServerDescription ('3.144.134.141', 27017) server_type: Standalone, rtt: 0.2642688000000659>]>", "clientId": {"$oid": "67d2b399dc3bf3a83804d41f"}, "serverHost": "3.144.134.141", "serverPort": 27017}
2025-03-13 15:30:58,746 - pymongo.connection - DEBUG - {"clientId": {"$oid": "67d2b399dc3bf3a83804d41f"}, "message": "Connection checkout started", "serverHost": "3.144.134.141", "serverPort": 27017}
2025-03-13 15:30:58,746 - pymongo.connection - DEBUG - {"clientId": {"$oid": "67d2b399dc3bf3a83804d41f"}, "message": "Connection checked out", "serverHost": "3.144.134.141", "serverPort": 27017, "driverConnectionId": 1, "durationMS": 0.0}
2025-03-13 15:30:58,746 - pymongo.command - DEBUG - {"clientId": {"$oid": "67d2b399dc3bf3a83804d41f"}, "message": "Command started", "command": "{\"find\": \"vehicleevents\", \"filter\": {\"$or\": [{\"timestamp\": {\"$gte\": {\"$date\": \"2025-03-13T07:30:51.006Z\"}, \"$lte\": {\"$date\": \"2025-03-13T15:30:51.006Z\"}}}, {\"event_time\": {\"$gte\": {\"$date\": \"2025-03-13T07:30:51.006Z\"}, \"$lte\": {\"$date\": \"2025-03-13T15:30:51.006Z\"}}}, {\"created_at\": {\"$gte\": {\"$date\": \"2025-03-13T07:30:51.006Z\"}, \"$lte\": {\"$date\": \"2025-03-13T15:30:51.006Z\"}}}]}, \"limit\": 1000, \"lsid\": {\"id\": {\"$binary\": {\"base64\": \"wvKWnVW3R7KtDVfkZktQAQ==\", \"subType\": \"04\"}}}, \"$db\": \"opal_server\"}", "commandName": "find", "databaseName": "opal_server", "requestId": 3902, "operationId": 3902, "driverConnectionId": 1, "serverConnectionId": 13103, "serverHost": "3.144.134.141", "serverPort": 27017}
2025-03-13 15:31:05,343 - pymongo.command - DEBUG - {"clientId": {"$oid": "67d2b399dc3bf3a83804d41f"}, "message": "Command succeeded", "durationMS": 6596.59, "reply": "{\"cursor\": {\"ns\": \"opal_server.vehicleevents\"}, \"ok\": 1.0}", "commandName": "find", "databaseName": "opal_server", "requestId": 3902, "operationId": 3902, "driverConnectionId": 1, "serverConnectionId": 13103, "serverHost": "3.144.134.141", "serverPort": 27017}
2025-03-13 15:31:05,343 - pymongo.connection - DEBUG - {"clientId": {"$oid": "67d2b399dc3bf3a83804d41f"}, "message": "Connection checked in", "serverHost": "3.144.134.141", "serverPort": 27017, "driverConnectionId": 1}
2025-03-13 15:31:05,344 - app.db.repositories.data_repository - DEBUG - Retrieved 0 vehicle events
2025-03-13 15:31:06,001 - pymongo.topology - DEBUG - {"topologyId": {"$oid": "67d2b399dc3bf3a83804d41f"}, "driverConnectionId": 1, "serverConnectionId": 13102, "serverHost": "3.144.134.141", "serverPort": 27017, "awaited": true, "durationMS": 10000.0, "reply": "{\"isWritablePrimary\": true, \"topologyVersion\": {\"processId\": {\"$oid\": \"67b7e5814f77c1a87c56d054\"}}, \"maxBsonObjectSize\": 16777216, \"maxMessageSizeBytes\": 48000000, \"maxWriteBatchSize\": 100000, \"localTime\": {\"$date\": \"2025-03-13T10:31:06.023Z\"}, \"logicalSessionTimeoutMinutes\": 30, \"connectionId\": 13102, \"maxWireVersion\": 25, \"ok\": 1.0}", "message": "Server heartbeat succeeded"}
2025-03-13 15:31:06,002 - pymongo.topology - DEBUG - {"topologyId": {"$oid": "67d2b399dc3bf3a83804d41f"}, "driverConnectionId": 1, "serverConnectionId": 13102, "serverHost": "3.144.134.141", "serverPort": 27017, "awaited": true, "message": "Server heartbeat started"}
2025-03-13 15:31:16,002 - pymongo.topology - DEBUG - {"topologyId": {"$oid": "67d2b399dc3bf3a83804d41f"}, "driverConnectionId": 1, "serverConnectionId": 13102, "serverHost": "3.144.134.141", "serverPort": 27017, "awaited": true, "durationMS": 10000.0, "reply": "{\"isWritablePrimary\": true, \"topologyVersion\": {\"processId\": {\"$oid\": \"67b7e5814f77c1a87c56d054\"}}, \"maxBsonObjectSize\": 16777216, \"maxMessageSizeBytes\": 48000000, \"maxWriteBatchSize\": 100000, \"localTime\": {\"$date\": \"2025-03-13T10:31:16.024Z\"}, \"logicalSessionTimeoutMinutes\": 30, \"connectionId\": 13102, \"maxWireVersion\": 25, \"ok\": 1.0}", "message": "Server heartbeat succeeded"}
2025-03-13 15:31:16,003 - pymongo.topology - DEBUG - {"topologyId": {"$oid": "67d2b399dc3bf3a83804d41f"}, "driverConnectionId": 1, "serverConnectionId": 13102, "serverHost": "3.144.134.141", "serverPort": 27017, "awaited": true, "message": "Server heartbeat started"}
2025-03-13 15:31:26,003 - pymongo.topology - DEBUG - {"topologyId": {"$oid": "67d2b399dc3bf3a83804d41f"}, "driverConnectionId": 1, "serverConnectionId": 13102, "serverHost": "3.144.134.141", "serverPort": 27017, "awaited": true, "durationMS": 10000.0, "reply": "{\"isWritablePrimary\": true, \"topologyVersion\": {\"processId\": {\"$oid\": \"67b7e5814f77c1a87c56d054\"}}, \"maxBsonObjectSize\": 16777216, \"maxMessageSizeBytes\": 48000000, \"maxWriteBatchSize\": 100000, \"localTime\": {\"$date\": \"2025-03-13T10:31:26.025Z\"}, \"logicalSessionTimeoutMinutes\": 30, \"connectionId\": 13102, \"maxWireVersion\": 25, \"ok\": 1.0}", "message": "Server heartbeat succeeded"}
2025-03-13 15:31:26,005 - pymongo.topology - DEBUG - {"topologyId": {"$oid": "67d2b399dc3bf3a83804d41f"}, "driverConnectionId": 1, "serverConnectionId": 13102, "serverHost": "3.144.134.141", "serverPort": 27017, "awaited": true, "message": "Server heartbeat started"}
2025-03-13 15:31:26,385 - app.services.predictive_analytics - DEBUG - Analyzing time window from 2025-03-13 07:31:26.385169 to 2025-03-13 15:31:26.385169
2025-03-13 15:31:26,386 - app.services.predictive_analytics - DEBUG - Time window: 8.0 hours
2025-03-13 15:31:26,386 - app.db.repositories.data_repository - DEBUG - Connected to database: opal_server
2025-03-13 15:31:26,386 - app.db.repositories.data_repository - DEBUG - Violations pipeline: [{'$match': {'$or': [{'timestamp': {'$gte': datetime.datetime(2025, 3, 13, 7, 31, 26, 385169), '$lte': datetime.datetime(2025, 3, 13, 15, 31, 26, 385169)}}, {'event_time': {'$gte': datetime.datetime(2025, 3, 13, 7, 31, 26, 385169), '$lte': datetime.datetime(2025, 3, 13, 15, 31, 26, 385169)}}, {'created_at': {'$gte': datetime.datetime(2025, 3, 13, 7, 31, 26, 385169), '$lte': datetime.datetime(2025, 3, 13, 15, 31, 26, 385169)}}, {'driver_uuid': 'e889d91f-af57-48a5-a384-fdac719f7426'}, {'driver.uuid': 'e889d91f-af57-48a5-a384-fdac719f7426'}, {'vehicle.driver_uuid': 'e889d91f-af57-48a5-a384-fdac719f7426'}]}}, {'$lookup': {'from': 'drivers', 'localField': 'driver_uuid', 'foreignField': 'driver_id', 'as': 'driver_info'}}, {'$addFields': {'driver_name': {'$cond': [{'$gt': [{'$size': '$driver_info'}, 0]}, {'$arrayElemAt': ['$driver_info.name', 0]}, {'$cond': [{'$eq': ['$driver_uuid', 'unknown']}, 'Unassigned Driver', {'$concat': ['Driver ', {'$toString': '$driver_uuid'}]}]}]}}}]
2025-03-13 15:31:26,387 - pymongo.serverSelection - DEBUG - {"message": "Server selection started", "selector": "Primary()", "operation": "listCollections", "topologyDescription": "<TopologyDescription id: 67d2b399dc3bf3a83804d41f, topology_type: Single, servers: [<ServerDescription ('3.144.134.141', 27017) server_type: Standalone, rtt: 0.2573056256000338>]>", "clientId": {"$oid": "67d2b399dc3bf3a83804d41f"}}
2025-03-13 15:31:26,387 - pymongo.serverSelection - DEBUG - {"message": "Server selection succeeded", "selector": "Primary()", "operation": "listCollections", "topologyDescription": "<TopologyDescription id: 67d2b399dc3bf3a83804d41f, topology_type: Single, servers: [<ServerDescription ('3.144.134.141', 27017) server_type: Standalone, rtt: 0.2573056256000338>]>", "clientId": {"$oid": "67d2b399dc3bf3a83804d41f"}, "serverHost": "3.144.134.141", "serverPort": 27017}
2025-03-13 15:31:26,388 - pymongo.connection - DEBUG - {"clientId": {"$oid": "67d2b399dc3bf3a83804d41f"}, "message": "Connection checkout started", "serverHost": "3.144.134.141", "serverPort": 27017}
2025-03-13 15:31:26,388 - pymongo.connection - DEBUG - {"clientId": {"$oid": "67d2b399dc3bf3a83804d41f"}, "message": "Connection checked out", "serverHost": "3.144.134.141", "serverPort": 27017, "driverConnectionId": 1, "durationMS": 0.0}
2025-03-13 15:31:26,388 - pymongo.command - DEBUG - {"clientId": {"$oid": "67d2b399dc3bf3a83804d41f"}, "message": "Command started", "command": "{\"listCollections\": 1, \"nameOnly\": true, \"lsid\": {\"id\": {\"$binary\": {\"base64\": \"wvKWnVW3R7KtDVfkZktQAQ==\", \"subType\": \"04\"}}}, \"$db\": \"opal_server\"}", "commandName": "listCollections", "databaseName": "opal_server", "requestId": 153, "operationId": 153, "driverConnectionId": 1, "serverConnectionId": 13103, "serverHost": "3.144.134.141", "serverPort": 27017}
2025-03-13 15:31:26,635 - pymongo.command - DEBUG - {"clientId": {"$oid": "67d2b399dc3bf3a83804d41f"}, "message": "Command succeeded", "durationMS": 247.446, "reply": "{\"cursor\": {\"ns\": \"opal_server.$cmd.listCollections\", \"firstBatch\": [{\"name\": \"rags\", \"type\": \"collection\"}, {\"name\": \"trips\", \"type\": \"collection\"}, {\"name\": \"vehicles\", \"type\": \"collection\"}, {\"name\": \"permissions\", \"type\": \"collection\"}, {\"name\": \"notifications\", \"type\": \"collection\"}, {\"name\": \"crash_events\", \"type\": \"collection\"}, {\"name\": \"violations-x\", \"type\": \"collection\"}, {\"name\": \"drivers\", \"type\": \"collection\"}, {\"name\": \"geofences\", \"type\": \"collection\"}, {\"name\": \"tickets\", \"type\": \"collection\"}, {\"name\": \"vehicleevents\", \"type\": \"collection\"}, {\"name\": \"vendors\", \"type\": \"collection\"}, {\"name\": \"roles\", \"type\": \"collection\"}, {\"name\": \"clients\", \"type\": \"collection\"}, {\"name\": \"vendordevices\", \"type\": \"collection\"}, {\"name\": \"settings\", \"type\": \"collection\"}, {\"name\": \"media\", \"type\": \"collection\"}, {\"name\": \"violation_rules\", \"type\": \"collection\"}, {\"name\": \"violations\", \"type\": \"collection\"}, {\"name\": \"users\", \"type\": \"collection\"}, {\"name\": \"companies\", \"type\": \"coll...", "commandName": "listCollections", "databaseName": "opal_server", "requestId": 153, "operationId": 153, "driverConnectionId": 1, "serverConnectionId": 13103, "serverHost": "3.144.134.141", "serverPort": 27017}
2025-03-13 15:31:26,636 - pymongo.connection - DEBUG - {"clientId": {"$oid": "67d2b399dc3bf3a83804d41f"}, "message": "Connection checked in", "serverHost": "3.144.134.141", "serverPort": 27017, "driverConnectionId": 1}
2025-03-13 15:31:26,637 - app.db.repositories.data_repository - DEBUG - Available collections: ['rags', 'trips', 'vehicles', 'permissions', 'notifications', 'crash_events', 'violations-x', 'drivers', 'geofences', 'tickets', 'vehicleevents', 'vendors', 'roles', 'clients', 'vendordevices', 'settings', 'media', 'violation_rules', 'violations', 'users', 'companies']
2025-03-13 15:31:26,637 - app.db.repositories.data_repository - DEBUG - Checking collection: violations
2025-03-13 15:31:26,637 - pymongo.serverSelection - DEBUG - {"message": "Server selection started", "selector": "Primary()", "operation": "count", "topologyDescription": "<TopologyDescription id: 67d2b399dc3bf3a83804d41f, topology_type: Single, servers: [<ServerDescription ('3.144.134.141', 27017) server_type: Standalone, rtt: 0.2573056256000338>]>", "clientId": {"$oid": "67d2b399dc3bf3a83804d41f"}}
2025-03-13 15:31:26,638 - pymongo.serverSelection - DEBUG - {"message": "Server selection succeeded", "selector": "Primary()", "operation": "count", "topologyDescription": "<TopologyDescription id: 67d2b399dc3bf3a83804d41f, topology_type: Single, servers: [<ServerDescription ('3.144.134.141', 27017) server_type: Standalone, rtt: 0.2573056256000338>]>", "clientId": {"$oid": "67d2b399dc3bf3a83804d41f"}, "serverHost": "3.144.134.141", "serverPort": 27017}
2025-03-13 15:31:26,638 - pymongo.connection - DEBUG - {"clientId": {"$oid": "67d2b399dc3bf3a83804d41f"}, "message": "Connection checkout started", "serverHost": "3.144.134.141", "serverPort": 27017}
2025-03-13 15:31:26,639 - pymongo.connection - DEBUG - {"clientId": {"$oid": "67d2b399dc3bf3a83804d41f"}, "message": "Connection checked out", "serverHost": "3.144.134.141", "serverPort": 27017, "driverConnectionId": 1, "durationMS": 0.0}
2025-03-13 15:31:26,639 - pymongo.command - DEBUG - {"clientId": {"$oid": "67d2b399dc3bf3a83804d41f"}, "message": "Command started", "command": "{\"aggregate\": \"violations\", \"pipeline\": [{\"$match\": {\"$or\": [{\"timestamp\": {\"$gte\": {\"$date\": \"2025-03-13T07:31:26.385Z\"}, \"$lte\": {\"$date\": \"2025-03-13T15:31:26.385Z\"}}}, {\"event_time\": {\"$gte\": {\"$date\": \"2025-03-13T07:31:26.385Z\"}, \"$lte\": {\"$date\": \"2025-03-13T15:31:26.385Z\"}}}, {\"created_at\": {\"$gte\": {\"$date\": \"2025-03-13T07:31:26.385Z\"}, \"$lte\": {\"$date\": \"2025-03-13T15:31:26.385Z\"}}}, {\"driver_uuid\": \"e889d91f-af57-48a5-a384-fdac719f7426\"}, {\"driver.uuid\": \"e889d91f-af57-48a5-a384-fdac719f7426\"}, {\"vehicle.driver_uuid\": \"e889d91f-af57-48a5-a384-fdac719f7426\"}]}}, {\"$group\": {\"_id\": 1, \"n\": {\"$sum\": 1}}}], \"lsid\": {\"id\": {\"$binary\": {\"base64\": \"wvKWnVW3R7KtDVfkZktQAQ==\", \"subType\": \"04\"}}}, \"$db\": \"opal_server\"}", "commandName": "aggregate", "databaseName": "opal_server", "requestId": 292, "operationId": 292, "driverConnectionId": 1, "serverConnectionId": 13103, "serverHost": "3.144.134.141", "serverPort": 27017}
2025-03-13 15:31:26,919 - pymongo.command - DEBUG - {"clientId": {"$oid": "67d2b399dc3bf3a83804d41f"}, "message": "Command succeeded", "durationMS": 279.961, "reply": "{\"cursor\": {\"firstBatch\": [{\"_id\": 1, \"n\": 354}], \"ns\": \"opal_server.violations\"}, \"ok\": 1.0}", "commandName": "aggregate", "databaseName": "opal_server", "requestId": 292, "operationId": 292, "driverConnectionId": 1, "serverConnectionId": 13103, "serverHost": "3.144.134.141", "serverPort": 27017}
2025-03-13 15:31:26,920 - pymongo.connection - DEBUG - {"clientId": {"$oid": "67d2b399dc3bf3a83804d41f"}, "message": "Connection checked in", "serverHost": "3.144.134.141", "serverPort": 27017, "driverConnectionId": 1}
2025-03-13 15:31:26,920 - app.db.repositories.data_repository - INFO - Found 354 documents in violations
2025-03-13 15:31:26,921 - pymongo.serverSelection - DEBUG - {"message": "Server selection started", "selector": "Primary()", "operation": "aggregate", "topologyDescription": "<TopologyDescription id: 67d2b399dc3bf3a83804d41f, topology_type: Single, servers: [<ServerDescription ('3.144.134.141', 27017) server_type: Standalone, rtt: 0.2573056256000338>]>", "clientId": {"$oid": "67d2b399dc3bf3a83804d41f"}}
2025-03-13 15:31:26,921 - pymongo.serverSelection - DEBUG - {"message": "Server selection succeeded", "selector": "Primary()", "operation": "aggregate", "topologyDescription": "<TopologyDescription id: 67d2b399dc3bf3a83804d41f, topology_type: Single, servers: [<ServerDescription ('3.144.134.141', 27017) server_type: Standalone, rtt: 0.2573056256000338>]>", "clientId": {"$oid": "67d2b399dc3bf3a83804d41f"}, "serverHost": "3.144.134.141", "serverPort": 27017}
2025-03-13 15:31:26,922 - pymongo.connection - DEBUG - {"clientId": {"$oid": "67d2b399dc3bf3a83804d41f"}, "message": "Connection checkout started", "serverHost": "3.144.134.141", "serverPort": 27017}
2025-03-13 15:31:26,922 - pymongo.connection - DEBUG - {"clientId": {"$oid": "67d2b399dc3bf3a83804d41f"}, "message": "Connection checked out", "serverHost": "3.144.134.141", "serverPort": 27017, "driverConnectionId": 1, "durationMS": 0.0}
2025-03-13 15:31:26,922 - pymongo.command - DEBUG - {"clientId": {"$oid": "67d2b399dc3bf3a83804d41f"}, "message": "Command started", "command": "{\"aggregate\": \"violations\", \"pipeline\": [{\"$match\": {\"$or\": [{\"timestamp\": {\"$gte\": {\"$date\": \"2025-03-13T07:31:26.385Z\"}, \"$lte\": {\"$date\": \"2025-03-13T15:31:26.385Z\"}}}, {\"event_time\": {\"$gte\": {\"$date\": \"2025-03-13T07:31:26.385Z\"}, \"$lte\": {\"$date\": \"2025-03-13T15:31:26.385Z\"}}}, {\"created_at\": {\"$gte\": {\"$date\": \"2025-03-13T07:31:26.385Z\"}, \"$lte\": {\"$date\": \"2025-03-13T15:31:26.385Z\"}}}, {\"driver_uuid\": \"e889d91f-af57-48a5-a384-fdac719f7426\"}, {\"driver.uuid\": \"e889d91f-af57-48a5-a384-fdac719f7426\"}, {\"vehicle.driver_uuid\": \"e889d91f-af57-48a5-a384-fdac719f7426\"}]}}, {\"$lookup\": {\"from\": \"drivers\", \"localField\": \"driver_uuid\", \"foreignField\": \"driver_id\", \"as\": \"driver_info\"}}, {\"$addFields\": {\"driver_name\": {\"$cond\": [{\"$gt\": [{\"$size\": \"$driver_info\"}]}, {\"$arrayElemAt\": [\"$driver_info.name\"]}, {\"$cond\": [{\"$eq\": [\"$driver_uuid\", \"unknown\"]}, \"Unassigned Driver\", {\"$concat\": [\"Driver \", {\"$toString\": \"$driver_uuid\"}]}]}]}}}], \"lsid\": {\"id\": {\"$binary\": {\"base64\": \"wvKWnVW3R7KtDVf...", "commandName": "aggregate", "databaseName": "opal_server", "requestId": 12382, "operationId": 12382, "driverConnectionId": 1, "serverConnectionId": 13103, "serverHost": "3.144.134.141", "serverPort": 27017}
2025-03-13 15:31:27,689 - pymongo.command - DEBUG - {"clientId": {"$oid": "67d2b399dc3bf3a83804d41f"}, "message": "Command succeeded", "durationMS": 765.667, "reply": "{\"cursor\": {\"firstBatch\": [{\"_id\": {\"$oid\": \"67c57d756b4f5de2bad8b263\"}, \"event_id\": \"VIO-dd5425a6-e99c-44f2-a994-e50cdd60a20a-SPEED_MEDIUM-2025-03-03T09:59:00+00:00\", \"event_time\": {\"$date\": \"2025-03-03T09:59:17.575Z\"}, \"vendor\": {\"$oid\": \"6703ad7f70ba41e9473dd8e7\"}, \"vehicle_uuid\": \"dd5425a6-e99c-44f2-a994-e50cdd60a20a\", \"vehicle_license\": \"4683MA\", \"driver_uuid\": \"e889d91f-af57-48a5-a384-fdac719f7426\", \"driver_name\": \"Driver e889d91f-af57-48a5-a384-fdac719f7426\", \"violation_type\": \"SPEED_MEDIUM\", \"severity\": \"MEDIUM\", \"description\": \"Speed limit exceeded: 73.0 km/h\", \"threshold\": 60.0, \"actual_value\": 73.0, \"location\": {\"latitude\": 22.993889, \"longitude\": 57.791194, \"altitude\": 613.0}, \"rule\": {\"_id\": {\"$oid\": \"67c4c815ab2d5578275f1823\"}, \"name\": \"Speed Limit - Medium\", \"description\": \"Vehicle exceeding speed limit (60 km/h)\", \"rule_type\": \"SPEED_MEDIUM\", \"threshold\": 60.0, \"enabled\": true, \"severity\": \"MEDIUM\", \"priority\": 2, \"cooldown_period\": 60, \"parameters\": {\"unit\": \"km/h\", \"m...", "commandName": "aggregate", "databaseName": "opal_server", "requestId": 12382, "operationId": 12382, "driverConnectionId": 1, "serverConnectionId": 13103, "serverHost": "3.144.134.141", "serverPort": 27017}
2025-03-13 15:31:27,690 - pymongo.connection - DEBUG - {"clientId": {"$oid": "67d2b399dc3bf3a83804d41f"}, "message": "Connection checked in", "serverHost": "3.144.134.141", "serverPort": 27017, "driverConnectionId": 1}
2025-03-13 15:31:27,691 - pymongo.serverSelection - DEBUG - {"message": "Server selection started", "selector": "<function any_server_selector at 0x0000020605A98680>", "operation": "getMore", "topologyDescription": "<TopologyDescription id: 67d2b399dc3bf3a83804d41f, topology_type: Single, servers: [<ServerDescription ('3.144.134.141', 27017) server_type: Standalone, rtt: 0.2573056256000338>]>", "clientId": {"$oid": "67d2b399dc3bf3a83804d41f"}}
2025-03-13 15:31:27,691 - pymongo.serverSelection - DEBUG - {"message": "Server selection succeeded", "selector": "<function any_server_selector at 0x0000020605A98680>", "operation": "getMore", "topologyDescription": "<TopologyDescription id: 67d2b399dc3bf3a83804d41f, topology_type: Single, servers: [<ServerDescription ('3.144.134.141', 27017) server_type: Standalone, rtt: 0.2573056256000338>]>", "clientId": {"$oid": "67d2b399dc3bf3a83804d41f"}, "serverHost": "3.144.134.141", "serverPort": 27017}
2025-03-13 15:31:27,691 - pymongo.connection - DEBUG - {"clientId": {"$oid": "67d2b399dc3bf3a83804d41f"}, "message": "Connection checkout started", "serverHost": "3.144.134.141", "serverPort": 27017}
2025-03-13 15:31:27,692 - pymongo.connection - DEBUG - {"clientId": {"$oid": "67d2b399dc3bf3a83804d41f"}, "message": "Connection checked out", "serverHost": "3.144.134.141", "serverPort": 27017, "driverConnectionId": 1, "durationMS": 0.0}
2025-03-13 15:31:27,692 - pymongo.command - DEBUG - {"clientId": {"$oid": "67d2b399dc3bf3a83804d41f"}, "message": "Command started", "command": "{\"getMore\": 7107224629978053279, \"collection\": \"violations\", \"lsid\": {\"id\": {\"$binary\": {\"base64\": \"wvKWnVW3R7KtDVfkZktQAQ==\", \"subType\": \"04\"}}}, \"$db\": \"opal_server\"}", "commandName": "getMore", "databaseName": "opal_server", "requestId": 17421, "operationId": 17421, "driverConnectionId": 1, "serverConnectionId": 13103, "serverHost": "3.144.134.141", "serverPort": 27017}
2025-03-13 15:31:28,208 - pymongo.command - DEBUG - {"clientId": {"$oid": "67d2b399dc3bf3a83804d41f"}, "message": "Command succeeded", "durationMS": 515.733, "reply": "{\"cursor\": {\"nextBatch\": [{\"_id\": {\"$oid\": \"67c6671f37cbd66466c5f494\"}, \"event_id\": \"VIO-dd5425a6-e99c-44f2-a994-e50cdd60a20a-SPEED_MEDIUM-2025-03-04T02:36:00+00:00\", \"event_time\": {\"$date\": \"2025-03-04T02:36:15.547Z\"}, \"vendor\": {\"$oid\": \"6703ad7f70ba41e9473dd8e7\"}, \"vehicle_uuid\": \"dd5425a6-e99c-44f2-a994-e50cdd60a20a\", \"vehicle_license\": \"4683MA\", \"driver_uuid\": \"e889d91f-af57-48a5-a384-fdac719f7426\", \"driver_name\": \"Driver e889d91f-af57-48a5-a384-fdac719f7426\", \"violation_type\": \"SPEED_MEDIUM\", \"severity\": \"MEDIUM\", \"description\": \"Speed limit exceeded: 63.0 km/h\", \"threshold\": 60.0, \"actual_value\": 63.0, \"location\": {\"latitude\": 23.00573, \"longitude\": 56.157982, \"altitude\": 233.0}, \"rule\": {\"_id\": {\"$oid\": \"67c4c815ab2d5578275f1823\"}, \"name\": \"Speed Limit - Medium\", \"description\": \"Vehicle exceeding speed limit (60 km/h)\", \"rule_type\": \"SPEED_MEDIUM\", \"threshold\": 60.0, \"enabled\": true, \"severity\": \"MEDIUM\", \"priority\": 2, \"cooldown_period\": 60, \"parameters\": {\"unit\": \"km/h\", \"min...", "commandName": "getMore", "databaseName": "opal_server", "requestId": 17421, "operationId": 17421, "driverConnectionId": 1, "serverConnectionId": 13103, "serverHost": "3.144.134.141", "serverPort": 27017}
2025-03-13 15:31:28,209 - pymongo.connection - DEBUG - {"clientId": {"$oid": "67d2b399dc3bf3a83804d41f"}, "message": "Connection checked in", "serverHost": "3.144.134.141", "serverPort": 27017, "driverConnectionId": 1}
2025-03-13 15:31:28,209 - app.db.repositories.data_repository - DEBUG - Fetching vehicle events from database: opal_server
2025-03-13 15:31:28,210 - app.db.repositories.data_repository - DEBUG - Vehicle events query: {'$or': [{'vehicle.uuid': 'e889d91f-af57-48a5-a384-fdac719f7426'}, {'vehicle_uuid': 'e889d91f-af57-48a5-a384-fdac719f7426'}, {'driver_uuid': 'e889d91f-af57-48a5-a384-fdac719f7426'}]}
2025-03-13 15:31:28,210 - app.db.repositories.data_repository - DEBUG - Time range: {'$gte': datetime.datetime(2025, 3, 13, 7, 31, 26, 385169), '$lte': datetime.datetime(2025, 3, 13, 15, 31, 26, 385169)}
2025-03-13 15:31:28,210 - pymongo.serverSelection - DEBUG - {"message": "Server selection started", "selector": "Primary()", "operation": "listCollections", "topologyDescription": "<TopologyDescription id: 67d2b399dc3bf3a83804d41f, topology_type: Single, servers: [<ServerDescription ('3.144.134.141', 27017) server_type: Standalone, rtt: 0.2573056256000338>]>", "clientId": {"$oid": "67d2b399dc3bf3a83804d41f"}}
2025-03-13 15:31:28,211 - pymongo.serverSelection - DEBUG - {"message": "Server selection succeeded", "selector": "Primary()", "operation": "listCollections", "topologyDescription": "<TopologyDescription id: 67d2b399dc3bf3a83804d41f, topology_type: Single, servers: [<ServerDescription ('3.144.134.141', 27017) server_type: Standalone, rtt: 0.2573056256000338>]>", "clientId": {"$oid": "67d2b399dc3bf3a83804d41f"}, "serverHost": "3.144.134.141", "serverPort": 27017}
2025-03-13 15:31:28,211 - pymongo.connection - DEBUG - {"clientId": {"$oid": "67d2b399dc3bf3a83804d41f"}, "message": "Connection checkout started", "serverHost": "3.144.134.141", "serverPort": 27017}
2025-03-13 15:31:28,211 - pymongo.connection - DEBUG - {"clientId": {"$oid": "67d2b399dc3bf3a83804d41f"}, "message": "Connection checked out", "serverHost": "3.144.134.141", "serverPort": 27017, "driverConnectionId": 1, "durationMS": 0.0}
2025-03-13 15:31:28,212 - pymongo.command - DEBUG - {"clientId": {"$oid": "67d2b399dc3bf3a83804d41f"}, "message": "Command started", "command": "{\"listCollections\": 1, \"nameOnly\": true, \"lsid\": {\"id\": {\"$binary\": {\"base64\": \"wvKWnVW3R7KtDVfkZktQAQ==\", \"subType\": \"04\"}}}, \"$db\": \"opal_server\"}", "commandName": "listCollections", "databaseName": "opal_server", "requestId": 18716, "operationId": 18716, "driverConnectionId": 1, "serverConnectionId": 13103, "serverHost": "3.144.134.141", "serverPort": 27017}
2025-03-13 15:31:28,457 - pymongo.command - DEBUG - {"clientId": {"$oid": "67d2b399dc3bf3a83804d41f"}, "message": "Command succeeded", "durationMS": 244.97299999999998, "reply": "{\"cursor\": {\"ns\": \"opal_server.$cmd.listCollections\", \"firstBatch\": [{\"name\": \"rags\", \"type\": \"collection\"}, {\"name\": \"trips\", \"type\": \"collection\"}, {\"name\": \"vehicles\", \"type\": \"collection\"}, {\"name\": \"permissions\", \"type\": \"collection\"}, {\"name\": \"notifications\", \"type\": \"collection\"}, {\"name\": \"crash_events\", \"type\": \"collection\"}, {\"name\": \"violations-x\", \"type\": \"collection\"}, {\"name\": \"drivers\", \"type\": \"collection\"}, {\"name\": \"geofences\", \"type\": \"collection\"}, {\"name\": \"tickets\", \"type\": \"collection\"}, {\"name\": \"vehicleevents\", \"type\": \"collection\"}, {\"name\": \"vendors\", \"type\": \"collection\"}, {\"name\": \"roles\", \"type\": \"collection\"}, {\"name\": \"clients\", \"type\": \"collection\"}, {\"name\": \"vendordevices\", \"type\": \"collection\"}, {\"name\": \"settings\", \"type\": \"collection\"}, {\"name\": \"media\", \"type\": \"collection\"}, {\"name\": \"violation_rules\", \"type\": \"collection\"}, {\"name\": \"violations\", \"type\": \"collection\"}, {\"name\": \"users\", \"type\": \"collection\"}, {\"name\": \"companies\", \"type\": \"coll...", "commandName": "listCollections", "databaseName": "opal_server", "requestId": 18716, "operationId": 18716, "driverConnectionId": 1, "serverConnectionId": 13103, "serverHost": "3.144.134.141", "serverPort": 27017}
2025-03-13 15:31:28,457 - pymongo.connection - DEBUG - {"clientId": {"$oid": "67d2b399dc3bf3a83804d41f"}, "message": "Connection checked in", "serverHost": "3.144.134.141", "serverPort": 27017, "driverConnectionId": 1}
2025-03-13 15:31:28,458 - app.db.repositories.data_repository - DEBUG - Available collections: ['rags', 'trips', 'vehicles', 'permissions', 'notifications', 'crash_events', 'violations-x', 'drivers', 'geofences', 'tickets', 'vehicleevents', 'vendors', 'roles', 'clients', 'vendordevices', 'settings', 'media', 'violation_rules', 'violations', 'users', 'companies']
2025-03-13 15:31:28,458 - pymongo.serverSelection - DEBUG - {"message": "Server selection started", "selector": "Primary()", "operation": "find", "topologyDescription": "<TopologyDescription id: 67d2b399dc3bf3a83804d41f, topology_type: Single, servers: [<ServerDescription ('3.144.134.141', 27017) server_type: Standalone, rtt: 0.2573056256000338>]>", "clientId": {"$oid": "67d2b399dc3bf3a83804d41f"}}
2025-03-13 15:31:28,458 - pymongo.serverSelection - DEBUG - {"message": "Server selection succeeded", "selector": "Primary()", "operation": "find", "topologyDescription": "<TopologyDescription id: 67d2b399dc3bf3a83804d41f, topology_type: Single, servers: [<ServerDescription ('3.144.134.141', 27017) server_type: Standalone, rtt: 0.2573056256000338>]>", "clientId": {"$oid": "67d2b399dc3bf3a83804d41f"}, "serverHost": "3.144.134.141", "serverPort": 27017}
2025-03-13 15:31:28,459 - pymongo.connection - DEBUG - {"clientId": {"$oid": "67d2b399dc3bf3a83804d41f"}, "message": "Connection checkout started", "serverHost": "3.144.134.141", "serverPort": 27017}
2025-03-13 15:31:28,459 - pymongo.connection - DEBUG - {"clientId": {"$oid": "67d2b399dc3bf3a83804d41f"}, "message": "Connection checked out", "serverHost": "3.144.134.141", "serverPort": 27017, "driverConnectionId": 1, "durationMS": 0.0}
2025-03-13 15:31:28,459 - pymongo.command - DEBUG - {"clientId": {"$oid": "67d2b399dc3bf3a83804d41f"}, "message": "Command started", "command": "{\"find\": \"vehicleevents\", \"limit\": 1, \"singleBatch\": true, \"lsid\": {\"id\": {\"$binary\": {\"base64\": \"wvKWnVW3R7KtDVfkZktQAQ==\", \"subType\": \"04\"}}}, \"$db\": \"opal_server\"}", "commandName": "find", "databaseName": "opal_server", "requestId": 19718, "operationId": 19718, "driverConnectionId": 1, "serverConnectionId": 13103, "serverHost": "3.144.134.141", "serverPort": 27017}
2025-03-13 15:31:28,706 - pymongo.command - DEBUG - {"clientId": {"$oid": "67d2b399dc3bf3a83804d41f"}, "message": "Command succeeded", "durationMS": 246.953, "reply": "{\"cursor\": {\"firstBatch\": [{\"_id\": {\"$oid\": \"67441bdeb231195485d25272\"}, \"vendor\": {\"$oid\": \"6703ad7f70ba41e9473dd8e7\"}, \"deviceTime\": {\"$date\": \"2024-11-22T12:48:47Z\"}, \"serverTime\": {\"$date\": \"2024-11-22T12:48:47.958Z\"}, \"location\": {\"latitude\": 18.542048, \"longitude\": 55.852535, \"altitude\": 240}, \"ignition\": true, \"speed\": 68, \"heading\": 84, \"event\": {\"type\": \"DISTANCE_TRAVEL\", \"name\": \"Distance Traveled\"}, \"odometer\": 85198.52713696871, \"satellites\": 26, \"diff\": {\"distanceMeter\": 226.15911957109347, \"durationMillis\": 11000, \"ignitionOn\": true, \"moving\": true}, \"vehicle\": {\"license\": \"1765HW\", \"uuid\": \"f59c5202-eda5-4348-9d66-ec14718f076b\"}, \"device\": {\"imei\": \"358925430754727\"}, \"hdop\": 25.5, \"positionAccuracy\": 37.507210845177696, \"batteryVoltage\": 4.026, \"createdAt\": {\"$date\": \"2024-11-25T06:40:30.615Z\"}, \"updatedAt\": {\"$date\": \"2024-11-25T06:40:30.615Z\"}}], \"ns\": \"opal_server.vehicleevents\"}, \"ok\": 1.0}", "commandName": "find", "databaseName": "opal_server", "requestId": 19718, "operationId": 19718, "driverConnectionId": 1, "serverConnectionId": 13103, "serverHost": "3.144.134.141", "serverPort": 27017}
2025-03-13 15:31:28,707 - pymongo.connection - DEBUG - {"clientId": {"$oid": "67d2b399dc3bf3a83804d41f"}, "message": "Connection checked in", "serverHost": "3.144.134.141", "serverPort": 27017, "driverConnectionId": 1}
2025-03-13 15:31:28,707 - app.db.repositories.data_repository - DEBUG - Sample document fields: ['_id', 'vendor', 'deviceTime', 'serverTime', 'location', 'ignition', 'speed', 'heading', 'event', 'odometer', 'satellites', 'wrongOrdered', 'diff', 'vehicle', 'device', 'hdop', 'positionAccuracy', 'batteryVoltage', '__v', 'createdAt', 'updatedAt']
2025-03-13 15:31:28,708 - pymongo.serverSelection - DEBUG - {"message": "Server selection started", "selector": "Primary()", "operation": "count", "topologyDescription": "<TopologyDescription id: 67d2b399dc3bf3a83804d41f, topology_type: Single, servers: [<ServerDescription ('3.144.134.141', 27017) server_type: Standalone, rtt: 0.2573056256000338>]>", "clientId": {"$oid": "67d2b399dc3bf3a83804d41f"}}
2025-03-13 15:31:28,708 - pymongo.serverSelection - DEBUG - {"message": "Server selection succeeded", "selector": "Primary()", "operation": "count", "topologyDescription": "<TopologyDescription id: 67d2b399dc3bf3a83804d41f, topology_type: Single, servers: [<ServerDescription ('3.144.134.141', 27017) server_type: Standalone, rtt: 0.2573056256000338>]>", "clientId": {"$oid": "67d2b399dc3bf3a83804d41f"}, "serverHost": "3.144.134.141", "serverPort": 27017}
2025-03-13 15:31:28,708 - pymongo.connection - DEBUG - {"clientId": {"$oid": "67d2b399dc3bf3a83804d41f"}, "message": "Connection checkout started", "serverHost": "3.144.134.141", "serverPort": 27017}
2025-03-13 15:31:28,708 - pymongo.connection - DEBUG - {"clientId": {"$oid": "67d2b399dc3bf3a83804d41f"}, "message": "Connection checked out", "serverHost": "3.144.134.141", "serverPort": 27017, "driverConnectionId": 1, "durationMS": 0.0}
2025-03-13 15:31:28,709 - pymongo.command - DEBUG - {"clientId": {"$oid": "67d2b399dc3bf3a83804d41f"}, "message": "Command started", "command": "{\"aggregate\": \"vehicleevents\", \"pipeline\": [{\"$match\": {\"$or\": [{\"vehicle.uuid\": \"e889d91f-af57-48a5-a384-fdac719f7426\"}, {\"vehicle_uuid\": \"e889d91f-af57-48a5-a384-fdac719f7426\"}, {\"driver_uuid\": \"e889d91f-af57-48a5-a384-fdac719f7426\"}]}}, {\"$group\": {\"_id\": 1, \"n\": {\"$sum\": 1}}}], \"lsid\": {\"id\": {\"$binary\": {\"base64\": \"wvKWnVW3R7KtDVfkZktQAQ==\", \"subType\": \"04\"}}}, \"$db\": \"opal_server\"}", "commandName": "aggregate", "databaseName": "opal_server", "requestId": 19895, "operationId": 19895, "driverConnectionId": 1, "serverConnectionId": 13103, "serverHost": "3.144.134.141", "serverPort": 27017}
2025-03-13 15:31:34,609 - pymongo.command - DEBUG - {"clientId": {"$oid": "67d2b399dc3bf3a83804d41f"}, "message": "Command succeeded", "durationMS": 5900.41, "reply": "{\"cursor\": {\"ns\": \"opal_server.vehicleevents\"}, \"ok\": 1.0}", "commandName": "aggregate", "databaseName": "opal_server", "requestId": 19895, "operationId": 19895, "driverConnectionId": 1, "serverConnectionId": 13103, "serverHost": "3.144.134.141", "serverPort": 27017}
2025-03-13 15:31:34,610 - pymongo.connection - DEBUG - {"clientId": {"$oid": "67d2b399dc3bf3a83804d41f"}, "message": "Connection checked in", "serverHost": "3.144.134.141", "serverPort": 27017, "driverConnectionId": 1}
2025-03-13 15:31:34,610 - app.db.repositories.data_repository - INFO - Found 0 matching vehicle events
2025-03-13 15:31:34,611 - pymongo.serverSelection - DEBUG - {"message": "Server selection started", "selector": "Primary()", "operation": "find", "topologyDescription": "<TopologyDescription id: 67d2b399dc3bf3a83804d41f, topology_type: Single, servers: [<ServerDescription ('3.144.134.141', 27017) server_type: Standalone, rtt: 0.2573056256000338>]>", "clientId": {"$oid": "67d2b399dc3bf3a83804d41f"}}
2025-03-13 15:31:34,611 - pymongo.serverSelection - DEBUG - {"message": "Server selection succeeded", "selector": "Primary()", "operation": "find", "topologyDescription": "<TopologyDescription id: 67d2b399dc3bf3a83804d41f, topology_type: Single, servers: [<ServerDescription ('3.144.134.141', 27017) server_type: Standalone, rtt: 0.2573056256000338>]>", "clientId": {"$oid": "67d2b399dc3bf3a83804d41f"}, "serverHost": "3.144.134.141", "serverPort": 27017}
2025-03-13 15:31:34,611 - pymongo.connection - DEBUG - {"clientId": {"$oid": "67d2b399dc3bf3a83804d41f"}, "message": "Connection checkout started", "serverHost": "3.144.134.141", "serverPort": 27017}
2025-03-13 15:31:34,611 - pymongo.connection - DEBUG - {"clientId": {"$oid": "67d2b399dc3bf3a83804d41f"}, "message": "Connection checked out", "serverHost": "3.144.134.141", "serverPort": 27017, "driverConnectionId": 1, "durationMS": 0.0}
2025-03-13 15:31:34,612 - pymongo.command - DEBUG - {"clientId": {"$oid": "67d2b399dc3bf3a83804d41f"}, "message": "Command started", "command": "{\"find\": \"vehicleevents\", \"filter\": {\"$or\": [{\"vehicle.uuid\": \"e889d91f-af57-48a5-a384-fdac719f7426\"}, {\"vehicle_uuid\": \"e889d91f-af57-48a5-a384-fdac719f7426\"}, {\"driver_uuid\": \"e889d91f-af57-48a5-a384-fdac719f7426\"}]}, \"limit\": 1000, \"lsid\": {\"id\": {\"$binary\": {\"base64\": \"wvKWnVW3R7KtDVfkZktQAQ==\", \"subType\": \"04\"}}}, \"$db\": \"opal_server\"}", "commandName": "find", "databaseName": "opal_server", "requestId": 5447, "operationId": 5447, "driverConnectionId": 1, "serverConnectionId": 13103, "serverHost": "3.144.134.141", "serverPort": 27017}
2025-03-13 15:31:36,014 - pymongo.topology - DEBUG - {"topologyId": {"$oid": "67d2b399dc3bf3a83804d41f"}, "driverConnectionId": 1, "serverConnectionId": 13102, "serverHost": "3.144.134.141", "serverPort": 27017, "awaited": true, "durationMS": 10015.999999999622, "reply": "{\"isWritablePrimary\": true, \"topologyVersion\": {\"processId\": {\"$oid\": \"67b7e5814f77c1a87c56d054\"}}, \"maxBsonObjectSize\": 16777216, \"maxMessageSizeBytes\": 48000000, \"maxWriteBatchSize\": 100000, \"localTime\": {\"$date\": \"2025-03-13T10:31:36.036Z\"}, \"logicalSessionTimeoutMinutes\": 30, \"connectionId\": 13102, \"maxWireVersion\": 25, \"ok\": 1.0}", "message": "Server heartbeat succeeded"}
2025-03-13 15:31:36,014 - pymongo.topology - DEBUG - {"topologyId": {"$oid": "67d2b399dc3bf3a83804d41f"}, "driverConnectionId": 1, "serverConnectionId": 13102, "serverHost": "3.144.134.141", "serverPort": 27017, "awaited": true, "message": "Server heartbeat started"}
2025-03-13 15:31:40,930 - pymongo.command - DEBUG - {"clientId": {"$oid": "67d2b399dc3bf3a83804d41f"}, "message": "Command succeeded", "durationMS": 6318.364, "reply": "{\"cursor\": {\"ns\": \"opal_server.vehicleevents\"}, \"ok\": 1.0}", "commandName": "find", "databaseName": "opal_server", "requestId": 5447, "operationId": 5447, "driverConnectionId": 1, "serverConnectionId": 13103, "serverHost": "3.144.134.141", "serverPort": 27017}
2025-03-13 15:31:40,930 - pymongo.connection - DEBUG - {"clientId": {"$oid": "67d2b399dc3bf3a83804d41f"}, "message": "Connection checked in", "serverHost": "3.144.134.141", "serverPort": 27017, "driverConnectionId": 1}
2025-03-13 15:31:40,931 - app.db.repositories.data_repository - DEBUG - Retrieved 0 vehicle events
2025-03-13 15:31:46,015 - pymongo.topology - DEBUG - {"topologyId": {"$oid": "67d2b399dc3bf3a83804d41f"}, "driverConnectionId": 1, "serverConnectionId": 13102, "serverHost": "3.144.134.141", "serverPort": 27017, "awaited": true, "durationMS": 10000.0, "reply": "{\"isWritablePrimary\": true, \"topologyVersion\": {\"processId\": {\"$oid\": \"67b7e5814f77c1a87c56d054\"}}, \"maxBsonObjectSize\": 16777216, \"maxMessageSizeBytes\": 48000000, \"maxWriteBatchSize\": 100000, \"localTime\": {\"$date\": \"2025-03-13T10:31:46.038Z\"}, \"logicalSessionTimeoutMinutes\": 30, \"connectionId\": 13102, \"maxWireVersion\": 25, \"ok\": 1.0}", "message": "Server heartbeat succeeded"}
2025-03-13 15:31:46,017 - pymongo.topology - DEBUG - {"topologyId": {"$oid": "67d2b399dc3bf3a83804d41f"}, "driverConnectionId": 1, "serverConnectionId": 13102, "serverHost": "3.144.134.141", "serverPort": 27017, "awaited": true, "message": "Server heartbeat started"}
2025-03-13 15:31:56,017 - pymongo.topology - DEBUG - {"topologyId": {"$oid": "67d2b399dc3bf3a83804d41f"}, "driverConnectionId": 1, "serverConnectionId": 13102, "serverHost": "3.144.134.141", "serverPort": 27017, "awaited": true, "durationMS": 10000.0, "reply": "{\"isWritablePrimary\": true, \"topologyVersion\": {\"processId\": {\"$oid\": \"67b7e5814f77c1a87c56d054\"}}, \"maxBsonObjectSize\": 16777216, \"maxMessageSizeBytes\": 48000000, \"maxWriteBatchSize\": 100000, \"localTime\": {\"$date\": \"2025-03-13T10:31:56.039Z\"}, \"logicalSessionTimeoutMinutes\": 30, \"connectionId\": 13102, \"maxWireVersion\": 25, \"ok\": 1.0}", "message": "Server heartbeat succeeded"}
2025-03-13 15:31:56,018 - pymongo.topology - DEBUG - {"topologyId": {"$oid": "67d2b399dc3bf3a83804d41f"}, "driverConnectionId": 1, "serverConnectionId": 13102, "serverHost": "3.144.134.141", "serverPort": 27017, "awaited": true, "message": "Server heartbeat started"}
2025-03-13 15:32:06,018 - pymongo.topology - DEBUG - {"topologyId": {"$oid": "67d2b399dc3bf3a83804d41f"}, "driverConnectionId": 1, "serverConnectionId": 13102, "serverHost": "3.144.134.141", "serverPort": 27017, "awaited": true, "durationMS": 10000.0, "reply": "{\"isWritablePrimary\": true, \"topologyVersion\": {\"processId\": {\"$oid\": \"67b7e5814f77c1a87c56d054\"}}, \"maxBsonObjectSize\": 16777216, \"maxMessageSizeBytes\": 48000000, \"maxWriteBatchSize\": 100000, \"localTime\": {\"$date\": \"2025-03-13T10:32:06.040Z\"}, \"logicalSessionTimeoutMinutes\": 30, \"connectionId\": 13102, \"maxWireVersion\": 25, \"ok\": 1.0}", "message": "Server heartbeat succeeded"}
2025-03-13 15:32:06,018 - pymongo.topology - DEBUG - {"topologyId": {"$oid": "67d2b399dc3bf3a83804d41f"}, "driverConnectionId": 1, "serverConnectionId": 13102, "serverHost": "3.144.134.141", "serverPort": 27017, "awaited": true, "message": "Server heartbeat started"}
2025-03-13 15:32:16,026 - pymongo.topology - DEBUG - {"topologyId": {"$oid": "67d2b399dc3bf3a83804d41f"}, "driverConnectionId": 1, "serverConnectionId": 13102, "serverHost": "3.144.134.141", "serverPort": 27017, "awaited": true, "durationMS": 10014.999999999418, "reply": "{\"isWritablePrimary\": true, \"topologyVersion\": {\"processId\": {\"$oid\": \"67b7e5814f77c1a87c56d054\"}}, \"maxBsonObjectSize\": 16777216, \"maxMessageSizeBytes\": 48000000, \"maxWriteBatchSize\": 100000, \"localTime\": {\"$date\": \"2025-03-13T10:32:16.049Z\"}, \"logicalSessionTimeoutMinutes\": 30, \"connectionId\": 13102, \"maxWireVersion\": 25, \"ok\": 1.0}", "message": "Server heartbeat succeeded"}
2025-03-13 15:32:16,027 - pymongo.topology - DEBUG - {"topologyId": {"$oid": "67d2b399dc3bf3a83804d41f"}, "driverConnectionId": 1, "serverConnectionId": 13102, "serverHost": "3.144.134.141", "serverPort": 27017, "awaited": true, "message": "Server heartbeat started"}
2025-03-13 15:32:26,029 - pymongo.topology - DEBUG - {"topologyId": {"$oid": "67d2b399dc3bf3a83804d41f"}, "driverConnectionId": 1, "serverConnectionId": 13102, "serverHost": "3.144.134.141", "serverPort": 27017, "awaited": true, "durationMS": 10000.0, "reply": "{\"isWritablePrimary\": true, \"topologyVersion\": {\"processId\": {\"$oid\": \"67b7e5814f77c1a87c56d054\"}}, \"maxBsonObjectSize\": 16777216, \"maxMessageSizeBytes\": 48000000, \"maxWriteBatchSize\": 100000, \"localTime\": {\"$date\": \"2025-03-13T10:32:26.051Z\"}, \"logicalSessionTimeoutMinutes\": 30, \"connectionId\": 13102, \"maxWireVersion\": 25, \"ok\": 1.0}", "message": "Server heartbeat succeeded"}
2025-03-13 15:32:26,029 - pymongo.topology - DEBUG - {"topologyId": {"$oid": "67d2b399dc3bf3a83804d41f"}, "driverConnectionId": 1, "serverConnectionId": 13102, "serverHost": "3.144.134.141", "serverPort": 27017, "awaited": true, "message": "Server heartbeat started"}
2025-03-13 15:32:36,037 - pymongo.topology - DEBUG - {"topologyId": {"$oid": "67d2b399dc3bf3a83804d41f"}, "driverConnectionId": 1, "serverConnectionId": 13102, "serverHost": "3.144.134.141", "serverPort": 27017, "awaited": true, "durationMS": 10000.0, "reply": "{\"isWritablePrimary\": true, \"topologyVersion\": {\"processId\": {\"$oid\": \"67b7e5814f77c1a87c56d054\"}}, \"maxBsonObjectSize\": 16777216, \"maxMessageSizeBytes\": 48000000, \"maxWriteBatchSize\": 100000, \"localTime\": {\"$date\": \"2025-03-13T10:32:36.059Z\"}, \"logicalSessionTimeoutMinutes\": 30, \"connectionId\": 13102, \"maxWireVersion\": 25, \"ok\": 1.0}", "message": "Server heartbeat succeeded"}
2025-03-13 15:32:36,038 - pymongo.topology - DEBUG - {"topologyId": {"$oid": "67d2b399dc3bf3a83804d41f"}, "driverConnectionId": 1, "serverConnectionId": 13102, "serverHost": "3.144.134.141", "serverPort": 27017, "awaited": true, "message": "Server heartbeat started"}
2025-03-13 15:32:46,046 - pymongo.topology - DEBUG - {"topologyId": {"$oid": "67d2b399dc3bf3a83804d41f"}, "driverConnectionId": 1, "serverConnectionId": 13102, "serverHost": "3.144.134.141", "serverPort": 27017, "awaited": true, "durationMS": 10000.0, "reply": "{\"isWritablePrimary\": true, \"topologyVersion\": {\"processId\": {\"$oid\": \"67b7e5814f77c1a87c56d054\"}}, \"maxBsonObjectSize\": 16777216, \"maxMessageSizeBytes\": 48000000, \"maxWriteBatchSize\": 100000, \"localTime\": {\"$date\": \"2025-03-13T10:32:46.069Z\"}, \"logicalSessionTimeoutMinutes\": 30, \"connectionId\": 13102, \"maxWireVersion\": 25, \"ok\": 1.0}", "message": "Server heartbeat succeeded"}
2025-03-13 15:32:46,047 - pymongo.topology - DEBUG - {"topologyId": {"$oid": "67d2b399dc3bf3a83804d41f"}, "driverConnectionId": 1, "serverConnectionId": 13102, "serverHost": "3.144.134.141", "serverPort": 27017, "awaited": true, "message": "Server heartbeat started"}
2025-03-13 15:32:56,057 - pymongo.topology - DEBUG - {"topologyId": {"$oid": "67d2b399dc3bf3a83804d41f"}, "driverConnectionId": 1, "serverConnectionId": 13102, "serverHost": "3.144.134.141", "serverPort": 27017, "awaited": true, "durationMS": 10014.999999999418, "reply": "{\"isWritablePrimary\": true, \"topologyVersion\": {\"processId\": {\"$oid\": \"67b7e5814f77c1a87c56d054\"}}, \"maxBsonObjectSize\": 16777216, \"maxMessageSizeBytes\": 48000000, \"maxWriteBatchSize\": 100000, \"localTime\": {\"$date\": \"2025-03-13T10:32:56.079Z\"}, \"logicalSessionTimeoutMinutes\": 30, \"connectionId\": 13102, \"maxWireVersion\": 25, \"ok\": 1.0}", "message": "Server heartbeat succeeded"}
2025-03-13 15:32:56,057 - pymongo.topology - DEBUG - {"topologyId": {"$oid": "67d2b399dc3bf3a83804d41f"}, "driverConnectionId": 1, "serverConnectionId": 13102, "serverHost": "3.144.134.141", "serverPort": 27017, "awaited": true, "message": "Server heartbeat started"}
2025-03-13 15:33:06,057 - pymongo.topology - DEBUG - {"topologyId": {"$oid": "67d2b399dc3bf3a83804d41f"}, "driverConnectionId": 1, "serverConnectionId": 13102, "serverHost": "3.144.134.141", "serverPort": 27017, "awaited": true, "durationMS": 10000.0, "reply": "{\"isWritablePrimary\": true, \"topologyVersion\": {\"processId\": {\"$oid\": \"67b7e5814f77c1a87c56d054\"}}, \"maxBsonObjectSize\": 16777216, \"maxMessageSizeBytes\": 48000000, \"maxWriteBatchSize\": 100000, \"localTime\": {\"$date\": \"2025-03-13T10:33:06.080Z\"}, \"logicalSessionTimeoutMinutes\": 30, \"connectionId\": 13102, \"maxWireVersion\": 25, \"ok\": 1.0}", "message": "Server heartbeat succeeded"}
2025-03-13 15:33:06,058 - pymongo.topology - DEBUG - {"topologyId": {"$oid": "67d2b399dc3bf3a83804d41f"}, "driverConnectionId": 1, "serverConnectionId": 13102, "serverHost": "3.144.134.141", "serverPort": 27017, "awaited": true, "message": "Server heartbeat started"}
2025-03-13 15:35:09,267 - numexpr.utils - INFO - Note: NumExpr detected 12 cores but "NUMEXPR_MAX_THREADS" not set, so enforcing safe limit of 8.
2025-03-13 15:35:09,267 - numexpr.utils - INFO - NumExpr defaulting to 8 threads.
2025-03-13 15:35:10,628 - matplotlib - DEBUG - matplotlib data path: C:\Users\msameerakram\AppData\Local\anaconda3\Lib\site-packages\matplotlib\mpl-data
2025-03-13 15:35:10,633 - matplotlib - DEBUG - CONFIGDIR=C:\Users\msameerakram\.matplotlib
2025-03-13 15:35:10,635 - matplotlib - DEBUG - interactive is False
2025-03-13 15:35:10,636 - matplotlib - DEBUG - platform is win32
2025-03-13 15:35:10,701 - matplotlib - DEBUG - CACHEDIR=C:\Users\msameerakram\.matplotlib
2025-03-13 15:35:10,705 - matplotlib.font_manager - DEBUG - Using fontManager instance from C:\Users\msameerakram\.matplotlib\fontlist-v390.json
2025-03-13 15:35:13,298 - numexpr.utils - INFO - Note: NumExpr detected 12 cores but "NUMEXPR_MAX_THREADS" not set, so enforcing safe limit of 8.
2025-03-13 15:35:13,298 - numexpr.utils - INFO - NumExpr defaulting to 8 threads.
2025-03-13 15:35:14,605 - matplotlib - DEBUG - matplotlib data path: C:\Users\msameerakram\AppData\Local\anaconda3\Lib\site-packages\matplotlib\mpl-data
2025-03-13 15:35:14,615 - matplotlib - DEBUG - CONFIGDIR=C:\Users\msameerakram\.matplotlib
2025-03-13 15:35:14,618 - matplotlib - DEBUG - interactive is False
2025-03-13 15:35:14,618 - matplotlib - DEBUG - platform is win32
2025-03-13 15:35:14,680 - matplotlib - DEBUG - CACHEDIR=C:\Users\msameerakram\.matplotlib
2025-03-13 15:35:14,683 - matplotlib.font_manager - DEBUG - Using fontManager instance from C:\Users\msameerakram\.matplotlib\fontlist-v390.json
2025-03-13 15:35:16,135 - asyncio - DEBUG - Using selector: SelectSelector
2025-03-13 15:35:16,173 - pymongo.topology - DEBUG - {"topologyId": {"$oid": "67d2b4e48c8d3dc34c8c4338"}, "message": "Starting topology monitoring"}
2025-03-13 15:35:16,174 - pymongo.topology - DEBUG - {"topologyId": {"$oid": "67d2b4e48c8d3dc34c8c4338"}, "previousDescription": "<TopologyDescription id: 67d2b4e48c8d3dc34c8c4338, topology_type: Unknown, servers: []>", "newDescription": "<TopologyDescription id: 67d2b4e48c8d3dc34c8c4338, topology_type: Unknown, servers: [<ServerDescription ('3.144.134.141', 27017) server_type: Unknown, rtt: None>]>", "message": "Topology description changed"}
2025-03-13 15:35:16,174 - pymongo.topology - DEBUG - {"topologyId": {"$oid": "67d2b4e48c8d3dc34c8c4338"}, "serverHost": "3.144.134.141", "serverPort": 27017, "message": "Starting server monitoring"}
2025-03-13 15:35:16,175 - pymongo.connection - DEBUG - {"clientId": {"$oid": "67d2b4e48c8d3dc34c8c4338"}, "message": "Connection pool created", "serverHost": "3.144.134.141", "serverPort": 27017}
2025-03-13 15:35:16,176 - pymongo.serverSelection - DEBUG - {"message": "Server selection started", "selector": "Primary()", "operation": "ping", "topologyDescription": "<TopologyDescription id: 67d2b4e48c8d3dc34c8c4338, topology_type: Unknown, servers: [<ServerDescription ('3.144.134.141', 27017) server_type: Unknown, rtt: None>]>", "clientId": {"$oid": "67d2b4e48c8d3dc34c8c4338"}}
2025-03-13 15:35:16,176 - pymongo.serverSelection - DEBUG - {"message": "Waiting for suitable server to become available", "selector": "Primary()", "operation": "ping", "topologyDescription": "<TopologyDescription id: 67d2b4e48c8d3dc34c8c4338, topology_type: Unknown, servers: [<ServerDescription ('3.144.134.141', 27017) server_type: Unknown, rtt: None>]>", "clientId": {"$oid": "67d2b4e48c8d3dc34c8c4338"}, "remainingTimeMS": 30}
2025-03-13 15:35:16,434 - pymongo.topology - DEBUG - {"topologyId": {"$oid": "67d2b4e48c8d3dc34c8c4338"}, "driverConnectionId": 1, "serverHost": "3.144.134.141", "serverPort": 27017, "awaited": false, "message": "Server heartbeat started"}
2025-03-13 15:35:16,680 - pymongo.topology - DEBUG - {"topologyId": {"$oid": "67d2b4e48c8d3dc34c8c4338"}, "driverConnectionId": 1, "serverConnectionId": 13124, "serverHost": "3.144.134.141", "serverPort": 27017, "awaited": false, "durationMS": 250.0, "reply": "{\"helloOk\": true, \"ismaster\": true, \"topologyVersion\": {\"processId\": {\"$oid\": \"67b7e5814f77c1a87c56d054\"}}, \"maxBsonObjectSize\": 16777216, \"maxMessageSizeBytes\": 48000000, \"maxWriteBatchSize\": 100000, \"localTime\": {\"$date\": \"2025-03-13T10:35:16.706Z\"}, \"logicalSessionTimeoutMinutes\": 30, \"connectionId\": 13124, \"maxWireVersion\": 25, \"ok\": 1.0}", "message": "Server heartbeat succeeded"}
2025-03-13 15:35:16,680 - pymongo.connection - DEBUG - {"clientId": {"$oid": "67d2b4e48c8d3dc34c8c4338"}, "message": "Connection pool ready", "serverHost": "3.144.134.141", "serverPort": 27017}
2025-03-13 15:35:16,681 - pymongo.topology - DEBUG - {"topologyId": {"$oid": "67d2b4e48c8d3dc34c8c4338"}, "previousDescription": "<TopologyDescription id: 67d2b4e48c8d3dc34c8c4338, topology_type: Unknown, servers: [<ServerDescription ('3.144.134.141', 27017) server_type: Unknown, rtt: None>]>", "newDescription": "<TopologyDescription id: 67d2b4e48c8d3dc34c8c4338, topology_type: Single, servers: [<ServerDescription ('3.144.134.141', 27017) server_type: Standalone, rtt: 0.25>]>", "message": "Topology description changed"}
2025-03-13 15:35:16,681 - pymongo.serverSelection - DEBUG - {"message": "Server selection succeeded", "selector": "Primary()", "operation": "ping", "topologyDescription": "<TopologyDescription id: 67d2b4e48c8d3dc34c8c4338, topology_type: Single, servers: [<ServerDescription ('3.144.134.141', 27017) server_type: Standalone, rtt: 0.25>]>", "clientId": {"$oid": "67d2b4e48c8d3dc34c8c4338"}, "serverHost": "3.144.134.141", "serverPort": 27017}
2025-03-13 15:35:16,683 - pymongo.connection - DEBUG - {"clientId": {"$oid": "67d2b4e48c8d3dc34c8c4338"}, "message": "Connection checkout started", "serverHost": "3.144.134.141", "serverPort": 27017}
2025-03-13 15:35:16,683 - pymongo.topology - DEBUG - {"topologyId": {"$oid": "67d2b4e48c8d3dc34c8c4338"}, "driverConnectionId": 1, "serverConnectionId": 13124, "serverHost": "3.144.134.141", "serverPort": 27017, "awaited": true, "message": "Server heartbeat started"}
2025-03-13 15:35:16,683 - pymongo.connection - DEBUG - {"clientId": {"$oid": "67d2b4e48c8d3dc34c8c4338"}, "message": "Connection created", "serverHost": "3.144.134.141", "serverPort": 27017, "driverConnectionId": 1}
2025-03-13 15:35:17,427 - pymongo.connection - DEBUG - {"clientId": {"$oid": "67d2b4e48c8d3dc34c8c4338"}, "message": "Connection ready", "serverHost": "3.144.134.141", "serverPort": 27017, "driverConnectionId": 1, "durationMS": 0.5}
2025-03-13 15:35:17,427 - pymongo.connection - DEBUG - {"clientId": {"$oid": "67d2b4e48c8d3dc34c8c4338"}, "message": "Connection checked out", "serverHost": "3.144.134.141", "serverPort": 27017, "driverConnectionId": 1, "durationMS": 0.7350000000005821}
2025-03-13 15:35:17,428 - pymongo.command - DEBUG - {"clientId": {"$oid": "67d2b4e48c8d3dc34c8c4338"}, "message": "Command started", "command": "{\"ping\": 1, \"lsid\": {\"id\": {\"$binary\": {\"base64\": \"x+cXB2SwRDKu4pPNabOuXQ==\", \"subType\": \"04\"}}}, \"$db\": \"opal_server\"}", "commandName": "ping", "databaseName": "opal_server", "requestId": 6334, "operationId": 6334, "driverConnectionId": 1, "serverConnectionId": 13125, "serverHost": "3.144.134.141", "serverPort": 27017}
2025-03-13 15:35:17,671 - pymongo.command - DEBUG - {"clientId": {"$oid": "67d2b4e48c8d3dc34c8c4338"}, "message": "Command succeeded", "durationMS": 242.886, "reply": "{\"ok\": 1.0}", "commandName": "ping", "databaseName": "opal_server", "requestId": 6334, "operationId": 6334, "driverConnectionId": 1, "serverConnectionId": 13125, "serverHost": "3.144.134.141", "serverPort": 27017}
2025-03-13 15:35:17,672 - pymongo.connection - DEBUG - {"clientId": {"$oid": "67d2b4e48c8d3dc34c8c4338"}, "message": "Connection checked in", "serverHost": "3.144.134.141", "serverPort": 27017, "driverConnectionId": 1}
2025-03-13 15:35:17,774 - app.services.predictive_analytics - DEBUG - Analyzing time window from 2025-03-13 07:35:17.774776 to 2025-03-13 15:35:17.774776
2025-03-13 15:35:17,774 - app.services.predictive_analytics - DEBUG - Time window: 8.0 hours
2025-03-13 15:35:17,775 - app.db.repositories.data_repository - DEBUG - Connected to database: opal_server
2025-03-13 15:35:17,775 - app.db.repositories.data_repository - DEBUG - Violations pipeline: [{'$match': {'$or': [{'timestamp': {'$gte': datetime.datetime(2025, 3, 13, 7, 35, 17, 774776), '$lte': datetime.datetime(2025, 3, 13, 15, 35, 17, 774776)}}, {'event_time': {'$gte': datetime.datetime(2025, 3, 13, 7, 35, 17, 774776), '$lte': datetime.datetime(2025, 3, 13, 15, 35, 17, 774776)}}, {'created_at': {'$gte': datetime.datetime(2025, 3, 13, 7, 35, 17, 774776), '$lte': datetime.datetime(2025, 3, 13, 15, 35, 17, 774776)}}, {'driver_uuid': 'e889d91f-af57-48a5-a384-fdac719f7426'}, {'driver.uuid': 'e889d91f-af57-48a5-a384-fdac719f7426'}, {'vehicle.driver_uuid': 'e889d91f-af57-48a5-a384-fdac719f7426'}]}}, {'$lookup': {'from': 'drivers', 'localField': 'driver_uuid', 'foreignField': 'driver_id', 'as': 'driver_info'}}, {'$addFields': {'driver_name': {'$cond': [{'$gt': [{'$size': '$driver_info'}, 0]}, {'$arrayElemAt': ['$driver_info.name', 0]}, {'$cond': [{'$eq': ['$driver_uuid', 'unknown']}, 'Unassigned Driver', {'$concat': ['Driver ', {'$toString': '$driver_uuid'}]}]}]}}}]
2025-03-13 15:35:17,775 - pymongo.serverSelection - DEBUG - {"message": "Server selection started", "selector": "Primary()", "operation": "listCollections", "topologyDescription": "<TopologyDescription id: 67d2b4e48c8d3dc34c8c4338, topology_type: Single, servers: [<ServerDescription ('3.144.134.141', 27017) server_type: Standalone, rtt: 0.25>]>", "clientId": {"$oid": "67d2b4e48c8d3dc34c8c4338"}}
2025-03-13 15:35:17,775 - pymongo.serverSelection - DEBUG - {"message": "Server selection succeeded", "selector": "Primary()", "operation": "listCollections", "topologyDescription": "<TopologyDescription id: 67d2b4e48c8d3dc34c8c4338, topology_type: Single, servers: [<ServerDescription ('3.144.134.141', 27017) server_type: Standalone, rtt: 0.25>]>", "clientId": {"$oid": "67d2b4e48c8d3dc34c8c4338"}, "serverHost": "3.144.134.141", "serverPort": 27017}
2025-03-13 15:35:17,777 - pymongo.connection - DEBUG - {"clientId": {"$oid": "67d2b4e48c8d3dc34c8c4338"}, "message": "Connection checkout started", "serverHost": "3.144.134.141", "serverPort": 27017}
2025-03-13 15:35:17,777 - pymongo.connection - DEBUG - {"clientId": {"$oid": "67d2b4e48c8d3dc34c8c4338"}, "message": "Connection checked out", "serverHost": "3.144.134.141", "serverPort": 27017, "driverConnectionId": 1, "durationMS": 0.0}
2025-03-13 15:35:17,777 - pymongo.command - DEBUG - {"clientId": {"$oid": "67d2b4e48c8d3dc34c8c4338"}, "message": "Command started", "command": "{\"listCollections\": 1, \"nameOnly\": true, \"lsid\": {\"id\": {\"$binary\": {\"base64\": \"x+cXB2SwRDKu4pPNabOuXQ==\", \"subType\": \"04\"}}}, \"$db\": \"opal_server\"}", "commandName": "listCollections", "databaseName": "opal_server", "requestId": 26500, "operationId": 26500, "driverConnectionId": 1, "serverConnectionId": 13125, "serverHost": "3.144.134.141", "serverPort": 27017}
2025-03-13 15:35:18,129 - pymongo.command - DEBUG - {"clientId": {"$oid": "67d2b4e48c8d3dc34c8c4338"}, "message": "Command succeeded", "durationMS": 352.875, "reply": "{\"cursor\": {\"ns\": \"opal_server.$cmd.listCollections\", \"firstBatch\": [{\"name\": \"rags\", \"type\": \"collection\"}, {\"name\": \"trips\", \"type\": \"collection\"}, {\"name\": \"vehicles\", \"type\": \"collection\"}, {\"name\": \"permissions\", \"type\": \"collection\"}, {\"name\": \"notifications\", \"type\": \"collection\"}, {\"name\": \"crash_events\", \"type\": \"collection\"}, {\"name\": \"violations-x\", \"type\": \"collection\"}, {\"name\": \"drivers\", \"type\": \"collection\"}, {\"name\": \"geofences\", \"type\": \"collection\"}, {\"name\": \"tickets\", \"type\": \"collection\"}, {\"name\": \"vehicleevents\", \"type\": \"collection\"}, {\"name\": \"vendors\", \"type\": \"collection\"}, {\"name\": \"roles\", \"type\": \"collection\"}, {\"name\": \"clients\", \"type\": \"collection\"}, {\"name\": \"vendordevices\", \"type\": \"collection\"}, {\"name\": \"settings\", \"type\": \"collection\"}, {\"name\": \"media\", \"type\": \"collection\"}, {\"name\": \"violation_rules\", \"type\": \"collection\"}, {\"name\": \"violations\", \"type\": \"collection\"}, {\"name\": \"users\", \"type\": \"collection\"}, {\"name\": \"companies\", \"type\": \"coll...", "commandName": "listCollections", "databaseName": "opal_server", "requestId": 26500, "operationId": 26500, "driverConnectionId": 1, "serverConnectionId": 13125, "serverHost": "3.144.134.141", "serverPort": 27017}
2025-03-13 15:35:18,130 - pymongo.connection - DEBUG - {"clientId": {"$oid": "67d2b4e48c8d3dc34c8c4338"}, "message": "Connection checked in", "serverHost": "3.144.134.141", "serverPort": 27017, "driverConnectionId": 1}
2025-03-13 15:35:18,131 - app.db.repositories.data_repository - DEBUG - Available collections: ['rags', 'trips', 'vehicles', 'permissions', 'notifications', 'crash_events', 'violations-x', 'drivers', 'geofences', 'tickets', 'vehicleevents', 'vendors', 'roles', 'clients', 'vendordevices', 'settings', 'media', 'violation_rules', 'violations', 'users', 'companies']
2025-03-13 15:35:18,131 - app.db.repositories.data_repository - DEBUG - Checking collection: violations
2025-03-13 15:35:18,132 - pymongo.serverSelection - DEBUG - {"message": "Server selection started", "selector": "Primary()", "operation": "count", "topologyDescription": "<TopologyDescription id: 67d2b4e48c8d3dc34c8c4338, topology_type: Single, servers: [<ServerDescription ('3.144.134.141', 27017) server_type: Standalone, rtt: 0.25>]>", "clientId": {"$oid": "67d2b4e48c8d3dc34c8c4338"}}
2025-03-13 15:35:18,132 - pymongo.serverSelection - DEBUG - {"message": "Server selection succeeded", "selector": "Primary()", "operation": "count", "topologyDescription": "<TopologyDescription id: 67d2b4e48c8d3dc34c8c4338, topology_type: Single, servers: [<ServerDescription ('3.144.134.141', 27017) server_type: Standalone, rtt: 0.25>]>", "clientId": {"$oid": "67d2b4e48c8d3dc34c8c4338"}, "serverHost": "3.144.134.141", "serverPort": 27017}
2025-03-13 15:35:18,132 - pymongo.connection - DEBUG - {"clientId": {"$oid": "67d2b4e48c8d3dc34c8c4338"}, "message": "Connection checkout started", "serverHost": "3.144.134.141", "serverPort": 27017}
2025-03-13 15:35:18,132 - pymongo.connection - DEBUG - {"clientId": {"$oid": "67d2b4e48c8d3dc34c8c4338"}, "message": "Connection checked out", "serverHost": "3.144.134.141", "serverPort": 27017, "driverConnectionId": 1, "durationMS": 0.0}
2025-03-13 15:35:18,132 - pymongo.command - DEBUG - {"clientId": {"$oid": "67d2b4e48c8d3dc34c8c4338"}, "message": "Command started", "command": "{\"aggregate\": \"violations\", \"pipeline\": [{\"$match\": {\"$or\": [{\"timestamp\": {\"$gte\": {\"$date\": \"2025-03-13T07:35:17.774Z\"}, \"$lte\": {\"$date\": \"2025-03-13T15:35:17.774Z\"}}}, {\"event_time\": {\"$gte\": {\"$date\": \"2025-03-13T07:35:17.774Z\"}, \"$lte\": {\"$date\": \"2025-03-13T15:35:17.774Z\"}}}, {\"created_at\": {\"$gte\": {\"$date\": \"2025-03-13T07:35:17.774Z\"}, \"$lte\": {\"$date\": \"2025-03-13T15:35:17.774Z\"}}}, {\"driver_uuid\": \"e889d91f-af57-48a5-a384-fdac719f7426\"}, {\"driver.uuid\": \"e889d91f-af57-48a5-a384-fdac719f7426\"}, {\"vehicle.driver_uuid\": \"e889d91f-af57-48a5-a384-fdac719f7426\"}]}}, {\"$group\": {\"_id\": 1, \"n\": {\"$sum\": 1}}}], \"lsid\": {\"id\": {\"$binary\": {\"base64\": \"x+cXB2SwRDKu4pPNabOuXQ==\", \"subType\": \"04\"}}}, \"$db\": \"opal_server\"}", "commandName": "aggregate", "databaseName": "opal_server", "requestId": 19169, "operationId": 19169, "driverConnectionId": 1, "serverConnectionId": 13125, "serverHost": "3.144.134.141", "serverPort": 27017}
2025-03-13 15:35:18,392 - pymongo.command - DEBUG - {"clientId": {"$oid": "67d2b4e48c8d3dc34c8c4338"}, "message": "Command succeeded", "durationMS": 259.943, "reply": "{\"cursor\": {\"firstBatch\": [{\"_id\": 1, \"n\": 358}], \"ns\": \"opal_server.violations\"}, \"ok\": 1.0}", "commandName": "aggregate", "databaseName": "opal_server", "requestId": 19169, "operationId": 19169, "driverConnectionId": 1, "serverConnectionId": 13125, "serverHost": "3.144.134.141", "serverPort": 27017}
2025-03-13 15:35:18,392 - pymongo.connection - DEBUG - {"clientId": {"$oid": "67d2b4e48c8d3dc34c8c4338"}, "message": "Connection checked in", "serverHost": "3.144.134.141", "serverPort": 27017, "driverConnectionId": 1}
2025-03-13 15:35:18,393 - app.db.repositories.data_repository - INFO - Found 358 documents in violations
2025-03-13 15:35:18,394 - pymongo.serverSelection - DEBUG - {"message": "Server selection started", "selector": "Primary()", "operation": "aggregate", "topologyDescription": "<TopologyDescription id: 67d2b4e48c8d3dc34c8c4338, topology_type: Single, servers: [<ServerDescription ('3.144.134.141', 27017) server_type: Standalone, rtt: 0.25>]>", "clientId": {"$oid": "67d2b4e48c8d3dc34c8c4338"}}
2025-03-13 15:35:18,394 - pymongo.serverSelection - DEBUG - {"message": "Server selection succeeded", "selector": "Primary()", "operation": "aggregate", "topologyDescription": "<TopologyDescription id: 67d2b4e48c8d3dc34c8c4338, topology_type: Single, servers: [<ServerDescription ('3.144.134.141', 27017) server_type: Standalone, rtt: 0.25>]>", "clientId": {"$oid": "67d2b4e48c8d3dc34c8c4338"}, "serverHost": "3.144.134.141", "serverPort": 27017}
2025-03-13 15:35:18,394 - pymongo.connection - DEBUG - {"clientId": {"$oid": "67d2b4e48c8d3dc34c8c4338"}, "message": "Connection checkout started", "serverHost": "3.144.134.141", "serverPort": 27017}
2025-03-13 15:35:18,394 - pymongo.connection - DEBUG - {"clientId": {"$oid": "67d2b4e48c8d3dc34c8c4338"}, "message": "Connection checked out", "serverHost": "3.144.134.141", "serverPort": 27017, "driverConnectionId": 1, "durationMS": 0.0}
2025-03-13 15:35:18,394 - pymongo.command - DEBUG - {"clientId": {"$oid": "67d2b4e48c8d3dc34c8c4338"}, "message": "Command started", "command": "{\"aggregate\": \"violations\", \"pipeline\": [{\"$match\": {\"$or\": [{\"timestamp\": {\"$gte\": {\"$date\": \"2025-03-13T07:35:17.774Z\"}, \"$lte\": {\"$date\": \"2025-03-13T15:35:17.774Z\"}}}, {\"event_time\": {\"$gte\": {\"$date\": \"2025-03-13T07:35:17.774Z\"}, \"$lte\": {\"$date\": \"2025-03-13T15:35:17.774Z\"}}}, {\"created_at\": {\"$gte\": {\"$date\": \"2025-03-13T07:35:17.774Z\"}, \"$lte\": {\"$date\": \"2025-03-13T15:35:17.774Z\"}}}, {\"driver_uuid\": \"e889d91f-af57-48a5-a384-fdac719f7426\"}, {\"driver.uuid\": \"e889d91f-af57-48a5-a384-fdac719f7426\"}, {\"vehicle.driver_uuid\": \"e889d91f-af57-48a5-a384-fdac719f7426\"}]}}, {\"$lookup\": {\"from\": \"drivers\", \"localField\": \"driver_uuid\", \"foreignField\": \"driver_id\", \"as\": \"driver_info\"}}, {\"$addFields\": {\"driver_name\": {\"$cond\": [{\"$gt\": [{\"$size\": \"$driver_info\"}]}, {\"$arrayElemAt\": [\"$driver_info.name\"]}, {\"$cond\": [{\"$eq\": [\"$driver_uuid\", \"unknown\"]}, \"Unassigned Driver\", {\"$concat\": [\"Driver \", {\"$toString\": \"$driver_uuid\"}]}]}]}}}], \"lsid\": {\"id\": {\"$binary\": {\"base64\": \"x+cXB2SwRDKu4pP...", "commandName": "aggregate", "databaseName": "opal_server", "requestId": 15724, "operationId": 15724, "driverConnectionId": 1, "serverConnectionId": 13125, "serverHost": "3.144.134.141", "serverPort": 27017}
2025-03-13 15:35:19,432 - pymongo.command - DEBUG - {"clientId": {"$oid": "67d2b4e48c8d3dc34c8c4338"}, "message": "Command succeeded", "durationMS": 1036.237, "reply": "{\"cursor\": {\"firstBatch\": [{\"_id\": {\"$oid\": \"67c57d756b4f5de2bad8b263\"}, \"event_id\": \"VIO-dd5425a6-e99c-44f2-a994-e50cdd60a20a-SPEED_MEDIUM-2025-03-03T09:59:00+00:00\", \"event_time\": {\"$date\": \"2025-03-03T09:59:17.575Z\"}, \"vendor\": {\"$oid\": \"6703ad7f70ba41e9473dd8e7\"}, \"vehicle_uuid\": \"dd5425a6-e99c-44f2-a994-e50cdd60a20a\", \"vehicle_license\": \"4683MA\", \"driver_uuid\": \"e889d91f-af57-48a5-a384-fdac719f7426\", \"driver_name\": \"Driver e889d91f-af57-48a5-a384-fdac719f7426\", \"violation_type\": \"SPEED_MEDIUM\", \"severity\": \"MEDIUM\", \"description\": \"Speed limit exceeded: 73.0 km/h\", \"threshold\": 60.0, \"actual_value\": 73.0, \"location\": {\"latitude\": 22.993889, \"longitude\": 57.791194, \"altitude\": 613.0}, \"rule\": {\"_id\": {\"$oid\": \"67c4c815ab2d5578275f1823\"}, \"name\": \"Speed Limit - Medium\", \"description\": \"Vehicle exceeding speed limit (60 km/h)\", \"rule_type\": \"SPEED_MEDIUM\", \"threshold\": 60.0, \"enabled\": true, \"severity\": \"MEDIUM\", \"priority\": 2, \"cooldown_period\": 60, \"parameters\": {\"unit\": \"km/h\", \"m...", "commandName": "aggregate", "databaseName": "opal_server", "requestId": 15724, "operationId": 15724, "driverConnectionId": 1, "serverConnectionId": 13125, "serverHost": "3.144.134.141", "serverPort": 27017}
2025-03-13 15:35:19,432 - pymongo.connection - DEBUG - {"clientId": {"$oid": "67d2b4e48c8d3dc34c8c4338"}, "message": "Connection checked in", "serverHost": "3.144.134.141", "serverPort": 27017, "driverConnectionId": 1}
2025-03-13 15:35:19,433 - pymongo.serverSelection - DEBUG - {"message": "Server selection started", "selector": "<function any_server_selector at 0x000001837EC28680>", "operation": "getMore", "topologyDescription": "<TopologyDescription id: 67d2b4e48c8d3dc34c8c4338, topology_type: Single, servers: [<ServerDescription ('3.144.134.141', 27017) server_type: Standalone, rtt: 0.25>]>", "clientId": {"$oid": "67d2b4e48c8d3dc34c8c4338"}}
2025-03-13 15:35:19,434 - pymongo.serverSelection - DEBUG - {"message": "Server selection succeeded", "selector": "<function any_server_selector at 0x000001837EC28680>", "operation": "getMore", "topologyDescription": "<TopologyDescription id: 67d2b4e48c8d3dc34c8c4338, topology_type: Single, servers: [<ServerDescription ('3.144.134.141', 27017) server_type: Standalone, rtt: 0.25>]>", "clientId": {"$oid": "67d2b4e48c8d3dc34c8c4338"}, "serverHost": "3.144.134.141", "serverPort": 27017}
2025-03-13 15:35:19,434 - pymongo.connection - DEBUG - {"clientId": {"$oid": "67d2b4e48c8d3dc34c8c4338"}, "message": "Connection checkout started", "serverHost": "3.144.134.141", "serverPort": 27017}
2025-03-13 15:35:19,435 - pymongo.connection - DEBUG - {"clientId": {"$oid": "67d2b4e48c8d3dc34c8c4338"}, "message": "Connection checked out", "serverHost": "3.144.134.141", "serverPort": 27017, "driverConnectionId": 1, "durationMS": 0.0}
2025-03-13 15:35:19,435 - pymongo.command - DEBUG - {"clientId": {"$oid": "67d2b4e48c8d3dc34c8c4338"}, "message": "Command started", "command": "{\"getMore\": 2531878872044353490, \"collection\": \"violations\", \"lsid\": {\"id\": {\"$binary\": {\"base64\": \"x+cXB2SwRDKu4pPNabOuXQ==\", \"subType\": \"04\"}}}, \"$db\": \"opal_server\"}", "commandName": "getMore", "databaseName": "opal_server", "requestId": 11478, "operationId": 11478, "driverConnectionId": 1, "serverConnectionId": 13125, "serverHost": "3.144.134.141", "serverPort": 27017}
2025-03-13 15:35:20,246 - pymongo.command - DEBUG - {"clientId": {"$oid": "67d2b4e48c8d3dc34c8c4338"}, "message": "Command succeeded", "durationMS": 811.341, "reply": "{\"cursor\": {\"nextBatch\": [{\"_id\": {\"$oid\": \"67c6671f37cbd66466c5f494\"}, \"event_id\": \"VIO-dd5425a6-e99c-44f2-a994-e50cdd60a20a-SPEED_MEDIUM-2025-03-04T02:36:00+00:00\", \"event_time\": {\"$date\": \"2025-03-04T02:36:15.547Z\"}, \"vendor\": {\"$oid\": \"6703ad7f70ba41e9473dd8e7\"}, \"vehicle_uuid\": \"dd5425a6-e99c-44f2-a994-e50cdd60a20a\", \"vehicle_license\": \"4683MA\", \"driver_uuid\": \"e889d91f-af57-48a5-a384-fdac719f7426\", \"driver_name\": \"Driver e889d91f-af57-48a5-a384-fdac719f7426\", \"violation_type\": \"SPEED_MEDIUM\", \"severity\": \"MEDIUM\", \"description\": \"Speed limit exceeded: 63.0 km/h\", \"threshold\": 60.0, \"actual_value\": 63.0, \"location\": {\"latitude\": 23.00573, \"longitude\": 56.157982, \"altitude\": 233.0}, \"rule\": {\"_id\": {\"$oid\": \"67c4c815ab2d5578275f1823\"}, \"name\": \"Speed Limit - Medium\", \"description\": \"Vehicle exceeding speed limit (60 km/h)\", \"rule_type\": \"SPEED_MEDIUM\", \"threshold\": 60.0, \"enabled\": true, \"severity\": \"MEDIUM\", \"priority\": 2, \"cooldown_period\": 60, \"parameters\": {\"unit\": \"km/h\", \"min...", "commandName": "getMore", "databaseName": "opal_server", "requestId": 11478, "operationId": 11478, "driverConnectionId": 1, "serverConnectionId": 13125, "serverHost": "3.144.134.141", "serverPort": 27017}
2025-03-13 15:35:20,247 - pymongo.connection - DEBUG - {"clientId": {"$oid": "67d2b4e48c8d3dc34c8c4338"}, "message": "Connection checked in", "serverHost": "3.144.134.141", "serverPort": 27017, "driverConnectionId": 1}
2025-03-13 15:35:20,247 - app.db.repositories.data_repository - DEBUG - Fetching vehicle events from database: opal_server
2025-03-13 15:35:20,248 - app.db.repositories.data_repository - DEBUG - Vehicle events query: {'$or': [{'vehicle.uuid': 'e889d91f-af57-48a5-a384-fdac719f7426'}, {'vehicle_uuid': 'e889d91f-af57-48a5-a384-fdac719f7426'}, {'driver_uuid': 'e889d91f-af57-48a5-a384-fdac719f7426'}]}
2025-03-13 15:35:20,248 - app.db.repositories.data_repository - DEBUG - Time range: {'$gte': datetime.datetime(2025, 3, 13, 7, 35, 17, 774776), '$lte': datetime.datetime(2025, 3, 13, 15, 35, 17, 774776)}
2025-03-13 15:35:20,248 - pymongo.serverSelection - DEBUG - {"message": "Server selection started", "selector": "Primary()", "operation": "listCollections", "topologyDescription": "<TopologyDescription id: 67d2b4e48c8d3dc34c8c4338, topology_type: Single, servers: [<ServerDescription ('3.144.134.141', 27017) server_type: Standalone, rtt: 0.25>]>", "clientId": {"$oid": "67d2b4e48c8d3dc34c8c4338"}}
2025-03-13 15:35:20,248 - pymongo.serverSelection - DEBUG - {"message": "Server selection succeeded", "selector": "Primary()", "operation": "listCollections", "topologyDescription": "<TopologyDescription id: 67d2b4e48c8d3dc34c8c4338, topology_type: Single, servers: [<ServerDescription ('3.144.134.141', 27017) server_type: Standalone, rtt: 0.25>]>", "clientId": {"$oid": "67d2b4e48c8d3dc34c8c4338"}, "serverHost": "3.144.134.141", "serverPort": 27017}
2025-03-13 15:35:20,249 - pymongo.connection - DEBUG - {"clientId": {"$oid": "67d2b4e48c8d3dc34c8c4338"}, "message": "Connection checkout started", "serverHost": "3.144.134.141", "serverPort": 27017}
2025-03-13 15:35:20,249 - pymongo.connection - DEBUG - {"clientId": {"$oid": "67d2b4e48c8d3dc34c8c4338"}, "message": "Connection checked out", "serverHost": "3.144.134.141", "serverPort": 27017, "driverConnectionId": 1, "durationMS": 0.0}
2025-03-13 15:35:20,249 - pymongo.command - DEBUG - {"clientId": {"$oid": "67d2b4e48c8d3dc34c8c4338"}, "message": "Command started", "command": "{\"listCollections\": 1, \"nameOnly\": true, \"lsid\": {\"id\": {\"$binary\": {\"base64\": \"x+cXB2SwRDKu4pPNabOuXQ==\", \"subType\": \"04\"}}}, \"$db\": \"opal_server\"}", "commandName": "listCollections", "databaseName": "opal_server", "requestId": 29358, "operationId": 29358, "driverConnectionId": 1, "serverConnectionId": 13125, "serverHost": "3.144.134.141", "serverPort": 27017}
2025-03-13 15:35:20,492 - pymongo.command - DEBUG - {"clientId": {"$oid": "67d2b4e48c8d3dc34c8c4338"}, "message": "Command succeeded", "durationMS": 242.63199999999998, "reply": "{\"cursor\": {\"ns\": \"opal_server.$cmd.listCollections\", \"firstBatch\": [{\"name\": \"rags\", \"type\": \"collection\"}, {\"name\": \"trips\", \"type\": \"collection\"}, {\"name\": \"vehicles\", \"type\": \"collection\"}, {\"name\": \"permissions\", \"type\": \"collection\"}, {\"name\": \"notifications\", \"type\": \"collection\"}, {\"name\": \"crash_events\", \"type\": \"collection\"}, {\"name\": \"violations-x\", \"type\": \"collection\"}, {\"name\": \"drivers\", \"type\": \"collection\"}, {\"name\": \"geofences\", \"type\": \"collection\"}, {\"name\": \"tickets\", \"type\": \"collection\"}, {\"name\": \"vehicleevents\", \"type\": \"collection\"}, {\"name\": \"vendors\", \"type\": \"collection\"}, {\"name\": \"roles\", \"type\": \"collection\"}, {\"name\": \"clients\", \"type\": \"collection\"}, {\"name\": \"vendordevices\", \"type\": \"collection\"}, {\"name\": \"settings\", \"type\": \"collection\"}, {\"name\": \"media\", \"type\": \"collection\"}, {\"name\": \"violation_rules\", \"type\": \"collection\"}, {\"name\": \"violations\", \"type\": \"collection\"}, {\"name\": \"users\", \"type\": \"collection\"}, {\"name\": \"companies\", \"type\": \"coll...", "commandName": "listCollections", "databaseName": "opal_server", "requestId": 29358, "operationId": 29358, "driverConnectionId": 1, "serverConnectionId": 13125, "serverHost": "3.144.134.141", "serverPort": 27017}
2025-03-13 15:35:20,492 - pymongo.connection - DEBUG - {"clientId": {"$oid": "67d2b4e48c8d3dc34c8c4338"}, "message": "Connection checked in", "serverHost": "3.144.134.141", "serverPort": 27017, "driverConnectionId": 1}
2025-03-13 15:35:20,493 - app.db.repositories.data_repository - DEBUG - Available collections: ['rags', 'trips', 'vehicles', 'permissions', 'notifications', 'crash_events', 'violations-x', 'drivers', 'geofences', 'tickets', 'vehicleevents', 'vendors', 'roles', 'clients', 'vendordevices', 'settings', 'media', 'violation_rules', 'violations', 'users', 'companies']
2025-03-13 15:35:20,493 - pymongo.serverSelection - DEBUG - {"message": "Server selection started", "selector": "Primary()", "operation": "find", "topologyDescription": "<TopologyDescription id: 67d2b4e48c8d3dc34c8c4338, topology_type: Single, servers: [<ServerDescription ('3.144.134.141', 27017) server_type: Standalone, rtt: 0.25>]>", "clientId": {"$oid": "67d2b4e48c8d3dc34c8c4338"}}
2025-03-13 15:35:20,493 - pymongo.serverSelection - DEBUG - {"message": "Server selection succeeded", "selector": "Primary()", "operation": "find", "topologyDescription": "<TopologyDescription id: 67d2b4e48c8d3dc34c8c4338, topology_type: Single, servers: [<ServerDescription ('3.144.134.141', 27017) server_type: Standalone, rtt: 0.25>]>", "clientId": {"$oid": "67d2b4e48c8d3dc34c8c4338"}, "serverHost": "3.144.134.141", "serverPort": 27017}
2025-03-13 15:35:20,494 - pymongo.connection - DEBUG - {"clientId": {"$oid": "67d2b4e48c8d3dc34c8c4338"}, "message": "Connection checkout started", "serverHost": "3.144.134.141", "serverPort": 27017}
2025-03-13 15:35:20,494 - pymongo.connection - DEBUG - {"clientId": {"$oid": "67d2b4e48c8d3dc34c8c4338"}, "message": "Connection checked out", "serverHost": "3.144.134.141", "serverPort": 27017, "driverConnectionId": 1, "durationMS": 0.0}
2025-03-13 15:35:20,494 - pymongo.command - DEBUG - {"clientId": {"$oid": "67d2b4e48c8d3dc34c8c4338"}, "message": "Command started", "command": "{\"find\": \"vehicleevents\", \"limit\": 1, \"singleBatch\": true, \"lsid\": {\"id\": {\"$binary\": {\"base64\": \"x+cXB2SwRDKu4pPNabOuXQ==\", \"subType\": \"04\"}}}, \"$db\": \"opal_server\"}", "commandName": "find", "databaseName": "opal_server", "requestId": 26962, "operationId": 26962, "driverConnectionId": 1, "serverConnectionId": 13125, "serverHost": "3.144.134.141", "serverPort": 27017}
2025-03-13 15:35:20,739 - pymongo.command - DEBUG - {"clientId": {"$oid": "67d2b4e48c8d3dc34c8c4338"}, "message": "Command succeeded", "durationMS": 244.798, "reply": "{\"cursor\": {\"firstBatch\": [{\"_id\": {\"$oid\": \"67441bdeb231195485d25272\"}, \"vendor\": {\"$oid\": \"6703ad7f70ba41e9473dd8e7\"}, \"deviceTime\": {\"$date\": \"2024-11-22T12:48:47Z\"}, \"serverTime\": {\"$date\": \"2024-11-22T12:48:47.958Z\"}, \"location\": {\"latitude\": 18.542048, \"longitude\": 55.852535, \"altitude\": 240}, \"ignition\": true, \"speed\": 68, \"heading\": 84, \"event\": {\"type\": \"DISTANCE_TRAVEL\", \"name\": \"Distance Traveled\"}, \"odometer\": 85198.52713696871, \"satellites\": 26, \"diff\": {\"distanceMeter\": 226.15911957109347, \"durationMillis\": 11000, \"ignitionOn\": true, \"moving\": true}, \"vehicle\": {\"license\": \"1765HW\", \"uuid\": \"f59c5202-eda5-4348-9d66-ec14718f076b\"}, \"device\": {\"imei\": \"358925430754727\"}, \"hdop\": 25.5, \"positionAccuracy\": 37.507210845177696, \"batteryVoltage\": 4.026, \"createdAt\": {\"$date\": \"2024-11-25T06:40:30.615Z\"}, \"updatedAt\": {\"$date\": \"2024-11-25T06:40:30.615Z\"}}], \"ns\": \"opal_server.vehicleevents\"}, \"ok\": 1.0}", "commandName": "find", "databaseName": "opal_server", "requestId": 26962, "operationId": 26962, "driverConnectionId": 1, "serverConnectionId": 13125, "serverHost": "3.144.134.141", "serverPort": 27017}
2025-03-13 15:35:20,740 - pymongo.connection - DEBUG - {"clientId": {"$oid": "67d2b4e48c8d3dc34c8c4338"}, "message": "Connection checked in", "serverHost": "3.144.134.141", "serverPort": 27017, "driverConnectionId": 1}
2025-03-13 15:35:20,740 - app.db.repositories.data_repository - DEBUG - Sample document fields: ['_id', 'vendor', 'deviceTime', 'serverTime', 'location', 'ignition', 'speed', 'heading', 'event', 'odometer', 'satellites', 'wrongOrdered', 'diff', 'vehicle', 'device', 'hdop', 'positionAccuracy', 'batteryVoltage', '__v', 'createdAt', 'updatedAt']
2025-03-13 15:35:20,741 - pymongo.serverSelection - DEBUG - {"message": "Server selection started", "selector": "Primary()", "operation": "count", "topologyDescription": "<TopologyDescription id: 67d2b4e48c8d3dc34c8c4338, topology_type: Single, servers: [<ServerDescription ('3.144.134.141', 27017) server_type: Standalone, rtt: 0.25>]>", "clientId": {"$oid": "67d2b4e48c8d3dc34c8c4338"}}
2025-03-13 15:35:20,741 - pymongo.serverSelection - DEBUG - {"message": "Server selection succeeded", "selector": "Primary()", "operation": "count", "topologyDescription": "<TopologyDescription id: 67d2b4e48c8d3dc34c8c4338, topology_type: Single, servers: [<ServerDescription ('3.144.134.141', 27017) server_type: Standalone, rtt: 0.25>]>", "clientId": {"$oid": "67d2b4e48c8d3dc34c8c4338"}, "serverHost": "3.144.134.141", "serverPort": 27017}
2025-03-13 15:35:20,742 - pymongo.connection - DEBUG - {"clientId": {"$oid": "67d2b4e48c8d3dc34c8c4338"}, "message": "Connection checkout started", "serverHost": "3.144.134.141", "serverPort": 27017}
2025-03-13 15:35:20,742 - pymongo.connection - DEBUG - {"clientId": {"$oid": "67d2b4e48c8d3dc34c8c4338"}, "message": "Connection checked out", "serverHost": "3.144.134.141", "serverPort": 27017, "driverConnectionId": 1, "durationMS": 0.0}
2025-03-13 15:35:20,742 - pymongo.command - DEBUG - {"clientId": {"$oid": "67d2b4e48c8d3dc34c8c4338"}, "message": "Command started", "command": "{\"aggregate\": \"vehicleevents\", \"pipeline\": [{\"$match\": {\"$or\": [{\"vehicle.uuid\": \"e889d91f-af57-48a5-a384-fdac719f7426\"}, {\"vehicle_uuid\": \"e889d91f-af57-48a5-a384-fdac719f7426\"}, {\"driver_uuid\": \"e889d91f-af57-48a5-a384-fdac719f7426\"}]}}, {\"$group\": {\"_id\": 1, \"n\": {\"$sum\": 1}}}], \"lsid\": {\"id\": {\"$binary\": {\"base64\": \"x+cXB2SwRDKu4pPNabOuXQ==\", \"subType\": \"04\"}}}, \"$db\": \"opal_server\"}", "commandName": "aggregate", "databaseName": "opal_server", "requestId": 24464, "operationId": 24464, "driverConnectionId": 1, "serverConnectionId": 13125, "serverHost": "3.144.134.141", "serverPort": 27017}
2025-03-13 15:35:26,565 - pymongo.command - DEBUG - {"clientId": {"$oid": "67d2b4e48c8d3dc34c8c4338"}, "message": "Command succeeded", "durationMS": 5823.5830000000005, "reply": "{\"cursor\": {\"ns\": \"opal_server.vehicleevents\"}, \"ok\": 1.0}", "commandName": "aggregate", "databaseName": "opal_server", "requestId": 24464, "operationId": 24464, "driverConnectionId": 1, "serverConnectionId": 13125, "serverHost": "3.144.134.141", "serverPort": 27017}
2025-03-13 15:35:26,567 - pymongo.connection - DEBUG - {"clientId": {"$oid": "67d2b4e48c8d3dc34c8c4338"}, "message": "Connection checked in", "serverHost": "3.144.134.141", "serverPort": 27017, "driverConnectionId": 1}
2025-03-13 15:35:26,568 - app.db.repositories.data_repository - INFO - Found 0 matching vehicle events
2025-03-13 15:35:26,569 - pymongo.serverSelection - DEBUG - {"message": "Server selection started", "selector": "Primary()", "operation": "find", "topologyDescription": "<TopologyDescription id: 67d2b4e48c8d3dc34c8c4338, topology_type: Single, servers: [<ServerDescription ('3.144.134.141', 27017) server_type: Standalone, rtt: 0.25>]>", "clientId": {"$oid": "67d2b4e48c8d3dc34c8c4338"}}
2025-03-13 15:35:26,569 - pymongo.serverSelection - DEBUG - {"message": "Server selection succeeded", "selector": "Primary()", "operation": "find", "topologyDescription": "<TopologyDescription id: 67d2b4e48c8d3dc34c8c4338, topology_type: Single, servers: [<ServerDescription ('3.144.134.141', 27017) server_type: Standalone, rtt: 0.25>]>", "clientId": {"$oid": "67d2b4e48c8d3dc34c8c4338"}, "serverHost": "3.144.134.141", "serverPort": 27017}
2025-03-13 15:35:26,570 - pymongo.connection - DEBUG - {"clientId": {"$oid": "67d2b4e48c8d3dc34c8c4338"}, "message": "Connection checkout started", "serverHost": "3.144.134.141", "serverPort": 27017}
2025-03-13 15:35:26,570 - pymongo.connection - DEBUG - {"clientId": {"$oid": "67d2b4e48c8d3dc34c8c4338"}, "message": "Connection checked out", "serverHost": "3.144.134.141", "serverPort": 27017, "driverConnectionId": 1, "durationMS": 0.0}
2025-03-13 15:35:26,571 - pymongo.command - DEBUG - {"clientId": {"$oid": "67d2b4e48c8d3dc34c8c4338"}, "message": "Command started", "command": "{\"find\": \"vehicleevents\", \"filter\": {\"$or\": [{\"vehicle.uuid\": \"e889d91f-af57-48a5-a384-fdac719f7426\"}, {\"vehicle_uuid\": \"e889d91f-af57-48a5-a384-fdac719f7426\"}, {\"driver_uuid\": \"e889d91f-af57-48a5-a384-fdac719f7426\"}]}, \"limit\": 1000, \"lsid\": {\"id\": {\"$binary\": {\"base64\": \"x+cXB2SwRDKu4pPNabOuXQ==\", \"subType\": \"04\"}}}, \"$db\": \"opal_server\"}", "commandName": "find", "databaseName": "opal_server", "requestId": 5705, "operationId": 5705, "driverConnectionId": 1, "serverConnectionId": 13125, "serverHost": "3.144.134.141", "serverPort": 27017}
2025-03-13 15:35:26,940 - pymongo.topology - DEBUG - {"topologyId": {"$oid": "67d2b4e48c8d3dc34c8c4338"}, "driverConnectionId": 1, "serverConnectionId": 13124, "serverHost": "3.144.134.141", "serverPort": 27017, "awaited": true, "durationMS": 10250.0, "reply": "{\"isWritablePrimary\": true, \"topologyVersion\": {\"processId\": {\"$oid\": \"67b7e5814f77c1a87c56d054\"}}, \"maxBsonObjectSize\": 16777216, \"maxMessageSizeBytes\": 48000000, \"maxWriteBatchSize\": 100000, \"localTime\": {\"$date\": \"2025-03-13T10:35:26.966Z\"}, \"logicalSessionTimeoutMinutes\": 30, \"connectionId\": 13124, \"maxWireVersion\": 25, \"ok\": 1.0}", "message": "Server heartbeat succeeded"}
2025-03-13 15:35:26,941 - pymongo.topology - DEBUG - {"topologyId": {"$oid": "67d2b4e48c8d3dc34c8c4338"}, "driverConnectionId": 1, "serverConnectionId": 13124, "serverHost": "3.144.134.141", "serverPort": 27017, "awaited": true, "message": "Server heartbeat started"}
2025-03-13 15:35:32,872 - pymongo.command - DEBUG - {"clientId": {"$oid": "67d2b4e48c8d3dc34c8c4338"}, "message": "Command succeeded", "durationMS": 6301.634, "reply": "{\"cursor\": {\"ns\": \"opal_server.vehicleevents\"}, \"ok\": 1.0}", "commandName": "find", "databaseName": "opal_server", "requestId": 5705, "operationId": 5705, "driverConnectionId": 1, "serverConnectionId": 13125, "serverHost": "3.144.134.141", "serverPort": 27017}
2025-03-13 15:35:32,873 - pymongo.connection - DEBUG - {"clientId": {"$oid": "67d2b4e48c8d3dc34c8c4338"}, "message": "Connection checked in", "serverHost": "3.144.134.141", "serverPort": 27017, "driverConnectionId": 1}
2025-03-13 15:35:32,873 - app.db.repositories.data_repository - DEBUG - Retrieved 0 vehicle events
2025-03-13 15:35:32,874 - app.api.endpoints.analytics - ERROR - Error performing real-time analysis: 'driver_name'
Traceback (most recent call last):
  File "E:\Office\Opal\deep reports\app\api\endpoints\analytics.py", line 66, in get_real_time_analysis
    "driver_name": data["driver_name"]
                   ~~~~^^^^^^^^^^^^^^^
KeyError: 'driver_name'
2025-03-13 15:35:36,941 - pymongo.topology - DEBUG - {"topologyId": {"$oid": "67d2b4e48c8d3dc34c8c4338"}, "driverConnectionId": 1, "serverConnectionId": 13124, "serverHost": "3.144.134.141", "serverPort": 27017, "awaited": true, "durationMS": 10000.0, "reply": "{\"isWritablePrimary\": true, \"topologyVersion\": {\"processId\": {\"$oid\": \"67b7e5814f77c1a87c56d054\"}}, \"maxBsonObjectSize\": 16777216, \"maxMessageSizeBytes\": 48000000, \"maxWriteBatchSize\": 100000, \"localTime\": {\"$date\": \"2025-03-13T10:35:36.967Z\"}, \"logicalSessionTimeoutMinutes\": 30, \"connectionId\": 13124, \"maxWireVersion\": 25, \"ok\": 1.0}", "message": "Server heartbeat succeeded"}
2025-03-13 15:35:36,942 - pymongo.topology - DEBUG - {"topologyId": {"$oid": "67d2b4e48c8d3dc34c8c4338"}, "driverConnectionId": 1, "serverConnectionId": 13124, "serverHost": "3.144.134.141", "serverPort": 27017, "awaited": true, "message": "Server heartbeat started"}
2025-03-13 15:35:46,942 - pymongo.topology - DEBUG - {"topologyId": {"$oid": "67d2b4e48c8d3dc34c8c4338"}, "driverConnectionId": 1, "serverConnectionId": 13124, "serverHost": "3.144.134.141", "serverPort": 27017, "awaited": true, "durationMS": 10000.0, "reply": "{\"isWritablePrimary\": true, \"topologyVersion\": {\"processId\": {\"$oid\": \"67b7e5814f77c1a87c56d054\"}}, \"maxBsonObjectSize\": 16777216, \"maxMessageSizeBytes\": 48000000, \"maxWriteBatchSize\": 100000, \"localTime\": {\"$date\": \"2025-03-13T10:35:46.968Z\"}, \"logicalSessionTimeoutMinutes\": 30, \"connectionId\": 13124, \"maxWireVersion\": 25, \"ok\": 1.0}", "message": "Server heartbeat succeeded"}
2025-03-13 15:35:46,942 - pymongo.topology - DEBUG - {"topologyId": {"$oid": "67d2b4e48c8d3dc34c8c4338"}, "driverConnectionId": 1, "serverConnectionId": 13124, "serverHost": "3.144.134.141", "serverPort": 27017, "awaited": true, "message": "Server heartbeat started"}
2025-03-13 15:35:56,942 - pymongo.topology - DEBUG - {"topologyId": {"$oid": "67d2b4e48c8d3dc34c8c4338"}, "driverConnectionId": 1, "serverConnectionId": 13124, "serverHost": "3.144.134.141", "serverPort": 27017, "awaited": true, "durationMS": 10000.0, "reply": "{\"isWritablePrimary\": true, \"topologyVersion\": {\"processId\": {\"$oid\": \"67b7e5814f77c1a87c56d054\"}}, \"maxBsonObjectSize\": 16777216, \"maxMessageSizeBytes\": 48000000, \"maxWriteBatchSize\": 100000, \"localTime\": {\"$date\": \"2025-03-13T10:35:56.968Z\"}, \"logicalSessionTimeoutMinutes\": 30, \"connectionId\": 13124, \"maxWireVersion\": 25, \"ok\": 1.0}", "message": "Server heartbeat succeeded"}
2025-03-13 15:35:56,943 - pymongo.topology - DEBUG - {"topologyId": {"$oid": "67d2b4e48c8d3dc34c8c4338"}, "driverConnectionId": 1, "serverConnectionId": 13124, "serverHost": "3.144.134.141", "serverPort": 27017, "awaited": true, "message": "Server heartbeat started"}
2025-03-13 15:36:03,968 - app.api.endpoints.reports - INFO - Processing violation trends request: start_date=datetime.datetime(2025, 3, 13, 10, 35, 57, 992000, tzinfo=TzInfo(UTC)) end_date=datetime.datetime(2025, 3, 13, 10, 35, 57, 992000, tzinfo=TzInfo(UTC)) group_by='day' days=30 driver_uuid=''
2025-03-13 15:36:03,969 - app.services.predictive_analytics - INFO - Analyzing violation trends from 2025-03-13 10:35:57.992000+00:00 to 2025-03-13 10:35:57.992000+00:00
2025-03-13 15:36:03,969 - app.db.repositories.data_repository - INFO - Querying violations from 2025-03-13 10:35:57.992000+00:00 to 2025-03-13 10:35:57.992000+00:00
2025-03-13 15:36:03,969 - app.db.repositories.data_repository - DEBUG - Executing pipeline: [{'$match': {'event_time': {'$gte': datetime.datetime(2025, 3, 13, 10, 35, 57, 992000, tzinfo=TzInfo(UTC)), '$lte': datetime.datetime(2025, 3, 13, 10, 35, 57, 992000, tzinfo=TzInfo(UTC))}}}, {'$group': {'_id': {'time_period': {'$dateToString': {'format': '%Y-%m-%d', 'date': '$event_time'}}, 'violation_type': '$violation_type', 'driver_uuid': '$driver_uuid', 'driver_name': '$driver_name'}, 'count': {'$sum': 1}, 'high_severity_count': {'$sum': {'$cond': [{'$eq': ['$severity', 'HIGH']}, 1, 0]}}}}, {'$sort': {'_id.time_period': 1, '_id.driver_name': 1}}]
2025-03-13 15:36:03,970 - pymongo.serverSelection - DEBUG - {"message": "Server selection started", "selector": "Primary()", "operation": "aggregate", "topologyDescription": "<TopologyDescription id: 67d2b4e48c8d3dc34c8c4338, topology_type: Single, servers: [<ServerDescription ('3.144.134.141', 27017) server_type: Standalone, rtt: 0.2520479999999516>]>", "clientId": {"$oid": "67d2b4e48c8d3dc34c8c4338"}}
2025-03-13 15:36:03,970 - pymongo.serverSelection - DEBUG - {"message": "Server selection succeeded", "selector": "Primary()", "operation": "aggregate", "topologyDescription": "<TopologyDescription id: 67d2b4e48c8d3dc34c8c4338, topology_type: Single, servers: [<ServerDescription ('3.144.134.141', 27017) server_type: Standalone, rtt: 0.2520479999999516>]>", "clientId": {"$oid": "67d2b4e48c8d3dc34c8c4338"}, "serverHost": "3.144.134.141", "serverPort": 27017}
2025-03-13 15:36:03,971 - pymongo.connection - DEBUG - {"clientId": {"$oid": "67d2b4e48c8d3dc34c8c4338"}, "message": "Connection checkout started", "serverHost": "3.144.134.141", "serverPort": 27017}
2025-03-13 15:36:03,971 - pymongo.connection - DEBUG - {"clientId": {"$oid": "67d2b4e48c8d3dc34c8c4338"}, "message": "Connection checked out", "serverHost": "3.144.134.141", "serverPort": 27017, "driverConnectionId": 1, "durationMS": 0.0}
2025-03-13 15:36:03,971 - pymongo.command - DEBUG - {"clientId": {"$oid": "67d2b4e48c8d3dc34c8c4338"}, "message": "Command started", "command": "{\"aggregate\": \"violations\", \"pipeline\": [{\"$match\": {\"event_time\": {\"$gte\": {\"$date\": \"2025-03-13T10:35:57.992Z\"}, \"$lte\": {\"$date\": \"2025-03-13T10:35:57.992Z\"}}}}, {\"$group\": {\"_id\": {\"time_period\": {\"$dateToString\": {\"format\": \"%Y-%m-%d\", \"date\": \"$event_time\"}}, \"violation_type\": \"$violation_type\", \"driver_uuid\": \"$driver_uuid\", \"driver_name\": \"$driver_name\"}, \"count\": {\"$sum\": 1}, \"high_severity_count\": {\"$sum\": {\"$cond\": [{\"$eq\": [\"$severity\", \"HIGH\"]}, 1]}}}}, {\"$sort\": {\"_id.time_period\": 1, \"_id.driver_name\": 1}}], \"lsid\": {\"id\": {\"$binary\": {\"base64\": \"x+cXB2SwRDKu4pPNabOuXQ==\", \"subType\": \"04\"}}}, \"$db\": \"opal_server\"}", "commandName": "aggregate", "databaseName": "opal_server", "requestId": 28145, "operationId": 28145, "driverConnectionId": 1, "serverConnectionId": 13125, "serverHost": "3.144.134.141", "serverPort": 27017}
2025-03-13 15:36:04,242 - pymongo.command - DEBUG - {"clientId": {"$oid": "67d2b4e48c8d3dc34c8c4338"}, "message": "Command succeeded", "durationMS": 271.05400000000003, "reply": "{\"cursor\": {\"ns\": \"opal_server.violations\"}, \"ok\": 1.0}", "commandName": "aggregate", "databaseName": "opal_server", "requestId": 28145, "operationId": 28145, "driverConnectionId": 1, "serverConnectionId": 13125, "serverHost": "3.144.134.141", "serverPort": 27017}
2025-03-13 15:36:04,243 - pymongo.connection - DEBUG - {"clientId": {"$oid": "67d2b4e48c8d3dc34c8c4338"}, "message": "Connection checked in", "serverHost": "3.144.134.141", "serverPort": 27017, "driverConnectionId": 1}
2025-03-13 15:36:04,243 - app.db.repositories.data_repository - INFO - Found 0 trend records
2025-03-13 15:36:04,243 - app.services.predictive_analytics - INFO - Processed 0 time period-driver combinations
2025-03-13 15:36:04,245 - fontTools.ttLib.ttFont - DEBUG - Reading 'head' table from disk
2025-03-13 15:36:04,246 - fontTools.ttLib.ttFont - DEBUG - Decompiling 'head' table
2025-03-13 15:36:04,246 - fontTools.ttLib.ttFont - DEBUG - Reading 'hmtx' table from disk
2025-03-13 15:36:04,246 - fontTools.ttLib.ttFont - DEBUG - Decompiling 'hmtx' table
2025-03-13 15:36:04,246 - fontTools.ttLib.ttFont - DEBUG - Reading 'maxp' table from disk
2025-03-13 15:36:04,247 - fontTools.ttLib.ttFont - DEBUG - Decompiling 'maxp' table
2025-03-13 15:36:04,247 - fontTools.ttLib.ttFont - DEBUG - Reading 'hhea' table from disk
2025-03-13 15:36:04,249 - fontTools.ttLib.ttFont - DEBUG - Decompiling 'hhea' table
2025-03-13 15:36:04,250 - fontTools.ttLib.ttFont - DEBUG - Reading 'post' table from disk
2025-03-13 15:36:04,250 - fontTools.ttLib.ttFont - DEBUG - Decompiling 'post' table
2025-03-13 15:36:04,250 - fontTools.ttLib.ttFont - DEBUG - Reading 'cmap' table from disk
2025-03-13 15:36:04,251 - fontTools.ttLib.ttFont - DEBUG - Decompiling 'cmap' table
2025-03-13 15:36:04,358 - fontTools.ttLib.ttFont - DEBUG - Reading 'OS/2' table from disk
2025-03-13 15:36:04,362 - fontTools.ttLib.ttFont - DEBUG - Decompiling 'OS/2' table
2025-03-13 15:36:04,362 - fontTools.ttLib.ttFont - DEBUG - Reading 'cmap' table from disk
2025-03-13 15:36:04,362 - fontTools.ttLib.ttFont - DEBUG - Decompiling 'cmap' table
2025-03-13 15:36:04,367 - fontTools.ttLib.ttFont - DEBUG - Reading 'name' table from disk
2025-03-13 15:36:04,368 - fontTools.ttLib.ttFont - DEBUG - Decompiling 'name' table
2025-03-13 15:36:04,371 - fontTools.ttLib.ttFont - DEBUG - Reading 'head' table from disk
2025-03-13 15:36:04,372 - fontTools.ttLib.ttFont - DEBUG - Decompiling 'head' table
2025-03-13 15:36:04,372 - fontTools.ttLib.ttFont - DEBUG - Reading 'hmtx' table from disk
2025-03-13 15:36:04,372 - fontTools.ttLib.ttFont - DEBUG - Decompiling 'hmtx' table
2025-03-13 15:36:04,373 - fontTools.ttLib.ttFont - DEBUG - Reading 'maxp' table from disk
2025-03-13 15:36:04,373 - fontTools.ttLib.ttFont - DEBUG - Decompiling 'maxp' table
2025-03-13 15:36:04,373 - fontTools.ttLib.ttFont - DEBUG - Reading 'hhea' table from disk
2025-03-13 15:36:04,373 - fontTools.ttLib.ttFont - DEBUG - Decompiling 'hhea' table
2025-03-13 15:36:04,373 - fontTools.ttLib.ttFont - DEBUG - Reading 'post' table from disk
2025-03-13 15:36:04,373 - fontTools.ttLib.ttFont - DEBUG - Decompiling 'post' table
2025-03-13 15:36:04,374 - fontTools.ttLib.ttFont - DEBUG - Reading 'cmap' table from disk
2025-03-13 15:36:04,374 - fontTools.ttLib.ttFont - DEBUG - Decompiling 'cmap' table
2025-03-13 15:36:04,378 - fontTools.ttLib.ttFont - DEBUG - Reading 'OS/2' table from disk
2025-03-13 15:36:04,379 - fontTools.ttLib.ttFont - DEBUG - Decompiling 'OS/2' table
2025-03-13 15:36:04,379 - fontTools.ttLib.ttFont - DEBUG - Reading 'cmap' table from disk
2025-03-13 15:36:04,380 - fontTools.ttLib.ttFont - DEBUG - Decompiling 'cmap' table
2025-03-13 15:36:04,382 - fontTools.ttLib.ttFont - DEBUG - Reading 'name' table from disk
2025-03-13 15:36:04,382 - fontTools.ttLib.ttFont - DEBUG - Decompiling 'name' table
2025-03-13 15:36:04,432 - PIL.PngImagePlugin - DEBUG - STREAM b'IHDR' 16 13
2025-03-13 15:36:04,433 - PIL.PngImagePlugin - DEBUG - STREAM b'tEXt' 41 25
2025-03-13 15:36:04,433 - PIL.PngImagePlugin - DEBUG - STREAM b'IDAT' 78 35679
2025-03-13 15:36:04,499 - app.api.endpoints.reports - ERROR - Error generating PDF report: list index out of range
Traceback (most recent call last):
  File "E:\Office\Opal\deep reports\app\api\endpoints\reports.py", line 57, in get_violation_trends
    pdf_path = generate_driver_report(trends)
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "E:\Office\Opal\deep reports\app\utils\report_generator.py", line 180, in generate_driver_report
    Period: {trend_data[0]['time_period']} to {trend_data[-1]['time_period']}
             ~~~~~~~~~~^^^
IndexError: list index out of range
2025-03-13 15:36:06,950 - pymongo.topology - DEBUG - {"topologyId": {"$oid": "67d2b4e48c8d3dc34c8c4338"}, "driverConnectionId": 1, "serverConnectionId": 13124, "serverHost": "3.144.134.141", "serverPort": 27017, "awaited": true, "durationMS": 10015.999999999622, "reply": "{\"isWritablePrimary\": true, \"topologyVersion\": {\"processId\": {\"$oid\": \"67b7e5814f77c1a87c56d054\"}}, \"maxBsonObjectSize\": 16777216, \"maxMessageSizeBytes\": 48000000, \"maxWriteBatchSize\": 100000, \"localTime\": {\"$date\": \"2025-03-13T10:36:06.977Z\"}, \"logicalSessionTimeoutMinutes\": 30, \"connectionId\": 13124, \"maxWireVersion\": 25, \"ok\": 1.0}", "message": "Server heartbeat succeeded"}
2025-03-13 15:36:06,951 - pymongo.topology - DEBUG - {"topologyId": {"$oid": "67d2b4e48c8d3dc34c8c4338"}, "driverConnectionId": 1, "serverConnectionId": 13124, "serverHost": "3.144.134.141", "serverPort": 27017, "awaited": true, "message": "Server heartbeat started"}
2025-03-13 15:36:16,951 - pymongo.topology - DEBUG - {"topologyId": {"$oid": "67d2b4e48c8d3dc34c8c4338"}, "driverConnectionId": 1, "serverConnectionId": 13124, "serverHost": "3.144.134.141", "serverPort": 27017, "awaited": true, "durationMS": 10000.0, "reply": "{\"isWritablePrimary\": true, \"topologyVersion\": {\"processId\": {\"$oid\": \"67b7e5814f77c1a87c56d054\"}}, \"maxBsonObjectSize\": 16777216, \"maxMessageSizeBytes\": 48000000, \"maxWriteBatchSize\": 100000, \"localTime\": {\"$date\": \"2025-03-13T10:36:16.978Z\"}, \"logicalSessionTimeoutMinutes\": 30, \"connectionId\": 13124, \"maxWireVersion\": 25, \"ok\": 1.0}", "message": "Server heartbeat succeeded"}
2025-03-13 15:36:16,952 - pymongo.topology - DEBUG - {"topologyId": {"$oid": "67d2b4e48c8d3dc34c8c4338"}, "driverConnectionId": 1, "serverConnectionId": 13124, "serverHost": "3.144.134.141", "serverPort": 27017, "awaited": true, "message": "Server heartbeat started"}
2025-03-13 15:36:26,953 - pymongo.topology - DEBUG - {"topologyId": {"$oid": "67d2b4e48c8d3dc34c8c4338"}, "driverConnectionId": 1, "serverConnectionId": 13124, "serverHost": "3.144.134.141", "serverPort": 27017, "awaited": true, "durationMS": 10000.0, "reply": "{\"isWritablePrimary\": true, \"topologyVersion\": {\"processId\": {\"$oid\": \"67b7e5814f77c1a87c56d054\"}}, \"maxBsonObjectSize\": 16777216, \"maxMessageSizeBytes\": 48000000, \"maxWriteBatchSize\": 100000, \"localTime\": {\"$date\": \"2025-03-13T10:36:26.979Z\"}, \"logicalSessionTimeoutMinutes\": 30, \"connectionId\": 13124, \"maxWireVersion\": 25, \"ok\": 1.0}", "message": "Server heartbeat succeeded"}
2025-03-13 15:36:26,954 - pymongo.topology - DEBUG - {"topologyId": {"$oid": "67d2b4e48c8d3dc34c8c4338"}, "driverConnectionId": 1, "serverConnectionId": 13124, "serverHost": "3.144.134.141", "serverPort": 27017, "awaited": true, "message": "Server heartbeat started"}
2025-03-13 15:36:28,131 - app.api.endpoints.reports - INFO - Processing violation trends request: start_date=datetime.datetime(2025, 3, 13, 10, 35, 57, 992000, tzinfo=TzInfo(UTC)) end_date=datetime.datetime(2025, 3, 13, 10, 35, 57, 992000, tzinfo=TzInfo(UTC)) group_by='day' days=30 driver_uuid=None
2025-03-13 15:36:28,131 - app.services.predictive_analytics - INFO - Analyzing violation trends from 2025-03-13 10:35:57.992000+00:00 to 2025-03-13 10:35:57.992000+00:00
2025-03-13 15:36:28,131 - app.db.repositories.data_repository - INFO - Querying violations from 2025-03-13 10:35:57.992000+00:00 to 2025-03-13 10:35:57.992000+00:00
2025-03-13 15:36:28,131 - app.db.repositories.data_repository - DEBUG - Executing pipeline: [{'$match': {'event_time': {'$gte': datetime.datetime(2025, 3, 13, 10, 35, 57, 992000, tzinfo=TzInfo(UTC)), '$lte': datetime.datetime(2025, 3, 13, 10, 35, 57, 992000, tzinfo=TzInfo(UTC))}}}, {'$group': {'_id': {'time_period': {'$dateToString': {'format': '%Y-%m-%d', 'date': '$event_time'}}, 'violation_type': '$violation_type', 'driver_uuid': '$driver_uuid', 'driver_name': '$driver_name'}, 'count': {'$sum': 1}, 'high_severity_count': {'$sum': {'$cond': [{'$eq': ['$severity', 'HIGH']}, 1, 0]}}}}, {'$sort': {'_id.time_period': 1, '_id.driver_name': 1}}]
2025-03-13 15:36:28,132 - pymongo.serverSelection - DEBUG - {"message": "Server selection started", "selector": "Primary()", "operation": "aggregate", "topologyDescription": "<TopologyDescription id: 67d2b4e48c8d3dc34c8c4338, topology_type: Single, servers: [<ServerDescription ('3.144.134.141', 27017) server_type: Standalone, rtt: 0.25104857599997527>]>", "clientId": {"$oid": "67d2b4e48c8d3dc34c8c4338"}}
2025-03-13 15:36:28,132 - pymongo.serverSelection - DEBUG - {"message": "Server selection succeeded", "selector": "Primary()", "operation": "aggregate", "topologyDescription": "<TopologyDescription id: 67d2b4e48c8d3dc34c8c4338, topology_type: Single, servers: [<ServerDescription ('3.144.134.141', 27017) server_type: Standalone, rtt: 0.25104857599997527>]>", "clientId": {"$oid": "67d2b4e48c8d3dc34c8c4338"}, "serverHost": "3.144.134.141", "serverPort": 27017}
2025-03-13 15:36:28,132 - pymongo.connection - DEBUG - {"clientId": {"$oid": "67d2b4e48c8d3dc34c8c4338"}, "message": "Connection checkout started", "serverHost": "3.144.134.141", "serverPort": 27017}
2025-03-13 15:36:28,133 - pymongo.connection - DEBUG - {"clientId": {"$oid": "67d2b4e48c8d3dc34c8c4338"}, "message": "Connection checked out", "serverHost": "3.144.134.141", "serverPort": 27017, "driverConnectionId": 1, "durationMS": 0.0}
2025-03-13 15:36:28,133 - pymongo.command - DEBUG - {"clientId": {"$oid": "67d2b4e48c8d3dc34c8c4338"}, "message": "Command started", "command": "{\"aggregate\": \"violations\", \"pipeline\": [{\"$match\": {\"event_time\": {\"$gte\": {\"$date\": \"2025-03-13T10:35:57.992Z\"}, \"$lte\": {\"$date\": \"2025-03-13T10:35:57.992Z\"}}}}, {\"$group\": {\"_id\": {\"time_period\": {\"$dateToString\": {\"format\": \"%Y-%m-%d\", \"date\": \"$event_time\"}}, \"violation_type\": \"$violation_type\", \"driver_uuid\": \"$driver_uuid\", \"driver_name\": \"$driver_name\"}, \"count\": {\"$sum\": 1}, \"high_severity_count\": {\"$sum\": {\"$cond\": [{\"$eq\": [\"$severity\", \"HIGH\"]}, 1]}}}}, {\"$sort\": {\"_id.time_period\": 1, \"_id.driver_name\": 1}}], \"lsid\": {\"id\": {\"$binary\": {\"base64\": \"x+cXB2SwRDKu4pPNabOuXQ==\", \"subType\": \"04\"}}}, \"$db\": \"opal_server\"}", "commandName": "aggregate", "databaseName": "opal_server", "requestId": 23281, "operationId": 23281, "driverConnectionId": 1, "serverConnectionId": 13125, "serverHost": "3.144.134.141", "serverPort": 27017}
2025-03-13 15:36:28,386 - pymongo.command - DEBUG - {"clientId": {"$oid": "67d2b4e48c8d3dc34c8c4338"}, "message": "Command succeeded", "durationMS": 252.65900000000002, "reply": "{\"cursor\": {\"ns\": \"opal_server.violations\"}, \"ok\": 1.0}", "commandName": "aggregate", "databaseName": "opal_server", "requestId": 23281, "operationId": 23281, "driverConnectionId": 1, "serverConnectionId": 13125, "serverHost": "3.144.134.141", "serverPort": 27017}
2025-03-13 15:36:28,386 - pymongo.connection - DEBUG - {"clientId": {"$oid": "67d2b4e48c8d3dc34c8c4338"}, "message": "Connection checked in", "serverHost": "3.144.134.141", "serverPort": 27017, "driverConnectionId": 1}
2025-03-13 15:36:28,387 - app.db.repositories.data_repository - INFO - Found 0 trend records
2025-03-13 15:36:28,387 - app.services.predictive_analytics - INFO - Processed 0 time period-driver combinations
2025-03-13 15:36:28,388 - fontTools.ttLib.ttFont - DEBUG - Reading 'head' table from disk
2025-03-13 15:36:28,388 - fontTools.ttLib.ttFont - DEBUG - Decompiling 'head' table
2025-03-13 15:36:28,388 - fontTools.ttLib.ttFont - DEBUG - Reading 'hmtx' table from disk
2025-03-13 15:36:28,388 - fontTools.ttLib.ttFont - DEBUG - Decompiling 'hmtx' table
2025-03-13 15:36:28,388 - fontTools.ttLib.ttFont - DEBUG - Reading 'maxp' table from disk
2025-03-13 15:36:28,389 - fontTools.ttLib.ttFont - DEBUG - Decompiling 'maxp' table
2025-03-13 15:36:28,389 - fontTools.ttLib.ttFont - DEBUG - Reading 'hhea' table from disk
2025-03-13 15:36:28,389 - fontTools.ttLib.ttFont - DEBUG - Decompiling 'hhea' table
2025-03-13 15:36:28,389 - fontTools.ttLib.ttFont - DEBUG - Reading 'post' table from disk
2025-03-13 15:36:28,389 - fontTools.ttLib.ttFont - DEBUG - Decompiling 'post' table
2025-03-13 15:36:28,390 - fontTools.ttLib.ttFont - DEBUG - Reading 'cmap' table from disk
2025-03-13 15:36:28,390 - fontTools.ttLib.ttFont - DEBUG - Decompiling 'cmap' table
2025-03-13 15:36:28,394 - fontTools.ttLib.ttFont - DEBUG - Reading 'OS/2' table from disk
2025-03-13 15:36:28,394 - fontTools.ttLib.ttFont - DEBUG - Decompiling 'OS/2' table
2025-03-13 15:36:28,394 - fontTools.ttLib.ttFont - DEBUG - Reading 'cmap' table from disk
2025-03-13 15:36:28,394 - fontTools.ttLib.ttFont - DEBUG - Decompiling 'cmap' table
2025-03-13 15:36:28,397 - fontTools.ttLib.ttFont - DEBUG - Reading 'name' table from disk
2025-03-13 15:36:28,397 - fontTools.ttLib.ttFont - DEBUG - Decompiling 'name' table
2025-03-13 15:36:28,398 - fontTools.ttLib.ttFont - DEBUG - Reading 'head' table from disk
2025-03-13 15:36:28,398 - fontTools.ttLib.ttFont - DEBUG - Decompiling 'head' table
2025-03-13 15:36:28,398 - fontTools.ttLib.ttFont - DEBUG - Reading 'hmtx' table from disk
2025-03-13 15:36:28,399 - fontTools.ttLib.ttFont - DEBUG - Decompiling 'hmtx' table
2025-03-13 15:36:28,399 - fontTools.ttLib.ttFont - DEBUG - Reading 'maxp' table from disk
2025-03-13 15:36:28,399 - fontTools.ttLib.ttFont - DEBUG - Decompiling 'maxp' table
2025-03-13 15:36:28,400 - fontTools.ttLib.ttFont - DEBUG - Reading 'hhea' table from disk
2025-03-13 15:36:28,400 - fontTools.ttLib.ttFont - DEBUG - Decompiling 'hhea' table
2025-03-13 15:36:28,400 - fontTools.ttLib.ttFont - DEBUG - Reading 'post' table from disk
2025-03-13 15:36:28,400 - fontTools.ttLib.ttFont - DEBUG - Decompiling 'post' table
2025-03-13 15:36:28,401 - fontTools.ttLib.ttFont - DEBUG - Reading 'cmap' table from disk
2025-03-13 15:36:28,402 - fontTools.ttLib.ttFont - DEBUG - Decompiling 'cmap' table
2025-03-13 15:36:28,411 - fontTools.ttLib.ttFont - DEBUG - Reading 'OS/2' table from disk
2025-03-13 15:36:28,411 - fontTools.ttLib.ttFont - DEBUG - Decompiling 'OS/2' table
2025-03-13 15:36:28,411 - fontTools.ttLib.ttFont - DEBUG - Reading 'cmap' table from disk
2025-03-13 15:36:28,411 - fontTools.ttLib.ttFont - DEBUG - Decompiling 'cmap' table
2025-03-13 15:36:28,414 - fontTools.ttLib.ttFont - DEBUG - Reading 'name' table from disk
2025-03-13 15:36:28,415 - fontTools.ttLib.ttFont - DEBUG - Decompiling 'name' table
2025-03-13 15:36:28,415 - PIL.PngImagePlugin - DEBUG - STREAM b'IHDR' 16 13
2025-03-13 15:36:28,416 - PIL.PngImagePlugin - DEBUG - STREAM b'tEXt' 41 25
2025-03-13 15:36:28,416 - PIL.PngImagePlugin - DEBUG - STREAM b'IDAT' 78 35679
2025-03-13 15:36:28,470 - app.api.endpoints.reports - ERROR - Error generating PDF report: list index out of range
Traceback (most recent call last):
  File "E:\Office\Opal\deep reports\app\api\endpoints\reports.py", line 57, in get_violation_trends
    pdf_path = generate_driver_report(trends)
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "E:\Office\Opal\deep reports\app\utils\report_generator.py", line 180, in generate_driver_report
    Period: {trend_data[0]['time_period']} to {trend_data[-1]['time_period']}
             ~~~~~~~~~~^^^
IndexError: list index out of range
2025-03-13 15:36:36,957 - pymongo.topology - DEBUG - {"topologyId": {"$oid": "67d2b4e48c8d3dc34c8c4338"}, "driverConnectionId": 1, "serverConnectionId": 13124, "serverHost": "3.144.134.141", "serverPort": 27017, "awaited": true, "durationMS": 10000.0, "reply": "{\"isWritablePrimary\": true, \"topologyVersion\": {\"processId\": {\"$oid\": \"67b7e5814f77c1a87c56d054\"}}, \"maxBsonObjectSize\": 16777216, \"maxMessageSizeBytes\": 48000000, \"maxWriteBatchSize\": 100000, \"localTime\": {\"$date\": \"2025-03-13T10:36:36.983Z\"}, \"logicalSessionTimeoutMinutes\": 30, \"connectionId\": 13124, \"maxWireVersion\": 25, \"ok\": 1.0}", "message": "Server heartbeat succeeded"}
2025-03-13 15:36:36,958 - pymongo.topology - DEBUG - {"topologyId": {"$oid": "67d2b4e48c8d3dc34c8c4338"}, "driverConnectionId": 1, "serverConnectionId": 13124, "serverHost": "3.144.134.141", "serverPort": 27017, "awaited": true, "message": "Server heartbeat started"}
2025-03-13 15:36:46,958 - pymongo.topology - DEBUG - {"topologyId": {"$oid": "67d2b4e48c8d3dc34c8c4338"}, "driverConnectionId": 1, "serverConnectionId": 13124, "serverHost": "3.144.134.141", "serverPort": 27017, "awaited": true, "durationMS": 10000.0, "reply": "{\"isWritablePrimary\": true, \"topologyVersion\": {\"processId\": {\"$oid\": \"67b7e5814f77c1a87c56d054\"}}, \"maxBsonObjectSize\": 16777216, \"maxMessageSizeBytes\": 48000000, \"maxWriteBatchSize\": 100000, \"localTime\": {\"$date\": \"2025-03-13T10:36:46.984Z\"}, \"logicalSessionTimeoutMinutes\": 30, \"connectionId\": 13124, \"maxWireVersion\": 25, \"ok\": 1.0}", "message": "Server heartbeat succeeded"}
2025-03-13 15:36:46,959 - pymongo.topology - DEBUG - {"topologyId": {"$oid": "67d2b4e48c8d3dc34c8c4338"}, "driverConnectionId": 1, "serverConnectionId": 13124, "serverHost": "3.144.134.141", "serverPort": 27017, "awaited": true, "message": "Server heartbeat started"}
2025-03-13 15:36:47,933 - app.api.endpoints.reports - INFO - Processing violation trends request: start_date=datetime.datetime(2025, 3, 13, 10, 36, 36, 885000, tzinfo=TzInfo(UTC)) end_date=datetime.datetime(2025, 3, 13, 10, 36, 36, 885000, tzinfo=TzInfo(UTC)) group_by='day' days=30 driver_uuid=''
2025-03-13 15:36:47,933 - app.services.predictive_analytics - INFO - Analyzing violation trends from 2025-03-13 10:36:36.885000+00:00 to 2025-03-13 10:36:36.885000+00:00
2025-03-13 15:36:47,933 - app.db.repositories.data_repository - INFO - Querying violations from 2025-03-13 10:36:36.885000+00:00 to 2025-03-13 10:36:36.885000+00:00
2025-03-13 15:36:47,934 - app.db.repositories.data_repository - DEBUG - Executing pipeline: [{'$match': {'event_time': {'$gte': datetime.datetime(2025, 3, 13, 10, 36, 36, 885000, tzinfo=TzInfo(UTC)), '$lte': datetime.datetime(2025, 3, 13, 10, 36, 36, 885000, tzinfo=TzInfo(UTC))}}}, {'$group': {'_id': {'time_period': {'$dateToString': {'format': '%Y-%m-%d', 'date': '$event_time'}}, 'violation_type': '$violation_type', 'driver_uuid': '$driver_uuid', 'driver_name': '$driver_name'}, 'count': {'$sum': 1}, 'high_severity_count': {'$sum': {'$cond': [{'$eq': ['$severity', 'HIGH']}, 1, 0]}}}}, {'$sort': {'_id.time_period': 1, '_id.driver_name': 1}}]
2025-03-13 15:36:47,934 - pymongo.serverSelection - DEBUG - {"message": "Server selection started", "selector": "Primary()", "operation": "aggregate", "topologyDescription": "<TopologyDescription id: 67d2b4e48c8d3dc34c8c4338, topology_type: Single, servers: [<ServerDescription ('3.144.134.141', 27017) server_type: Standalone, rtt: 0.24811108864004472>]>", "clientId": {"$oid": "67d2b4e48c8d3dc34c8c4338"}}
2025-03-13 15:36:47,934 - pymongo.serverSelection - DEBUG - {"message": "Server selection succeeded", "selector": "Primary()", "operation": "aggregate", "topologyDescription": "<TopologyDescription id: 67d2b4e48c8d3dc34c8c4338, topology_type: Single, servers: [<ServerDescription ('3.144.134.141', 27017) server_type: Standalone, rtt: 0.24811108864004472>]>", "clientId": {"$oid": "67d2b4e48c8d3dc34c8c4338"}, "serverHost": "3.144.134.141", "serverPort": 27017}
2025-03-13 15:36:47,935 - pymongo.connection - DEBUG - {"clientId": {"$oid": "67d2b4e48c8d3dc34c8c4338"}, "message": "Connection checkout started", "serverHost": "3.144.134.141", "serverPort": 27017}
2025-03-13 15:36:47,935 - pymongo.connection - DEBUG - {"clientId": {"$oid": "67d2b4e48c8d3dc34c8c4338"}, "message": "Connection checked out", "serverHost": "3.144.134.141", "serverPort": 27017, "driverConnectionId": 1, "durationMS": 0.0}
2025-03-13 15:36:47,935 - pymongo.command - DEBUG - {"clientId": {"$oid": "67d2b4e48c8d3dc34c8c4338"}, "message": "Command started", "command": "{\"aggregate\": \"violations\", \"pipeline\": [{\"$match\": {\"event_time\": {\"$gte\": {\"$date\": \"2025-03-13T10:36:36.885Z\"}, \"$lte\": {\"$date\": \"2025-03-13T10:36:36.885Z\"}}}}, {\"$group\": {\"_id\": {\"time_period\": {\"$dateToString\": {\"format\": \"%Y-%m-%d\", \"date\": \"$event_time\"}}, \"violation_type\": \"$violation_type\", \"driver_uuid\": \"$driver_uuid\", \"driver_name\": \"$driver_name\"}, \"count\": {\"$sum\": 1}, \"high_severity_count\": {\"$sum\": {\"$cond\": [{\"$eq\": [\"$severity\", \"HIGH\"]}, 1]}}}}, {\"$sort\": {\"_id.time_period\": 1, \"_id.driver_name\": 1}}], \"lsid\": {\"id\": {\"$binary\": {\"base64\": \"x+cXB2SwRDKu4pPNabOuXQ==\", \"subType\": \"04\"}}}, \"$db\": \"opal_server\"}", "commandName": "aggregate", "databaseName": "opal_server", "requestId": 16827, "operationId": 16827, "driverConnectionId": 1, "serverConnectionId": 13125, "serverHost": "3.144.134.141", "serverPort": 27017}
2025-03-13 15:36:48,188 - pymongo.command - DEBUG - {"clientId": {"$oid": "67d2b4e48c8d3dc34c8c4338"}, "message": "Command succeeded", "durationMS": 252.29200000000003, "reply": "{\"cursor\": {\"ns\": \"opal_server.violations\"}, \"ok\": 1.0}", "commandName": "aggregate", "databaseName": "opal_server", "requestId": 16827, "operationId": 16827, "driverConnectionId": 1, "serverConnectionId": 13125, "serverHost": "3.144.134.141", "serverPort": 27017}
2025-03-13 15:36:48,188 - pymongo.connection - DEBUG - {"clientId": {"$oid": "67d2b4e48c8d3dc34c8c4338"}, "message": "Connection checked in", "serverHost": "3.144.134.141", "serverPort": 27017, "driverConnectionId": 1}
2025-03-13 15:36:48,189 - app.db.repositories.data_repository - INFO - Found 0 trend records
2025-03-13 15:36:48,189 - app.services.predictive_analytics - INFO - Processed 0 time period-driver combinations
2025-03-13 15:36:56,960 - pymongo.topology - DEBUG - {"topologyId": {"$oid": "67d2b4e48c8d3dc34c8c4338"}, "driverConnectionId": 1, "serverConnectionId": 13124, "serverHost": "3.144.134.141", "serverPort": 27017, "awaited": true, "durationMS": 10015.999999999622, "reply": "{\"isWritablePrimary\": true, \"topologyVersion\": {\"processId\": {\"$oid\": \"67b7e5814f77c1a87c56d054\"}}, \"maxBsonObjectSize\": 16777216, \"maxMessageSizeBytes\": 48000000, \"maxWriteBatchSize\": 100000, \"localTime\": {\"$date\": \"2025-03-13T10:36:56.986Z\"}, \"logicalSessionTimeoutMinutes\": 30, \"connectionId\": 13124, \"maxWireVersion\": 25, \"ok\": 1.0}", "message": "Server heartbeat succeeded"}
2025-03-13 15:36:56,961 - pymongo.topology - DEBUG - {"topologyId": {"$oid": "67d2b4e48c8d3dc34c8c4338"}, "driverConnectionId": 1, "serverConnectionId": 13124, "serverHost": "3.144.134.141", "serverPort": 27017, "awaited": true, "message": "Server heartbeat started"}
2025-03-13 15:37:06,960 - pymongo.topology - DEBUG - {"topologyId": {"$oid": "67d2b4e48c8d3dc34c8c4338"}, "driverConnectionId": 1, "serverConnectionId": 13124, "serverHost": "3.144.134.141", "serverPort": 27017, "awaited": true, "durationMS": 10000.0, "reply": "{\"isWritablePrimary\": true, \"topologyVersion\": {\"processId\": {\"$oid\": \"67b7e5814f77c1a87c56d054\"}}, \"maxBsonObjectSize\": 16777216, \"maxMessageSizeBytes\": 48000000, \"maxWriteBatchSize\": 100000, \"localTime\": {\"$date\": \"2025-03-13T10:37:06.986Z\"}, \"logicalSessionTimeoutMinutes\": 30, \"connectionId\": 13124, \"maxWireVersion\": 25, \"ok\": 1.0}", "message": "Server heartbeat succeeded"}
2025-03-13 15:37:06,961 - pymongo.topology - DEBUG - {"topologyId": {"$oid": "67d2b4e48c8d3dc34c8c4338"}, "driverConnectionId": 1, "serverConnectionId": 13124, "serverHost": "3.144.134.141", "serverPort": 27017, "awaited": true, "message": "Server heartbeat started"}
2025-03-13 15:37:16,961 - pymongo.topology - DEBUG - {"topologyId": {"$oid": "67d2b4e48c8d3dc34c8c4338"}, "driverConnectionId": 1, "serverConnectionId": 13124, "serverHost": "3.144.134.141", "serverPort": 27017, "awaited": true, "durationMS": 10000.0, "reply": "{\"isWritablePrimary\": true, \"topologyVersion\": {\"processId\": {\"$oid\": \"67b7e5814f77c1a87c56d054\"}}, \"maxBsonObjectSize\": 16777216, \"maxMessageSizeBytes\": 48000000, \"maxWriteBatchSize\": 100000, \"localTime\": {\"$date\": \"2025-03-13T10:37:16.987Z\"}, \"logicalSessionTimeoutMinutes\": 30, \"connectionId\": 13124, \"maxWireVersion\": 25, \"ok\": 1.0}", "message": "Server heartbeat succeeded"}
2025-03-13 15:37:16,962 - pymongo.topology - DEBUG - {"topologyId": {"$oid": "67d2b4e48c8d3dc34c8c4338"}, "driverConnectionId": 1, "serverConnectionId": 13124, "serverHost": "3.144.134.141", "serverPort": 27017, "awaited": true, "message": "Server heartbeat started"}
2025-03-13 15:37:26,968 - pymongo.topology - DEBUG - {"topologyId": {"$oid": "67d2b4e48c8d3dc34c8c4338"}, "driverConnectionId": 1, "serverConnectionId": 13124, "serverHost": "3.144.134.141", "serverPort": 27017, "awaited": true, "durationMS": 10000.0, "reply": "{\"isWritablePrimary\": true, \"topologyVersion\": {\"processId\": {\"$oid\": \"67b7e5814f77c1a87c56d054\"}}, \"maxBsonObjectSize\": 16777216, \"maxMessageSizeBytes\": 48000000, \"maxWriteBatchSize\": 100000, \"localTime\": {\"$date\": \"2025-03-13T10:37:26.995Z\"}, \"logicalSessionTimeoutMinutes\": 30, \"connectionId\": 13124, \"maxWireVersion\": 25, \"ok\": 1.0}", "message": "Server heartbeat succeeded"}
2025-03-13 15:37:26,968 - pymongo.topology - DEBUG - {"topologyId": {"$oid": "67d2b4e48c8d3dc34c8c4338"}, "driverConnectionId": 1, "serverConnectionId": 13124, "serverHost": "3.144.134.141", "serverPort": 27017, "awaited": true, "message": "Server heartbeat started"}
2025-03-13 15:37:36,979 - pymongo.topology - DEBUG - {"topologyId": {"$oid": "67d2b4e48c8d3dc34c8c4338"}, "driverConnectionId": 1, "serverConnectionId": 13124, "serverHost": "3.144.134.141", "serverPort": 27017, "awaited": true, "durationMS": 10015.000000001237, "reply": "{\"isWritablePrimary\": true, \"topologyVersion\": {\"processId\": {\"$oid\": \"67b7e5814f77c1a87c56d054\"}}, \"maxBsonObjectSize\": 16777216, \"maxMessageSizeBytes\": 48000000, \"maxWriteBatchSize\": 100000, \"localTime\": {\"$date\": \"2025-03-13T10:37:37.005Z\"}, \"logicalSessionTimeoutMinutes\": 30, \"connectionId\": 13124, \"maxWireVersion\": 25, \"ok\": 1.0}", "message": "Server heartbeat succeeded"}
2025-03-13 15:37:36,979 - pymongo.topology - DEBUG - {"topologyId": {"$oid": "67d2b4e48c8d3dc34c8c4338"}, "driverConnectionId": 1, "serverConnectionId": 13124, "serverHost": "3.144.134.141", "serverPort": 27017, "awaited": true, "message": "Server heartbeat started"}
2025-03-13 15:37:42,175 - app.api.endpoints.reports - INFO - Processing violation trends request: start_date=datetime.datetime(2025, 3, 13, 10, 36, 36, 885000, tzinfo=TzInfo(UTC)) end_date=datetime.datetime(2025, 3, 13, 10, 36, 36, 885000, tzinfo=TzInfo(UTC)) group_by='day' days=30 driver_uuid=None
2025-03-13 15:37:42,175 - app.services.predictive_analytics - INFO - Analyzing violation trends from 2025-03-13 10:36:36.885000+00:00 to 2025-03-13 10:36:36.885000+00:00
2025-03-13 15:37:42,175 - app.db.repositories.data_repository - INFO - Querying violations from 2025-03-13 10:36:36.885000+00:00 to 2025-03-13 10:36:36.885000+00:00
2025-03-13 15:37:42,176 - app.db.repositories.data_repository - DEBUG - Executing pipeline: [{'$match': {'event_time': {'$gte': datetime.datetime(2025, 3, 13, 10, 36, 36, 885000, tzinfo=TzInfo(UTC)), '$lte': datetime.datetime(2025, 3, 13, 10, 36, 36, 885000, tzinfo=TzInfo(UTC))}}}, {'$group': {'_id': {'time_period': {'$dateToString': {'format': '%Y-%m-%d', 'date': '$event_time'}}, 'violation_type': '$violation_type', 'driver_uuid': '$driver_uuid', 'driver_name': '$driver_name'}, 'count': {'$sum': 1}, 'high_severity_count': {'$sum': {'$cond': [{'$eq': ['$severity', 'HIGH']}, 1, 0]}}}}, {'$sort': {'_id.time_period': 1, '_id.driver_name': 1}}]
2025-03-13 15:37:42,176 - pymongo.serverSelection - DEBUG - {"message": "Server selection started", "selector": "Primary()", "operation": "aggregate", "topologyDescription": "<TopologyDescription id: 67d2b4e48c8d3dc34c8c4338, topology_type: Single, servers: [<ServerDescription ('3.144.134.141', 27017) server_type: Standalone, rtt: 0.24698104152566303>]>", "clientId": {"$oid": "67d2b4e48c8d3dc34c8c4338"}}
2025-03-13 15:37:42,177 - pymongo.serverSelection - DEBUG - {"message": "Server selection succeeded", "selector": "Primary()", "operation": "aggregate", "topologyDescription": "<TopologyDescription id: 67d2b4e48c8d3dc34c8c4338, topology_type: Single, servers: [<ServerDescription ('3.144.134.141', 27017) server_type: Standalone, rtt: 0.24698104152566303>]>", "clientId": {"$oid": "67d2b4e48c8d3dc34c8c4338"}, "serverHost": "3.144.134.141", "serverPort": 27017}
2025-03-13 15:37:42,177 - pymongo.connection - DEBUG - {"clientId": {"$oid": "67d2b4e48c8d3dc34c8c4338"}, "message": "Connection checkout started", "serverHost": "3.144.134.141", "serverPort": 27017}
2025-03-13 15:37:42,178 - pymongo.connection - DEBUG - {"clientId": {"$oid": "67d2b4e48c8d3dc34c8c4338"}, "message": "Connection checked out", "serverHost": "3.144.134.141", "serverPort": 27017, "driverConnectionId": 1, "durationMS": 0.0}
2025-03-13 15:37:42,178 - pymongo.command - DEBUG - {"clientId": {"$oid": "67d2b4e48c8d3dc34c8c4338"}, "message": "Command started", "command": "{\"aggregate\": \"violations\", \"pipeline\": [{\"$match\": {\"event_time\": {\"$gte\": {\"$date\": \"2025-03-13T10:36:36.885Z\"}, \"$lte\": {\"$date\": \"2025-03-13T10:36:36.885Z\"}}}}, {\"$group\": {\"_id\": {\"time_period\": {\"$dateToString\": {\"format\": \"%Y-%m-%d\", \"date\": \"$event_time\"}}, \"violation_type\": \"$violation_type\", \"driver_uuid\": \"$driver_uuid\", \"driver_name\": \"$driver_name\"}, \"count\": {\"$sum\": 1}, \"high_severity_count\": {\"$sum\": {\"$cond\": [{\"$eq\": [\"$severity\", \"HIGH\"]}, 1]}}}}, {\"$sort\": {\"_id.time_period\": 1, \"_id.driver_name\": 1}}], \"lsid\": {\"id\": {\"$binary\": {\"base64\": \"x+cXB2SwRDKu4pPNabOuXQ==\", \"subType\": \"04\"}}}, \"$db\": \"opal_server\"}", "commandName": "aggregate", "databaseName": "opal_server", "requestId": 9961, "operationId": 9961, "driverConnectionId": 1, "serverConnectionId": 13125, "serverHost": "3.144.134.141", "serverPort": 27017}
2025-03-13 15:37:42,430 - pymongo.command - DEBUG - {"clientId": {"$oid": "67d2b4e48c8d3dc34c8c4338"}, "message": "Command succeeded", "durationMS": 252.002, "reply": "{\"cursor\": {\"ns\": \"opal_server.violations\"}, \"ok\": 1.0}", "commandName": "aggregate", "databaseName": "opal_server", "requestId": 9961, "operationId": 9961, "driverConnectionId": 1, "serverConnectionId": 13125, "serverHost": "3.144.134.141", "serverPort": 27017}
2025-03-13 15:37:42,430 - pymongo.connection - DEBUG - {"clientId": {"$oid": "67d2b4e48c8d3dc34c8c4338"}, "message": "Connection checked in", "serverHost": "3.144.134.141", "serverPort": 27017, "driverConnectionId": 1}
2025-03-13 15:37:42,431 - app.db.repositories.data_repository - INFO - Found 0 trend records
2025-03-13 15:37:42,431 - app.services.predictive_analytics - INFO - Processed 0 time period-driver combinations
2025-03-13 15:37:46,987 - pymongo.topology - DEBUG - {"topologyId": {"$oid": "67d2b4e48c8d3dc34c8c4338"}, "driverConnectionId": 1, "serverConnectionId": 13124, "serverHost": "3.144.134.141", "serverPort": 27017, "awaited": true, "durationMS": 10000.0, "reply": "{\"isWritablePrimary\": true, \"topologyVersion\": {\"processId\": {\"$oid\": \"67b7e5814f77c1a87c56d054\"}}, \"maxBsonObjectSize\": 16777216, \"maxMessageSizeBytes\": 48000000, \"maxWriteBatchSize\": 100000, \"localTime\": {\"$date\": \"2025-03-13T10:37:47.014Z\"}, \"logicalSessionTimeoutMinutes\": 30, \"connectionId\": 13124, \"maxWireVersion\": 25, \"ok\": 1.0}", "message": "Server heartbeat succeeded"}
2025-03-13 15:37:46,988 - pymongo.topology - DEBUG - {"topologyId": {"$oid": "67d2b4e48c8d3dc34c8c4338"}, "driverConnectionId": 1, "serverConnectionId": 13124, "serverHost": "3.144.134.141", "serverPort": 27017, "awaited": true, "message": "Server heartbeat started"}
2025-03-13 15:37:56,988 - pymongo.topology - DEBUG - {"topologyId": {"$oid": "67d2b4e48c8d3dc34c8c4338"}, "driverConnectionId": 1, "serverConnectionId": 13124, "serverHost": "3.144.134.141", "serverPort": 27017, "awaited": true, "durationMS": 10000.0, "reply": "{\"isWritablePrimary\": true, \"topologyVersion\": {\"processId\": {\"$oid\": \"67b7e5814f77c1a87c56d054\"}}, \"maxBsonObjectSize\": 16777216, \"maxMessageSizeBytes\": 48000000, \"maxWriteBatchSize\": 100000, \"localTime\": {\"$date\": \"2025-03-13T10:37:57.016Z\"}, \"logicalSessionTimeoutMinutes\": 30, \"connectionId\": 13124, \"maxWireVersion\": 25, \"ok\": 1.0}", "message": "Server heartbeat succeeded"}
2025-03-13 15:37:56,989 - pymongo.topology - DEBUG - {"topologyId": {"$oid": "67d2b4e48c8d3dc34c8c4338"}, "driverConnectionId": 1, "serverConnectionId": 13124, "serverHost": "3.144.134.141", "serverPort": 27017, "awaited": true, "message": "Server heartbeat started"}
2025-03-13 15:38:06,990 - pymongo.topology - DEBUG - {"topologyId": {"$oid": "67d2b4e48c8d3dc34c8c4338"}, "driverConnectionId": 1, "serverConnectionId": 13124, "serverHost": "3.144.134.141", "serverPort": 27017, "awaited": true, "durationMS": 10000.0, "reply": "{\"isWritablePrimary\": true, \"topologyVersion\": {\"processId\": {\"$oid\": \"67b7e5814f77c1a87c56d054\"}}, \"maxBsonObjectSize\": 16777216, \"maxMessageSizeBytes\": 48000000, \"maxWriteBatchSize\": 100000, \"localTime\": {\"$date\": \"2025-03-13T10:38:07.017Z\"}, \"logicalSessionTimeoutMinutes\": 30, \"connectionId\": 13124, \"maxWireVersion\": 25, \"ok\": 1.0}", "message": "Server heartbeat succeeded"}
2025-03-13 15:38:06,991 - pymongo.topology - DEBUG - {"topologyId": {"$oid": "67d2b4e48c8d3dc34c8c4338"}, "driverConnectionId": 1, "serverConnectionId": 13124, "serverHost": "3.144.134.141", "serverPort": 27017, "awaited": true, "message": "Server heartbeat started"}
2025-03-13 15:38:16,991 - pymongo.topology - DEBUG - {"topologyId": {"$oid": "67d2b4e48c8d3dc34c8c4338"}, "driverConnectionId": 1, "serverConnectionId": 13124, "serverHost": "3.144.134.141", "serverPort": 27017, "awaited": true, "durationMS": 10000.0, "reply": "{\"isWritablePrimary\": true, \"topologyVersion\": {\"processId\": {\"$oid\": \"67b7e5814f77c1a87c56d054\"}}, \"maxBsonObjectSize\": 16777216, \"maxMessageSizeBytes\": 48000000, \"maxWriteBatchSize\": 100000, \"localTime\": {\"$date\": \"2025-03-13T10:38:17.018Z\"}, \"logicalSessionTimeoutMinutes\": 30, \"connectionId\": 13124, \"maxWireVersion\": 25, \"ok\": 1.0}", "message": "Server heartbeat succeeded"}
2025-03-13 15:38:16,992 - pymongo.topology - DEBUG - {"topologyId": {"$oid": "67d2b4e48c8d3dc34c8c4338"}, "driverConnectionId": 1, "serverConnectionId": 13124, "serverHost": "3.144.134.141", "serverPort": 27017, "awaited": true, "message": "Server heartbeat started"}
2025-03-13 15:38:26,993 - pymongo.topology - DEBUG - {"topologyId": {"$oid": "67d2b4e48c8d3dc34c8c4338"}, "driverConnectionId": 1, "serverConnectionId": 13124, "serverHost": "3.144.134.141", "serverPort": 27017, "awaited": true, "durationMS": 10000.0, "reply": "{\"isWritablePrimary\": true, \"topologyVersion\": {\"processId\": {\"$oid\": \"67b7e5814f77c1a87c56d054\"}}, \"maxBsonObjectSize\": 16777216, \"maxMessageSizeBytes\": 48000000, \"maxWriteBatchSize\": 100000, \"localTime\": {\"$date\": \"2025-03-13T10:38:27.021Z\"}, \"logicalSessionTimeoutMinutes\": 30, \"connectionId\": 13124, \"maxWireVersion\": 25, \"ok\": 1.0}", "message": "Server heartbeat succeeded"}
2025-03-13 15:38:26,994 - pymongo.topology - DEBUG - {"topologyId": {"$oid": "67d2b4e48c8d3dc34c8c4338"}, "driverConnectionId": 1, "serverConnectionId": 13124, "serverHost": "3.144.134.141", "serverPort": 27017, "awaited": true, "message": "Server heartbeat started"}
2025-03-13 15:38:36,995 - pymongo.topology - DEBUG - {"topologyId": {"$oid": "67d2b4e48c8d3dc34c8c4338"}, "driverConnectionId": 1, "serverConnectionId": 13124, "serverHost": "3.144.134.141", "serverPort": 27017, "awaited": true, "durationMS": 10000.0, "reply": "{\"isWritablePrimary\": true, \"topologyVersion\": {\"processId\": {\"$oid\": \"67b7e5814f77c1a87c56d054\"}}, \"maxBsonObjectSize\": 16777216, \"maxMessageSizeBytes\": 48000000, \"maxWriteBatchSize\": 100000, \"localTime\": {\"$date\": \"2025-03-13T10:38:37.022Z\"}, \"logicalSessionTimeoutMinutes\": 30, \"connectionId\": 13124, \"maxWireVersion\": 25, \"ok\": 1.0}", "message": "Server heartbeat succeeded"}
2025-03-13 15:38:36,995 - pymongo.topology - DEBUG - {"topologyId": {"$oid": "67d2b4e48c8d3dc34c8c4338"}, "driverConnectionId": 1, "serverConnectionId": 13124, "serverHost": "3.144.134.141", "serverPort": 27017, "awaited": true, "message": "Server heartbeat started"}
2025-03-13 15:38:46,997 - pymongo.topology - DEBUG - {"topologyId": {"$oid": "67d2b4e48c8d3dc34c8c4338"}, "driverConnectionId": 1, "serverConnectionId": 13124, "serverHost": "3.144.134.141", "serverPort": 27017, "awaited": true, "durationMS": 10000.0, "reply": "{\"isWritablePrimary\": true, \"topologyVersion\": {\"processId\": {\"$oid\": \"67b7e5814f77c1a87c56d054\"}}, \"maxBsonObjectSize\": 16777216, \"maxMessageSizeBytes\": 48000000, \"maxWriteBatchSize\": 100000, \"localTime\": {\"$date\": \"2025-03-13T10:38:47.024Z\"}, \"logicalSessionTimeoutMinutes\": 30, \"connectionId\": 13124, \"maxWireVersion\": 25, \"ok\": 1.0}", "message": "Server heartbeat succeeded"}
2025-03-13 15:38:46,998 - pymongo.topology - DEBUG - {"topologyId": {"$oid": "67d2b4e48c8d3dc34c8c4338"}, "driverConnectionId": 1, "serverConnectionId": 13124, "serverHost": "3.144.134.141", "serverPort": 27017, "awaited": true, "message": "Server heartbeat started"}
2025-03-13 15:38:56,998 - pymongo.topology - DEBUG - {"topologyId": {"$oid": "67d2b4e48c8d3dc34c8c4338"}, "driverConnectionId": 1, "serverConnectionId": 13124, "serverHost": "3.144.134.141", "serverPort": 27017, "awaited": true, "durationMS": 10000.0, "reply": "{\"isWritablePrimary\": true, \"topologyVersion\": {\"processId\": {\"$oid\": \"67b7e5814f77c1a87c56d054\"}}, \"maxBsonObjectSize\": 16777216, \"maxMessageSizeBytes\": 48000000, \"maxWriteBatchSize\": 100000, \"localTime\": {\"$date\": \"2025-03-13T10:38:57.026Z\"}, \"logicalSessionTimeoutMinutes\": 30, \"connectionId\": 13124, \"maxWireVersion\": 25, \"ok\": 1.0}", "message": "Server heartbeat succeeded"}
2025-03-13 15:38:56,999 - pymongo.topology - DEBUG - {"topologyId": {"$oid": "67d2b4e48c8d3dc34c8c4338"}, "driverConnectionId": 1, "serverConnectionId": 13124, "serverHost": "3.144.134.141", "serverPort": 27017, "awaited": true, "message": "Server heartbeat started"}
2025-03-13 15:39:06,999 - pymongo.topology - DEBUG - {"topologyId": {"$oid": "67d2b4e48c8d3dc34c8c4338"}, "driverConnectionId": 1, "serverConnectionId": 13124, "serverHost": "3.144.134.141", "serverPort": 27017, "awaited": true, "durationMS": 10000.0, "reply": "{\"isWritablePrimary\": true, \"topologyVersion\": {\"processId\": {\"$oid\": \"67b7e5814f77c1a87c56d054\"}}, \"maxBsonObjectSize\": 16777216, \"maxMessageSizeBytes\": 48000000, \"maxWriteBatchSize\": 100000, \"localTime\": {\"$date\": \"2025-03-13T10:39:07.027Z\"}, \"logicalSessionTimeoutMinutes\": 30, \"connectionId\": 13124, \"maxWireVersion\": 25, \"ok\": 1.0}", "message": "Server heartbeat succeeded"}
2025-03-13 15:39:06,999 - pymongo.topology - DEBUG - {"topologyId": {"$oid": "67d2b4e48c8d3dc34c8c4338"}, "driverConnectionId": 1, "serverConnectionId": 13124, "serverHost": "3.144.134.141", "serverPort": 27017, "awaited": true, "message": "Server heartbeat started"}
2025-03-13 15:39:17,009 - pymongo.topology - DEBUG - {"topologyId": {"$oid": "67d2b4e48c8d3dc34c8c4338"}, "driverConnectionId": 1, "serverConnectionId": 13124, "serverHost": "3.144.134.141", "serverPort": 27017, "awaited": true, "durationMS": 10015.999999999622, "reply": "{\"isWritablePrimary\": true, \"topologyVersion\": {\"processId\": {\"$oid\": \"67b7e5814f77c1a87c56d054\"}}, \"maxBsonObjectSize\": 16777216, \"maxMessageSizeBytes\": 48000000, \"maxWriteBatchSize\": 100000, \"localTime\": {\"$date\": \"2025-03-13T10:39:17.037Z\"}, \"logicalSessionTimeoutMinutes\": 30, \"connectionId\": 13124, \"maxWireVersion\": 25, \"ok\": 1.0}", "message": "Server heartbeat succeeded"}
2025-03-13 15:39:17,010 - pymongo.topology - DEBUG - {"topologyId": {"$oid": "67d2b4e48c8d3dc34c8c4338"}, "driverConnectionId": 1, "serverConnectionId": 13124, "serverHost": "3.144.134.141", "serverPort": 27017, "awaited": true, "message": "Server heartbeat started"}
2025-03-13 15:39:27,009 - pymongo.topology - DEBUG - {"topologyId": {"$oid": "67d2b4e48c8d3dc34c8c4338"}, "driverConnectionId": 1, "serverConnectionId": 13124, "serverHost": "3.144.134.141", "serverPort": 27017, "awaited": true, "durationMS": 10000.0, "reply": "{\"isWritablePrimary\": true, \"topologyVersion\": {\"processId\": {\"$oid\": \"67b7e5814f77c1a87c56d054\"}}, \"maxBsonObjectSize\": 16777216, \"maxMessageSizeBytes\": 48000000, \"maxWriteBatchSize\": 100000, \"localTime\": {\"$date\": \"2025-03-13T10:39:27.038Z\"}, \"logicalSessionTimeoutMinutes\": 30, \"connectionId\": 13124, \"maxWireVersion\": 25, \"ok\": 1.0}", "message": "Server heartbeat succeeded"}
2025-03-13 15:39:27,011 - pymongo.topology - DEBUG - {"topologyId": {"$oid": "67d2b4e48c8d3dc34c8c4338"}, "driverConnectionId": 1, "serverConnectionId": 13124, "serverHost": "3.144.134.141", "serverPort": 27017, "awaited": true, "message": "Server heartbeat started"}
2025-03-13 15:39:37,011 - pymongo.topology - DEBUG - {"topologyId": {"$oid": "67d2b4e48c8d3dc34c8c4338"}, "driverConnectionId": 1, "serverConnectionId": 13124, "serverHost": "3.144.134.141", "serverPort": 27017, "awaited": true, "durationMS": 10000.0, "reply": "{\"isWritablePrimary\": true, \"topologyVersion\": {\"processId\": {\"$oid\": \"67b7e5814f77c1a87c56d054\"}}, \"maxBsonObjectSize\": 16777216, \"maxMessageSizeBytes\": 48000000, \"maxWriteBatchSize\": 100000, \"localTime\": {\"$date\": \"2025-03-13T10:39:37.038Z\"}, \"logicalSessionTimeoutMinutes\": 30, \"connectionId\": 13124, \"maxWireVersion\": 25, \"ok\": 1.0}", "message": "Server heartbeat succeeded"}
2025-03-13 15:39:37,012 - pymongo.topology - DEBUG - {"topologyId": {"$oid": "67d2b4e48c8d3dc34c8c4338"}, "driverConnectionId": 1, "serverConnectionId": 13124, "serverHost": "3.144.134.141", "serverPort": 27017, "awaited": true, "message": "Server heartbeat started"}
2025-03-13 15:39:47,019 - pymongo.topology - DEBUG - {"topologyId": {"$oid": "67d2b4e48c8d3dc34c8c4338"}, "driverConnectionId": 1, "serverConnectionId": 13124, "serverHost": "3.144.134.141", "serverPort": 27017, "awaited": true, "durationMS": 10000.0, "reply": "{\"isWritablePrimary\": true, \"topologyVersion\": {\"processId\": {\"$oid\": \"67b7e5814f77c1a87c56d054\"}}, \"maxBsonObjectSize\": 16777216, \"maxMessageSizeBytes\": 48000000, \"maxWriteBatchSize\": 100000, \"localTime\": {\"$date\": \"2025-03-13T10:39:47.048Z\"}, \"logicalSessionTimeoutMinutes\": 30, \"connectionId\": 13124, \"maxWireVersion\": 25, \"ok\": 1.0}", "message": "Server heartbeat succeeded"}
2025-03-13 15:39:47,020 - pymongo.topology - DEBUG - {"topologyId": {"$oid": "67d2b4e48c8d3dc34c8c4338"}, "driverConnectionId": 1, "serverConnectionId": 13124, "serverHost": "3.144.134.141", "serverPort": 27017, "awaited": true, "message": "Server heartbeat started"}
2025-03-13 15:39:57,030 - pymongo.topology - DEBUG - {"topologyId": {"$oid": "67d2b4e48c8d3dc34c8c4338"}, "driverConnectionId": 1, "serverConnectionId": 13124, "serverHost": "3.144.134.141", "serverPort": 27017, "awaited": true, "durationMS": 10014.999999999418, "reply": "{\"isWritablePrimary\": true, \"topologyVersion\": {\"processId\": {\"$oid\": \"67b7e5814f77c1a87c56d054\"}}, \"maxBsonObjectSize\": 16777216, \"maxMessageSizeBytes\": 48000000, \"maxWriteBatchSize\": 100000, \"localTime\": {\"$date\": \"2025-03-13T10:39:57.058Z\"}, \"logicalSessionTimeoutMinutes\": 30, \"connectionId\": 13124, \"maxWireVersion\": 25, \"ok\": 1.0}", "message": "Server heartbeat succeeded"}
2025-03-13 15:39:57,031 - pymongo.topology - DEBUG - {"topologyId": {"$oid": "67d2b4e48c8d3dc34c8c4338"}, "driverConnectionId": 1, "serverConnectionId": 13124, "serverHost": "3.144.134.141", "serverPort": 27017, "awaited": true, "message": "Server heartbeat started"}
2025-03-13 15:40:07,037 - pymongo.topology - DEBUG - {"topologyId": {"$oid": "67d2b4e48c8d3dc34c8c4338"}, "driverConnectionId": 1, "serverConnectionId": 13124, "serverHost": "3.144.134.141", "serverPort": 27017, "awaited": true, "durationMS": 10000.0, "reply": "{\"isWritablePrimary\": true, \"topologyVersion\": {\"processId\": {\"$oid\": \"67b7e5814f77c1a87c56d054\"}}, \"maxBsonObjectSize\": 16777216, \"maxMessageSizeBytes\": 48000000, \"maxWriteBatchSize\": 100000, \"localTime\": {\"$date\": \"2025-03-13T10:40:07.065Z\"}, \"logicalSessionTimeoutMinutes\": 30, \"connectionId\": 13124, \"maxWireVersion\": 25, \"ok\": 1.0}", "message": "Server heartbeat succeeded"}
2025-03-13 15:40:07,038 - pymongo.topology - DEBUG - {"topologyId": {"$oid": "67d2b4e48c8d3dc34c8c4338"}, "driverConnectionId": 1, "serverConnectionId": 13124, "serverHost": "3.144.134.141", "serverPort": 27017, "awaited": true, "message": "Server heartbeat started"}
2025-03-13 15:42:17,357 - numexpr.utils - INFO - Note: NumExpr detected 12 cores but "NUMEXPR_MAX_THREADS" not set, so enforcing safe limit of 8.
2025-03-13 15:42:17,357 - numexpr.utils - INFO - NumExpr defaulting to 8 threads.
2025-03-13 15:42:18,619 - matplotlib - DEBUG - matplotlib data path: C:\Users\msameerakram\AppData\Local\anaconda3\Lib\site-packages\matplotlib\mpl-data
2025-03-13 15:42:18,625 - matplotlib - DEBUG - CONFIGDIR=C:\Users\msameerakram\.matplotlib
2025-03-13 15:42:18,628 - matplotlib - DEBUG - interactive is False
2025-03-13 15:42:18,629 - matplotlib - DEBUG - platform is win32
2025-03-13 15:42:18,690 - matplotlib - DEBUG - CACHEDIR=C:\Users\msameerakram\.matplotlib
2025-03-13 15:42:18,694 - matplotlib.font_manager - DEBUG - Using fontManager instance from C:\Users\msameerakram\.matplotlib\fontlist-v390.json
2025-03-13 15:42:21,227 - numexpr.utils - INFO - Note: NumExpr detected 12 cores but "NUMEXPR_MAX_THREADS" not set, so enforcing safe limit of 8.
2025-03-13 15:42:21,228 - numexpr.utils - INFO - NumExpr defaulting to 8 threads.
2025-03-13 15:42:22,504 - matplotlib - DEBUG - matplotlib data path: C:\Users\msameerakram\AppData\Local\anaconda3\Lib\site-packages\matplotlib\mpl-data
2025-03-13 15:42:22,509 - matplotlib - DEBUG - CONFIGDIR=C:\Users\msameerakram\.matplotlib
2025-03-13 15:42:22,511 - matplotlib - DEBUG - interactive is False
2025-03-13 15:42:22,511 - matplotlib - DEBUG - platform is win32
2025-03-13 15:42:22,576 - matplotlib - DEBUG - CACHEDIR=C:\Users\msameerakram\.matplotlib
2025-03-13 15:42:22,579 - matplotlib.font_manager - DEBUG - Using fontManager instance from C:\Users\msameerakram\.matplotlib\fontlist-v390.json
2025-03-13 15:42:24,012 - asyncio - DEBUG - Using selector: SelectSelector
2025-03-13 15:42:24,050 - pymongo.topology - DEBUG - {"topologyId": {"$oid": "67d2b6901e52438c18c36b9c"}, "message": "Starting topology monitoring"}
2025-03-13 15:42:24,050 - pymongo.topology - DEBUG - {"topologyId": {"$oid": "67d2b6901e52438c18c36b9c"}, "previousDescription": "<TopologyDescription id: 67d2b6901e52438c18c36b9c, topology_type: Unknown, servers: []>", "newDescription": "<TopologyDescription id: 67d2b6901e52438c18c36b9c, topology_type: Unknown, servers: [<ServerDescription ('3.144.134.141', 27017) server_type: Unknown, rtt: None>]>", "message": "Topology description changed"}
2025-03-13 15:42:24,050 - pymongo.topology - DEBUG - {"topologyId": {"$oid": "67d2b6901e52438c18c36b9c"}, "serverHost": "3.144.134.141", "serverPort": 27017, "message": "Starting server monitoring"}
2025-03-13 15:42:24,052 - pymongo.connection - DEBUG - {"clientId": {"$oid": "67d2b6901e52438c18c36b9c"}, "message": "Connection pool created", "serverHost": "3.144.134.141", "serverPort": 27017}
2025-03-13 15:42:24,053 - pymongo.serverSelection - DEBUG - {"message": "Server selection started", "selector": "Primary()", "operation": "ping", "topologyDescription": "<TopologyDescription id: 67d2b6901e52438c18c36b9c, topology_type: Unknown, servers: [<ServerDescription ('3.144.134.141', 27017) server_type: Unknown, rtt: None>]>", "clientId": {"$oid": "67d2b6901e52438c18c36b9c"}}
2025-03-13 15:42:24,054 - pymongo.serverSelection - DEBUG - {"message": "Waiting for suitable server to become available", "selector": "Primary()", "operation": "ping", "topologyDescription": "<TopologyDescription id: 67d2b6901e52438c18c36b9c, topology_type: Unknown, servers: [<ServerDescription ('3.144.134.141', 27017) server_type: Unknown, rtt: None>]>", "clientId": {"$oid": "67d2b6901e52438c18c36b9c"}, "remainingTimeMS": 29}
2025-03-13 15:42:24,319 - pymongo.topology - DEBUG - {"topologyId": {"$oid": "67d2b6901e52438c18c36b9c"}, "driverConnectionId": 1, "serverHost": "3.144.134.141", "serverPort": 27017, "awaited": false, "message": "Server heartbeat started"}
2025-03-13 15:42:24,565 - pymongo.topology - DEBUG - {"topologyId": {"$oid": "67d2b6901e52438c18c36b9c"}, "driverConnectionId": 1, "serverConnectionId": 13155, "serverHost": "3.144.134.141", "serverPort": 27017, "awaited": false, "durationMS": 234.00000000037835, "reply": "{\"helloOk\": true, \"ismaster\": true, \"topologyVersion\": {\"processId\": {\"$oid\": \"67b7e5814f77c1a87c56d054\"}}, \"maxBsonObjectSize\": 16777216, \"maxMessageSizeBytes\": 48000000, \"maxWriteBatchSize\": 100000, \"localTime\": {\"$date\": \"2025-03-13T10:42:24.595Z\"}, \"logicalSessionTimeoutMinutes\": 30, \"connectionId\": 13155, \"maxWireVersion\": 25, \"ok\": 1.0}", "message": "Server heartbeat succeeded"}
2025-03-13 15:42:24,566 - pymongo.connection - DEBUG - {"clientId": {"$oid": "67d2b6901e52438c18c36b9c"}, "message": "Connection pool ready", "serverHost": "3.144.134.141", "serverPort": 27017}
2025-03-13 15:42:24,566 - pymongo.topology - DEBUG - {"topologyId": {"$oid": "67d2b6901e52438c18c36b9c"}, "previousDescription": "<TopologyDescription id: 67d2b6901e52438c18c36b9c, topology_type: Unknown, servers: [<ServerDescription ('3.144.134.141', 27017) server_type: Unknown, rtt: None>]>", "newDescription": "<TopologyDescription id: 67d2b6901e52438c18c36b9c, topology_type: Single, servers: [<ServerDescription ('3.144.134.141', 27017) server_type: Standalone, rtt: 0.23400000000037835>]>", "message": "Topology description changed"}
2025-03-13 15:42:24,567 - pymongo.serverSelection - DEBUG - {"message": "Server selection succeeded", "selector": "Primary()", "operation": "ping", "topologyDescription": "<TopologyDescription id: 67d2b6901e52438c18c36b9c, topology_type: Single, servers: [<ServerDescription ('3.144.134.141', 27017) server_type: Standalone, rtt: 0.23400000000037835>]>", "clientId": {"$oid": "67d2b6901e52438c18c36b9c"}, "serverHost": "3.144.134.141", "serverPort": 27017}
2025-03-13 15:42:24,569 - pymongo.connection - DEBUG - {"clientId": {"$oid": "67d2b6901e52438c18c36b9c"}, "message": "Connection checkout started", "serverHost": "3.144.134.141", "serverPort": 27017}
2025-03-13 15:42:24,570 - pymongo.topology - DEBUG - {"topologyId": {"$oid": "67d2b6901e52438c18c36b9c"}, "driverConnectionId": 1, "serverConnectionId": 13155, "serverHost": "3.144.134.141", "serverPort": 27017, "awaited": true, "message": "Server heartbeat started"}
2025-03-13 15:42:24,570 - pymongo.connection - DEBUG - {"clientId": {"$oid": "67d2b6901e52438c18c36b9c"}, "message": "Connection created", "serverHost": "3.144.134.141", "serverPort": 27017, "driverConnectionId": 1}
2025-03-13 15:42:25,326 - pymongo.connection - DEBUG - {"clientId": {"$oid": "67d2b6901e52438c18c36b9c"}, "message": "Connection ready", "serverHost": "3.144.134.141", "serverPort": 27017, "driverConnectionId": 1, "durationMS": 0.5}
2025-03-13 15:42:25,326 - pymongo.connection - DEBUG - {"clientId": {"$oid": "67d2b6901e52438c18c36b9c"}, "message": "Connection checked out", "serverHost": "3.144.134.141", "serverPort": 27017, "driverConnectionId": 1, "durationMS": 0.75}
2025-03-13 15:42:25,326 - pymongo.command - DEBUG - {"clientId": {"$oid": "67d2b6901e52438c18c36b9c"}, "message": "Command started", "command": "{\"ping\": 1, \"lsid\": {\"id\": {\"$binary\": {\"base64\": \"m/SmtYFiRaqmrvMUrCKjTg==\", \"subType\": \"04\"}}}, \"$db\": \"opal_server\"}", "commandName": "ping", "databaseName": "opal_server", "requestId": 6334, "operationId": 6334, "driverConnectionId": 1, "serverConnectionId": 13157, "serverHost": "3.144.134.141", "serverPort": 27017}
2025-03-13 15:42:25,574 - pymongo.command - DEBUG - {"clientId": {"$oid": "67d2b6901e52438c18c36b9c"}, "message": "Command succeeded", "durationMS": 248.148, "reply": "{\"ok\": 1.0}", "commandName": "ping", "databaseName": "opal_server", "requestId": 6334, "operationId": 6334, "driverConnectionId": 1, "serverConnectionId": 13157, "serverHost": "3.144.134.141", "serverPort": 27017}
2025-03-13 15:42:25,575 - pymongo.connection - DEBUG - {"clientId": {"$oid": "67d2b6901e52438c18c36b9c"}, "message": "Connection checked in", "serverHost": "3.144.134.141", "serverPort": 27017, "driverConnectionId": 1}
2025-03-13 15:42:34,822 - pymongo.topology - DEBUG - {"topologyId": {"$oid": "67d2b6901e52438c18c36b9c"}, "driverConnectionId": 1, "serverConnectionId": 13155, "serverHost": "3.144.134.141", "serverPort": 27017, "awaited": true, "durationMS": 10250.0, "reply": "{\"isWritablePrimary\": true, \"topologyVersion\": {\"processId\": {\"$oid\": \"67b7e5814f77c1a87c56d054\"}}, \"maxBsonObjectSize\": 16777216, \"maxMessageSizeBytes\": 48000000, \"maxWriteBatchSize\": 100000, \"localTime\": {\"$date\": \"2025-03-13T10:42:34.853Z\"}, \"logicalSessionTimeoutMinutes\": 30, \"connectionId\": 13155, \"maxWireVersion\": 25, \"ok\": 1.0}", "message": "Server heartbeat succeeded"}
2025-03-13 15:42:34,824 - pymongo.topology - DEBUG - {"topologyId": {"$oid": "67d2b6901e52438c18c36b9c"}, "driverConnectionId": 1, "serverConnectionId": 13155, "serverHost": "3.144.134.141", "serverPort": 27017, "awaited": true, "message": "Server heartbeat started"}
2025-03-13 15:42:36,061 - app.api.endpoints.reports - INFO - Processing violation trends request: start_date=datetime.datetime(2025, 3, 13, 10, 42, 32, 208000, tzinfo=TzInfo(UTC)) end_date=datetime.datetime(2025, 3, 13, 10, 42, 32, 208000, tzinfo=TzInfo(UTC)) group_by='day' days=30 driver_uuid='string'
2025-03-13 15:42:36,061 - app.services.predictive_analytics - INFO - Analyzing violation trends from 2025-03-13 10:42:32.208000+00:00 to 2025-03-13 10:42:32.208000+00:00 for driver string
2025-03-13 15:42:36,062 - app.db.repositories.data_repository - INFO - Querying violations from 2025-03-13 10:42:32.208000+00:00 to 2025-03-13 10:42:32.208000+00:00 for driver string
2025-03-13 15:42:36,062 - app.db.repositories.data_repository - DEBUG - Executing pipeline: [{'$match': {'event_time': {'$gte': datetime.datetime(2025, 3, 13, 10, 42, 32, 208000, tzinfo=TzInfo(UTC)), '$lte': datetime.datetime(2025, 3, 13, 10, 42, 32, 208000, tzinfo=TzInfo(UTC))}, 'driver_uuid': 'string'}}, {'$group': {'_id': {'time_period': {'$dateToString': {'format': '%Y-%m-%d', 'date': '$event_time'}}, 'violation_type': '$violation_type', 'driver_uuid': '$driver_uuid', 'driver_name': '$driver_name'}, 'count': {'$sum': 1}, 'high_severity_count': {'$sum': {'$cond': [{'$eq': ['$severity', 'HIGH']}, 1, 0]}}}}, {'$sort': {'_id.time_period': 1, '_id.driver_name': 1}}]
2025-03-13 15:42:36,062 - pymongo.serverSelection - DEBUG - {"message": "Server selection started", "selector": "Primary()", "operation": "aggregate", "topologyDescription": "<TopologyDescription id: 67d2b6901e52438c18c36b9c, topology_type: Single, servers: [<ServerDescription ('3.144.134.141', 27017) server_type: Standalone, rtt: 0.23720000000030267>]>", "clientId": {"$oid": "67d2b6901e52438c18c36b9c"}}
2025-03-13 15:42:36,063 - pymongo.serverSelection - DEBUG - {"message": "Server selection succeeded", "selector": "Primary()", "operation": "aggregate", "topologyDescription": "<TopologyDescription id: 67d2b6901e52438c18c36b9c, topology_type: Single, servers: [<ServerDescription ('3.144.134.141', 27017) server_type: Standalone, rtt: 0.23720000000030267>]>", "clientId": {"$oid": "67d2b6901e52438c18c36b9c"}, "serverHost": "3.144.134.141", "serverPort": 27017}
2025-03-13 15:42:36,064 - pymongo.connection - DEBUG - {"clientId": {"$oid": "67d2b6901e52438c18c36b9c"}, "message": "Connection checkout started", "serverHost": "3.144.134.141", "serverPort": 27017}
2025-03-13 15:42:36,064 - pymongo.connection - DEBUG - {"clientId": {"$oid": "67d2b6901e52438c18c36b9c"}, "message": "Connection checked out", "serverHost": "3.144.134.141", "serverPort": 27017, "driverConnectionId": 1, "durationMS": 0.0}
2025-03-13 15:42:36,064 - pymongo.command - DEBUG - {"clientId": {"$oid": "67d2b6901e52438c18c36b9c"}, "message": "Command started", "command": "{\"aggregate\": \"violations\", \"pipeline\": [{\"$match\": {\"event_time\": {\"$gte\": {\"$date\": \"2025-03-13T10:42:32.208Z\"}, \"$lte\": {\"$date\": \"2025-03-13T10:42:32.208Z\"}}, \"driver_uuid\": \"string\"}}, {\"$group\": {\"_id\": {\"time_period\": {\"$dateToString\": {\"format\": \"%Y-%m-%d\", \"date\": \"$event_time\"}}, \"violation_type\": \"$violation_type\", \"driver_uuid\": \"$driver_uuid\", \"driver_name\": \"$driver_name\"}, \"count\": {\"$sum\": 1}, \"high_severity_count\": {\"$sum\": {\"$cond\": [{\"$eq\": [\"$severity\", \"HIGH\"]}, 1]}}}}, {\"$sort\": {\"_id.time_period\": 1, \"_id.driver_name\": 1}}], \"lsid\": {\"id\": {\"$binary\": {\"base64\": \"m/SmtYFiRaqmrvMUrCKjTg==\", \"subType\": \"04\"}}}, \"$db\": \"opal_server\"}", "commandName": "aggregate", "databaseName": "opal_server", "requestId": 26500, "operationId": 26500, "driverConnectionId": 1, "serverConnectionId": 13157, "serverHost": "3.144.134.141", "serverPort": 27017}
2025-03-13 15:42:36,322 - pymongo.command - DEBUG - {"clientId": {"$oid": "67d2b6901e52438c18c36b9c"}, "message": "Command succeeded", "durationMS": 258.152, "reply": "{\"cursor\": {\"ns\": \"opal_server.violations\"}, \"ok\": 1.0}", "commandName": "aggregate", "databaseName": "opal_server", "requestId": 26500, "operationId": 26500, "driverConnectionId": 1, "serverConnectionId": 13157, "serverHost": "3.144.134.141", "serverPort": 27017}
2025-03-13 15:42:36,322 - pymongo.connection - DEBUG - {"clientId": {"$oid": "67d2b6901e52438c18c36b9c"}, "message": "Connection checked in", "serverHost": "3.144.134.141", "serverPort": 27017, "driverConnectionId": 1}
2025-03-13 15:42:36,323 - app.db.repositories.data_repository - INFO - Found 0 trend records
2025-03-13 15:42:36,324 - app.services.predictive_analytics - INFO - Processed 0 time period-driver combinations
2025-03-13 15:42:44,822 - pymongo.topology - DEBUG - {"topologyId": {"$oid": "67d2b6901e52438c18c36b9c"}, "driverConnectionId": 1, "serverConnectionId": 13155, "serverHost": "3.144.134.141", "serverPort": 27017, "awaited": true, "durationMS": 10000.0, "reply": "{\"isWritablePrimary\": true, \"topologyVersion\": {\"processId\": {\"$oid\": \"67b7e5814f77c1a87c56d054\"}}, \"maxBsonObjectSize\": 16777216, \"maxMessageSizeBytes\": 48000000, \"maxWriteBatchSize\": 100000, \"localTime\": {\"$date\": \"2025-03-13T10:42:44.853Z\"}, \"logicalSessionTimeoutMinutes\": 30, \"connectionId\": 13155, \"maxWireVersion\": 25, \"ok\": 1.0}", "message": "Server heartbeat succeeded"}
2025-03-13 15:42:44,825 - pymongo.topology - DEBUG - {"topologyId": {"$oid": "67d2b6901e52438c18c36b9c"}, "driverConnectionId": 1, "serverConnectionId": 13155, "serverHost": "3.144.134.141", "serverPort": 27017, "awaited": true, "message": "Server heartbeat started"}
2025-03-13 15:42:54,509 - app.api.endpoints.reports - INFO - Processing violation trends request: start_date=datetime.datetime(2025, 3, 1, 10, 42, 32, 208000, tzinfo=TzInfo(UTC)) end_date=datetime.datetime(2025, 3, 13, 10, 42, 32, 208000, tzinfo=TzInfo(UTC)) group_by='day' days=30 driver_uuid=''
2025-03-13 15:42:54,509 - app.services.predictive_analytics - INFO - Analyzing violation trends from 2025-03-01 10:42:32.208000+00:00 to 2025-03-13 10:42:32.208000+00:00 for all drivers
2025-03-13 15:42:54,509 - app.db.repositories.data_repository - INFO - Querying violations from 2025-03-01 10:42:32.208000+00:00 to 2025-03-13 10:42:32.208000+00:00
2025-03-13 15:42:54,509 - app.db.repositories.data_repository - DEBUG - Executing pipeline: [{'$match': {'event_time': {'$gte': datetime.datetime(2025, 3, 1, 10, 42, 32, 208000, tzinfo=TzInfo(UTC)), '$lte': datetime.datetime(2025, 3, 13, 10, 42, 32, 208000, tzinfo=TzInfo(UTC))}}}, {'$group': {'_id': {'time_period': {'$dateToString': {'format': '%Y-%m-%d', 'date': '$event_time'}}, 'violation_type': '$violation_type', 'driver_uuid': '$driver_uuid', 'driver_name': '$driver_name'}, 'count': {'$sum': 1}, 'high_severity_count': {'$sum': {'$cond': [{'$eq': ['$severity', 'HIGH']}, 1, 0]}}}}, {'$sort': {'_id.time_period': 1, '_id.driver_name': 1}}]
2025-03-13 15:42:54,510 - pymongo.serverSelection - DEBUG - {"message": "Server selection started", "selector": "Primary()", "operation": "aggregate", "topologyDescription": "<TopologyDescription id: 67d2b6901e52438c18c36b9c, topology_type: Single, servers: [<ServerDescription ('3.144.134.141', 27017) server_type: Standalone, rtt: 0.23656000000031782>]>", "clientId": {"$oid": "67d2b6901e52438c18c36b9c"}}
2025-03-13 15:42:54,510 - pymongo.serverSelection - DEBUG - {"message": "Server selection succeeded", "selector": "Primary()", "operation": "aggregate", "topologyDescription": "<TopologyDescription id: 67d2b6901e52438c18c36b9c, topology_type: Single, servers: [<ServerDescription ('3.144.134.141', 27017) server_type: Standalone, rtt: 0.23656000000031782>]>", "clientId": {"$oid": "67d2b6901e52438c18c36b9c"}, "serverHost": "3.144.134.141", "serverPort": 27017}
2025-03-13 15:42:54,510 - pymongo.connection - DEBUG - {"clientId": {"$oid": "67d2b6901e52438c18c36b9c"}, "message": "Connection checkout started", "serverHost": "3.144.134.141", "serverPort": 27017}
2025-03-13 15:42:54,511 - pymongo.connection - DEBUG - {"clientId": {"$oid": "67d2b6901e52438c18c36b9c"}, "message": "Connection checked out", "serverHost": "3.144.134.141", "serverPort": 27017, "driverConnectionId": 1, "durationMS": 0.0}
2025-03-13 15:42:54,511 - pymongo.command - DEBUG - {"clientId": {"$oid": "67d2b6901e52438c18c36b9c"}, "message": "Command started", "command": "{\"aggregate\": \"violations\", \"pipeline\": [{\"$match\": {\"event_time\": {\"$gte\": {\"$date\": \"2025-03-01T10:42:32.208Z\"}, \"$lte\": {\"$date\": \"2025-03-13T10:42:32.208Z\"}}}}, {\"$group\": {\"_id\": {\"time_period\": {\"$dateToString\": {\"format\": \"%Y-%m-%d\", \"date\": \"$event_time\"}}, \"violation_type\": \"$violation_type\", \"driver_uuid\": \"$driver_uuid\", \"driver_name\": \"$driver_name\"}, \"count\": {\"$sum\": 1}, \"high_severity_count\": {\"$sum\": {\"$cond\": [{\"$eq\": [\"$severity\", \"HIGH\"]}, 1]}}}}, {\"$sort\": {\"_id.time_period\": 1, \"_id.driver_name\": 1}}], \"lsid\": {\"id\": {\"$binary\": {\"base64\": \"m/SmtYFiRaqmrvMUrCKjTg==\", \"subType\": \"04\"}}}, \"$db\": \"opal_server\"}", "commandName": "aggregate", "databaseName": "opal_server", "requestId": 19169, "operationId": 19169, "driverConnectionId": 1, "serverConnectionId": 13157, "serverHost": "3.144.134.141", "serverPort": 27017}
2025-03-13 15:42:54,824 - pymongo.topology - DEBUG - {"topologyId": {"$oid": "67d2b6901e52438c18c36b9c"}, "driverConnectionId": 1, "serverConnectionId": 13155, "serverHost": "3.144.134.141", "serverPort": 27017, "awaited": true, "durationMS": 10000.0, "reply": "{\"isWritablePrimary\": true, \"topologyVersion\": {\"processId\": {\"$oid\": \"67b7e5814f77c1a87c56d054\"}}, \"maxBsonObjectSize\": 16777216, \"maxMessageSizeBytes\": 48000000, \"maxWriteBatchSize\": 100000, \"localTime\": {\"$date\": \"2025-03-13T10:42:54.854Z\"}, \"logicalSessionTimeoutMinutes\": 30, \"connectionId\": 13155, \"maxWireVersion\": 25, \"ok\": 1.0}", "message": "Server heartbeat succeeded"}
2025-03-13 15:42:54,825 - pymongo.topology - DEBUG - {"topologyId": {"$oid": "67d2b6901e52438c18c36b9c"}, "driverConnectionId": 1, "serverConnectionId": 13155, "serverHost": "3.144.134.141", "serverPort": 27017, "awaited": true, "message": "Server heartbeat started"}
2025-03-13 15:42:55,034 - pymongo.command - DEBUG - {"clientId": {"$oid": "67d2b6901e52438c18c36b9c"}, "message": "Command succeeded", "durationMS": 522.517, "reply": "{\"cursor\": {\"firstBatch\": [{\"_id\": {\"time_period\": \"2025-03-03\", \"violation_type\": \"SPEED_MEDIUM\", \"driver_uuid\": \"fb6b6c56-18fd-4602-aa8d-10d95f46f3d5\", \"driver_name\": \"AMIR 95957295\"}, \"count\": 29}, {\"_id\": {\"time_period\": \"2025-03-03\", \"violation_type\": \"SPEED_LOW\", \"driver_uuid\": \"fb6b6c56-18fd-4602-aa8d-10d95f46f3d5\", \"driver_name\": \"AMIR 95957295\"}, \"count\": 9}, {\"_id\": {\"time_period\": \"2025-03-03\", \"violation_type\": \"SPEED_MEDIUM\", \"driver_uuid\": \"3dd80f61-5ed1-4038-b3a8-5d2e37759893\", \"driver_name\": \"DALER SINGH\"}, \"count\": 19}, {\"_id\": {\"time_period\": \"2025-03-03\", \"violation_type\": \"SPEED_LOW\", \"driver_uuid\": \"3dd80f61-5ed1-4038-b3a8-5d2e37759893\", \"driver_name\": \"DALER SINGH\"}, \"count\": 29}, {\"_id\": {\"time_period\": \"2025-03-03\", \"violation_type\": \"SPEED_MEDIUM\", \"driver_uuid\": \"7463170a-de85-4c5d-a77b-b506d939aca1\", \"driver_name\": \"GUL ZAMAN #94378054\"}, \"count\": 6}, {\"_id\": {\"time_period\": \"2025-03-03\", \"violation_type\": \"SPEED_LOW\", \"driver_uuid\": \"7463170a-de85-4c5d-a77b-...", "commandName": "aggregate", "databaseName": "opal_server", "requestId": 19169, "operationId": 19169, "driverConnectionId": 1, "serverConnectionId": 13157, "serverHost": "3.144.134.141", "serverPort": 27017}
2025-03-13 15:42:55,035 - pymongo.connection - DEBUG - {"clientId": {"$oid": "67d2b6901e52438c18c36b9c"}, "message": "Connection checked in", "serverHost": "3.144.134.141", "serverPort": 27017, "driverConnectionId": 1}
2025-03-13 15:42:55,036 - pymongo.serverSelection - DEBUG - {"message": "Server selection started", "selector": "<function any_server_selector at 0x0000014891928720>", "operation": "getMore", "topologyDescription": "<TopologyDescription id: 67d2b6901e52438c18c36b9c, topology_type: Single, servers: [<ServerDescription ('3.144.134.141', 27017) server_type: Standalone, rtt: 0.23604800000032994>]>", "clientId": {"$oid": "67d2b6901e52438c18c36b9c"}}
2025-03-13 15:42:55,037 - pymongo.serverSelection - DEBUG - {"message": "Server selection succeeded", "selector": "<function any_server_selector at 0x0000014891928720>", "operation": "getMore", "topologyDescription": "<TopologyDescription id: 67d2b6901e52438c18c36b9c, topology_type: Single, servers: [<ServerDescription ('3.144.134.141', 27017) server_type: Standalone, rtt: 0.23604800000032994>]>", "clientId": {"$oid": "67d2b6901e52438c18c36b9c"}, "serverHost": "3.144.134.141", "serverPort": 27017}
2025-03-13 15:42:55,037 - pymongo.connection - DEBUG - {"clientId": {"$oid": "67d2b6901e52438c18c36b9c"}, "message": "Connection checkout started", "serverHost": "3.144.134.141", "serverPort": 27017}
2025-03-13 15:42:55,038 - pymongo.connection - DEBUG - {"clientId": {"$oid": "67d2b6901e52438c18c36b9c"}, "message": "Connection checked out", "serverHost": "3.144.134.141", "serverPort": 27017, "driverConnectionId": 1, "durationMS": 0.01600000000144064}
2025-03-13 15:42:55,038 - pymongo.command - DEBUG - {"clientId": {"$oid": "67d2b6901e52438c18c36b9c"}, "message": "Command started", "command": "{\"getMore\": 9199450314583944360, \"collection\": \"violations\", \"lsid\": {\"id\": {\"$binary\": {\"base64\": \"m/SmtYFiRaqmrvMUrCKjTg==\", \"subType\": \"04\"}}}, \"$db\": \"opal_server\"}", "commandName": "getMore", "databaseName": "opal_server", "requestId": 15724, "operationId": 15724, "driverConnectionId": 1, "serverConnectionId": 13157, "serverHost": "3.144.134.141", "serverPort": 27017}
2025-03-13 15:42:56,039 - pymongo.command - DEBUG - {"clientId": {"$oid": "67d2b6901e52438c18c36b9c"}, "message": "Command succeeded", "durationMS": 1000.6170000000001, "reply": "{\"cursor\": {\"nextBatch\": [{\"_id\": {\"time_period\": \"2025-03-04\", \"violation_type\": \"SPEED_LOW\", \"driver_uuid\": \"12861265\", \"driver_name\": \"Unknown\"}, \"count\": 2}, {\"_id\": {\"time_period\": \"2025-03-04\", \"violation_type\": \"SPEED_HIGH\", \"driver_uuid\": \"3169805\", \"driver_name\": \"Unknown\"}, \"count\": 3, \"high_severity_count\": 3}, {\"_id\": {\"time_period\": \"2025-03-04\", \"violation_type\": \"SPEED_HIGH\", \"driver_uuid\": \"6449862\", \"driver_name\": \"Unknown\"}, \"count\": 1, \"high_severity_count\": 1}, {\"_id\": {\"time_period\": \"2025-03-04\", \"violation_type\": \"SPEED_MEDIUM\", \"driver_uuid\": \"7471302\", \"driver_name\": \"Unknown\"}, \"count\": 2}, {\"_id\": {\"time_period\": \"2025-03-04\", \"violation_type\": \"SPEED_LOW\", \"driver_uuid\": \"4574031\", \"driver_name\": \"Unknown\"}, \"count\": 1}, {\"_id\": {\"time_period\": \"2025-03-04\", \"violation_type\": \"SPEED_LOW\", \"driver_uuid\": \"10059296\", \"driver_name\": \"Unknown\"}, \"count\": 17}, {\"_id\": {\"time_period\": \"2025-03-04\", \"violation_type\": \"SPEED_LOW\", \"driver_uuid\": \"10975821\", \"driver_...", "commandName": "getMore", "databaseName": "opal_server", "requestId": 15724, "operationId": 15724, "driverConnectionId": 1, "serverConnectionId": 13157, "serverHost": "3.144.134.141", "serverPort": 27017}
2025-03-13 15:42:56,040 - pymongo.connection - DEBUG - {"clientId": {"$oid": "67d2b6901e52438c18c36b9c"}, "message": "Connection checked in", "serverHost": "3.144.134.141", "serverPort": 27017, "driverConnectionId": 1}
2025-03-13 15:42:56,040 - app.db.repositories.data_repository - INFO - Found 1379 trend records
2025-03-13 15:42:56,043 - app.services.predictive_analytics - INFO - Processed 705 time period-driver combinations
2025-03-13 15:43:04,831 - pymongo.topology - DEBUG - {"topologyId": {"$oid": "67d2b6901e52438c18c36b9c"}, "driverConnectionId": 1, "serverConnectionId": 13155, "serverHost": "3.144.134.141", "serverPort": 27017, "awaited": true, "durationMS": 10000.0, "reply": "{\"isWritablePrimary\": true, \"topologyVersion\": {\"processId\": {\"$oid\": \"67b7e5814f77c1a87c56d054\"}}, \"maxBsonObjectSize\": 16777216, \"maxMessageSizeBytes\": 48000000, \"maxWriteBatchSize\": 100000, \"localTime\": {\"$date\": \"2025-03-13T10:43:04.861Z\"}, \"logicalSessionTimeoutMinutes\": 30, \"connectionId\": 13155, \"maxWireVersion\": 25, \"ok\": 1.0}", "message": "Server heartbeat succeeded"}
2025-03-13 15:43:04,832 - pymongo.topology - DEBUG - {"topologyId": {"$oid": "67d2b6901e52438c18c36b9c"}, "driverConnectionId": 1, "serverConnectionId": 13155, "serverHost": "3.144.134.141", "serverPort": 27017, "awaited": true, "message": "Server heartbeat started"}
2025-03-13 15:43:14,840 - pymongo.topology - DEBUG - {"topologyId": {"$oid": "67d2b6901e52438c18c36b9c"}, "driverConnectionId": 1, "serverConnectionId": 13155, "serverHost": "3.144.134.141", "serverPort": 27017, "awaited": true, "durationMS": 10015.999999999622, "reply": "{\"isWritablePrimary\": true, \"topologyVersion\": {\"processId\": {\"$oid\": \"67b7e5814f77c1a87c56d054\"}}, \"maxBsonObjectSize\": 16777216, \"maxMessageSizeBytes\": 48000000, \"maxWriteBatchSize\": 100000, \"localTime\": {\"$date\": \"2025-03-13T10:43:14.870Z\"}, \"logicalSessionTimeoutMinutes\": 30, \"connectionId\": 13155, \"maxWireVersion\": 25, \"ok\": 1.0}", "message": "Server heartbeat succeeded"}
2025-03-13 15:43:14,841 - pymongo.topology - DEBUG - {"topologyId": {"$oid": "67d2b6901e52438c18c36b9c"}, "driverConnectionId": 1, "serverConnectionId": 13155, "serverHost": "3.144.134.141", "serverPort": 27017, "awaited": true, "message": "Server heartbeat started"}
2025-03-13 15:43:24,850 - pymongo.topology - DEBUG - {"topologyId": {"$oid": "67d2b6901e52438c18c36b9c"}, "driverConnectionId": 1, "serverConnectionId": 13155, "serverHost": "3.144.134.141", "serverPort": 27017, "awaited": true, "durationMS": 10015.000000001237, "reply": "{\"isWritablePrimary\": true, \"topologyVersion\": {\"processId\": {\"$oid\": \"67b7e5814f77c1a87c56d054\"}}, \"maxBsonObjectSize\": 16777216, \"maxMessageSizeBytes\": 48000000, \"maxWriteBatchSize\": 100000, \"localTime\": {\"$date\": \"2025-03-13T10:43:24.881Z\"}, \"logicalSessionTimeoutMinutes\": 30, \"connectionId\": 13155, \"maxWireVersion\": 25, \"ok\": 1.0}", "message": "Server heartbeat succeeded"}
2025-03-13 15:43:24,851 - pymongo.topology - DEBUG - {"topologyId": {"$oid": "67d2b6901e52438c18c36b9c"}, "driverConnectionId": 1, "serverConnectionId": 13155, "serverHost": "3.144.134.141", "serverPort": 27017, "awaited": true, "message": "Server heartbeat started"}
2025-03-13 15:43:33,041 - app.api.endpoints.reports - INFO - Processing violation trends request: start_date=datetime.datetime(2025, 3, 1, 10, 42, 32, 208000, tzinfo=TzInfo(UTC)) end_date=datetime.datetime(2025, 3, 13, 10, 42, 32, 208000, tzinfo=TzInfo(UTC)) group_by='day' days=30 driver_uuid=''
2025-03-13 15:43:33,041 - app.services.predictive_analytics - INFO - Analyzing violation trends from 2025-03-01 10:42:32.208000+00:00 to 2025-03-13 10:42:32.208000+00:00 for all drivers
2025-03-13 15:43:33,041 - app.db.repositories.data_repository - INFO - Querying violations from 2025-03-01 10:42:32.208000+00:00 to 2025-03-13 10:42:32.208000+00:00
2025-03-13 15:43:33,042 - app.db.repositories.data_repository - DEBUG - Executing pipeline: [{'$match': {'event_time': {'$gte': datetime.datetime(2025, 3, 1, 10, 42, 32, 208000, tzinfo=TzInfo(UTC)), '$lte': datetime.datetime(2025, 3, 13, 10, 42, 32, 208000, tzinfo=TzInfo(UTC))}}}, {'$group': {'_id': {'time_period': {'$dateToString': {'format': '%Y-%m-%d', 'date': '$event_time'}}, 'violation_type': '$violation_type', 'driver_uuid': '$driver_uuid', 'driver_name': '$driver_name'}, 'count': {'$sum': 1}, 'high_severity_count': {'$sum': {'$cond': [{'$eq': ['$severity', 'HIGH']}, 1, 0]}}}}, {'$sort': {'_id.time_period': 1, '_id.driver_name': 1}}]
2025-03-13 15:43:33,042 - pymongo.serverSelection - DEBUG - {"message": "Server selection started", "selector": "Primary()", "operation": "aggregate", "topologyDescription": "<TopologyDescription id: 67d2b6901e52438c18c36b9c, topology_type: Single, servers: [<ServerDescription ('3.144.134.141', 27017) server_type: Standalone, rtt: 0.24080857600021738>]>", "clientId": {"$oid": "67d2b6901e52438c18c36b9c"}}
2025-03-13 15:43:33,042 - pymongo.serverSelection - DEBUG - {"message": "Server selection succeeded", "selector": "Primary()", "operation": "aggregate", "topologyDescription": "<TopologyDescription id: 67d2b6901e52438c18c36b9c, topology_type: Single, servers: [<ServerDescription ('3.144.134.141', 27017) server_type: Standalone, rtt: 0.24080857600021738>]>", "clientId": {"$oid": "67d2b6901e52438c18c36b9c"}, "serverHost": "3.144.134.141", "serverPort": 27017}
2025-03-13 15:43:33,043 - pymongo.connection - DEBUG - {"clientId": {"$oid": "67d2b6901e52438c18c36b9c"}, "message": "Connection checkout started", "serverHost": "3.144.134.141", "serverPort": 27017}
2025-03-13 15:43:33,043 - pymongo.connection - DEBUG - {"clientId": {"$oid": "67d2b6901e52438c18c36b9c"}, "message": "Connection checked out", "serverHost": "3.144.134.141", "serverPort": 27017, "driverConnectionId": 1, "durationMS": 0.0}
2025-03-13 15:43:33,044 - pymongo.command - DEBUG - {"clientId": {"$oid": "67d2b6901e52438c18c36b9c"}, "message": "Command started", "command": "{\"aggregate\": \"violations\", \"pipeline\": [{\"$match\": {\"event_time\": {\"$gte\": {\"$date\": \"2025-03-01T10:42:32.208Z\"}, \"$lte\": {\"$date\": \"2025-03-13T10:42:32.208Z\"}}}}, {\"$group\": {\"_id\": {\"time_period\": {\"$dateToString\": {\"format\": \"%Y-%m-%d\", \"date\": \"$event_time\"}}, \"violation_type\": \"$violation_type\", \"driver_uuid\": \"$driver_uuid\", \"driver_name\": \"$driver_name\"}, \"count\": {\"$sum\": 1}, \"high_severity_count\": {\"$sum\": {\"$cond\": [{\"$eq\": [\"$severity\", \"HIGH\"]}, 1]}}}}, {\"$sort\": {\"_id.time_period\": 1, \"_id.driver_name\": 1}}], \"lsid\": {\"id\": {\"$binary\": {\"base64\": \"m/SmtYFiRaqmrvMUrCKjTg==\", \"subType\": \"04\"}}}, \"$db\": \"opal_server\"}", "commandName": "aggregate", "databaseName": "opal_server", "requestId": 11478, "operationId": 11478, "driverConnectionId": 1, "serverConnectionId": 13157, "serverHost": "3.144.134.141", "serverPort": 27017}
2025-03-13 15:43:33,564 - pymongo.command - DEBUG - {"clientId": {"$oid": "67d2b6901e52438c18c36b9c"}, "message": "Command succeeded", "durationMS": 520.535, "reply": "{\"cursor\": {\"firstBatch\": [{\"_id\": {\"time_period\": \"2025-03-03\", \"violation_type\": \"SPEED_MEDIUM\", \"driver_uuid\": \"fb6b6c56-18fd-4602-aa8d-10d95f46f3d5\", \"driver_name\": \"AMIR 95957295\"}, \"count\": 29}, {\"_id\": {\"time_period\": \"2025-03-03\", \"violation_type\": \"SPEED_LOW\", \"driver_uuid\": \"fb6b6c56-18fd-4602-aa8d-10d95f46f3d5\", \"driver_name\": \"AMIR 95957295\"}, \"count\": 9}, {\"_id\": {\"time_period\": \"2025-03-03\", \"violation_type\": \"SPEED_LOW\", \"driver_uuid\": \"3dd80f61-5ed1-4038-b3a8-5d2e37759893\", \"driver_name\": \"DALER SINGH\"}, \"count\": 29}, {\"_id\": {\"time_period\": \"2025-03-03\", \"violation_type\": \"SPEED_MEDIUM\", \"driver_uuid\": \"3dd80f61-5ed1-4038-b3a8-5d2e37759893\", \"driver_name\": \"DALER SINGH\"}, \"count\": 19}, {\"_id\": {\"time_period\": \"2025-03-03\", \"violation_type\": \"SPEED_LOW\", \"driver_uuid\": \"7463170a-de85-4c5d-a77b-b506d939aca1\", \"driver_name\": \"GUL ZAMAN #94378054\"}, \"count\": 18}, {\"_id\": {\"time_period\": \"2025-03-03\", \"violation_type\": \"SPEED_MEDIUM\", \"driver_uuid\": \"7463170a-de85-4c5d-a77b...", "commandName": "aggregate", "databaseName": "opal_server", "requestId": 11478, "operationId": 11478, "driverConnectionId": 1, "serverConnectionId": 13157, "serverHost": "3.144.134.141", "serverPort": 27017}
2025-03-13 15:43:33,564 - pymongo.connection - DEBUG - {"clientId": {"$oid": "67d2b6901e52438c18c36b9c"}, "message": "Connection checked in", "serverHost": "3.144.134.141", "serverPort": 27017, "driverConnectionId": 1}
2025-03-13 15:43:33,565 - pymongo.serverSelection - DEBUG - {"message": "Server selection started", "selector": "<function any_server_selector at 0x0000014891928720>", "operation": "getMore", "topologyDescription": "<TopologyDescription id: 67d2b6901e52438c18c36b9c, topology_type: Single, servers: [<ServerDescription ('3.144.134.141', 27017) server_type: Standalone, rtt: 0.24080857600021738>]>", "clientId": {"$oid": "67d2b6901e52438c18c36b9c"}}
2025-03-13 15:43:33,565 - pymongo.serverSelection - DEBUG - {"message": "Server selection succeeded", "selector": "<function any_server_selector at 0x0000014891928720>", "operation": "getMore", "topologyDescription": "<TopologyDescription id: 67d2b6901e52438c18c36b9c, topology_type: Single, servers: [<ServerDescription ('3.144.134.141', 27017) server_type: Standalone, rtt: 0.24080857600021738>]>", "clientId": {"$oid": "67d2b6901e52438c18c36b9c"}, "serverHost": "3.144.134.141", "serverPort": 27017}
2025-03-13 15:43:33,567 - pymongo.connection - DEBUG - {"clientId": {"$oid": "67d2b6901e52438c18c36b9c"}, "message": "Connection checkout started", "serverHost": "3.144.134.141", "serverPort": 27017}
2025-03-13 15:43:33,567 - pymongo.connection - DEBUG - {"clientId": {"$oid": "67d2b6901e52438c18c36b9c"}, "message": "Connection checked out", "serverHost": "3.144.134.141", "serverPort": 27017, "driverConnectionId": 1, "durationMS": 0.0}
2025-03-13 15:43:33,568 - pymongo.command - DEBUG - {"clientId": {"$oid": "67d2b6901e52438c18c36b9c"}, "message": "Command started", "command": "{\"getMore\": 4209333645297976733, \"collection\": \"violations\", \"lsid\": {\"id\": {\"$binary\": {\"base64\": \"m/SmtYFiRaqmrvMUrCKjTg==\", \"subType\": \"04\"}}}, \"$db\": \"opal_server\"}", "commandName": "getMore", "databaseName": "opal_server", "requestId": 29358, "operationId": 29358, "driverConnectionId": 1, "serverConnectionId": 13157, "serverHost": "3.144.134.141", "serverPort": 27017}
2025-03-13 15:43:34,639 - pymongo.command - DEBUG - {"clientId": {"$oid": "67d2b6901e52438c18c36b9c"}, "message": "Command succeeded", "durationMS": 1072.079, "reply": "{\"cursor\": {\"nextBatch\": [{\"_id\": {\"time_period\": \"2025-03-04\", \"violation_type\": \"SPEED_LOW\", \"driver_uuid\": \"3379452\", \"driver_name\": \"Unknown\"}, \"count\": 2}, {\"_id\": {\"time_period\": \"2025-03-04\", \"violation_type\": \"SPEED_MEDIUM\", \"driver_uuid\": \"7445245\", \"driver_name\": \"Unknown\"}, \"count\": 6}, {\"_id\": {\"time_period\": \"2025-03-04\", \"violation_type\": \"SPEED_MEDIUM\", \"driver_uuid\": \"13408795\", \"driver_name\": \"Unknown\"}, \"count\": 1}, {\"_id\": {\"time_period\": \"2025-03-04\", \"violation_type\": \"SPEED_MEDIUM\", \"driver_uuid\": \"3494638\", \"driver_name\": \"Unknown\"}, \"count\": 1}, {\"_id\": {\"time_period\": \"2025-03-04\", \"violation_type\": \"SPEED_LOW\", \"driver_uuid\": \"4082833\", \"driver_name\": \"Unknown\"}, \"count\": 2}, {\"_id\": {\"time_period\": \"2025-03-04\", \"violation_type\": \"SPEED_HIGH\", \"driver_uuid\": \"7445245\", \"driver_name\": \"Unknown\"}, \"count\": 6, \"high_severity_count\": 6}, {\"_id\": {\"time_period\": \"2025-03-04\", \"violation_type\": \"SPEED_MEDIUM\", \"driver_uuid\": \"6283463\", \"driver_name\": \"Unknown\"}, \"c...", "commandName": "getMore", "databaseName": "opal_server", "requestId": 29358, "operationId": 29358, "driverConnectionId": 1, "serverConnectionId": 13157, "serverHost": "3.144.134.141", "serverPort": 27017}
2025-03-13 15:43:34,640 - pymongo.connection - DEBUG - {"clientId": {"$oid": "67d2b6901e52438c18c36b9c"}, "message": "Connection checked in", "serverHost": "3.144.134.141", "serverPort": 27017, "driverConnectionId": 1}
2025-03-13 15:43:34,641 - app.db.repositories.data_repository - INFO - Found 1379 trend records
2025-03-13 15:43:34,643 - app.services.predictive_analytics - INFO - Processed 705 time period-driver combinations
2025-03-13 15:43:34,644 - fontTools.ttLib.ttFont - DEBUG - Reading 'head' table from disk
2025-03-13 15:43:34,645 - fontTools.ttLib.ttFont - DEBUG - Decompiling 'head' table
2025-03-13 15:43:34,645 - fontTools.ttLib.ttFont - DEBUG - Reading 'hmtx' table from disk
2025-03-13 15:43:34,645 - fontTools.ttLib.ttFont - DEBUG - Decompiling 'hmtx' table
2025-03-13 15:43:34,645 - fontTools.ttLib.ttFont - DEBUG - Reading 'maxp' table from disk
2025-03-13 15:43:34,645 - fontTools.ttLib.ttFont - DEBUG - Decompiling 'maxp' table
2025-03-13 15:43:34,647 - fontTools.ttLib.ttFont - DEBUG - Reading 'hhea' table from disk
2025-03-13 15:43:34,648 - fontTools.ttLib.ttFont - DEBUG - Decompiling 'hhea' table
2025-03-13 15:43:34,648 - fontTools.ttLib.ttFont - DEBUG - Reading 'post' table from disk
2025-03-13 15:43:34,648 - fontTools.ttLib.ttFont - DEBUG - Decompiling 'post' table
2025-03-13 15:43:34,649 - fontTools.ttLib.ttFont - DEBUG - Reading 'cmap' table from disk
2025-03-13 15:43:34,649 - fontTools.ttLib.ttFont - DEBUG - Decompiling 'cmap' table
2025-03-13 15:43:34,663 - fontTools.ttLib.ttFont - DEBUG - Reading 'OS/2' table from disk
2025-03-13 15:43:34,665 - fontTools.ttLib.ttFont - DEBUG - Decompiling 'OS/2' table
2025-03-13 15:43:34,666 - fontTools.ttLib.ttFont - DEBUG - Reading 'cmap' table from disk
2025-03-13 15:43:34,666 - fontTools.ttLib.ttFont - DEBUG - Decompiling 'cmap' table
2025-03-13 15:43:34,668 - fontTools.ttLib.ttFont - DEBUG - Reading 'name' table from disk
2025-03-13 15:43:34,668 - fontTools.ttLib.ttFont - DEBUG - Decompiling 'name' table
2025-03-13 15:43:34,671 - fontTools.ttLib.ttFont - DEBUG - Reading 'head' table from disk
2025-03-13 15:43:34,671 - fontTools.ttLib.ttFont - DEBUG - Decompiling 'head' table
2025-03-13 15:43:34,671 - fontTools.ttLib.ttFont - DEBUG - Reading 'hmtx' table from disk
2025-03-13 15:43:34,672 - fontTools.ttLib.ttFont - DEBUG - Decompiling 'hmtx' table
2025-03-13 15:43:34,672 - fontTools.ttLib.ttFont - DEBUG - Reading 'maxp' table from disk
2025-03-13 15:43:34,672 - fontTools.ttLib.ttFont - DEBUG - Decompiling 'maxp' table
2025-03-13 15:43:34,672 - fontTools.ttLib.ttFont - DEBUG - Reading 'hhea' table from disk
2025-03-13 15:43:34,672 - fontTools.ttLib.ttFont - DEBUG - Decompiling 'hhea' table
2025-03-13 15:43:34,673 - fontTools.ttLib.ttFont - DEBUG - Reading 'post' table from disk
2025-03-13 15:43:34,673 - fontTools.ttLib.ttFont - DEBUG - Decompiling 'post' table
2025-03-13 15:43:34,673 - fontTools.ttLib.ttFont - DEBUG - Reading 'cmap' table from disk
2025-03-13 15:43:34,674 - fontTools.ttLib.ttFont - DEBUG - Decompiling 'cmap' table
2025-03-13 15:43:34,676 - fontTools.ttLib.ttFont - DEBUG - Reading 'OS/2' table from disk
2025-03-13 15:43:34,676 - fontTools.ttLib.ttFont - DEBUG - Decompiling 'OS/2' table
2025-03-13 15:43:34,677 - fontTools.ttLib.ttFont - DEBUG - Reading 'cmap' table from disk
2025-03-13 15:43:34,677 - fontTools.ttLib.ttFont - DEBUG - Decompiling 'cmap' table
2025-03-13 15:43:34,680 - fontTools.ttLib.ttFont - DEBUG - Reading 'name' table from disk
2025-03-13 15:43:34,680 - fontTools.ttLib.ttFont - DEBUG - Decompiling 'name' table
2025-03-13 15:43:34,689 - PIL.PngImagePlugin - DEBUG - STREAM b'IHDR' 16 13
2025-03-13 15:43:34,689 - PIL.PngImagePlugin - DEBUG - STREAM b'tEXt' 41 25
2025-03-13 15:43:34,689 - PIL.PngImagePlugin - DEBUG - STREAM b'IDAT' 78 35679
2025-03-13 15:43:34,861 - pymongo.topology - DEBUG - {"topologyId": {"$oid": "67d2b6901e52438c18c36b9c"}, "driverConnectionId": 1, "serverConnectionId": 13155, "serverHost": "3.144.134.141", "serverPort": 27017, "awaited": true, "durationMS": 10000.0, "reply": "{\"isWritablePrimary\": true, \"topologyVersion\": {\"processId\": {\"$oid\": \"67b7e5814f77c1a87c56d054\"}}, \"maxBsonObjectSize\": 16777216, \"maxMessageSizeBytes\": 48000000, \"maxWriteBatchSize\": 100000, \"localTime\": {\"$date\": \"2025-03-13T10:43:34.891Z\"}, \"logicalSessionTimeoutMinutes\": 30, \"connectionId\": 13155, \"maxWireVersion\": 25, \"ok\": 1.0}", "message": "Server heartbeat succeeded"}
2025-03-13 15:43:34,861 - pymongo.topology - DEBUG - {"topologyId": {"$oid": "67d2b6901e52438c18c36b9c"}, "driverConnectionId": 1, "serverConnectionId": 13155, "serverHost": "3.144.134.141", "serverPort": 27017, "awaited": true, "message": "Server heartbeat started"}
2025-03-13 15:43:35,694 - matplotlib.pyplot - DEBUG - Loaded backend qtagg version 5.15.10.
2025-03-13 15:43:36,428 - matplotlib.font_manager - DEBUG - findfont: Matching sans\-serif:style=normal:variant=normal:weight=normal:stretch=normal:size=10.0.
2025-03-13 15:43:36,429 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Users\\msameerakram\\AppData\\Local\\anaconda3\\Lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\cmss10.ttf', name='cmss10', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-13 15:43:36,429 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Users\\msameerakram\\AppData\\Local\\anaconda3\\Lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\DejaVuSans-Oblique.ttf', name='DejaVu Sans', style='oblique', variant='normal', weight=400, stretch='normal', size='scalable')) = 1.05
2025-03-13 15:43:36,430 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Users\\msameerakram\\AppData\\Local\\anaconda3\\Lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\cmb10.ttf', name='cmb10', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-13 15:43:36,430 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Users\\msameerakram\\AppData\\Local\\anaconda3\\Lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\DejaVuSansDisplay.ttf', name='DejaVu Sans Display', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-13 15:43:36,430 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Users\\msameerakram\\AppData\\Local\\anaconda3\\Lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\DejaVuSansMono-Oblique.ttf', name='DejaVu Sans Mono', style='oblique', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-03-13 15:43:36,431 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Users\\msameerakram\\AppData\\Local\\anaconda3\\Lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXSizFiveSymReg.ttf', name='STIXSizeFiveSym', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-13 15:43:36,431 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Users\\msameerakram\\AppData\\Local\\anaconda3\\Lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\DejaVuSansMono.ttf', name='DejaVu Sans Mono', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-13 15:43:36,431 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Users\\msameerakram\\AppData\\Local\\anaconda3\\Lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\DejaVuSans.ttf', name='DejaVu Sans', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 0.05
2025-03-13 15:43:36,431 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Users\\msameerakram\\AppData\\Local\\anaconda3\\Lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXGeneralBolIta.ttf', name='STIXGeneral', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2025-03-13 15:43:36,431 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Users\\msameerakram\\AppData\\Local\\anaconda3\\Lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXSizThreeSymBol.ttf', name='STIXSizeThreeSym', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-03-13 15:43:36,432 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Users\\msameerakram\\AppData\\Local\\anaconda3\\Lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXNonUniBolIta.ttf', name='STIXNonUnicode', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2025-03-13 15:43:36,432 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Users\\msameerakram\\AppData\\Local\\anaconda3\\Lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXGeneralItalic.ttf', name='STIXGeneral', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-03-13 15:43:36,432 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Users\\msameerakram\\AppData\\Local\\anaconda3\\Lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\DejaVuSerif-Bold.ttf', name='DejaVu Serif', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-03-13 15:43:36,432 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Users\\msameerakram\\AppData\\Local\\anaconda3\\Lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXSizTwoSymReg.ttf', name='STIXSizeTwoSym', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-13 15:43:36,432 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Users\\msameerakram\\AppData\\Local\\anaconda3\\Lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\DejaVuSansMono-Bold.ttf', name='DejaVu Sans Mono', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-03-13 15:43:36,432 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Users\\msameerakram\\AppData\\Local\\anaconda3\\Lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\cmr10.ttf', name='cmr10', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-13 15:43:36,432 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Users\\msameerakram\\AppData\\Local\\anaconda3\\Lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXSizFourSymBol.ttf', name='STIXSizeFourSym', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-03-13 15:43:36,432 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Users\\msameerakram\\AppData\\Local\\anaconda3\\Lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\cmtt10.ttf', name='cmtt10', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-13 15:43:36,434 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Users\\msameerakram\\AppData\\Local\\anaconda3\\Lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXSizTwoSymBol.ttf', name='STIXSizeTwoSym', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-03-13 15:43:36,434 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Users\\msameerakram\\AppData\\Local\\anaconda3\\Lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXGeneral.ttf', name='STIXGeneral', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-13 15:43:36,434 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Users\\msameerakram\\AppData\\Local\\anaconda3\\Lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXNonUni.ttf', name='STIXNonUnicode', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-13 15:43:36,434 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Users\\msameerakram\\AppData\\Local\\anaconda3\\Lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\DejaVuSansMono-BoldOblique.ttf', name='DejaVu Sans Mono', style='oblique', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2025-03-13 15:43:36,435 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Users\\msameerakram\\AppData\\Local\\anaconda3\\Lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXSizFourSymReg.ttf', name='STIXSizeFourSym', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-13 15:43:36,435 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Users\\msameerakram\\AppData\\Local\\anaconda3\\Lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXSizOneSymReg.ttf', name='STIXSizeOneSym', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-13 15:43:36,435 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Users\\msameerakram\\AppData\\Local\\anaconda3\\Lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXNonUniBol.ttf', name='STIXNonUnicode', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-03-13 15:43:36,436 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Users\\msameerakram\\AppData\\Local\\anaconda3\\Lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXSizThreeSymReg.ttf', name='STIXSizeThreeSym', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-13 15:43:36,436 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Users\\msameerakram\\AppData\\Local\\anaconda3\\Lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\cmsy10.ttf', name='cmsy10', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-13 15:43:36,436 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Users\\msameerakram\\AppData\\Local\\anaconda3\\Lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\DejaVuSans-Bold.ttf', name='DejaVu Sans', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 0.33499999999999996
2025-03-13 15:43:36,437 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Users\\msameerakram\\AppData\\Local\\anaconda3\\Lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\cmmi10.ttf', name='cmmi10', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-13 15:43:36,437 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Users\\msameerakram\\AppData\\Local\\anaconda3\\Lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\DejaVuSans-BoldOblique.ttf', name='DejaVu Sans', style='oblique', variant='normal', weight=700, stretch='normal', size='scalable')) = 1.335
2025-03-13 15:43:36,437 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Users\\msameerakram\\AppData\\Local\\anaconda3\\Lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXGeneralBol.ttf', name='STIXGeneral', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-03-13 15:43:36,437 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Users\\msameerakram\\AppData\\Local\\anaconda3\\Lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\cmex10.ttf', name='cmex10', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-13 15:43:36,437 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Users\\msameerakram\\AppData\\Local\\anaconda3\\Lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\DejaVuSerif-Italic.ttf', name='DejaVu Serif', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-03-13 15:43:36,438 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Users\\msameerakram\\AppData\\Local\\anaconda3\\Lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\DejaVuSerifDisplay.ttf', name='DejaVu Serif Display', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-13 15:43:36,438 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Users\\msameerakram\\AppData\\Local\\anaconda3\\Lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXSizOneSymBol.ttf', name='STIXSizeOneSym', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-03-13 15:43:36,438 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Users\\msameerakram\\AppData\\Local\\anaconda3\\Lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\DejaVuSerif.ttf', name='DejaVu Serif', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-13 15:43:36,438 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Users\\msameerakram\\AppData\\Local\\anaconda3\\Lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXNonUniIta.ttf', name='STIXNonUnicode', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-03-13 15:43:36,438 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Users\\msameerakram\\AppData\\Local\\anaconda3\\Lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\DejaVuSerif-BoldItalic.ttf', name='DejaVu Serif', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2025-03-13 15:43:36,439 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\RAGE.TTF', name='Rage Italic', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-03-13 15:43:36,439 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BOD_PSTC.TTF', name='Bodoni MT', style='normal', variant='normal', weight=300, stretch='normal', size='scalable')) = 10.145
2025-03-13 15:43:36,439 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\FRSCRIPT.TTF', name='French Script MT', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-13 15:43:36,439 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\SitkaVF-Italic.ttf', name='Sitka', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-03-13 15:43:36,439 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\comicz.ttf', name='Comic Sans MS', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2025-03-13 15:43:36,440 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\FTLTLT.TTF', name='Footlight MT Light', style='normal', variant='normal', weight=300, stretch='normal', size='scalable')) = 10.145
2025-03-13 15:43:36,440 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BOOKOS.TTF', name='Bookman Old Style', style='normal', variant='normal', weight=300, stretch='normal', size='scalable')) = 10.145
2025-03-13 15:43:36,440 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BRUSHSCI.TTF', name='Brush Script MT', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-03-13 15:43:36,440 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\FRADMIT.TTF', name='Franklin Gothic Demi', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-03-13 15:43:36,440 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\PALSCRI.TTF', name='Palace Script MT', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-13 15:43:36,440 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ANTQUAB.TTF', name='Book Antiqua', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-03-13 15:43:36,440 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GILSANUB.TTF', name='Gill Sans Ultra Bold', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-13 15:43:36,441 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\georgiaz.ttf', name='Georgia', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2025-03-13 15:43:36,441 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\cambriai.ttf', name='Cambria', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-03-13 15:43:36,441 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\trebucbd.ttf', name='Trebuchet MS', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-03-13 15:43:36,441 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Candarai.ttf', name='Candara', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-03-13 15:43:36,442 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\segoeprb.ttf', name='Segoe Print', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-03-13 15:43:36,442 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ELEPHNT.TTF', name='Elephant', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-13 15:43:36,442 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\HARLOWSI.TTF', name='Harlow Solid Italic', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-03-13 15:43:36,442 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\KUNSTLER.TTF', name='Kunstler Script', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-13 15:43:36,443 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ebrima.ttf', name='Ebrima', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-13 15:43:36,443 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\simsun.ttc', name='SimSun', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-13 15:43:36,443 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\seguisym.ttf', name='Segoe UI Symbol', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-13 15:43:36,444 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ARIALNBI.TTF', name='Arial', style='italic', variant='normal', weight=700, stretch='condensed', size='scalable')) = 7.8986363636363635
2025-03-13 15:43:36,444 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\mvboli.ttf', name='MV Boli', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-13 15:43:36,444 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\comici.ttf', name='Comic Sans MS', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-03-13 15:43:36,444 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LATINWD.TTF', name='Wide Latin', style='normal', variant='normal', weight=400, stretch='expanded', size='scalable')) = 10.25
2025-03-13 15:43:36,444 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\georgiai.ttf', name='Georgia', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-03-13 15:43:36,445 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\verdanaz.ttf', name='Verdana', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 4.971363636363637
2025-03-13 15:43:36,445 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\micross.ttf', name='Microsoft Sans Serif', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-13 15:43:36,445 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LeelaUIb.ttf', name='Leelawadee UI', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-03-13 15:43:36,445 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\MAIAN.TTF', name='Maiandra GD', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-13 15:43:36,445 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Candara.ttf', name='Candara', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-13 15:43:36,445 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\corbelb.ttf', name='Corbel', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-03-13 15:43:36,446 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\FELIXTI.TTF', name='Felix Titling', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-13 15:43:36,446 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\SitkaVF.ttf', name='Sitka', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-13 15:43:36,446 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GOTHIC.TTF', name='Century Gothic', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-13 15:43:36,446 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\FRABKIT.TTF', name='Franklin Gothic Book', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-03-13 15:43:36,446 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GOUDOSI.TTF', name='Goudy Old Style', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-03-13 15:43:36,446 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\segoeui.ttf', name='Segoe UI', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-13 15:43:36,447 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\CENSCBK.TTF', name='Century Schoolbook', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-13 15:43:36,447 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\SCHLBKBI.TTF', name='Century Schoolbook', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2025-03-13 15:43:36,447 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\YuGothL.ttc', name='Yu Gothic', style='normal', variant='normal', weight=300, stretch='normal', size='scalable')) = 10.145
2025-03-13 15:43:36,447 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ENGR.TTF', name='Engravers MT', style='normal', variant='normal', weight=500, stretch='normal', size='scalable')) = 10.145
2025-03-13 15:43:36,447 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\malgunsl.ttf', name='Malgun Gothic', style='normal', variant='normal', weight=300, stretch='normal', size='scalable')) = 10.145
2025-03-13 15:43:36,447 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\palab.ttf', name='Palatino Linotype', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-03-13 15:43:36,447 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ELEPHNTI.TTF', name='Elephant', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-03-13 15:43:36,447 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BRLNSR.TTF', name='Berlin Sans FB', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-13 15:43:36,448 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\framdit.ttf', name='Franklin Gothic Medium', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-03-13 15:43:36,448 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\gadugib.ttf', name='Gadugi', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-03-13 15:43:36,448 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\YuGothB.ttc', name='Yu Gothic', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-03-13 15:43:36,450 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\SCRIPTBL.TTF', name='Script MT Bold', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-03-13 15:43:36,450 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BASKVILL.TTF', name='Baskerville Old Face', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-13 15:43:36,451 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\calibrili.ttf', name='Calibri', style='italic', variant='normal', weight=300, stretch='normal', size='scalable')) = 11.145
2025-03-13 15:43:36,451 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ITCBLKAD.TTF', name='Blackadder ITC', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-13 15:43:36,451 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\DUBAI-REGULAR.TTF', name='Dubai', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-13 15:43:36,451 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ITCEDSCR.TTF', name='Edwardian Script ITC', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-13 15:43:36,452 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\WINGDNG3.TTF', name='Wingdings 3', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-13 15:43:36,452 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ERASLGHT.TTF', name='Eras Light ITC', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-13 15:43:36,452 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\MSUIGHUR.TTF', name='Microsoft Uighur', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-13 15:43:36,452 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\segoesc.ttf', name='Segoe Script', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-13 15:43:36,453 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\trebucit.ttf', name='Trebuchet MS', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-03-13 15:43:36,453 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\CENTURY.TTF', name='Century', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-13 15:43:36,453 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\PLAYBILL.TTF', name='Playbill', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-13 15:43:36,453 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LBRITEI.TTF', name='Lucida Bright', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-03-13 15:43:36,453 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\segoeuil.ttf', name='Segoe UI', style='normal', variant='normal', weight=300, stretch='normal', size='scalable')) = 10.145
2025-03-13 15:43:36,454 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BRITANIC.TTF', name='Britannic Bold', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-13 15:43:36,454 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\taile.ttf', name='Microsoft Tai Le', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-13 15:43:36,454 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ntailub.ttf', name='Microsoft New Tai Lue', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-03-13 15:43:36,454 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BRLNSB.TTF', name='Berlin Sans FB', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-03-13 15:43:36,454 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\arialbd.ttf', name='Arial', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 6.698636363636363
2025-03-13 15:43:36,454 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\seguisb.ttf', name='Segoe UI', style='normal', variant='normal', weight=600, stretch='normal', size='scalable')) = 10.24
2025-03-13 15:43:36,454 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\segoeuiz.ttf', name='Segoe UI', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2025-03-13 15:43:36,455 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ERASMD.TTF', name='Eras Medium ITC', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-13 15:43:36,455 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\seguiemj.ttf', name='Segoe UI Emoji', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-13 15:43:36,455 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BROADW.TTF', name='Broadway', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-13 15:43:36,455 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BOD_BLAI.TTF', name='Bodoni MT', style='italic', variant='normal', weight=900, stretch='normal', size='scalable')) = 11.525
2025-03-13 15:43:36,455 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\seguibl.ttf', name='Segoe UI', style='normal', variant='normal', weight=900, stretch='normal', size='scalable')) = 10.525
2025-03-13 15:43:36,456 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LFAX.TTF', name='Lucida Fax', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-13 15:43:36,456 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\YuGothR.ttc', name='Yu Gothic', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-13 15:43:36,456 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\TCCEB.TTF', name='Tw Cen MT Condensed Extra Bold', style='normal', variant='normal', weight=400, stretch='condensed', size='scalable')) = 10.25
2025-03-13 15:43:36,456 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GILLUBCD.TTF', name='Gill Sans Ultra Bold Condensed', style='normal', variant='normal', weight=400, stretch='condensed', size='scalable')) = 10.25
2025-03-13 15:43:36,457 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LFAXD.TTF', name='Lucida Fax', style='normal', variant='normal', weight=600, stretch='normal', size='scalable')) = 10.24
2025-03-13 15:43:36,457 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\PER_____.TTF', name='Perpetua', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-13 15:43:36,457 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\segoeuii.ttf', name='Segoe UI', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-03-13 15:43:36,457 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\consolaz.ttf', name='Consolas', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2025-03-13 15:43:36,457 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\REFSAN.TTF', name='MS Reference Sans Serif', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-13 15:43:36,458 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\himalaya.ttf', name='Microsoft Himalaya', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-13 15:43:36,458 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ROCCB___.TTF', name='Rockwell Condensed', style='normal', variant='normal', weight=700, stretch='condensed', size='scalable')) = 10.535
2025-03-13 15:43:36,458 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\msyh.ttc', name='Microsoft YaHei', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-13 15:43:36,458 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\DUBAI-BOLD.TTF', name='Dubai', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-03-13 15:43:36,458 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\phagspa.ttf', name='Microsoft PhagsPa', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-13 15:43:36,458 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\COPRGTB.TTF', name='Copperplate Gothic Bold', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-13 15:43:36,459 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\constani.ttf', name='Constantia', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-03-13 15:43:36,459 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LTYPEO.TTF', name='Lucida Sans Typewriter', style='oblique', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-03-13 15:43:36,459 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\seguisli.ttf', name='Segoe UI', style='italic', variant='normal', weight=350, stretch='normal', size='scalable')) = 11.0975
2025-03-13 15:43:36,459 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\PERBI___.TTF', name='Perpetua', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2025-03-13 15:43:36,459 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\MAGNETOB.TTF', name='Magneto', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-03-13 15:43:36,459 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\tahoma.ttf', name='Tahoma', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-13 15:43:36,460 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BELLI.TTF', name='Bell MT', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-03-13 15:43:36,460 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\msgothic.ttc', name='MS Gothic', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-13 15:43:36,460 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\consolai.ttf', name='Consolas', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-03-13 15:43:36,460 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\courbi.ttf', name='Courier New', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2025-03-13 15:43:36,460 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\SansSerifCollection.ttf', name='Sans Serif Collection', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-13 15:43:36,460 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LFAXDI.TTF', name='Lucida Fax', style='italic', variant='normal', weight=600, stretch='normal', size='scalable')) = 11.24
2025-03-13 15:43:36,461 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BOOKOSB.TTF', name='Bookman Old Style', style='normal', variant='normal', weight=600, stretch='normal', size='scalable')) = 10.24
2025-03-13 15:43:36,461 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BELL.TTF', name='Bell MT', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-13 15:43:36,461 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GOUDOS.TTF', name='Goudy Old Style', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-13 15:43:36,461 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\consolab.ttf', name='Consolas', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-03-13 15:43:36,461 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ROCKI.TTF', name='Rockwell', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-03-13 15:43:36,461 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\constanb.ttf', name='Constantia', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-03-13 15:43:36,462 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\seguisbi.ttf', name='Segoe UI', style='italic', variant='normal', weight=600, stretch='normal', size='scalable')) = 11.24
2025-03-13 15:43:36,462 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Nirmala.ttc', name='Nirmala UI', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-13 15:43:36,462 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LEELAWDB.TTF', name='Leelawadee', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-03-13 15:43:36,462 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\cour.ttf', name='Courier New', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-13 15:43:36,462 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\malgunbd.ttf', name='Malgun Gothic', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-03-13 15:43:36,462 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\MTCORSVA.TTF', name='Monotype Corsiva', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-13 15:43:36,462 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\SCHLBKI.TTF', name='Century Schoolbook', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-03-13 15:43:36,463 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LEELAWAD.TTF', name='Leelawadee', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-13 15:43:36,463 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\corbelli.ttf', name='Corbel', style='italic', variant='normal', weight=300, stretch='normal', size='scalable')) = 11.145
2025-03-13 15:43:36,463 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\symbol.ttf', name='Symbol', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-13 15:43:36,463 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BERNHC.TTF', name='Bernard MT Condensed', style='normal', variant='normal', weight=400, stretch='condensed', size='scalable')) = 10.25
2025-03-13 15:43:36,463 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\YuGothM.ttc', name='Yu Gothic', style='normal', variant='normal', weight=500, stretch='normal', size='scalable')) = 10.145
2025-03-13 15:43:36,465 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BOD_CBI.TTF', name='Bodoni MT', style='italic', variant='normal', weight=700, stretch='condensed', size='scalable')) = 11.535
2025-03-13 15:43:36,465 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\monbaiti.ttf', name='Mongolian Baiti', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-13 15:43:36,465 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Gabriola.ttf', name='Gabriola', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-13 15:43:36,465 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\timesi.ttf', name='Times New Roman', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-03-13 15:43:36,465 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BOD_B.TTF', name='Bodoni MT', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-03-13 15:43:36,466 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\verdana.ttf', name='Verdana', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 3.6863636363636365
2025-03-13 15:43:36,466 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Candarali.ttf', name='Candara', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-03-13 15:43:36,466 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\PRISTINA.TTF', name='Pristina', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-13 15:43:36,466 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\arialbi.ttf', name='Arial', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 7.698636363636363
2025-03-13 15:43:36,466 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LCALLIG.TTF', name='Lucida Calligraphy', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-03-13 15:43:36,466 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Candaral.ttf', name='Candara', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-13 15:43:36,466 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\FRAHVIT.TTF', name='Franklin Gothic Heavy', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-03-13 15:43:36,467 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Inkfree.ttf', name='Ink Free', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-13 15:43:36,467 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\VLADIMIR.TTF', name='Vladimir Script', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-13 15:43:36,467 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ONYX.TTF', name='Onyx', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-13 15:43:36,467 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LBRITEDI.TTF', name='Lucida Bright', style='italic', variant='normal', weight=600, stretch='normal', size='scalable')) = 11.24
2025-03-13 15:43:36,467 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\WINGDNG2.TTF', name='Wingdings 2', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-13 15:43:36,467 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\DUBAI-LIGHT.TTF', name='Dubai', style='normal', variant='normal', weight=300, stretch='normal', size='scalable')) = 10.145
2025-03-13 15:43:36,468 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\l_10646.ttf', name='Lucida Sans Unicode', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-13 15:43:36,468 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\TCCB____.TTF', name='Tw Cen MT Condensed', style='normal', variant='normal', weight=700, stretch='condensed', size='scalable')) = 10.535
2025-03-13 15:43:36,468 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ARIALNB.TTF', name='Arial', style='normal', variant='normal', weight=700, stretch='condensed', size='scalable')) = 6.8986363636363635
2025-03-13 15:43:36,468 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\trebuc.ttf', name='Trebuchet MS', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-13 15:43:36,468 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\TCMI____.TTF', name='Tw Cen MT', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-03-13 15:43:36,468 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ERASBD.TTF', name='Eras Bold ITC', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-13 15:43:36,468 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LSANSDI.TTF', name='Lucida Sans', style='italic', variant='normal', weight=600, stretch='normal', size='scalable')) = 11.24
2025-03-13 15:43:36,469 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\CENTAUR.TTF', name='Centaur', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-13 15:43:36,469 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\HTOWERT.TTF', name='High Tower Text', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-13 15:43:36,469 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\INFROMAN.TTF', name='Informal Roman', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-13 15:43:36,469 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\constan.ttf', name='Constantia', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-13 15:43:36,469 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LFAXI.TTF', name='Lucida Fax', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-03-13 15:43:36,470 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\phagspab.ttf', name='Microsoft PhagsPa', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-03-13 15:43:36,470 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GIL_____.TTF', name='Gill Sans MT', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-13 15:43:36,470 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ariblk.ttf', name='Arial', style='normal', variant='normal', weight=900, stretch='normal', size='scalable')) = 6.888636363636364
2025-03-13 15:43:36,470 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GOTHICBI.TTF', name='Century Gothic', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2025-03-13 15:43:36,470 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\FRADMCN.TTF', name='Franklin Gothic Demi Cond', style='normal', variant='normal', weight=400, stretch='condensed', size='scalable')) = 10.25
2025-03-13 15:43:36,471 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\calibrii.ttf', name='Calibri', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-03-13 15:43:36,471 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GARABD.TTF', name='Garamond', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-03-13 15:43:36,471 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\MISTRAL.TTF', name='Mistral', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-13 15:43:36,471 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BOD_BI.TTF', name='Bodoni MT', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2025-03-13 15:43:36,471 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GOUDOSB.TTF', name='Goudy Old Style', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-03-13 15:43:36,472 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\FORTE.TTF', name='Forte', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-13 15:43:36,472 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\HARNGTON.TTF', name='Harrington', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-13 15:43:36,472 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BOD_CI.TTF', name='Bodoni MT', style='italic', variant='normal', weight=400, stretch='condensed', size='scalable')) = 11.25
2025-03-13 15:43:36,472 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BKANT.TTF', name='Book Antiqua', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-13 15:43:36,472 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GILC____.TTF', name='Gill Sans MT Condensed', style='normal', variant='normal', weight=400, stretch='condensed', size='scalable')) = 10.25
2025-03-13 15:43:36,472 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\segoepr.ttf', name='Segoe Print', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-13 15:43:36,473 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\VINERITC.TTF', name='Viner Hand ITC', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-13 15:43:36,473 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\FRAMDCN.TTF', name='Franklin Gothic Medium Cond', style='normal', variant='normal', weight=400, stretch='condensed', size='scalable')) = 10.25
2025-03-13 15:43:36,473 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\sylfaen.ttf', name='Sylfaen', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-13 15:43:36,473 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\mmrtext.ttf', name='Myanmar Text', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-13 15:43:36,473 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\SNAP____.TTF', name='Snap ITC', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-13 15:43:36,473 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GILI____.TTF', name='Gill Sans MT', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-03-13 15:43:36,473 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\calibrib.ttf', name='Calibri', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-03-13 15:43:36,474 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\impact.ttf', name='Impact', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-13 15:43:36,474 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\SCHLBKB.TTF', name='Century Schoolbook', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-03-13 15:43:36,474 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\TCB_____.TTF', name='Tw Cen MT', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-03-13 15:43:36,474 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ANTQUAI.TTF', name='Book Antiqua', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-03-13 15:43:36,475 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BOD_CR.TTF', name='Bodoni MT', style='normal', variant='normal', weight=400, stretch='condensed', size='scalable')) = 10.25
2025-03-13 15:43:36,475 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\corbell.ttf', name='Corbel', style='normal', variant='normal', weight=300, stretch='normal', size='scalable')) = 10.145
2025-03-13 15:43:36,475 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\FRADM.TTF', name='Franklin Gothic Demi', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-13 15:43:36,475 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\PAPYRUS.TTF', name='Papyrus', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-13 15:43:36,475 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\VIVALDII.TTF', name='Vivaldi', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-03-13 15:43:36,475 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\OLDENGL.TTF', name='Old English Text MT', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-13 15:43:36,475 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\pala.ttf', name='Palatino Linotype', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-13 15:43:36,476 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\comicbd.ttf', name='Comic Sans MS', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-03-13 15:43:36,476 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\calibri.ttf', name='Calibri', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-13 15:43:36,476 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\PERI____.TTF', name='Perpetua', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-03-13 15:43:36,476 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GARAIT.TTF', name='Garamond', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-03-13 15:43:36,477 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\corbelz.ttf', name='Corbel', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2025-03-13 15:43:36,477 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GARA.TTF', name='Garamond', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-13 15:43:36,477 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\georgiab.ttf', name='Georgia', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-03-13 15:43:36,477 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ROCK.TTF', name='Rockwell', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-13 15:43:36,477 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\PARCHM.TTF', name='Parchment', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-13 15:43:36,478 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\CALIFB.TTF', name='Californian FB', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-03-13 15:43:36,478 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\cambriaz.ttf', name='Cambria', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2025-03-13 15:43:36,478 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ebrimabd.ttf', name='Ebrima', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-03-13 15:43:36,478 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LSANS.TTF', name='Lucida Sans', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-13 15:43:36,478 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\timesbd.ttf', name='Times New Roman', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-03-13 15:43:36,479 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\CALIFR.TTF', name='Californian FB', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-13 15:43:36,479 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\consola.ttf', name='Consolas', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-13 15:43:36,479 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\msjhl.ttc', name='Microsoft JhengHei', style='normal', variant='normal', weight=290, stretch='normal', size='scalable')) = 10.1545
2025-03-13 15:43:36,479 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Candarab.ttf', name='Candara', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-03-13 15:43:36,479 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\MTEXTRA.TTF', name='MT Extra', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-13 15:43:36,479 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ntailu.ttf', name='Microsoft New Tai Lue', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-13 15:43:36,479 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\seguibli.ttf', name='Segoe UI', style='italic', variant='normal', weight=900, stretch='normal', size='scalable')) = 11.525
2025-03-13 15:43:36,480 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\javatext.ttf', name='Javanese Text', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-13 15:43:36,480 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\SHOWG.TTF', name='Showcard Gothic', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-13 15:43:36,480 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\CASTELAR.TTF', name='Castellar', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-13 15:43:36,480 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\HATTEN.TTF', name='Haettenschweiler', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-13 15:43:36,480 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ariali.ttf', name='Arial', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 7.413636363636363
2025-03-13 15:43:36,480 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\AGENCYR.TTF', name='Agency FB', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-13 15:43:36,481 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\malgun.ttf', name='Malgun Gothic', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-13 15:43:36,481 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BOD_BLAR.TTF', name='Bodoni MT', style='normal', variant='normal', weight=900, stretch='normal', size='scalable')) = 10.525
2025-03-13 15:43:36,481 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LeelawUI.ttf', name='Leelawadee UI', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-13 15:43:36,481 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\CHILLER.TTF', name='Chiller', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-13 15:43:36,481 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\CALIST.TTF', name='Calisto MT', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-13 15:43:36,481 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\JUICE___.TTF', name='Juice ITC', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-13 15:43:36,481 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\JOKERMAN.TTF', name='Jokerman', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-13 15:43:36,482 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\cambria.ttc', name='Cambria', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-13 15:43:36,482 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LHANDW.TTF', name='Lucida Handwriting', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-03-13 15:43:36,482 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BAUHS93.TTF', name='Bauhaus 93', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-13 15:43:36,482 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\COPRGTL.TTF', name='Copperplate Gothic Light', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-13 15:43:36,482 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LSANSD.TTF', name='Lucida Sans', style='normal', variant='normal', weight=600, stretch='normal', size='scalable')) = 10.24
2025-03-13 15:43:36,482 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LTYPEBO.TTF', name='Lucida Sans Typewriter', style='oblique', variant='normal', weight=600, stretch='normal', size='scalable')) = 11.24
2025-03-13 15:43:36,482 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\arial.ttf', name='Arial', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 6.413636363636363
2025-03-13 15:43:36,484 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ERASDEMI.TTF', name='Eras Demi ITC', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-13 15:43:36,484 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\TEMPSITC.TTF', name='Tempus Sans ITC', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-13 15:43:36,484 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ARIALN.TTF', name='Arial', style='normal', variant='normal', weight=400, stretch='condensed', size='scalable')) = 6.613636363636363
2025-03-13 15:43:36,484 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\COLONNA.TTF', name='Colonna MT', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-13 15:43:36,484 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ROCKEB.TTF', name='Rockwell Extra Bold', style='normal', variant='normal', weight=800, stretch='normal', size='scalable')) = 10.43
2025-03-13 15:43:36,485 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\CALISTBI.TTF', name='Calisto MT', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2025-03-13 15:43:36,485 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\palabi.ttf', name='Palatino Linotype', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2025-03-13 15:43:36,485 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\segoescb.ttf', name='Segoe Script', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-03-13 15:43:36,485 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\corbeli.ttf', name='Corbel', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-03-13 15:43:36,485 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\segoeuisl.ttf', name='Segoe UI', style='normal', variant='normal', weight=350, stretch='normal', size='scalable')) = 10.0975
2025-03-13 15:43:36,486 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ROCKBI.TTF', name='Rockwell', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2025-03-13 15:43:36,486 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LBRITED.TTF', name='Lucida Bright', style='normal', variant='normal', weight=600, stretch='normal', size='scalable')) = 10.24
2025-03-13 15:43:36,486 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\CALISTI.TTF', name='Calisto MT', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-03-13 15:43:36,486 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\courbd.ttf', name='Courier New', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-03-13 15:43:36,486 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\lucon.ttf', name='Lucida Console', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-13 15:43:36,486 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\POORICH.TTF', name='Poor Richard', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-13 15:43:36,486 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\taileb.ttf', name='Microsoft Tai Le', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-03-13 15:43:36,487 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ARLRDBD.TTF', name='Arial Rounded MT Bold', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-13 15:43:36,487 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GLSNECB.TTF', name='Gill Sans MT Ext Condensed Bold', style='normal', variant='normal', weight=400, stretch='condensed', size='scalable')) = 10.25
2025-03-13 15:43:36,487 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\mingliub.ttc', name='MingLiU-ExtB', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-13 15:43:36,487 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\timesbi.ttf', name='Times New Roman', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2025-03-13 15:43:36,487 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\calibriz.ttf', name='Calibri', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2025-03-13 15:43:36,487 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BOD_R.TTF', name='Bodoni MT', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-13 15:43:36,488 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\wingding.ttf', name='Wingdings', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-13 15:43:36,488 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BRADHITC.TTF', name='Bradley Hand ITC', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-13 15:43:36,488 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\framd.ttf', name='Franklin Gothic Medium', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-13 15:43:36,488 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\DUBAI-MEDIUM.TTF', name='Dubai', style='normal', variant='normal', weight=500, stretch='normal', size='scalable')) = 10.145
2025-03-13 15:43:36,488 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\trebucbi.ttf', name='Trebuchet MS', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2025-03-13 15:43:36,488 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\cambriab.ttf', name='Cambria', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-03-13 15:43:36,488 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\palai.ttf', name='Palatino Linotype', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-03-13 15:43:36,489 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\times.ttf', name='Times New Roman', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-13 15:43:36,489 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\constanz.ttf', name='Constantia', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2025-03-13 15:43:36,489 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\corbel.ttf', name='Corbel', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-13 15:43:36,489 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\gadugi.ttf', name='Gadugi', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-13 15:43:36,489 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LBRITE.TTF', name='Lucida Bright', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-13 15:43:36,489 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GOUDYSTO.TTF', name='Goudy Stout', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-13 15:43:36,490 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\verdanab.ttf', name='Verdana', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 3.9713636363636367
2025-03-13 15:43:36,490 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GOTHICB.TTF', name='Century Gothic', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-03-13 15:43:36,490 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\NIAGENG.TTF', name='Niagara Engraved', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-13 15:43:36,491 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\segoeuib.ttf', name='Segoe UI', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-03-13 15:43:36,491 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\seguihis.ttf', name='Segoe UI Historic', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-13 15:43:36,492 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\msyhl.ttc', name='Microsoft YaHei', style='normal', variant='normal', weight=290, stretch='normal', size='scalable')) = 10.1545
2025-03-13 15:43:36,492 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ROCKB.TTF', name='Rockwell', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-03-13 15:43:36,493 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\PERTIBD.TTF', name='Perpetua Titling MT', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-03-13 15:43:36,493 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\comic.ttf', name='Comic Sans MS', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-13 15:43:36,493 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\OCRAEXT.TTF', name='OCR A Extended', style='normal', variant='normal', weight=400, stretch='expanded', size='scalable')) = 10.25
2025-03-13 15:43:36,494 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\TCBI____.TTF', name='Tw Cen MT', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2025-03-13 15:43:36,494 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\IMPRISHA.TTF', name='Imprint MT Shadow', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-13 15:43:36,494 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\MOD20.TTF', name='Modern No. 20', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-13 15:43:36,494 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GILB____.TTF', name='Gill Sans MT', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-03-13 15:43:36,495 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LTYPE.TTF', name='Lucida Sans Typewriter', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-13 15:43:36,495 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BRLNSDB.TTF', name='Berlin Sans FB Demi', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-03-13 15:43:36,495 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\STENCIL.TTF', name='Stencil', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-13 15:43:36,495 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\msyhbd.ttc', name='Microsoft YaHei', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-03-13 15:43:36,495 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\SimsunExtG.ttf', name='SimSun-ExtG', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-13 15:43:36,496 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LeelUIsl.ttf', name='Leelawadee UI', style='normal', variant='normal', weight=350, stretch='normal', size='scalable')) = 10.0975
2025-03-13 15:43:36,496 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\OUTLOOK.TTF', name='MS Outlook', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-13 15:43:36,496 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BOD_CB.TTF', name='Bodoni MT', style='normal', variant='normal', weight=700, stretch='condensed', size='scalable')) = 10.535
2025-03-13 15:43:36,496 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\mmrtextb.ttf', name='Myanmar Text', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-03-13 15:43:36,497 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GOTHICI.TTF', name='Century Gothic', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-03-13 15:43:36,497 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\SegoeIcons.ttf', name='Segoe Fluent Icons', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-13 15:43:36,497 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ALGER.TTF', name='Algerian', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-13 15:43:36,497 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BOOKOSBI.TTF', name='Bookman Old Style', style='italic', variant='normal', weight=600, stretch='normal', size='scalable')) = 11.24
2025-03-13 15:43:36,498 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BSSYM7.TTF', name='Bookshelf Symbol 7', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-13 15:43:36,498 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\tahomabd.ttf', name='Tahoma', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-03-13 15:43:36,498 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\msyi.ttf', name='Microsoft Yi Baiti', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-13 15:43:36,498 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\CURLZ___.TTF', name='Curlz MT', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-13 15:43:36,499 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\RAVIE.TTF', name='Ravie', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-13 15:43:36,499 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\simsunb.ttf', name='SimSun-ExtB', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-13 15:43:36,499 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BELLB.TTF', name='Bell MT', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-03-13 15:43:36,499 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\PERTILI.TTF', name='Perpetua Titling MT', style='normal', variant='normal', weight=300, stretch='normal', size='scalable')) = 10.145
2025-03-13 15:43:36,499 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\seguili.ttf', name='Segoe UI', style='italic', variant='normal', weight=300, stretch='normal', size='scalable')) = 11.145
2025-03-13 15:43:36,500 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\CALISTB.TTF', name='Calisto MT', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-03-13 15:43:36,500 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ITCKRIST.TTF', name='Kristen ITC', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-13 15:43:36,500 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ANTQUABI.TTF', name='Book Antiqua', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2025-03-13 15:43:36,500 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\PERB____.TTF', name='Perpetua', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-03-13 15:43:36,501 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ROCC____.TTF', name='Rockwell Condensed', style='normal', variant='normal', weight=400, stretch='condensed', size='scalable')) = 10.25
2025-03-13 15:43:36,501 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GILBI___.TTF', name='Gill Sans MT', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2025-03-13 15:43:36,501 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\MSUIGHUB.TTF', name='Microsoft Uighur', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-03-13 15:43:36,501 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\segmdl2.ttf', name='Segoe MDL2 Assets', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-13 15:43:36,501 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ARIALNI.TTF', name='Arial', style='italic', variant='normal', weight=400, stretch='condensed', size='scalable')) = 7.613636363636363
2025-03-13 15:43:36,501 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\bahnschrift.ttf', name='Bahnschrift', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-13 15:43:36,502 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\TCM_____.TTF', name='Tw Cen MT', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-13 15:43:36,502 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\REFSPCL.TTF', name='MS Reference Specialty', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-13 15:43:36,502 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\FRAHV.TTF', name='Franklin Gothic Heavy', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-13 15:43:36,502 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Candaraz.ttf', name='Candara', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2025-03-13 15:43:36,502 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\georgia.ttf', name='Georgia', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-13 15:43:36,502 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\MATURASC.TTF', name='Matura MT Script Capitals', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-13 15:43:36,502 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GIGI.TTF', name='Gigi', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-13 15:43:36,502 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\CALIFI.TTF', name='Californian FB', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-03-13 15:43:36,502 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\SegUIVar.ttf', name='Segoe UI Variable', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-13 15:43:36,503 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\FRABK.TTF', name='Franklin Gothic Book', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-13 15:43:36,503 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\couri.ttf', name='Courier New', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-03-13 15:43:36,503 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BOOKOSI.TTF', name='Bookman Old Style', style='italic', variant='normal', weight=300, stretch='normal', size='scalable')) = 11.145
2025-03-13 15:43:36,503 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\verdanai.ttf', name='Verdana', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 4.6863636363636365
2025-03-13 15:43:36,503 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\calibril.ttf', name='Calibri', style='normal', variant='normal', weight=300, stretch='normal', size='scalable')) = 10.145
2025-03-13 15:43:36,505 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\FREESCPT.TTF', name='Freestyle Script', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-13 15:43:36,505 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BOD_I.TTF', name='Bodoni MT', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-03-13 15:43:36,505 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\msjhbd.ttc', name='Microsoft JhengHei', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-03-13 15:43:36,506 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\COOPBL.TTF', name='Cooper Black', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-13 15:43:36,506 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\TCCM____.TTF', name='Tw Cen MT Condensed', style='normal', variant='normal', weight=400, stretch='condensed', size='scalable')) = 10.25
2025-03-13 15:43:36,506 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\AGENCYB.TTF', name='Agency FB', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-03-13 15:43:36,506 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LSANSI.TTF', name='Lucida Sans', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-03-13 15:43:36,506 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\NIAGSOL.TTF', name='Niagara Solid', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-13 15:43:36,507 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LTYPEB.TTF', name='Lucida Sans Typewriter', style='normal', variant='normal', weight=600, stretch='normal', size='scalable')) = 10.24
2025-03-13 15:43:36,507 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GLECB.TTF', name='Gloucester MT Extra Condensed', style='normal', variant='normal', weight=400, stretch='condensed', size='scalable')) = 10.25
2025-03-13 15:43:36,507 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\webdings.ttf', name='Webdings', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-13 15:43:36,507 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\msjh.ttc', name='Microsoft JhengHei', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-13 15:43:36,507 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\HTOWERTI.TTF', name='High Tower Text', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-03-13 15:43:36,507 - matplotlib.font_manager - DEBUG - findfont: Matching sans\-serif:style=normal:variant=normal:weight=normal:stretch=normal:size=10.0 to DejaVu Sans ('C:\\Users\\msameerakram\\AppData\\Local\\anaconda3\\Lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\DejaVuSans.ttf') with score of 0.050000.
2025-03-13 15:43:36,605 - matplotlib.font_manager - DEBUG - findfont: Matching sans\-serif:style=normal:variant=normal:weight=bold:stretch=normal:size=12.0.
2025-03-13 15:43:36,605 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Users\\msameerakram\\AppData\\Local\\anaconda3\\Lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\cmss10.ttf', name='cmss10', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.335
2025-03-13 15:43:36,606 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Users\\msameerakram\\AppData\\Local\\anaconda3\\Lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\DejaVuSans-Oblique.ttf', name='DejaVu Sans', style='oblique', variant='normal', weight=400, stretch='normal', size='scalable')) = 1.335
2025-03-13 15:43:36,606 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Users\\msameerakram\\AppData\\Local\\anaconda3\\Lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\cmb10.ttf', name='cmb10', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.335
2025-03-13 15:43:36,606 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Users\\msameerakram\\AppData\\Local\\anaconda3\\Lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\DejaVuSansDisplay.ttf', name='DejaVu Sans Display', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.335
2025-03-13 15:43:36,606 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Users\\msameerakram\\AppData\\Local\\anaconda3\\Lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\DejaVuSansMono-Oblique.ttf', name='DejaVu Sans Mono', style='oblique', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.335
2025-03-13 15:43:36,606 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Users\\msameerakram\\AppData\\Local\\anaconda3\\Lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXSizFiveSymReg.ttf', name='STIXSizeFiveSym', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.335
2025-03-13 15:43:36,606 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Users\\msameerakram\\AppData\\Local\\anaconda3\\Lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\DejaVuSansMono.ttf', name='DejaVu Sans Mono', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.335
2025-03-13 15:43:36,607 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Users\\msameerakram\\AppData\\Local\\anaconda3\\Lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\DejaVuSans.ttf', name='DejaVu Sans', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 0.33499999999999996
2025-03-13 15:43:36,607 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Users\\msameerakram\\AppData\\Local\\anaconda3\\Lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXGeneralBolIta.ttf', name='STIXGeneral', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.05
2025-03-13 15:43:36,607 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Users\\msameerakram\\AppData\\Local\\anaconda3\\Lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXSizThreeSymBol.ttf', name='STIXSizeThreeSym', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.05
2025-03-13 15:43:36,607 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Users\\msameerakram\\AppData\\Local\\anaconda3\\Lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXNonUniBolIta.ttf', name='STIXNonUnicode', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.05
2025-03-13 15:43:36,608 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Users\\msameerakram\\AppData\\Local\\anaconda3\\Lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXGeneralItalic.ttf', name='STIXGeneral', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.335
2025-03-13 15:43:36,608 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Users\\msameerakram\\AppData\\Local\\anaconda3\\Lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\DejaVuSerif-Bold.ttf', name='DejaVu Serif', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.05
2025-03-13 15:43:36,608 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Users\\msameerakram\\AppData\\Local\\anaconda3\\Lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXSizTwoSymReg.ttf', name='STIXSizeTwoSym', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.335
2025-03-13 15:43:36,608 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Users\\msameerakram\\AppData\\Local\\anaconda3\\Lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\DejaVuSansMono-Bold.ttf', name='DejaVu Sans Mono', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.05
2025-03-13 15:43:36,609 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Users\\msameerakram\\AppData\\Local\\anaconda3\\Lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\cmr10.ttf', name='cmr10', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.335
2025-03-13 15:43:36,609 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Users\\msameerakram\\AppData\\Local\\anaconda3\\Lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXSizFourSymBol.ttf', name='STIXSizeFourSym', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.05
2025-03-13 15:43:36,609 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Users\\msameerakram\\AppData\\Local\\anaconda3\\Lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\cmtt10.ttf', name='cmtt10', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.335
2025-03-13 15:43:36,609 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Users\\msameerakram\\AppData\\Local\\anaconda3\\Lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXSizTwoSymBol.ttf', name='STIXSizeTwoSym', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.05
2025-03-13 15:43:36,610 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Users\\msameerakram\\AppData\\Local\\anaconda3\\Lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXGeneral.ttf', name='STIXGeneral', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.335
2025-03-13 15:43:36,610 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Users\\msameerakram\\AppData\\Local\\anaconda3\\Lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXNonUni.ttf', name='STIXNonUnicode', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.335
2025-03-13 15:43:36,610 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Users\\msameerakram\\AppData\\Local\\anaconda3\\Lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\DejaVuSansMono-BoldOblique.ttf', name='DejaVu Sans Mono', style='oblique', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.05
2025-03-13 15:43:36,611 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Users\\msameerakram\\AppData\\Local\\anaconda3\\Lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXSizFourSymReg.ttf', name='STIXSizeFourSym', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.335
2025-03-13 15:43:36,611 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Users\\msameerakram\\AppData\\Local\\anaconda3\\Lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXSizOneSymReg.ttf', name='STIXSizeOneSym', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.335
2025-03-13 15:43:36,611 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Users\\msameerakram\\AppData\\Local\\anaconda3\\Lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXNonUniBol.ttf', name='STIXNonUnicode', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.05
2025-03-13 15:43:36,611 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Users\\msameerakram\\AppData\\Local\\anaconda3\\Lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXSizThreeSymReg.ttf', name='STIXSizeThreeSym', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.335
2025-03-13 15:43:36,612 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Users\\msameerakram\\AppData\\Local\\anaconda3\\Lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\cmsy10.ttf', name='cmsy10', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.335
2025-03-13 15:43:36,612 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Users\\msameerakram\\AppData\\Local\\anaconda3\\Lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\DejaVuSans-Bold.ttf', name='DejaVu Sans', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 0.05
2025-03-13 15:43:36,612 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Users\\msameerakram\\AppData\\Local\\anaconda3\\Lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\cmmi10.ttf', name='cmmi10', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.335
2025-03-13 15:43:36,612 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Users\\msameerakram\\AppData\\Local\\anaconda3\\Lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\DejaVuSans-BoldOblique.ttf', name='DejaVu Sans', style='oblique', variant='normal', weight=700, stretch='normal', size='scalable')) = 1.05
2025-03-13 15:43:36,612 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Users\\msameerakram\\AppData\\Local\\anaconda3\\Lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXGeneralBol.ttf', name='STIXGeneral', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.05
2025-03-13 15:43:36,612 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Users\\msameerakram\\AppData\\Local\\anaconda3\\Lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\cmex10.ttf', name='cmex10', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.335
2025-03-13 15:43:36,612 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Users\\msameerakram\\AppData\\Local\\anaconda3\\Lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\DejaVuSerif-Italic.ttf', name='DejaVu Serif', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.335
2025-03-13 15:43:36,614 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Users\\msameerakram\\AppData\\Local\\anaconda3\\Lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\DejaVuSerifDisplay.ttf', name='DejaVu Serif Display', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.335
2025-03-13 15:43:36,614 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Users\\msameerakram\\AppData\\Local\\anaconda3\\Lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXSizOneSymBol.ttf', name='STIXSizeOneSym', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.05
2025-03-13 15:43:36,614 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Users\\msameerakram\\AppData\\Local\\anaconda3\\Lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\DejaVuSerif.ttf', name='DejaVu Serif', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.335
2025-03-13 15:43:36,614 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Users\\msameerakram\\AppData\\Local\\anaconda3\\Lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXNonUniIta.ttf', name='STIXNonUnicode', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.335
2025-03-13 15:43:36,615 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Users\\msameerakram\\AppData\\Local\\anaconda3\\Lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\DejaVuSerif-BoldItalic.ttf', name='DejaVu Serif', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.05
2025-03-13 15:43:36,615 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\RAGE.TTF', name='Rage Italic', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.335
2025-03-13 15:43:36,615 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BOD_PSTC.TTF', name='Bodoni MT', style='normal', variant='normal', weight=300, stretch='normal', size='scalable')) = 10.43
2025-03-13 15:43:36,615 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\FRSCRIPT.TTF', name='French Script MT', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.335
2025-03-13 15:43:36,616 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\SitkaVF-Italic.ttf', name='Sitka', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.335
2025-03-13 15:43:36,616 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\comicz.ttf', name='Comic Sans MS', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.05
2025-03-13 15:43:36,616 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\FTLTLT.TTF', name='Footlight MT Light', style='normal', variant='normal', weight=300, stretch='normal', size='scalable')) = 10.43
2025-03-13 15:43:36,616 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BOOKOS.TTF', name='Bookman Old Style', style='normal', variant='normal', weight=300, stretch='normal', size='scalable')) = 10.43
2025-03-13 15:43:36,616 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BRUSHSCI.TTF', name='Brush Script MT', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.335
2025-03-13 15:43:36,616 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\FRADMIT.TTF', name='Franklin Gothic Demi', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.335
2025-03-13 15:43:36,617 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\PALSCRI.TTF', name='Palace Script MT', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.335
2025-03-13 15:43:36,617 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ANTQUAB.TTF', name='Book Antiqua', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.05
2025-03-13 15:43:36,617 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GILSANUB.TTF', name='Gill Sans Ultra Bold', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.335
2025-03-13 15:43:36,617 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\georgiaz.ttf', name='Georgia', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.05
2025-03-13 15:43:36,618 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\cambriai.ttf', name='Cambria', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.335
2025-03-13 15:43:36,618 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\trebucbd.ttf', name='Trebuchet MS', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.05
2025-03-13 15:43:36,618 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Candarai.ttf', name='Candara', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.335
2025-03-13 15:43:36,618 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\segoeprb.ttf', name='Segoe Print', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.05
2025-03-13 15:43:36,618 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ELEPHNT.TTF', name='Elephant', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.335
2025-03-13 15:43:36,619 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\HARLOWSI.TTF', name='Harlow Solid Italic', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.335
2025-03-13 15:43:36,619 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\KUNSTLER.TTF', name='Kunstler Script', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.335
2025-03-13 15:43:36,619 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ebrima.ttf', name='Ebrima', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.335
2025-03-13 15:43:36,619 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\simsun.ttc', name='SimSun', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.335
2025-03-13 15:43:36,620 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\seguisym.ttf', name='Segoe UI Symbol', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.335
2025-03-13 15:43:36,620 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ARIALNBI.TTF', name='Arial', style='italic', variant='normal', weight=700, stretch='condensed', size='scalable')) = 7.613636363636363
2025-03-13 15:43:36,620 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\mvboli.ttf', name='MV Boli', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.335
2025-03-13 15:43:36,620 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\comici.ttf', name='Comic Sans MS', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.335
2025-03-13 15:43:36,620 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LATINWD.TTF', name='Wide Latin', style='normal', variant='normal', weight=400, stretch='expanded', size='scalable')) = 10.535
2025-03-13 15:43:36,621 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\georgiai.ttf', name='Georgia', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.335
2025-03-13 15:43:36,621 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\verdanaz.ttf', name='Verdana', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 4.6863636363636365
2025-03-13 15:43:36,621 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\micross.ttf', name='Microsoft Sans Serif', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.335
2025-03-13 15:43:36,621 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LeelaUIb.ttf', name='Leelawadee UI', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.05
2025-03-13 15:43:36,621 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\MAIAN.TTF', name='Maiandra GD', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.335
2025-03-13 15:43:36,622 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Candara.ttf', name='Candara', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.335
2025-03-13 15:43:36,622 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\corbelb.ttf', name='Corbel', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.05
2025-03-13 15:43:36,622 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\FELIXTI.TTF', name='Felix Titling', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.335
2025-03-13 15:43:36,622 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\SitkaVF.ttf', name='Sitka', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.335
2025-03-13 15:43:36,622 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GOTHIC.TTF', name='Century Gothic', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.335
2025-03-13 15:43:36,622 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\FRABKIT.TTF', name='Franklin Gothic Book', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.335
2025-03-13 15:43:36,622 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GOUDOSI.TTF', name='Goudy Old Style', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.335
2025-03-13 15:43:36,623 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\segoeui.ttf', name='Segoe UI', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.335
2025-03-13 15:43:36,623 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\CENSCBK.TTF', name='Century Schoolbook', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.335
2025-03-13 15:43:36,623 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\SCHLBKBI.TTF', name='Century Schoolbook', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.05
2025-03-13 15:43:36,623 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\YuGothL.ttc', name='Yu Gothic', style='normal', variant='normal', weight=300, stretch='normal', size='scalable')) = 10.43
2025-03-13 15:43:36,623 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ENGR.TTF', name='Engravers MT', style='normal', variant='normal', weight=500, stretch='normal', size='scalable')) = 10.24
2025-03-13 15:43:36,624 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\malgunsl.ttf', name='Malgun Gothic', style='normal', variant='normal', weight=300, stretch='normal', size='scalable')) = 10.43
2025-03-13 15:43:36,624 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\palab.ttf', name='Palatino Linotype', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.05
2025-03-13 15:43:36,624 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ELEPHNTI.TTF', name='Elephant', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.335
2025-03-13 15:43:36,624 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BRLNSR.TTF', name='Berlin Sans FB', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.335
2025-03-13 15:43:36,624 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\framdit.ttf', name='Franklin Gothic Medium', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.335
2025-03-13 15:43:36,624 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\gadugib.ttf', name='Gadugi', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.05
2025-03-13 15:43:36,624 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\YuGothB.ttc', name='Yu Gothic', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.05
2025-03-13 15:43:36,625 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\SCRIPTBL.TTF', name='Script MT Bold', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.05
2025-03-13 15:43:36,625 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BASKVILL.TTF', name='Baskerville Old Face', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.335
2025-03-13 15:43:36,625 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\calibrili.ttf', name='Calibri', style='italic', variant='normal', weight=300, stretch='normal', size='scalable')) = 11.43
2025-03-13 15:43:36,625 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ITCBLKAD.TTF', name='Blackadder ITC', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.335
2025-03-13 15:43:36,625 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\DUBAI-REGULAR.TTF', name='Dubai', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.335
2025-03-13 15:43:36,625 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ITCEDSCR.TTF', name='Edwardian Script ITC', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.335
2025-03-13 15:43:36,627 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\WINGDNG3.TTF', name='Wingdings 3', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.335
2025-03-13 15:43:36,627 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ERASLGHT.TTF', name='Eras Light ITC', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.335
2025-03-13 15:43:36,627 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\MSUIGHUR.TTF', name='Microsoft Uighur', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.335
2025-03-13 15:43:36,627 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\segoesc.ttf', name='Segoe Script', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.335
2025-03-13 15:43:36,627 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\trebucit.ttf', name='Trebuchet MS', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.335
2025-03-13 15:43:36,627 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\CENTURY.TTF', name='Century', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.335
2025-03-13 15:43:36,627 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\PLAYBILL.TTF', name='Playbill', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.335
2025-03-13 15:43:36,628 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LBRITEI.TTF', name='Lucida Bright', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.335
2025-03-13 15:43:36,628 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\segoeuil.ttf', name='Segoe UI', style='normal', variant='normal', weight=300, stretch='normal', size='scalable')) = 10.43
2025-03-13 15:43:36,628 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BRITANIC.TTF', name='Britannic Bold', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.335
2025-03-13 15:43:36,628 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\taile.ttf', name='Microsoft Tai Le', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.335
2025-03-13 15:43:36,628 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ntailub.ttf', name='Microsoft New Tai Lue', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.05
2025-03-13 15:43:36,629 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BRLNSB.TTF', name='Berlin Sans FB', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.05
2025-03-13 15:43:36,629 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\arialbd.ttf', name='Arial', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 6.413636363636363
2025-03-13 15:43:36,629 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\seguisb.ttf', name='Segoe UI', style='normal', variant='normal', weight=600, stretch='normal', size='scalable')) = 10.145
2025-03-13 15:43:36,629 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\segoeuiz.ttf', name='Segoe UI', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.05
2025-03-13 15:43:36,629 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ERASMD.TTF', name='Eras Medium ITC', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.335
2025-03-13 15:43:36,630 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\seguiemj.ttf', name='Segoe UI Emoji', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.335
2025-03-13 15:43:36,630 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BROADW.TTF', name='Broadway', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.335
2025-03-13 15:43:36,630 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BOD_BLAI.TTF', name='Bodoni MT', style='italic', variant='normal', weight=900, stretch='normal', size='scalable')) = 11.24
2025-03-13 15:43:36,630 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\seguibl.ttf', name='Segoe UI', style='normal', variant='normal', weight=900, stretch='normal', size='scalable')) = 10.24
2025-03-13 15:43:36,631 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LFAX.TTF', name='Lucida Fax', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.335
2025-03-13 15:43:36,631 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\YuGothR.ttc', name='Yu Gothic', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.335
2025-03-13 15:43:36,631 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\TCCEB.TTF', name='Tw Cen MT Condensed Extra Bold', style='normal', variant='normal', weight=400, stretch='condensed', size='scalable')) = 10.535
2025-03-13 15:43:36,631 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GILLUBCD.TTF', name='Gill Sans Ultra Bold Condensed', style='normal', variant='normal', weight=400, stretch='condensed', size='scalable')) = 10.535
2025-03-13 15:43:36,631 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LFAXD.TTF', name='Lucida Fax', style='normal', variant='normal', weight=600, stretch='normal', size='scalable')) = 10.145
2025-03-13 15:43:36,632 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\PER_____.TTF', name='Perpetua', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.335
2025-03-13 15:43:36,632 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\segoeuii.ttf', name='Segoe UI', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.335
2025-03-13 15:43:36,632 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\consolaz.ttf', name='Consolas', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.05
2025-03-13 15:43:36,632 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\REFSAN.TTF', name='MS Reference Sans Serif', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.335
2025-03-13 15:43:36,632 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\himalaya.ttf', name='Microsoft Himalaya', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.335
2025-03-13 15:43:36,632 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ROCCB___.TTF', name='Rockwell Condensed', style='normal', variant='normal', weight=700, stretch='condensed', size='scalable')) = 10.25
2025-03-13 15:43:36,633 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\msyh.ttc', name='Microsoft YaHei', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.335
2025-03-13 15:43:36,633 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\DUBAI-BOLD.TTF', name='Dubai', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.05
2025-03-13 15:43:36,633 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\phagspa.ttf', name='Microsoft PhagsPa', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.335
2025-03-13 15:43:36,633 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\COPRGTB.TTF', name='Copperplate Gothic Bold', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.335
2025-03-13 15:43:36,633 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\constani.ttf', name='Constantia', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.335
2025-03-13 15:43:36,633 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LTYPEO.TTF', name='Lucida Sans Typewriter', style='oblique', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.335
2025-03-13 15:43:36,634 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\seguisli.ttf', name='Segoe UI', style='italic', variant='normal', weight=350, stretch='normal', size='scalable')) = 11.3825
2025-03-13 15:43:36,634 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\PERBI___.TTF', name='Perpetua', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.05
2025-03-13 15:43:36,634 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\MAGNETOB.TTF', name='Magneto', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.05
2025-03-13 15:43:36,634 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\tahoma.ttf', name='Tahoma', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.335
2025-03-13 15:43:36,634 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BELLI.TTF', name='Bell MT', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.335
2025-03-13 15:43:36,634 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\msgothic.ttc', name='MS Gothic', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.335
2025-03-13 15:43:36,634 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\consolai.ttf', name='Consolas', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.335
2025-03-13 15:43:36,634 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\courbi.ttf', name='Courier New', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.05
2025-03-13 15:43:36,634 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\SansSerifCollection.ttf', name='Sans Serif Collection', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.335
2025-03-13 15:43:36,635 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LFAXDI.TTF', name='Lucida Fax', style='italic', variant='normal', weight=600, stretch='normal', size='scalable')) = 11.145
2025-03-13 15:43:36,635 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BOOKOSB.TTF', name='Bookman Old Style', style='normal', variant='normal', weight=600, stretch='normal', size='scalable')) = 10.145
2025-03-13 15:43:36,635 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BELL.TTF', name='Bell MT', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.335
2025-03-13 15:43:36,635 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GOUDOS.TTF', name='Goudy Old Style', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.335
2025-03-13 15:43:36,635 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\consolab.ttf', name='Consolas', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.05
2025-03-13 15:43:36,636 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ROCKI.TTF', name='Rockwell', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.335
2025-03-13 15:43:36,636 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\constanb.ttf', name='Constantia', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.05
2025-03-13 15:43:36,636 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\seguisbi.ttf', name='Segoe UI', style='italic', variant='normal', weight=600, stretch='normal', size='scalable')) = 11.145
2025-03-13 15:43:36,636 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Nirmala.ttc', name='Nirmala UI', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.335
2025-03-13 15:43:36,636 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LEELAWDB.TTF', name='Leelawadee', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.05
2025-03-13 15:43:36,637 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\cour.ttf', name='Courier New', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.335
2025-03-13 15:43:36,637 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\malgunbd.ttf', name='Malgun Gothic', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.05
2025-03-13 15:43:36,637 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\MTCORSVA.TTF', name='Monotype Corsiva', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.335
2025-03-13 15:43:36,637 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\SCHLBKI.TTF', name='Century Schoolbook', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.335
2025-03-13 15:43:36,637 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LEELAWAD.TTF', name='Leelawadee', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.335
2025-03-13 15:43:36,638 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\corbelli.ttf', name='Corbel', style='italic', variant='normal', weight=300, stretch='normal', size='scalable')) = 11.43
2025-03-13 15:43:36,638 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\symbol.ttf', name='Symbol', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.335
2025-03-13 15:43:36,638 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BERNHC.TTF', name='Bernard MT Condensed', style='normal', variant='normal', weight=400, stretch='condensed', size='scalable')) = 10.535
2025-03-13 15:43:36,638 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\YuGothM.ttc', name='Yu Gothic', style='normal', variant='normal', weight=500, stretch='normal', size='scalable')) = 10.24
2025-03-13 15:43:36,638 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BOD_CBI.TTF', name='Bodoni MT', style='italic', variant='normal', weight=700, stretch='condensed', size='scalable')) = 11.25
2025-03-13 15:43:36,638 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\monbaiti.ttf', name='Mongolian Baiti', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.335
2025-03-13 15:43:36,639 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Gabriola.ttf', name='Gabriola', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.335
2025-03-13 15:43:36,639 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\timesi.ttf', name='Times New Roman', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.335
2025-03-13 15:43:36,639 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BOD_B.TTF', name='Bodoni MT', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.05
2025-03-13 15:43:36,639 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\verdana.ttf', name='Verdana', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 3.9713636363636367
2025-03-13 15:43:36,639 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Candarali.ttf', name='Candara', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.335
2025-03-13 15:43:36,639 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\PRISTINA.TTF', name='Pristina', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.335
2025-03-13 15:43:36,639 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\arialbi.ttf', name='Arial', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 7.413636363636363
2025-03-13 15:43:36,640 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LCALLIG.TTF', name='Lucida Calligraphy', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.335
2025-03-13 15:43:36,640 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Candaral.ttf', name='Candara', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.335
2025-03-13 15:43:36,640 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\FRAHVIT.TTF', name='Franklin Gothic Heavy', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.335
2025-03-13 15:43:36,640 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Inkfree.ttf', name='Ink Free', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.335
2025-03-13 15:43:36,640 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\VLADIMIR.TTF', name='Vladimir Script', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.335
2025-03-13 15:43:36,640 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ONYX.TTF', name='Onyx', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.335
2025-03-13 15:43:36,641 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LBRITEDI.TTF', name='Lucida Bright', style='italic', variant='normal', weight=600, stretch='normal', size='scalable')) = 11.145
2025-03-13 15:43:36,641 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\WINGDNG2.TTF', name='Wingdings 2', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.335
2025-03-13 15:43:36,641 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\DUBAI-LIGHT.TTF', name='Dubai', style='normal', variant='normal', weight=300, stretch='normal', size='scalable')) = 10.43
2025-03-13 15:43:36,641 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\l_10646.ttf', name='Lucida Sans Unicode', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.335
2025-03-13 15:43:36,642 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\TCCB____.TTF', name='Tw Cen MT Condensed', style='normal', variant='normal', weight=700, stretch='condensed', size='scalable')) = 10.25
2025-03-13 15:43:36,642 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ARIALNB.TTF', name='Arial', style='normal', variant='normal', weight=700, stretch='condensed', size='scalable')) = 6.613636363636363
2025-03-13 15:43:36,642 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\trebuc.ttf', name='Trebuchet MS', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.335
2025-03-13 15:43:36,642 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\TCMI____.TTF', name='Tw Cen MT', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.335
2025-03-13 15:43:36,642 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ERASBD.TTF', name='Eras Bold ITC', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.335
2025-03-13 15:43:36,642 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LSANSDI.TTF', name='Lucida Sans', style='italic', variant='normal', weight=600, stretch='normal', size='scalable')) = 11.145
2025-03-13 15:43:36,644 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\CENTAUR.TTF', name='Centaur', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.335
2025-03-13 15:43:36,644 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\HTOWERT.TTF', name='High Tower Text', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.335
2025-03-13 15:43:36,644 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\INFROMAN.TTF', name='Informal Roman', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.335
2025-03-13 15:43:36,644 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\constan.ttf', name='Constantia', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.335
2025-03-13 15:43:36,645 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LFAXI.TTF', name='Lucida Fax', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.335
2025-03-13 15:43:36,645 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\phagspab.ttf', name='Microsoft PhagsPa', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.05
2025-03-13 15:43:36,645 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GIL_____.TTF', name='Gill Sans MT', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.335
2025-03-13 15:43:36,645 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ariblk.ttf', name='Arial', style='normal', variant='normal', weight=900, stretch='normal', size='scalable')) = 6.6036363636363635
2025-03-13 15:43:36,646 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GOTHICBI.TTF', name='Century Gothic', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.05
2025-03-13 15:43:36,646 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\FRADMCN.TTF', name='Franklin Gothic Demi Cond', style='normal', variant='normal', weight=400, stretch='condensed', size='scalable')) = 10.535
2025-03-13 15:43:36,646 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\calibrii.ttf', name='Calibri', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.335
2025-03-13 15:43:36,646 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GARABD.TTF', name='Garamond', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.05
2025-03-13 15:43:36,647 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\MISTRAL.TTF', name='Mistral', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.335
2025-03-13 15:43:36,647 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BOD_BI.TTF', name='Bodoni MT', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.05
2025-03-13 15:43:36,647 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GOUDOSB.TTF', name='Goudy Old Style', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.05
2025-03-13 15:43:36,647 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\FORTE.TTF', name='Forte', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.335
2025-03-13 15:43:36,647 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\HARNGTON.TTF', name='Harrington', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.335
2025-03-13 15:43:36,648 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BOD_CI.TTF', name='Bodoni MT', style='italic', variant='normal', weight=400, stretch='condensed', size='scalable')) = 11.535
2025-03-13 15:43:36,648 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BKANT.TTF', name='Book Antiqua', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.335
2025-03-13 15:43:36,648 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GILC____.TTF', name='Gill Sans MT Condensed', style='normal', variant='normal', weight=400, stretch='condensed', size='scalable')) = 10.535
2025-03-13 15:43:36,648 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\segoepr.ttf', name='Segoe Print', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.335
2025-03-13 15:43:36,648 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\VINERITC.TTF', name='Viner Hand ITC', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.335
2025-03-13 15:43:36,648 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\FRAMDCN.TTF', name='Franklin Gothic Medium Cond', style='normal', variant='normal', weight=400, stretch='condensed', size='scalable')) = 10.535
2025-03-13 15:43:36,649 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\sylfaen.ttf', name='Sylfaen', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.335
2025-03-13 15:43:36,649 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\mmrtext.ttf', name='Myanmar Text', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.335
2025-03-13 15:43:36,649 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\SNAP____.TTF', name='Snap ITC', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.335
2025-03-13 15:43:36,649 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GILI____.TTF', name='Gill Sans MT', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.335
2025-03-13 15:43:36,649 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\calibrib.ttf', name='Calibri', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.05
2025-03-13 15:43:36,649 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\impact.ttf', name='Impact', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.335
2025-03-13 15:43:36,649 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\SCHLBKB.TTF', name='Century Schoolbook', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.05
2025-03-13 15:43:36,650 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\TCB_____.TTF', name='Tw Cen MT', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.05
2025-03-13 15:43:36,650 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ANTQUAI.TTF', name='Book Antiqua', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.335
2025-03-13 15:43:36,650 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BOD_CR.TTF', name='Bodoni MT', style='normal', variant='normal', weight=400, stretch='condensed', size='scalable')) = 10.535
2025-03-13 15:43:36,650 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\corbell.ttf', name='Corbel', style='normal', variant='normal', weight=300, stretch='normal', size='scalable')) = 10.43
2025-03-13 15:43:36,650 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\FRADM.TTF', name='Franklin Gothic Demi', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.335
2025-03-13 15:43:36,651 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\PAPYRUS.TTF', name='Papyrus', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.335
2025-03-13 15:43:36,651 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\VIVALDII.TTF', name='Vivaldi', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.335
2025-03-13 15:43:36,651 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\OLDENGL.TTF', name='Old English Text MT', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.335
2025-03-13 15:43:36,651 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\pala.ttf', name='Palatino Linotype', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.335
2025-03-13 15:43:36,651 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\comicbd.ttf', name='Comic Sans MS', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.05
2025-03-13 15:43:36,652 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\calibri.ttf', name='Calibri', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.335
2025-03-13 15:43:36,652 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\PERI____.TTF', name='Perpetua', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.335
2025-03-13 15:43:36,652 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GARAIT.TTF', name='Garamond', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.335
2025-03-13 15:43:36,652 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\corbelz.ttf', name='Corbel', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.05
2025-03-13 15:43:36,652 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GARA.TTF', name='Garamond', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.335
2025-03-13 15:43:36,652 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\georgiab.ttf', name='Georgia', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.05
2025-03-13 15:43:36,652 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ROCK.TTF', name='Rockwell', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.335
2025-03-13 15:43:36,652 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\PARCHM.TTF', name='Parchment', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.335
2025-03-13 15:43:36,652 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\CALIFB.TTF', name='Californian FB', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.05
2025-03-13 15:43:36,654 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\cambriaz.ttf', name='Cambria', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.05
2025-03-13 15:43:36,654 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ebrimabd.ttf', name='Ebrima', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.05
2025-03-13 15:43:36,654 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LSANS.TTF', name='Lucida Sans', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.335
2025-03-13 15:43:36,654 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\timesbd.ttf', name='Times New Roman', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.05
2025-03-13 15:43:36,654 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\CALIFR.TTF', name='Californian FB', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.335
2025-03-13 15:43:36,654 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\consola.ttf', name='Consolas', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.335
2025-03-13 15:43:36,655 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\msjhl.ttc', name='Microsoft JhengHei', style='normal', variant='normal', weight=290, stretch='normal', size='scalable')) = 10.4395
2025-03-13 15:43:36,655 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Candarab.ttf', name='Candara', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.05
2025-03-13 15:43:36,655 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\MTEXTRA.TTF', name='MT Extra', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.335
2025-03-13 15:43:36,655 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ntailu.ttf', name='Microsoft New Tai Lue', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.335
2025-03-13 15:43:36,655 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\seguibli.ttf', name='Segoe UI', style='italic', variant='normal', weight=900, stretch='normal', size='scalable')) = 11.24
2025-03-13 15:43:36,655 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\javatext.ttf', name='Javanese Text', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.335
2025-03-13 15:43:36,656 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\SHOWG.TTF', name='Showcard Gothic', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.335
2025-03-13 15:43:36,656 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\CASTELAR.TTF', name='Castellar', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.335
2025-03-13 15:43:36,656 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\HATTEN.TTF', name='Haettenschweiler', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.335
2025-03-13 15:43:36,656 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ariali.ttf', name='Arial', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 7.698636363636363
2025-03-13 15:43:36,656 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\AGENCYR.TTF', name='Agency FB', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.335
2025-03-13 15:43:36,657 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\malgun.ttf', name='Malgun Gothic', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.335
2025-03-13 15:43:36,657 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BOD_BLAR.TTF', name='Bodoni MT', style='normal', variant='normal', weight=900, stretch='normal', size='scalable')) = 10.24
2025-03-13 15:43:36,658 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LeelawUI.ttf', name='Leelawadee UI', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.335
2025-03-13 15:43:36,658 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\CHILLER.TTF', name='Chiller', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.335
2025-03-13 15:43:36,658 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\CALIST.TTF', name='Calisto MT', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.335
2025-03-13 15:43:36,658 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\JUICE___.TTF', name='Juice ITC', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.335
2025-03-13 15:43:36,659 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\JOKERMAN.TTF', name='Jokerman', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.335
2025-03-13 15:43:36,659 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\cambria.ttc', name='Cambria', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.335
2025-03-13 15:43:36,659 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LHANDW.TTF', name='Lucida Handwriting', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.335
2025-03-13 15:43:36,659 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BAUHS93.TTF', name='Bauhaus 93', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.335
2025-03-13 15:43:36,660 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\COPRGTL.TTF', name='Copperplate Gothic Light', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.335
2025-03-13 15:43:36,660 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LSANSD.TTF', name='Lucida Sans', style='normal', variant='normal', weight=600, stretch='normal', size='scalable')) = 10.145
2025-03-13 15:43:36,660 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LTYPEBO.TTF', name='Lucida Sans Typewriter', style='oblique', variant='normal', weight=600, stretch='normal', size='scalable')) = 11.145
2025-03-13 15:43:36,660 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\arial.ttf', name='Arial', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 6.698636363636363
2025-03-13 15:43:36,661 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ERASDEMI.TTF', name='Eras Demi ITC', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.335
2025-03-13 15:43:36,661 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\TEMPSITC.TTF', name='Tempus Sans ITC', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.335
2025-03-13 15:43:36,661 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ARIALN.TTF', name='Arial', style='normal', variant='normal', weight=400, stretch='condensed', size='scalable')) = 6.8986363636363635
2025-03-13 15:43:36,662 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\COLONNA.TTF', name='Colonna MT', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.335
2025-03-13 15:43:36,662 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ROCKEB.TTF', name='Rockwell Extra Bold', style='normal', variant='normal', weight=800, stretch='normal', size='scalable')) = 10.145
2025-03-13 15:43:36,662 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\CALISTBI.TTF', name='Calisto MT', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.05
2025-03-13 15:43:36,662 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\palabi.ttf', name='Palatino Linotype', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.05
2025-03-13 15:43:36,662 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\segoescb.ttf', name='Segoe Script', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.05
2025-03-13 15:43:36,663 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\corbeli.ttf', name='Corbel', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.335
2025-03-13 15:43:36,663 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\segoeuisl.ttf', name='Segoe UI', style='normal', variant='normal', weight=350, stretch='normal', size='scalable')) = 10.3825
2025-03-13 15:43:36,663 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ROCKBI.TTF', name='Rockwell', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.05
2025-03-13 15:43:36,663 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LBRITED.TTF', name='Lucida Bright', style='normal', variant='normal', weight=600, stretch='normal', size='scalable')) = 10.145
2025-03-13 15:43:36,663 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\CALISTI.TTF', name='Calisto MT', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.335
2025-03-13 15:43:36,663 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\courbd.ttf', name='Courier New', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.05
2025-03-13 15:43:36,664 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\lucon.ttf', name='Lucida Console', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.335
2025-03-13 15:43:36,664 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\POORICH.TTF', name='Poor Richard', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.335
2025-03-13 15:43:36,664 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\taileb.ttf', name='Microsoft Tai Le', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.05
2025-03-13 15:43:36,664 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ARLRDBD.TTF', name='Arial Rounded MT Bold', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.335
2025-03-13 15:43:36,664 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GLSNECB.TTF', name='Gill Sans MT Ext Condensed Bold', style='normal', variant='normal', weight=400, stretch='condensed', size='scalable')) = 10.535
2025-03-13 15:43:36,665 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\mingliub.ttc', name='MingLiU-ExtB', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.335
2025-03-13 15:43:36,665 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\timesbi.ttf', name='Times New Roman', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.05
2025-03-13 15:43:36,665 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\calibriz.ttf', name='Calibri', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.05
2025-03-13 15:43:36,665 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BOD_R.TTF', name='Bodoni MT', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.335
2025-03-13 15:43:36,665 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\wingding.ttf', name='Wingdings', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.335
2025-03-13 15:43:36,665 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BRADHITC.TTF', name='Bradley Hand ITC', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.335
2025-03-13 15:43:36,667 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\framd.ttf', name='Franklin Gothic Medium', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.335
2025-03-13 15:43:36,667 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\DUBAI-MEDIUM.TTF', name='Dubai', style='normal', variant='normal', weight=500, stretch='normal', size='scalable')) = 10.24
2025-03-13 15:43:36,667 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\trebucbi.ttf', name='Trebuchet MS', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.05
2025-03-13 15:43:36,667 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\cambriab.ttf', name='Cambria', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.05
2025-03-13 15:43:36,667 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\palai.ttf', name='Palatino Linotype', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.335
2025-03-13 15:43:36,667 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\times.ttf', name='Times New Roman', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.335
2025-03-13 15:43:36,668 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\constanz.ttf', name='Constantia', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.05
2025-03-13 15:43:36,668 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\corbel.ttf', name='Corbel', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.335
2025-03-13 15:43:36,668 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\gadugi.ttf', name='Gadugi', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.335
2025-03-13 15:43:36,668 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LBRITE.TTF', name='Lucida Bright', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.335
2025-03-13 15:43:36,668 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GOUDYSTO.TTF', name='Goudy Stout', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.335
2025-03-13 15:43:36,668 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\verdanab.ttf', name='Verdana', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 3.6863636363636365
2025-03-13 15:43:36,669 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GOTHICB.TTF', name='Century Gothic', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.05
2025-03-13 15:43:36,669 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\NIAGENG.TTF', name='Niagara Engraved', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.335
2025-03-13 15:43:36,669 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\segoeuib.ttf', name='Segoe UI', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.05
2025-03-13 15:43:36,669 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\seguihis.ttf', name='Segoe UI Historic', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.335
2025-03-13 15:43:36,669 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\msyhl.ttc', name='Microsoft YaHei', style='normal', variant='normal', weight=290, stretch='normal', size='scalable')) = 10.4395
2025-03-13 15:43:36,669 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ROCKB.TTF', name='Rockwell', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.05
2025-03-13 15:43:36,669 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\PERTIBD.TTF', name='Perpetua Titling MT', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.05
2025-03-13 15:43:36,670 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\comic.ttf', name='Comic Sans MS', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.335
2025-03-13 15:43:36,670 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\OCRAEXT.TTF', name='OCR A Extended', style='normal', variant='normal', weight=400, stretch='expanded', size='scalable')) = 10.535
2025-03-13 15:43:36,670 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\TCBI____.TTF', name='Tw Cen MT', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.05
2025-03-13 15:43:36,670 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\IMPRISHA.TTF', name='Imprint MT Shadow', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.335
2025-03-13 15:43:36,670 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\MOD20.TTF', name='Modern No. 20', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.335
2025-03-13 15:43:36,670 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GILB____.TTF', name='Gill Sans MT', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.05
2025-03-13 15:43:36,671 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LTYPE.TTF', name='Lucida Sans Typewriter', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.335
2025-03-13 15:43:36,671 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BRLNSDB.TTF', name='Berlin Sans FB Demi', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.05
2025-03-13 15:43:36,671 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\STENCIL.TTF', name='Stencil', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.335
2025-03-13 15:43:36,671 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\msyhbd.ttc', name='Microsoft YaHei', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.05
2025-03-13 15:43:36,671 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\SimsunExtG.ttf', name='SimSun-ExtG', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.335
2025-03-13 15:43:36,672 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LeelUIsl.ttf', name='Leelawadee UI', style='normal', variant='normal', weight=350, stretch='normal', size='scalable')) = 10.3825
2025-03-13 15:43:36,672 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\OUTLOOK.TTF', name='MS Outlook', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.335
2025-03-13 15:43:36,672 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BOD_CB.TTF', name='Bodoni MT', style='normal', variant='normal', weight=700, stretch='condensed', size='scalable')) = 10.25
2025-03-13 15:43:36,672 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\mmrtextb.ttf', name='Myanmar Text', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.05
2025-03-13 15:43:36,673 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GOTHICI.TTF', name='Century Gothic', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.335
2025-03-13 15:43:36,673 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\SegoeIcons.ttf', name='Segoe Fluent Icons', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.335
2025-03-13 15:43:36,673 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ALGER.TTF', name='Algerian', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.335
2025-03-13 15:43:36,673 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BOOKOSBI.TTF', name='Bookman Old Style', style='italic', variant='normal', weight=600, stretch='normal', size='scalable')) = 11.145
2025-03-13 15:43:36,674 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BSSYM7.TTF', name='Bookshelf Symbol 7', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.335
2025-03-13 15:43:36,674 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\tahomabd.ttf', name='Tahoma', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.05
2025-03-13 15:43:36,674 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\msyi.ttf', name='Microsoft Yi Baiti', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.335
2025-03-13 15:43:36,674 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\CURLZ___.TTF', name='Curlz MT', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.335
2025-03-13 15:43:36,674 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\RAVIE.TTF', name='Ravie', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.335
2025-03-13 15:43:36,674 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\simsunb.ttf', name='SimSun-ExtB', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.335
2025-03-13 15:43:36,675 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BELLB.TTF', name='Bell MT', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.05
2025-03-13 15:43:36,675 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\PERTILI.TTF', name='Perpetua Titling MT', style='normal', variant='normal', weight=300, stretch='normal', size='scalable')) = 10.43
2025-03-13 15:43:36,675 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\seguili.ttf', name='Segoe UI', style='italic', variant='normal', weight=300, stretch='normal', size='scalable')) = 11.43
2025-03-13 15:43:36,675 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\CALISTB.TTF', name='Calisto MT', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.05
2025-03-13 15:43:36,675 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ITCKRIST.TTF', name='Kristen ITC', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.335
2025-03-13 15:43:36,675 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ANTQUABI.TTF', name='Book Antiqua', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.05
2025-03-13 15:43:36,675 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\PERB____.TTF', name='Perpetua', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.05
2025-03-13 15:43:36,676 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ROCC____.TTF', name='Rockwell Condensed', style='normal', variant='normal', weight=400, stretch='condensed', size='scalable')) = 10.535
2025-03-13 15:43:36,676 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GILBI___.TTF', name='Gill Sans MT', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.05
2025-03-13 15:43:36,676 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\MSUIGHUB.TTF', name='Microsoft Uighur', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.05
2025-03-13 15:43:36,676 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\segmdl2.ttf', name='Segoe MDL2 Assets', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.335
2025-03-13 15:43:36,676 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ARIALNI.TTF', name='Arial', style='italic', variant='normal', weight=400, stretch='condensed', size='scalable')) = 7.8986363636363635
2025-03-13 15:43:36,676 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\bahnschrift.ttf', name='Bahnschrift', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.335
2025-03-13 15:43:36,677 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\TCM_____.TTF', name='Tw Cen MT', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.335
2025-03-13 15:43:36,677 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\REFSPCL.TTF', name='MS Reference Specialty', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.335
2025-03-13 15:43:36,677 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\FRAHV.TTF', name='Franklin Gothic Heavy', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.335
2025-03-13 15:43:36,677 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Candaraz.ttf', name='Candara', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.05
2025-03-13 15:43:36,677 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\georgia.ttf', name='Georgia', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.335
2025-03-13 15:43:36,678 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\MATURASC.TTF', name='Matura MT Script Capitals', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.335
2025-03-13 15:43:36,678 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GIGI.TTF', name='Gigi', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.335
2025-03-13 15:43:36,678 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\CALIFI.TTF', name='Californian FB', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.335
2025-03-13 15:43:36,678 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\SegUIVar.ttf', name='Segoe UI Variable', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.335
2025-03-13 15:43:36,678 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\FRABK.TTF', name='Franklin Gothic Book', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.335
2025-03-13 15:43:36,679 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\couri.ttf', name='Courier New', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.335
2025-03-13 15:43:36,679 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BOOKOSI.TTF', name='Bookman Old Style', style='italic', variant='normal', weight=300, stretch='normal', size='scalable')) = 11.43
2025-03-13 15:43:36,679 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\verdanai.ttf', name='Verdana', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 4.971363636363637
2025-03-13 15:43:36,679 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\calibril.ttf', name='Calibri', style='normal', variant='normal', weight=300, stretch='normal', size='scalable')) = 10.43
2025-03-13 15:43:36,680 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\FREESCPT.TTF', name='Freestyle Script', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.335
2025-03-13 15:43:36,680 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BOD_I.TTF', name='Bodoni MT', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.335
2025-03-13 15:43:36,680 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\msjhbd.ttc', name='Microsoft JhengHei', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.05
2025-03-13 15:43:36,680 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\COOPBL.TTF', name='Cooper Black', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.335
2025-03-13 15:43:36,680 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\TCCM____.TTF', name='Tw Cen MT Condensed', style='normal', variant='normal', weight=400, stretch='condensed', size='scalable')) = 10.535
2025-03-13 15:43:36,680 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\AGENCYB.TTF', name='Agency FB', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.05
2025-03-13 15:43:36,681 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LSANSI.TTF', name='Lucida Sans', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.335
2025-03-13 15:43:36,681 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\NIAGSOL.TTF', name='Niagara Solid', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.335
2025-03-13 15:43:36,681 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LTYPEB.TTF', name='Lucida Sans Typewriter', style='normal', variant='normal', weight=600, stretch='normal', size='scalable')) = 10.145
2025-03-13 15:43:36,681 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GLECB.TTF', name='Gloucester MT Extra Condensed', style='normal', variant='normal', weight=400, stretch='condensed', size='scalable')) = 10.535
2025-03-13 15:43:36,681 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\webdings.ttf', name='Webdings', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.335
2025-03-13 15:43:36,681 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\msjh.ttc', name='Microsoft JhengHei', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.335
2025-03-13 15:43:36,682 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\HTOWERTI.TTF', name='High Tower Text', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.335
2025-03-13 15:43:36,682 - matplotlib.font_manager - DEBUG - findfont: Matching sans\-serif:style=normal:variant=normal:weight=bold:stretch=normal:size=12.0 to DejaVu Sans ('C:\\Users\\msameerakram\\AppData\\Local\\anaconda3\\Lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\DejaVuSans-Bold.ttf') with score of 0.050000.
2025-03-13 15:43:36,701 - matplotlib.font_manager - DEBUG - findfont: Matching sans\-serif:style=normal:variant=normal:weight=normal:stretch=normal:size=9.0.
2025-03-13 15:43:36,701 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Users\\msameerakram\\AppData\\Local\\anaconda3\\Lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\cmss10.ttf', name='cmss10', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-13 15:43:36,701 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Users\\msameerakram\\AppData\\Local\\anaconda3\\Lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\DejaVuSans-Oblique.ttf', name='DejaVu Sans', style='oblique', variant='normal', weight=400, stretch='normal', size='scalable')) = 1.05
2025-03-13 15:43:36,702 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Users\\msameerakram\\AppData\\Local\\anaconda3\\Lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\cmb10.ttf', name='cmb10', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-13 15:43:36,702 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Users\\msameerakram\\AppData\\Local\\anaconda3\\Lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\DejaVuSansDisplay.ttf', name='DejaVu Sans Display', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-13 15:43:36,702 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Users\\msameerakram\\AppData\\Local\\anaconda3\\Lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\DejaVuSansMono-Oblique.ttf', name='DejaVu Sans Mono', style='oblique', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-03-13 15:43:36,703 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Users\\msameerakram\\AppData\\Local\\anaconda3\\Lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXSizFiveSymReg.ttf', name='STIXSizeFiveSym', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-13 15:43:36,703 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Users\\msameerakram\\AppData\\Local\\anaconda3\\Lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\DejaVuSansMono.ttf', name='DejaVu Sans Mono', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-13 15:43:36,703 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Users\\msameerakram\\AppData\\Local\\anaconda3\\Lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\DejaVuSans.ttf', name='DejaVu Sans', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 0.05
2025-03-13 15:43:36,703 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Users\\msameerakram\\AppData\\Local\\anaconda3\\Lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXGeneralBolIta.ttf', name='STIXGeneral', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2025-03-13 15:43:36,703 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Users\\msameerakram\\AppData\\Local\\anaconda3\\Lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXSizThreeSymBol.ttf', name='STIXSizeThreeSym', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-03-13 15:43:36,703 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Users\\msameerakram\\AppData\\Local\\anaconda3\\Lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXNonUniBolIta.ttf', name='STIXNonUnicode', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2025-03-13 15:43:36,704 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Users\\msameerakram\\AppData\\Local\\anaconda3\\Lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXGeneralItalic.ttf', name='STIXGeneral', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-03-13 15:43:36,704 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Users\\msameerakram\\AppData\\Local\\anaconda3\\Lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\DejaVuSerif-Bold.ttf', name='DejaVu Serif', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-03-13 15:43:36,704 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Users\\msameerakram\\AppData\\Local\\anaconda3\\Lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXSizTwoSymReg.ttf', name='STIXSizeTwoSym', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-13 15:43:36,705 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Users\\msameerakram\\AppData\\Local\\anaconda3\\Lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\DejaVuSansMono-Bold.ttf', name='DejaVu Sans Mono', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-03-13 15:43:36,705 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Users\\msameerakram\\AppData\\Local\\anaconda3\\Lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\cmr10.ttf', name='cmr10', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-13 15:43:36,705 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Users\\msameerakram\\AppData\\Local\\anaconda3\\Lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXSizFourSymBol.ttf', name='STIXSizeFourSym', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-03-13 15:43:36,705 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Users\\msameerakram\\AppData\\Local\\anaconda3\\Lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\cmtt10.ttf', name='cmtt10', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-13 15:43:36,705 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Users\\msameerakram\\AppData\\Local\\anaconda3\\Lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXSizTwoSymBol.ttf', name='STIXSizeTwoSym', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-03-13 15:43:36,706 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Users\\msameerakram\\AppData\\Local\\anaconda3\\Lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXGeneral.ttf', name='STIXGeneral', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-13 15:43:36,706 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Users\\msameerakram\\AppData\\Local\\anaconda3\\Lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXNonUni.ttf', name='STIXNonUnicode', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-13 15:43:36,706 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Users\\msameerakram\\AppData\\Local\\anaconda3\\Lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\DejaVuSansMono-BoldOblique.ttf', name='DejaVu Sans Mono', style='oblique', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2025-03-13 15:43:36,706 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Users\\msameerakram\\AppData\\Local\\anaconda3\\Lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXSizFourSymReg.ttf', name='STIXSizeFourSym', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-13 15:43:36,707 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Users\\msameerakram\\AppData\\Local\\anaconda3\\Lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXSizOneSymReg.ttf', name='STIXSizeOneSym', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-13 15:43:36,707 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Users\\msameerakram\\AppData\\Local\\anaconda3\\Lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXNonUniBol.ttf', name='STIXNonUnicode', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-03-13 15:43:36,707 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Users\\msameerakram\\AppData\\Local\\anaconda3\\Lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXSizThreeSymReg.ttf', name='STIXSizeThreeSym', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-13 15:43:36,708 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Users\\msameerakram\\AppData\\Local\\anaconda3\\Lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\cmsy10.ttf', name='cmsy10', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-13 15:43:36,708 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Users\\msameerakram\\AppData\\Local\\anaconda3\\Lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\DejaVuSans-Bold.ttf', name='DejaVu Sans', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 0.33499999999999996
2025-03-13 15:43:36,708 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Users\\msameerakram\\AppData\\Local\\anaconda3\\Lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\cmmi10.ttf', name='cmmi10', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-13 15:43:36,708 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Users\\msameerakram\\AppData\\Local\\anaconda3\\Lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\DejaVuSans-BoldOblique.ttf', name='DejaVu Sans', style='oblique', variant='normal', weight=700, stretch='normal', size='scalable')) = 1.335
2025-03-13 15:43:36,708 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Users\\msameerakram\\AppData\\Local\\anaconda3\\Lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXGeneralBol.ttf', name='STIXGeneral', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-03-13 15:43:36,709 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Users\\msameerakram\\AppData\\Local\\anaconda3\\Lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\cmex10.ttf', name='cmex10', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-13 15:43:36,709 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Users\\msameerakram\\AppData\\Local\\anaconda3\\Lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\DejaVuSerif-Italic.ttf', name='DejaVu Serif', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-03-13 15:43:36,709 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Users\\msameerakram\\AppData\\Local\\anaconda3\\Lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\DejaVuSerifDisplay.ttf', name='DejaVu Serif Display', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-13 15:43:36,709 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Users\\msameerakram\\AppData\\Local\\anaconda3\\Lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXSizOneSymBol.ttf', name='STIXSizeOneSym', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-03-13 15:43:36,709 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Users\\msameerakram\\AppData\\Local\\anaconda3\\Lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\DejaVuSerif.ttf', name='DejaVu Serif', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-13 15:43:36,710 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Users\\msameerakram\\AppData\\Local\\anaconda3\\Lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXNonUniIta.ttf', name='STIXNonUnicode', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-03-13 15:43:36,710 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Users\\msameerakram\\AppData\\Local\\anaconda3\\Lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\DejaVuSerif-BoldItalic.ttf', name='DejaVu Serif', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2025-03-13 15:43:36,710 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\RAGE.TTF', name='Rage Italic', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-03-13 15:43:36,710 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BOD_PSTC.TTF', name='Bodoni MT', style='normal', variant='normal', weight=300, stretch='normal', size='scalable')) = 10.145
2025-03-13 15:43:36,710 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\FRSCRIPT.TTF', name='French Script MT', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-13 15:43:36,711 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\SitkaVF-Italic.ttf', name='Sitka', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-03-13 15:43:36,711 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\comicz.ttf', name='Comic Sans MS', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2025-03-13 15:43:36,711 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\FTLTLT.TTF', name='Footlight MT Light', style='normal', variant='normal', weight=300, stretch='normal', size='scalable')) = 10.145
2025-03-13 15:43:36,711 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BOOKOS.TTF', name='Bookman Old Style', style='normal', variant='normal', weight=300, stretch='normal', size='scalable')) = 10.145
2025-03-13 15:43:36,711 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BRUSHSCI.TTF', name='Brush Script MT', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-03-13 15:43:36,712 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\FRADMIT.TTF', name='Franklin Gothic Demi', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-03-13 15:43:36,712 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\PALSCRI.TTF', name='Palace Script MT', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-13 15:43:36,712 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ANTQUAB.TTF', name='Book Antiqua', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-03-13 15:43:36,712 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GILSANUB.TTF', name='Gill Sans Ultra Bold', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-13 15:43:36,712 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\georgiaz.ttf', name='Georgia', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2025-03-13 15:43:36,712 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\cambriai.ttf', name='Cambria', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-03-13 15:43:36,712 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\trebucbd.ttf', name='Trebuchet MS', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-03-13 15:43:36,713 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Candarai.ttf', name='Candara', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-03-13 15:43:36,713 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\segoeprb.ttf', name='Segoe Print', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-03-13 15:43:36,713 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ELEPHNT.TTF', name='Elephant', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-13 15:43:36,714 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\HARLOWSI.TTF', name='Harlow Solid Italic', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-03-13 15:43:36,714 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\KUNSTLER.TTF', name='Kunstler Script', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-13 15:43:36,714 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ebrima.ttf', name='Ebrima', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-13 15:43:36,714 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\simsun.ttc', name='SimSun', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-13 15:43:36,715 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\seguisym.ttf', name='Segoe UI Symbol', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-13 15:43:36,715 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ARIALNBI.TTF', name='Arial', style='italic', variant='normal', weight=700, stretch='condensed', size='scalable')) = 7.8986363636363635
2025-03-13 15:43:36,715 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\mvboli.ttf', name='MV Boli', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-13 15:43:36,715 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\comici.ttf', name='Comic Sans MS', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-03-13 15:43:36,715 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LATINWD.TTF', name='Wide Latin', style='normal', variant='normal', weight=400, stretch='expanded', size='scalable')) = 10.25
2025-03-13 15:43:36,716 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\georgiai.ttf', name='Georgia', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-03-13 15:43:36,716 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\verdanaz.ttf', name='Verdana', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 4.971363636363637
2025-03-13 15:43:36,716 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\micross.ttf', name='Microsoft Sans Serif', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-13 15:43:36,716 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LeelaUIb.ttf', name='Leelawadee UI', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-03-13 15:43:36,716 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\MAIAN.TTF', name='Maiandra GD', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-13 15:43:36,716 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Candara.ttf', name='Candara', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-13 15:43:36,716 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\corbelb.ttf', name='Corbel', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-03-13 15:43:36,717 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\FELIXTI.TTF', name='Felix Titling', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-13 15:43:36,717 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\SitkaVF.ttf', name='Sitka', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-13 15:43:36,717 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GOTHIC.TTF', name='Century Gothic', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-13 15:43:36,717 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\FRABKIT.TTF', name='Franklin Gothic Book', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-03-13 15:43:36,717 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GOUDOSI.TTF', name='Goudy Old Style', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-03-13 15:43:36,717 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\segoeui.ttf', name='Segoe UI', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-13 15:43:36,718 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\CENSCBK.TTF', name='Century Schoolbook', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-13 15:43:36,718 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\SCHLBKBI.TTF', name='Century Schoolbook', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2025-03-13 15:43:36,718 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\YuGothL.ttc', name='Yu Gothic', style='normal', variant='normal', weight=300, stretch='normal', size='scalable')) = 10.145
2025-03-13 15:43:36,718 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ENGR.TTF', name='Engravers MT', style='normal', variant='normal', weight=500, stretch='normal', size='scalable')) = 10.145
2025-03-13 15:43:36,719 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\malgunsl.ttf', name='Malgun Gothic', style='normal', variant='normal', weight=300, stretch='normal', size='scalable')) = 10.145
2025-03-13 15:43:36,719 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\palab.ttf', name='Palatino Linotype', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-03-13 15:43:36,719 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ELEPHNTI.TTF', name='Elephant', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-03-13 15:43:36,719 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BRLNSR.TTF', name='Berlin Sans FB', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-13 15:43:36,720 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\framdit.ttf', name='Franklin Gothic Medium', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-03-13 15:43:36,720 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\gadugib.ttf', name='Gadugi', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-03-13 15:43:36,720 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\YuGothB.ttc', name='Yu Gothic', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-03-13 15:43:36,720 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\SCRIPTBL.TTF', name='Script MT Bold', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-03-13 15:43:36,722 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BASKVILL.TTF', name='Baskerville Old Face', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-13 15:43:36,722 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\calibrili.ttf', name='Calibri', style='italic', variant='normal', weight=300, stretch='normal', size='scalable')) = 11.145
2025-03-13 15:43:36,722 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ITCBLKAD.TTF', name='Blackadder ITC', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-13 15:43:36,722 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\DUBAI-REGULAR.TTF', name='Dubai', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-13 15:43:36,722 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ITCEDSCR.TTF', name='Edwardian Script ITC', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-13 15:43:36,722 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\WINGDNG3.TTF', name='Wingdings 3', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-13 15:43:36,722 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ERASLGHT.TTF', name='Eras Light ITC', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-13 15:43:36,722 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\MSUIGHUR.TTF', name='Microsoft Uighur', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-13 15:43:36,722 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\segoesc.ttf', name='Segoe Script', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-13 15:43:36,722 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\trebucit.ttf', name='Trebuchet MS', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-03-13 15:43:36,722 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\CENTURY.TTF', name='Century', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-13 15:43:36,723 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\PLAYBILL.TTF', name='Playbill', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-13 15:43:36,723 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LBRITEI.TTF', name='Lucida Bright', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-03-13 15:43:36,723 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\segoeuil.ttf', name='Segoe UI', style='normal', variant='normal', weight=300, stretch='normal', size='scalable')) = 10.145
2025-03-13 15:43:36,723 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BRITANIC.TTF', name='Britannic Bold', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-13 15:43:36,723 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\taile.ttf', name='Microsoft Tai Le', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-13 15:43:36,723 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ntailub.ttf', name='Microsoft New Tai Lue', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-03-13 15:43:36,723 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BRLNSB.TTF', name='Berlin Sans FB', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-03-13 15:43:36,725 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\arialbd.ttf', name='Arial', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 6.698636363636363
2025-03-13 15:43:36,725 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\seguisb.ttf', name='Segoe UI', style='normal', variant='normal', weight=600, stretch='normal', size='scalable')) = 10.24
2025-03-13 15:43:36,725 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\segoeuiz.ttf', name='Segoe UI', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2025-03-13 15:43:36,725 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ERASMD.TTF', name='Eras Medium ITC', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-13 15:43:36,725 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\seguiemj.ttf', name='Segoe UI Emoji', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-13 15:43:36,725 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BROADW.TTF', name='Broadway', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-13 15:43:36,725 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BOD_BLAI.TTF', name='Bodoni MT', style='italic', variant='normal', weight=900, stretch='normal', size='scalable')) = 11.525
2025-03-13 15:43:36,726 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\seguibl.ttf', name='Segoe UI', style='normal', variant='normal', weight=900, stretch='normal', size='scalable')) = 10.525
2025-03-13 15:43:36,726 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LFAX.TTF', name='Lucida Fax', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-13 15:43:36,726 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\YuGothR.ttc', name='Yu Gothic', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-13 15:43:36,726 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\TCCEB.TTF', name='Tw Cen MT Condensed Extra Bold', style='normal', variant='normal', weight=400, stretch='condensed', size='scalable')) = 10.25
2025-03-13 15:43:36,726 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GILLUBCD.TTF', name='Gill Sans Ultra Bold Condensed', style='normal', variant='normal', weight=400, stretch='condensed', size='scalable')) = 10.25
2025-03-13 15:43:36,727 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LFAXD.TTF', name='Lucida Fax', style='normal', variant='normal', weight=600, stretch='normal', size='scalable')) = 10.24
2025-03-13 15:43:36,727 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\PER_____.TTF', name='Perpetua', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-13 15:43:36,727 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\segoeuii.ttf', name='Segoe UI', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-03-13 15:43:36,727 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\consolaz.ttf', name='Consolas', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2025-03-13 15:43:36,728 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\REFSAN.TTF', name='MS Reference Sans Serif', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-13 15:43:36,728 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\himalaya.ttf', name='Microsoft Himalaya', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-13 15:43:36,728 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ROCCB___.TTF', name='Rockwell Condensed', style='normal', variant='normal', weight=700, stretch='condensed', size='scalable')) = 10.535
2025-03-13 15:43:36,728 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\msyh.ttc', name='Microsoft YaHei', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-13 15:43:36,729 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\DUBAI-BOLD.TTF', name='Dubai', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-03-13 15:43:36,729 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\phagspa.ttf', name='Microsoft PhagsPa', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-13 15:43:36,729 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\COPRGTB.TTF', name='Copperplate Gothic Bold', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-13 15:43:36,729 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\constani.ttf', name='Constantia', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-03-13 15:43:36,729 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LTYPEO.TTF', name='Lucida Sans Typewriter', style='oblique', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-03-13 15:43:36,729 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\seguisli.ttf', name='Segoe UI', style='italic', variant='normal', weight=350, stretch='normal', size='scalable')) = 11.0975
2025-03-13 15:43:36,730 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\PERBI___.TTF', name='Perpetua', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2025-03-13 15:43:36,730 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\MAGNETOB.TTF', name='Magneto', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-03-13 15:43:36,730 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\tahoma.ttf', name='Tahoma', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-13 15:43:36,730 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BELLI.TTF', name='Bell MT', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-03-13 15:43:36,730 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\msgothic.ttc', name='MS Gothic', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-13 15:43:36,730 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\consolai.ttf', name='Consolas', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-03-13 15:43:36,731 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\courbi.ttf', name='Courier New', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2025-03-13 15:43:36,731 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\SansSerifCollection.ttf', name='Sans Serif Collection', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-13 15:43:36,731 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LFAXDI.TTF', name='Lucida Fax', style='italic', variant='normal', weight=600, stretch='normal', size='scalable')) = 11.24
2025-03-13 15:43:36,731 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BOOKOSB.TTF', name='Bookman Old Style', style='normal', variant='normal', weight=600, stretch='normal', size='scalable')) = 10.24
2025-03-13 15:43:36,731 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BELL.TTF', name='Bell MT', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-13 15:43:36,731 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GOUDOS.TTF', name='Goudy Old Style', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-13 15:43:36,732 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\consolab.ttf', name='Consolas', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-03-13 15:43:36,732 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ROCKI.TTF', name='Rockwell', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-03-13 15:43:36,732 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\constanb.ttf', name='Constantia', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-03-13 15:43:36,732 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\seguisbi.ttf', name='Segoe UI', style='italic', variant='normal', weight=600, stretch='normal', size='scalable')) = 11.24
2025-03-13 15:43:36,732 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Nirmala.ttc', name='Nirmala UI', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-13 15:43:36,732 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LEELAWDB.TTF', name='Leelawadee', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-03-13 15:43:36,733 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\cour.ttf', name='Courier New', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-13 15:43:36,733 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\malgunbd.ttf', name='Malgun Gothic', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-03-13 15:43:36,733 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\MTCORSVA.TTF', name='Monotype Corsiva', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-13 15:43:36,733 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\SCHLBKI.TTF', name='Century Schoolbook', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-03-13 15:43:36,733 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LEELAWAD.TTF', name='Leelawadee', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-13 15:43:36,734 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\corbelli.ttf', name='Corbel', style='italic', variant='normal', weight=300, stretch='normal', size='scalable')) = 11.145
2025-03-13 15:43:36,734 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\symbol.ttf', name='Symbol', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-13 15:43:36,734 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BERNHC.TTF', name='Bernard MT Condensed', style='normal', variant='normal', weight=400, stretch='condensed', size='scalable')) = 10.25
2025-03-13 15:43:36,735 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\YuGothM.ttc', name='Yu Gothic', style='normal', variant='normal', weight=500, stretch='normal', size='scalable')) = 10.145
2025-03-13 15:43:36,735 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BOD_CBI.TTF', name='Bodoni MT', style='italic', variant='normal', weight=700, stretch='condensed', size='scalable')) = 11.535
2025-03-13 15:43:36,735 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\monbaiti.ttf', name='Mongolian Baiti', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-13 15:43:36,735 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Gabriola.ttf', name='Gabriola', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-13 15:43:36,736 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\timesi.ttf', name='Times New Roman', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-03-13 15:43:36,736 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BOD_B.TTF', name='Bodoni MT', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-03-13 15:43:36,736 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\verdana.ttf', name='Verdana', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 3.6863636363636365
2025-03-13 15:43:36,737 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Candarali.ttf', name='Candara', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-03-13 15:43:36,737 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\PRISTINA.TTF', name='Pristina', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-13 15:43:36,737 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\arialbi.ttf', name='Arial', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 7.698636363636363
2025-03-13 15:43:36,737 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LCALLIG.TTF', name='Lucida Calligraphy', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-03-13 15:43:36,738 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Candaral.ttf', name='Candara', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-13 15:43:36,738 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\FRAHVIT.TTF', name='Franklin Gothic Heavy', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-03-13 15:43:36,738 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Inkfree.ttf', name='Ink Free', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-13 15:43:36,738 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\VLADIMIR.TTF', name='Vladimir Script', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-13 15:43:36,738 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ONYX.TTF', name='Onyx', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-13 15:43:36,738 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LBRITEDI.TTF', name='Lucida Bright', style='italic', variant='normal', weight=600, stretch='normal', size='scalable')) = 11.24
2025-03-13 15:43:36,738 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\WINGDNG2.TTF', name='Wingdings 2', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-13 15:43:36,739 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\DUBAI-LIGHT.TTF', name='Dubai', style='normal', variant='normal', weight=300, stretch='normal', size='scalable')) = 10.145
2025-03-13 15:43:36,739 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\l_10646.ttf', name='Lucida Sans Unicode', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-13 15:43:36,739 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\TCCB____.TTF', name='Tw Cen MT Condensed', style='normal', variant='normal', weight=700, stretch='condensed', size='scalable')) = 10.535
2025-03-13 15:43:36,739 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ARIALNB.TTF', name='Arial', style='normal', variant='normal', weight=700, stretch='condensed', size='scalable')) = 6.8986363636363635
2025-03-13 15:43:36,739 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\trebuc.ttf', name='Trebuchet MS', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-13 15:43:36,740 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\TCMI____.TTF', name='Tw Cen MT', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-03-13 15:43:36,740 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ERASBD.TTF', name='Eras Bold ITC', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-13 15:43:36,740 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LSANSDI.TTF', name='Lucida Sans', style='italic', variant='normal', weight=600, stretch='normal', size='scalable')) = 11.24
2025-03-13 15:43:36,740 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\CENTAUR.TTF', name='Centaur', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-13 15:43:36,740 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\HTOWERT.TTF', name='High Tower Text', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-13 15:43:36,741 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\INFROMAN.TTF', name='Informal Roman', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-13 15:43:36,741 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\constan.ttf', name='Constantia', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-13 15:43:36,741 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LFAXI.TTF', name='Lucida Fax', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-03-13 15:43:36,741 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\phagspab.ttf', name='Microsoft PhagsPa', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-03-13 15:43:36,741 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GIL_____.TTF', name='Gill Sans MT', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-13 15:43:36,742 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ariblk.ttf', name='Arial', style='normal', variant='normal', weight=900, stretch='normal', size='scalable')) = 6.888636363636364
2025-03-13 15:43:36,742 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GOTHICBI.TTF', name='Century Gothic', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2025-03-13 15:43:36,742 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\FRADMCN.TTF', name='Franklin Gothic Demi Cond', style='normal', variant='normal', weight=400, stretch='condensed', size='scalable')) = 10.25
2025-03-13 15:43:36,742 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\calibrii.ttf', name='Calibri', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-03-13 15:43:36,742 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GARABD.TTF', name='Garamond', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-03-13 15:43:36,744 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\MISTRAL.TTF', name='Mistral', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-13 15:43:36,744 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BOD_BI.TTF', name='Bodoni MT', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2025-03-13 15:43:36,744 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GOUDOSB.TTF', name='Goudy Old Style', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-03-13 15:43:36,744 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\FORTE.TTF', name='Forte', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-13 15:43:36,744 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\HARNGTON.TTF', name='Harrington', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-13 15:43:36,745 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BOD_CI.TTF', name='Bodoni MT', style='italic', variant='normal', weight=400, stretch='condensed', size='scalable')) = 11.25
2025-03-13 15:43:36,745 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BKANT.TTF', name='Book Antiqua', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-13 15:43:36,745 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GILC____.TTF', name='Gill Sans MT Condensed', style='normal', variant='normal', weight=400, stretch='condensed', size='scalable')) = 10.25
2025-03-13 15:43:36,745 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\segoepr.ttf', name='Segoe Print', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-13 15:43:36,745 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\VINERITC.TTF', name='Viner Hand ITC', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-13 15:43:36,745 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\FRAMDCN.TTF', name='Franklin Gothic Medium Cond', style='normal', variant='normal', weight=400, stretch='condensed', size='scalable')) = 10.25
2025-03-13 15:43:36,746 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\sylfaen.ttf', name='Sylfaen', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-13 15:43:36,746 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\mmrtext.ttf', name='Myanmar Text', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-13 15:43:36,746 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\SNAP____.TTF', name='Snap ITC', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-13 15:43:36,746 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GILI____.TTF', name='Gill Sans MT', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-03-13 15:43:36,746 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\calibrib.ttf', name='Calibri', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-03-13 15:43:36,746 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\impact.ttf', name='Impact', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-13 15:43:36,746 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\SCHLBKB.TTF', name='Century Schoolbook', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-03-13 15:43:36,747 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\TCB_____.TTF', name='Tw Cen MT', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-03-13 15:43:36,747 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ANTQUAI.TTF', name='Book Antiqua', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-03-13 15:43:36,747 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BOD_CR.TTF', name='Bodoni MT', style='normal', variant='normal', weight=400, stretch='condensed', size='scalable')) = 10.25
2025-03-13 15:43:36,747 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\corbell.ttf', name='Corbel', style='normal', variant='normal', weight=300, stretch='normal', size='scalable')) = 10.145
2025-03-13 15:43:36,747 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\FRADM.TTF', name='Franklin Gothic Demi', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-13 15:43:36,748 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\PAPYRUS.TTF', name='Papyrus', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-13 15:43:36,748 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\VIVALDII.TTF', name='Vivaldi', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-03-13 15:43:36,748 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\OLDENGL.TTF', name='Old English Text MT', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-13 15:43:36,748 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\pala.ttf', name='Palatino Linotype', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-13 15:43:36,749 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\comicbd.ttf', name='Comic Sans MS', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-03-13 15:43:36,749 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\calibri.ttf', name='Calibri', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-13 15:43:36,749 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\PERI____.TTF', name='Perpetua', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-03-13 15:43:36,749 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GARAIT.TTF', name='Garamond', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-03-13 15:43:36,749 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\corbelz.ttf', name='Corbel', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2025-03-13 15:43:36,750 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GARA.TTF', name='Garamond', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-13 15:43:36,750 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\georgiab.ttf', name='Georgia', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-03-13 15:43:36,750 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ROCK.TTF', name='Rockwell', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-13 15:43:36,750 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\PARCHM.TTF', name='Parchment', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-13 15:43:36,751 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\CALIFB.TTF', name='Californian FB', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-03-13 15:43:36,751 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\cambriaz.ttf', name='Cambria', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2025-03-13 15:43:36,751 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ebrimabd.ttf', name='Ebrima', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-03-13 15:43:36,751 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LSANS.TTF', name='Lucida Sans', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-13 15:43:36,751 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\timesbd.ttf', name='Times New Roman', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-03-13 15:43:36,751 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\CALIFR.TTF', name='Californian FB', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-13 15:43:36,752 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\consola.ttf', name='Consolas', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-13 15:43:36,752 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\msjhl.ttc', name='Microsoft JhengHei', style='normal', variant='normal', weight=290, stretch='normal', size='scalable')) = 10.1545
2025-03-13 15:43:36,752 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Candarab.ttf', name='Candara', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-03-13 15:43:36,752 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\MTEXTRA.TTF', name='MT Extra', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-13 15:43:36,752 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ntailu.ttf', name='Microsoft New Tai Lue', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-13 15:43:36,752 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\seguibli.ttf', name='Segoe UI', style='italic', variant='normal', weight=900, stretch='normal', size='scalable')) = 11.525
2025-03-13 15:43:36,752 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\javatext.ttf', name='Javanese Text', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-13 15:43:36,752 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\SHOWG.TTF', name='Showcard Gothic', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-13 15:43:36,753 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\CASTELAR.TTF', name='Castellar', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-13 15:43:36,753 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\HATTEN.TTF', name='Haettenschweiler', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-13 15:43:36,753 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ariali.ttf', name='Arial', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 7.413636363636363
2025-03-13 15:43:36,753 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\AGENCYR.TTF', name='Agency FB', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-13 15:43:36,753 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\malgun.ttf', name='Malgun Gothic', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-13 15:43:36,754 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BOD_BLAR.TTF', name='Bodoni MT', style='normal', variant='normal', weight=900, stretch='normal', size='scalable')) = 10.525
2025-03-13 15:43:36,754 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LeelawUI.ttf', name='Leelawadee UI', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-13 15:43:36,754 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\CHILLER.TTF', name='Chiller', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-13 15:43:36,754 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\CALIST.TTF', name='Calisto MT', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-13 15:43:36,754 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\JUICE___.TTF', name='Juice ITC', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-13 15:43:36,755 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\JOKERMAN.TTF', name='Jokerman', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-13 15:43:36,755 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\cambria.ttc', name='Cambria', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-13 15:43:36,755 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LHANDW.TTF', name='Lucida Handwriting', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-03-13 15:43:36,755 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BAUHS93.TTF', name='Bauhaus 93', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-13 15:43:36,755 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\COPRGTL.TTF', name='Copperplate Gothic Light', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-13 15:43:36,755 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LSANSD.TTF', name='Lucida Sans', style='normal', variant='normal', weight=600, stretch='normal', size='scalable')) = 10.24
2025-03-13 15:43:36,757 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LTYPEBO.TTF', name='Lucida Sans Typewriter', style='oblique', variant='normal', weight=600, stretch='normal', size='scalable')) = 11.24
2025-03-13 15:43:36,757 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\arial.ttf', name='Arial', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 6.413636363636363
2025-03-13 15:43:36,757 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ERASDEMI.TTF', name='Eras Demi ITC', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-13 15:43:36,757 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\TEMPSITC.TTF', name='Tempus Sans ITC', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-13 15:43:36,757 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ARIALN.TTF', name='Arial', style='normal', variant='normal', weight=400, stretch='condensed', size='scalable')) = 6.613636363636363
2025-03-13 15:43:36,757 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\COLONNA.TTF', name='Colonna MT', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-13 15:43:36,757 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ROCKEB.TTF', name='Rockwell Extra Bold', style='normal', variant='normal', weight=800, stretch='normal', size='scalable')) = 10.43
2025-03-13 15:43:36,758 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\CALISTBI.TTF', name='Calisto MT', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2025-03-13 15:43:36,758 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\palabi.ttf', name='Palatino Linotype', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2025-03-13 15:43:36,758 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\segoescb.ttf', name='Segoe Script', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-03-13 15:43:36,758 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\corbeli.ttf', name='Corbel', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-03-13 15:43:36,758 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\segoeuisl.ttf', name='Segoe UI', style='normal', variant='normal', weight=350, stretch='normal', size='scalable')) = 10.0975
2025-03-13 15:43:36,758 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ROCKBI.TTF', name='Rockwell', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2025-03-13 15:43:36,759 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LBRITED.TTF', name='Lucida Bright', style='normal', variant='normal', weight=600, stretch='normal', size='scalable')) = 10.24
2025-03-13 15:43:36,759 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\CALISTI.TTF', name='Calisto MT', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-03-13 15:43:36,759 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\courbd.ttf', name='Courier New', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-03-13 15:43:36,759 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\lucon.ttf', name='Lucida Console', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-13 15:43:36,759 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\POORICH.TTF', name='Poor Richard', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-13 15:43:36,759 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\taileb.ttf', name='Microsoft Tai Le', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-03-13 15:43:36,760 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ARLRDBD.TTF', name='Arial Rounded MT Bold', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-13 15:43:36,760 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GLSNECB.TTF', name='Gill Sans MT Ext Condensed Bold', style='normal', variant='normal', weight=400, stretch='condensed', size='scalable')) = 10.25
2025-03-13 15:43:36,760 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\mingliub.ttc', name='MingLiU-ExtB', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-13 15:43:36,760 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\timesbi.ttf', name='Times New Roman', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2025-03-13 15:43:36,760 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\calibriz.ttf', name='Calibri', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2025-03-13 15:43:36,760 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BOD_R.TTF', name='Bodoni MT', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-13 15:43:36,760 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\wingding.ttf', name='Wingdings', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-13 15:43:36,761 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BRADHITC.TTF', name='Bradley Hand ITC', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-13 15:43:36,761 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\framd.ttf', name='Franklin Gothic Medium', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-13 15:43:36,761 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\DUBAI-MEDIUM.TTF', name='Dubai', style='normal', variant='normal', weight=500, stretch='normal', size='scalable')) = 10.145
2025-03-13 15:43:36,761 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\trebucbi.ttf', name='Trebuchet MS', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2025-03-13 15:43:36,762 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\cambriab.ttf', name='Cambria', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-03-13 15:43:36,762 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\palai.ttf', name='Palatino Linotype', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-03-13 15:43:36,762 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\times.ttf', name='Times New Roman', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-13 15:43:36,762 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\constanz.ttf', name='Constantia', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2025-03-13 15:43:36,763 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\corbel.ttf', name='Corbel', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-13 15:43:36,763 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\gadugi.ttf', name='Gadugi', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-13 15:43:36,763 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LBRITE.TTF', name='Lucida Bright', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-13 15:43:36,763 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GOUDYSTO.TTF', name='Goudy Stout', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-13 15:43:36,763 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\verdanab.ttf', name='Verdana', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 3.9713636363636367
2025-03-13 15:43:36,763 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GOTHICB.TTF', name='Century Gothic', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-03-13 15:43:36,764 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\NIAGENG.TTF', name='Niagara Engraved', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-13 15:43:36,764 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\segoeuib.ttf', name='Segoe UI', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-03-13 15:43:36,764 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\seguihis.ttf', name='Segoe UI Historic', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-13 15:43:36,764 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\msyhl.ttc', name='Microsoft YaHei', style='normal', variant='normal', weight=290, stretch='normal', size='scalable')) = 10.1545
2025-03-13 15:43:36,764 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ROCKB.TTF', name='Rockwell', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-03-13 15:43:36,764 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\PERTIBD.TTF', name='Perpetua Titling MT', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-03-13 15:43:36,764 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\comic.ttf', name='Comic Sans MS', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-13 15:43:36,765 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\OCRAEXT.TTF', name='OCR A Extended', style='normal', variant='normal', weight=400, stretch='expanded', size='scalable')) = 10.25
2025-03-13 15:43:36,765 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\TCBI____.TTF', name='Tw Cen MT', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2025-03-13 15:43:36,765 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\IMPRISHA.TTF', name='Imprint MT Shadow', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-13 15:43:36,765 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\MOD20.TTF', name='Modern No. 20', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-13 15:43:36,765 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GILB____.TTF', name='Gill Sans MT', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-03-13 15:43:36,765 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LTYPE.TTF', name='Lucida Sans Typewriter', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-13 15:43:36,766 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BRLNSDB.TTF', name='Berlin Sans FB Demi', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-03-13 15:43:36,766 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\STENCIL.TTF', name='Stencil', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-13 15:43:36,766 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\msyhbd.ttc', name='Microsoft YaHei', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-03-13 15:43:36,766 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\SimsunExtG.ttf', name='SimSun-ExtG', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-13 15:43:36,766 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LeelUIsl.ttf', name='Leelawadee UI', style='normal', variant='normal', weight=350, stretch='normal', size='scalable')) = 10.0975
2025-03-13 15:43:36,766 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\OUTLOOK.TTF', name='MS Outlook', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-13 15:43:36,766 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BOD_CB.TTF', name='Bodoni MT', style='normal', variant='normal', weight=700, stretch='condensed', size='scalable')) = 10.535
2025-03-13 15:43:36,767 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\mmrtextb.ttf', name='Myanmar Text', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-03-13 15:43:36,767 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GOTHICI.TTF', name='Century Gothic', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-03-13 15:43:36,767 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\SegoeIcons.ttf', name='Segoe Fluent Icons', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-13 15:43:36,767 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ALGER.TTF', name='Algerian', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-13 15:43:36,767 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BOOKOSBI.TTF', name='Bookman Old Style', style='italic', variant='normal', weight=600, stretch='normal', size='scalable')) = 11.24
2025-03-13 15:43:36,768 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BSSYM7.TTF', name='Bookshelf Symbol 7', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-13 15:43:36,768 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\tahomabd.ttf', name='Tahoma', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-03-13 15:43:36,768 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\msyi.ttf', name='Microsoft Yi Baiti', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-13 15:43:36,769 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\CURLZ___.TTF', name='Curlz MT', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-13 15:43:36,769 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\RAVIE.TTF', name='Ravie', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-13 15:43:36,769 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\simsunb.ttf', name='SimSun-ExtB', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-13 15:43:36,769 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BELLB.TTF', name='Bell MT', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-03-13 15:43:36,770 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\PERTILI.TTF', name='Perpetua Titling MT', style='normal', variant='normal', weight=300, stretch='normal', size='scalable')) = 10.145
2025-03-13 15:43:36,770 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\seguili.ttf', name='Segoe UI', style='italic', variant='normal', weight=300, stretch='normal', size='scalable')) = 11.145
2025-03-13 15:43:36,770 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\CALISTB.TTF', name='Calisto MT', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-03-13 15:43:36,770 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ITCKRIST.TTF', name='Kristen ITC', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-13 15:43:36,770 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ANTQUABI.TTF', name='Book Antiqua', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2025-03-13 15:43:36,770 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\PERB____.TTF', name='Perpetua', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-03-13 15:43:36,771 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ROCC____.TTF', name='Rockwell Condensed', style='normal', variant='normal', weight=400, stretch='condensed', size='scalable')) = 10.25
2025-03-13 15:43:36,771 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GILBI___.TTF', name='Gill Sans MT', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2025-03-13 15:43:36,771 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\MSUIGHUB.TTF', name='Microsoft Uighur', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-03-13 15:43:36,771 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\segmdl2.ttf', name='Segoe MDL2 Assets', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-13 15:43:36,771 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ARIALNI.TTF', name='Arial', style='italic', variant='normal', weight=400, stretch='condensed', size='scalable')) = 7.613636363636363
2025-03-13 15:43:36,771 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\bahnschrift.ttf', name='Bahnschrift', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-13 15:43:36,772 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\TCM_____.TTF', name='Tw Cen MT', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-13 15:43:36,772 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\REFSPCL.TTF', name='MS Reference Specialty', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-13 15:43:36,772 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\FRAHV.TTF', name='Franklin Gothic Heavy', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-13 15:43:36,772 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Candaraz.ttf', name='Candara', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2025-03-13 15:43:36,772 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\georgia.ttf', name='Georgia', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-13 15:43:36,772 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\MATURASC.TTF', name='Matura MT Script Capitals', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-13 15:43:36,772 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GIGI.TTF', name='Gigi', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-13 15:43:36,772 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\CALIFI.TTF', name='Californian FB', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-03-13 15:43:36,772 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\SegUIVar.ttf', name='Segoe UI Variable', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-13 15:43:36,773 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\FRABK.TTF', name='Franklin Gothic Book', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-13 15:43:36,773 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\couri.ttf', name='Courier New', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-03-13 15:43:36,773 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BOOKOSI.TTF', name='Bookman Old Style', style='italic', variant='normal', weight=300, stretch='normal', size='scalable')) = 11.145
2025-03-13 15:43:36,773 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\verdanai.ttf', name='Verdana', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 4.6863636363636365
2025-03-13 15:43:36,773 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\calibril.ttf', name='Calibri', style='normal', variant='normal', weight=300, stretch='normal', size='scalable')) = 10.145
2025-03-13 15:43:36,773 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\FREESCPT.TTF', name='Freestyle Script', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-13 15:43:36,773 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BOD_I.TTF', name='Bodoni MT', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-03-13 15:43:36,774 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\msjhbd.ttc', name='Microsoft JhengHei', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-03-13 15:43:36,774 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\COOPBL.TTF', name='Cooper Black', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-13 15:43:36,774 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\TCCM____.TTF', name='Tw Cen MT Condensed', style='normal', variant='normal', weight=400, stretch='condensed', size='scalable')) = 10.25
2025-03-13 15:43:36,775 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\AGENCYB.TTF', name='Agency FB', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-03-13 15:43:36,775 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LSANSI.TTF', name='Lucida Sans', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-03-13 15:43:36,776 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\NIAGSOL.TTF', name='Niagara Solid', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-13 15:43:36,776 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LTYPEB.TTF', name='Lucida Sans Typewriter', style='normal', variant='normal', weight=600, stretch='normal', size='scalable')) = 10.24
2025-03-13 15:43:36,776 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GLECB.TTF', name='Gloucester MT Extra Condensed', style='normal', variant='normal', weight=400, stretch='condensed', size='scalable')) = 10.25
2025-03-13 15:43:36,776 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\webdings.ttf', name='Webdings', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-13 15:43:36,777 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\msjh.ttc', name='Microsoft JhengHei', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-13 15:43:36,777 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\HTOWERTI.TTF', name='High Tower Text', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-03-13 15:43:36,777 - matplotlib.font_manager - DEBUG - findfont: Matching sans\-serif:style=normal:variant=normal:weight=normal:stretch=normal:size=9.0 to DejaVu Sans ('C:\\Users\\msameerakram\\AppData\\Local\\anaconda3\\Lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\DejaVuSans.ttf') with score of 0.050000.
2025-03-13 15:43:37,107 - PIL.PngImagePlugin - DEBUG - STREAM b'IHDR' 16 13
2025-03-13 15:43:37,107 - PIL.PngImagePlugin - DEBUG - STREAM b'tEXt' 41 57
2025-03-13 15:43:37,107 - PIL.PngImagePlugin - DEBUG - STREAM b'pHYs' 110 9
2025-03-13 15:43:37,108 - PIL.PngImagePlugin - DEBUG - STREAM b'IDAT' 131 65536
2025-03-13 15:43:37,709 - matplotlib.font_manager - DEBUG - findfont: Matching sans\-serif:style=normal:variant=normal:weight=bold:stretch=normal:size=9.0.
2025-03-13 15:43:37,710 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Users\\msameerakram\\AppData\\Local\\anaconda3\\Lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\cmss10.ttf', name='cmss10', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.335
2025-03-13 15:43:37,710 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Users\\msameerakram\\AppData\\Local\\anaconda3\\Lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\DejaVuSans-Oblique.ttf', name='DejaVu Sans', style='oblique', variant='normal', weight=400, stretch='normal', size='scalable')) = 1.335
2025-03-13 15:43:37,710 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Users\\msameerakram\\AppData\\Local\\anaconda3\\Lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\cmb10.ttf', name='cmb10', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.335
2025-03-13 15:43:37,711 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Users\\msameerakram\\AppData\\Local\\anaconda3\\Lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\DejaVuSansDisplay.ttf', name='DejaVu Sans Display', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.335
2025-03-13 15:43:37,711 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Users\\msameerakram\\AppData\\Local\\anaconda3\\Lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\DejaVuSansMono-Oblique.ttf', name='DejaVu Sans Mono', style='oblique', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.335
2025-03-13 15:43:37,711 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Users\\msameerakram\\AppData\\Local\\anaconda3\\Lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXSizFiveSymReg.ttf', name='STIXSizeFiveSym', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.335
2025-03-13 15:43:37,711 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Users\\msameerakram\\AppData\\Local\\anaconda3\\Lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\DejaVuSansMono.ttf', name='DejaVu Sans Mono', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.335
2025-03-13 15:43:37,711 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Users\\msameerakram\\AppData\\Local\\anaconda3\\Lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\DejaVuSans.ttf', name='DejaVu Sans', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 0.33499999999999996
2025-03-13 15:43:37,712 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Users\\msameerakram\\AppData\\Local\\anaconda3\\Lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXGeneralBolIta.ttf', name='STIXGeneral', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.05
2025-03-13 15:43:37,712 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Users\\msameerakram\\AppData\\Local\\anaconda3\\Lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXSizThreeSymBol.ttf', name='STIXSizeThreeSym', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.05
2025-03-13 15:43:37,712 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Users\\msameerakram\\AppData\\Local\\anaconda3\\Lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXNonUniBolIta.ttf', name='STIXNonUnicode', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.05
2025-03-13 15:43:37,712 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Users\\msameerakram\\AppData\\Local\\anaconda3\\Lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXGeneralItalic.ttf', name='STIXGeneral', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.335
2025-03-13 15:43:37,712 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Users\\msameerakram\\AppData\\Local\\anaconda3\\Lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\DejaVuSerif-Bold.ttf', name='DejaVu Serif', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.05
2025-03-13 15:43:37,712 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Users\\msameerakram\\AppData\\Local\\anaconda3\\Lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXSizTwoSymReg.ttf', name='STIXSizeTwoSym', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.335
2025-03-13 15:43:37,713 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Users\\msameerakram\\AppData\\Local\\anaconda3\\Lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\DejaVuSansMono-Bold.ttf', name='DejaVu Sans Mono', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.05
2025-03-13 15:43:37,713 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Users\\msameerakram\\AppData\\Local\\anaconda3\\Lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\cmr10.ttf', name='cmr10', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.335
2025-03-13 15:43:37,713 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Users\\msameerakram\\AppData\\Local\\anaconda3\\Lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXSizFourSymBol.ttf', name='STIXSizeFourSym', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.05
2025-03-13 15:43:37,713 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Users\\msameerakram\\AppData\\Local\\anaconda3\\Lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\cmtt10.ttf', name='cmtt10', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.335
2025-03-13 15:43:37,714 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Users\\msameerakram\\AppData\\Local\\anaconda3\\Lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXSizTwoSymBol.ttf', name='STIXSizeTwoSym', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.05
2025-03-13 15:43:37,714 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Users\\msameerakram\\AppData\\Local\\anaconda3\\Lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXGeneral.ttf', name='STIXGeneral', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.335
2025-03-13 15:43:37,714 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Users\\msameerakram\\AppData\\Local\\anaconda3\\Lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXNonUni.ttf', name='STIXNonUnicode', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.335
2025-03-13 15:43:37,715 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Users\\msameerakram\\AppData\\Local\\anaconda3\\Lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\DejaVuSansMono-BoldOblique.ttf', name='DejaVu Sans Mono', style='oblique', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.05
2025-03-13 15:43:37,715 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Users\\msameerakram\\AppData\\Local\\anaconda3\\Lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXSizFourSymReg.ttf', name='STIXSizeFourSym', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.335
2025-03-13 15:43:37,715 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Users\\msameerakram\\AppData\\Local\\anaconda3\\Lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXSizOneSymReg.ttf', name='STIXSizeOneSym', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.335
2025-03-13 15:43:37,715 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Users\\msameerakram\\AppData\\Local\\anaconda3\\Lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXNonUniBol.ttf', name='STIXNonUnicode', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.05
2025-03-13 15:43:37,715 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Users\\msameerakram\\AppData\\Local\\anaconda3\\Lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXSizThreeSymReg.ttf', name='STIXSizeThreeSym', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.335
2025-03-13 15:43:37,716 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Users\\msameerakram\\AppData\\Local\\anaconda3\\Lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\cmsy10.ttf', name='cmsy10', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.335
2025-03-13 15:43:37,716 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Users\\msameerakram\\AppData\\Local\\anaconda3\\Lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\DejaVuSans-Bold.ttf', name='DejaVu Sans', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 0.05
2025-03-13 15:43:37,716 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Users\\msameerakram\\AppData\\Local\\anaconda3\\Lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\cmmi10.ttf', name='cmmi10', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.335
2025-03-13 15:43:37,716 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Users\\msameerakram\\AppData\\Local\\anaconda3\\Lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\DejaVuSans-BoldOblique.ttf', name='DejaVu Sans', style='oblique', variant='normal', weight=700, stretch='normal', size='scalable')) = 1.05
2025-03-13 15:43:37,717 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Users\\msameerakram\\AppData\\Local\\anaconda3\\Lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXGeneralBol.ttf', name='STIXGeneral', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.05
2025-03-13 15:43:37,717 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Users\\msameerakram\\AppData\\Local\\anaconda3\\Lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\cmex10.ttf', name='cmex10', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.335
2025-03-13 15:43:37,717 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Users\\msameerakram\\AppData\\Local\\anaconda3\\Lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\DejaVuSerif-Italic.ttf', name='DejaVu Serif', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.335
2025-03-13 15:43:37,717 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Users\\msameerakram\\AppData\\Local\\anaconda3\\Lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\DejaVuSerifDisplay.ttf', name='DejaVu Serif Display', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.335
2025-03-13 15:43:37,718 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Users\\msameerakram\\AppData\\Local\\anaconda3\\Lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXSizOneSymBol.ttf', name='STIXSizeOneSym', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.05
2025-03-13 15:43:37,718 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Users\\msameerakram\\AppData\\Local\\anaconda3\\Lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\DejaVuSerif.ttf', name='DejaVu Serif', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.335
2025-03-13 15:43:37,718 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Users\\msameerakram\\AppData\\Local\\anaconda3\\Lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXNonUniIta.ttf', name='STIXNonUnicode', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.335
2025-03-13 15:43:37,718 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Users\\msameerakram\\AppData\\Local\\anaconda3\\Lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\DejaVuSerif-BoldItalic.ttf', name='DejaVu Serif', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.05
2025-03-13 15:43:37,719 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\RAGE.TTF', name='Rage Italic', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.335
2025-03-13 15:43:37,719 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BOD_PSTC.TTF', name='Bodoni MT', style='normal', variant='normal', weight=300, stretch='normal', size='scalable')) = 10.43
2025-03-13 15:43:37,719 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\FRSCRIPT.TTF', name='French Script MT', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.335
2025-03-13 15:43:37,719 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\SitkaVF-Italic.ttf', name='Sitka', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.335
2025-03-13 15:43:37,720 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\comicz.ttf', name='Comic Sans MS', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.05
2025-03-13 15:43:37,720 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\FTLTLT.TTF', name='Footlight MT Light', style='normal', variant='normal', weight=300, stretch='normal', size='scalable')) = 10.43
2025-03-13 15:43:37,720 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BOOKOS.TTF', name='Bookman Old Style', style='normal', variant='normal', weight=300, stretch='normal', size='scalable')) = 10.43
2025-03-13 15:43:37,720 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BRUSHSCI.TTF', name='Brush Script MT', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.335
2025-03-13 15:43:37,721 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\FRADMIT.TTF', name='Franklin Gothic Demi', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.335
2025-03-13 15:43:37,721 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\PALSCRI.TTF', name='Palace Script MT', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.335
2025-03-13 15:43:37,721 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ANTQUAB.TTF', name='Book Antiqua', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.05
2025-03-13 15:43:37,721 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GILSANUB.TTF', name='Gill Sans Ultra Bold', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.335
2025-03-13 15:43:37,722 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\georgiaz.ttf', name='Georgia', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.05
2025-03-13 15:43:37,722 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\cambriai.ttf', name='Cambria', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.335
2025-03-13 15:43:37,722 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\trebucbd.ttf', name='Trebuchet MS', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.05
2025-03-13 15:43:37,722 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Candarai.ttf', name='Candara', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.335
2025-03-13 15:43:37,722 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\segoeprb.ttf', name='Segoe Print', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.05
2025-03-13 15:43:37,723 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ELEPHNT.TTF', name='Elephant', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.335
2025-03-13 15:43:37,723 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\HARLOWSI.TTF', name='Harlow Solid Italic', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.335
2025-03-13 15:43:37,723 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\KUNSTLER.TTF', name='Kunstler Script', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.335
2025-03-13 15:43:37,724 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ebrima.ttf', name='Ebrima', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.335
2025-03-13 15:43:37,724 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\simsun.ttc', name='SimSun', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.335
2025-03-13 15:43:37,724 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\seguisym.ttf', name='Segoe UI Symbol', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.335
2025-03-13 15:43:37,724 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ARIALNBI.TTF', name='Arial', style='italic', variant='normal', weight=700, stretch='condensed', size='scalable')) = 7.613636363636363
2025-03-13 15:43:37,724 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\mvboli.ttf', name='MV Boli', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.335
2025-03-13 15:43:37,725 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\comici.ttf', name='Comic Sans MS', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.335
2025-03-13 15:43:37,725 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LATINWD.TTF', name='Wide Latin', style='normal', variant='normal', weight=400, stretch='expanded', size='scalable')) = 10.535
2025-03-13 15:43:37,725 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\georgiai.ttf', name='Georgia', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.335
2025-03-13 15:43:37,725 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\verdanaz.ttf', name='Verdana', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 4.6863636363636365
2025-03-13 15:43:37,725 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\micross.ttf', name='Microsoft Sans Serif', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.335
2025-03-13 15:43:37,725 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LeelaUIb.ttf', name='Leelawadee UI', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.05
2025-03-13 15:43:37,725 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\MAIAN.TTF', name='Maiandra GD', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.335
2025-03-13 15:43:37,726 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Candara.ttf', name='Candara', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.335
2025-03-13 15:43:37,726 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\corbelb.ttf', name='Corbel', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.05
2025-03-13 15:43:37,726 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\FELIXTI.TTF', name='Felix Titling', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.335
2025-03-13 15:43:37,726 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\SitkaVF.ttf', name='Sitka', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.335
2025-03-13 15:43:37,727 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GOTHIC.TTF', name='Century Gothic', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.335
2025-03-13 15:43:37,727 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\FRABKIT.TTF', name='Franklin Gothic Book', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.335
2025-03-13 15:43:37,727 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GOUDOSI.TTF', name='Goudy Old Style', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.335
2025-03-13 15:43:37,727 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\segoeui.ttf', name='Segoe UI', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.335
2025-03-13 15:43:37,727 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\CENSCBK.TTF', name='Century Schoolbook', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.335
2025-03-13 15:43:37,728 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\SCHLBKBI.TTF', name='Century Schoolbook', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.05
2025-03-13 15:43:37,728 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\YuGothL.ttc', name='Yu Gothic', style='normal', variant='normal', weight=300, stretch='normal', size='scalable')) = 10.43
2025-03-13 15:43:37,728 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ENGR.TTF', name='Engravers MT', style='normal', variant='normal', weight=500, stretch='normal', size='scalable')) = 10.24
2025-03-13 15:43:37,728 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\malgunsl.ttf', name='Malgun Gothic', style='normal', variant='normal', weight=300, stretch='normal', size='scalable')) = 10.43
2025-03-13 15:43:37,728 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\palab.ttf', name='Palatino Linotype', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.05
2025-03-13 15:43:37,728 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ELEPHNTI.TTF', name='Elephant', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.335
2025-03-13 15:43:37,729 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BRLNSR.TTF', name='Berlin Sans FB', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.335
2025-03-13 15:43:37,729 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\framdit.ttf', name='Franklin Gothic Medium', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.335
2025-03-13 15:43:37,729 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\gadugib.ttf', name='Gadugi', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.05
2025-03-13 15:43:37,729 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\YuGothB.ttc', name='Yu Gothic', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.05
2025-03-13 15:43:37,729 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\SCRIPTBL.TTF', name='Script MT Bold', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.05
2025-03-13 15:43:37,729 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BASKVILL.TTF', name='Baskerville Old Face', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.335
2025-03-13 15:43:37,730 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\calibrili.ttf', name='Calibri', style='italic', variant='normal', weight=300, stretch='normal', size='scalable')) = 11.43
2025-03-13 15:43:37,730 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ITCBLKAD.TTF', name='Blackadder ITC', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.335
2025-03-13 15:43:37,730 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\DUBAI-REGULAR.TTF', name='Dubai', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.335
2025-03-13 15:43:37,730 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ITCEDSCR.TTF', name='Edwardian Script ITC', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.335
2025-03-13 15:43:37,731 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\WINGDNG3.TTF', name='Wingdings 3', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.335
2025-03-13 15:43:37,731 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ERASLGHT.TTF', name='Eras Light ITC', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.335
2025-03-13 15:43:37,731 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\MSUIGHUR.TTF', name='Microsoft Uighur', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.335
2025-03-13 15:43:37,731 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\segoesc.ttf', name='Segoe Script', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.335
2025-03-13 15:43:37,731 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\trebucit.ttf', name='Trebuchet MS', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.335
2025-03-13 15:43:37,732 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\CENTURY.TTF', name='Century', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.335
2025-03-13 15:43:37,732 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\PLAYBILL.TTF', name='Playbill', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.335
2025-03-13 15:43:37,732 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LBRITEI.TTF', name='Lucida Bright', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.335
2025-03-13 15:43:37,732 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\segoeuil.ttf', name='Segoe UI', style='normal', variant='normal', weight=300, stretch='normal', size='scalable')) = 10.43
2025-03-13 15:43:37,732 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BRITANIC.TTF', name='Britannic Bold', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.335
2025-03-13 15:43:37,732 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\taile.ttf', name='Microsoft Tai Le', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.335
2025-03-13 15:43:37,734 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ntailub.ttf', name='Microsoft New Tai Lue', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.05
2025-03-13 15:43:37,734 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BRLNSB.TTF', name='Berlin Sans FB', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.05
2025-03-13 15:43:37,734 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\arialbd.ttf', name='Arial', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 6.413636363636363
2025-03-13 15:43:37,735 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\seguisb.ttf', name='Segoe UI', style='normal', variant='normal', weight=600, stretch='normal', size='scalable')) = 10.145
2025-03-13 15:43:37,735 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\segoeuiz.ttf', name='Segoe UI', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.05
2025-03-13 15:43:37,735 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ERASMD.TTF', name='Eras Medium ITC', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.335
2025-03-13 15:43:37,736 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\seguiemj.ttf', name='Segoe UI Emoji', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.335
2025-03-13 15:43:37,736 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BROADW.TTF', name='Broadway', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.335
2025-03-13 15:43:37,736 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BOD_BLAI.TTF', name='Bodoni MT', style='italic', variant='normal', weight=900, stretch='normal', size='scalable')) = 11.24
2025-03-13 15:43:37,736 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\seguibl.ttf', name='Segoe UI', style='normal', variant='normal', weight=900, stretch='normal', size='scalable')) = 10.24
2025-03-13 15:43:37,736 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LFAX.TTF', name='Lucida Fax', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.335
2025-03-13 15:43:37,736 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\YuGothR.ttc', name='Yu Gothic', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.335
2025-03-13 15:43:37,737 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\TCCEB.TTF', name='Tw Cen MT Condensed Extra Bold', style='normal', variant='normal', weight=400, stretch='condensed', size='scalable')) = 10.535
2025-03-13 15:43:37,737 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GILLUBCD.TTF', name='Gill Sans Ultra Bold Condensed', style='normal', variant='normal', weight=400, stretch='condensed', size='scalable')) = 10.535
2025-03-13 15:43:37,737 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LFAXD.TTF', name='Lucida Fax', style='normal', variant='normal', weight=600, stretch='normal', size='scalable')) = 10.145
2025-03-13 15:43:37,737 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\PER_____.TTF', name='Perpetua', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.335
2025-03-13 15:43:37,737 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\segoeuii.ttf', name='Segoe UI', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.335
2025-03-13 15:43:37,738 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\consolaz.ttf', name='Consolas', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.05
2025-03-13 15:43:37,738 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\REFSAN.TTF', name='MS Reference Sans Serif', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.335
2025-03-13 15:43:37,738 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\himalaya.ttf', name='Microsoft Himalaya', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.335
2025-03-13 15:43:37,738 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ROCCB___.TTF', name='Rockwell Condensed', style='normal', variant='normal', weight=700, stretch='condensed', size='scalable')) = 10.25
2025-03-13 15:43:37,738 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\msyh.ttc', name='Microsoft YaHei', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.335
2025-03-13 15:43:37,738 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\DUBAI-BOLD.TTF', name='Dubai', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.05
2025-03-13 15:43:37,739 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\phagspa.ttf', name='Microsoft PhagsPa', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.335
2025-03-13 15:43:37,739 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\COPRGTB.TTF', name='Copperplate Gothic Bold', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.335
2025-03-13 15:43:37,739 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\constani.ttf', name='Constantia', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.335
2025-03-13 15:43:37,739 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LTYPEO.TTF', name='Lucida Sans Typewriter', style='oblique', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.335
2025-03-13 15:43:37,739 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\seguisli.ttf', name='Segoe UI', style='italic', variant='normal', weight=350, stretch='normal', size='scalable')) = 11.3825
2025-03-13 15:43:37,739 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\PERBI___.TTF', name='Perpetua', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.05
2025-03-13 15:43:37,740 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\MAGNETOB.TTF', name='Magneto', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.05
2025-03-13 15:43:37,740 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\tahoma.ttf', name='Tahoma', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.335
2025-03-13 15:43:37,740 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BELLI.TTF', name='Bell MT', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.335
2025-03-13 15:43:37,740 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\msgothic.ttc', name='MS Gothic', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.335
2025-03-13 15:43:37,741 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\consolai.ttf', name='Consolas', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.335
2025-03-13 15:43:37,741 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\courbi.ttf', name='Courier New', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.05
2025-03-13 15:43:37,741 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\SansSerifCollection.ttf', name='Sans Serif Collection', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.335
2025-03-13 15:43:37,741 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LFAXDI.TTF', name='Lucida Fax', style='italic', variant='normal', weight=600, stretch='normal', size='scalable')) = 11.145
2025-03-13 15:43:37,742 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BOOKOSB.TTF', name='Bookman Old Style', style='normal', variant='normal', weight=600, stretch='normal', size='scalable')) = 10.145
2025-03-13 15:43:37,742 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BELL.TTF', name='Bell MT', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.335
2025-03-13 15:43:37,742 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GOUDOS.TTF', name='Goudy Old Style', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.335
2025-03-13 15:43:37,742 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\consolab.ttf', name='Consolas', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.05
2025-03-13 15:43:37,742 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ROCKI.TTF', name='Rockwell', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.335
2025-03-13 15:43:37,742 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\constanb.ttf', name='Constantia', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.05
2025-03-13 15:43:37,742 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\seguisbi.ttf', name='Segoe UI', style='italic', variant='normal', weight=600, stretch='normal', size='scalable')) = 11.145
2025-03-13 15:43:37,742 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Nirmala.ttc', name='Nirmala UI', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.335
2025-03-13 15:43:37,743 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LEELAWDB.TTF', name='Leelawadee', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.05
2025-03-13 15:43:37,743 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\cour.ttf', name='Courier New', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.335
2025-03-13 15:43:37,743 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\malgunbd.ttf', name='Malgun Gothic', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.05
2025-03-13 15:43:37,743 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\MTCORSVA.TTF', name='Monotype Corsiva', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.335
2025-03-13 15:43:37,743 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\SCHLBKI.TTF', name='Century Schoolbook', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.335
2025-03-13 15:43:37,743 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LEELAWAD.TTF', name='Leelawadee', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.335
2025-03-13 15:43:37,744 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\corbelli.ttf', name='Corbel', style='italic', variant='normal', weight=300, stretch='normal', size='scalable')) = 11.43
2025-03-13 15:43:37,744 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\symbol.ttf', name='Symbol', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.335
2025-03-13 15:43:37,744 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BERNHC.TTF', name='Bernard MT Condensed', style='normal', variant='normal', weight=400, stretch='condensed', size='scalable')) = 10.535
2025-03-13 15:43:37,744 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\YuGothM.ttc', name='Yu Gothic', style='normal', variant='normal', weight=500, stretch='normal', size='scalable')) = 10.24
2025-03-13 15:43:37,744 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BOD_CBI.TTF', name='Bodoni MT', style='italic', variant='normal', weight=700, stretch='condensed', size='scalable')) = 11.25
2025-03-13 15:43:37,744 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\monbaiti.ttf', name='Mongolian Baiti', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.335
2025-03-13 15:43:37,745 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Gabriola.ttf', name='Gabriola', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.335
2025-03-13 15:43:37,745 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\timesi.ttf', name='Times New Roman', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.335
2025-03-13 15:43:37,745 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BOD_B.TTF', name='Bodoni MT', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.05
2025-03-13 15:43:37,745 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\verdana.ttf', name='Verdana', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 3.9713636363636367
2025-03-13 15:43:37,745 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Candarali.ttf', name='Candara', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.335
2025-03-13 15:43:37,745 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\PRISTINA.TTF', name='Pristina', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.335
2025-03-13 15:43:37,745 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\arialbi.ttf', name='Arial', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 7.413636363636363
2025-03-13 15:43:37,747 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LCALLIG.TTF', name='Lucida Calligraphy', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.335
2025-03-13 15:43:37,747 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Candaral.ttf', name='Candara', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.335
2025-03-13 15:43:37,747 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\FRAHVIT.TTF', name='Franklin Gothic Heavy', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.335
2025-03-13 15:43:37,747 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Inkfree.ttf', name='Ink Free', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.335
2025-03-13 15:43:37,748 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\VLADIMIR.TTF', name='Vladimir Script', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.335
2025-03-13 15:43:37,748 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ONYX.TTF', name='Onyx', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.335
2025-03-13 15:43:37,748 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LBRITEDI.TTF', name='Lucida Bright', style='italic', variant='normal', weight=600, stretch='normal', size='scalable')) = 11.145
2025-03-13 15:43:37,748 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\WINGDNG2.TTF', name='Wingdings 2', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.335
2025-03-13 15:43:37,748 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\DUBAI-LIGHT.TTF', name='Dubai', style='normal', variant='normal', weight=300, stretch='normal', size='scalable')) = 10.43
2025-03-13 15:43:37,748 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\l_10646.ttf', name='Lucida Sans Unicode', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.335
2025-03-13 15:43:37,748 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\TCCB____.TTF', name='Tw Cen MT Condensed', style='normal', variant='normal', weight=700, stretch='condensed', size='scalable')) = 10.25
2025-03-13 15:43:37,749 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ARIALNB.TTF', name='Arial', style='normal', variant='normal', weight=700, stretch='condensed', size='scalable')) = 6.613636363636363
2025-03-13 15:43:37,749 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\trebuc.ttf', name='Trebuchet MS', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.335
2025-03-13 15:43:37,749 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\TCMI____.TTF', name='Tw Cen MT', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.335
2025-03-13 15:43:37,749 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ERASBD.TTF', name='Eras Bold ITC', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.335
2025-03-13 15:43:37,750 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LSANSDI.TTF', name='Lucida Sans', style='italic', variant='normal', weight=600, stretch='normal', size='scalable')) = 11.145
2025-03-13 15:43:37,750 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\CENTAUR.TTF', name='Centaur', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.335
2025-03-13 15:43:37,750 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\HTOWERT.TTF', name='High Tower Text', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.335
2025-03-13 15:43:37,750 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\INFROMAN.TTF', name='Informal Roman', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.335
2025-03-13 15:43:37,750 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\constan.ttf', name='Constantia', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.335
2025-03-13 15:43:37,751 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LFAXI.TTF', name='Lucida Fax', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.335
2025-03-13 15:43:37,751 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\phagspab.ttf', name='Microsoft PhagsPa', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.05
2025-03-13 15:43:37,751 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GIL_____.TTF', name='Gill Sans MT', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.335
2025-03-13 15:43:37,751 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ariblk.ttf', name='Arial', style='normal', variant='normal', weight=900, stretch='normal', size='scalable')) = 6.6036363636363635
2025-03-13 15:43:37,751 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GOTHICBI.TTF', name='Century Gothic', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.05
2025-03-13 15:43:37,751 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\FRADMCN.TTF', name='Franklin Gothic Demi Cond', style='normal', variant='normal', weight=400, stretch='condensed', size='scalable')) = 10.535
2025-03-13 15:43:37,751 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\calibrii.ttf', name='Calibri', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.335
2025-03-13 15:43:37,752 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GARABD.TTF', name='Garamond', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.05
2025-03-13 15:43:37,752 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\MISTRAL.TTF', name='Mistral', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.335
2025-03-13 15:43:37,752 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BOD_BI.TTF', name='Bodoni MT', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.05
2025-03-13 15:43:37,752 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GOUDOSB.TTF', name='Goudy Old Style', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.05
2025-03-13 15:43:37,752 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\FORTE.TTF', name='Forte', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.335
2025-03-13 15:43:37,752 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\HARNGTON.TTF', name='Harrington', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.335
2025-03-13 15:43:37,752 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BOD_CI.TTF', name='Bodoni MT', style='italic', variant='normal', weight=400, stretch='condensed', size='scalable')) = 11.535
2025-03-13 15:43:37,752 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BKANT.TTF', name='Book Antiqua', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.335
2025-03-13 15:43:37,754 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GILC____.TTF', name='Gill Sans MT Condensed', style='normal', variant='normal', weight=400, stretch='condensed', size='scalable')) = 10.535
2025-03-13 15:43:37,754 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\segoepr.ttf', name='Segoe Print', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.335
2025-03-13 15:43:37,754 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\VINERITC.TTF', name='Viner Hand ITC', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.335
2025-03-13 15:43:37,754 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\FRAMDCN.TTF', name='Franklin Gothic Medium Cond', style='normal', variant='normal', weight=400, stretch='condensed', size='scalable')) = 10.535
2025-03-13 15:43:37,754 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\sylfaen.ttf', name='Sylfaen', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.335
2025-03-13 15:43:37,755 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\mmrtext.ttf', name='Myanmar Text', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.335
2025-03-13 15:43:37,755 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\SNAP____.TTF', name='Snap ITC', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.335
2025-03-13 15:43:37,755 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GILI____.TTF', name='Gill Sans MT', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.335
2025-03-13 15:43:37,755 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\calibrib.ttf', name='Calibri', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.05
2025-03-13 15:43:37,755 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\impact.ttf', name='Impact', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.335
2025-03-13 15:43:37,755 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\SCHLBKB.TTF', name='Century Schoolbook', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.05
2025-03-13 15:43:37,755 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\TCB_____.TTF', name='Tw Cen MT', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.05
2025-03-13 15:43:37,756 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ANTQUAI.TTF', name='Book Antiqua', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.335
2025-03-13 15:43:37,756 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BOD_CR.TTF', name='Bodoni MT', style='normal', variant='normal', weight=400, stretch='condensed', size='scalable')) = 10.535
2025-03-13 15:43:37,756 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\corbell.ttf', name='Corbel', style='normal', variant='normal', weight=300, stretch='normal', size='scalable')) = 10.43
2025-03-13 15:43:37,756 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\FRADM.TTF', name='Franklin Gothic Demi', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.335
2025-03-13 15:43:37,756 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\PAPYRUS.TTF', name='Papyrus', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.335
2025-03-13 15:43:37,757 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\VIVALDII.TTF', name='Vivaldi', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.335
2025-03-13 15:43:37,757 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\OLDENGL.TTF', name='Old English Text MT', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.335
2025-03-13 15:43:37,757 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\pala.ttf', name='Palatino Linotype', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.335
2025-03-13 15:43:37,757 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\comicbd.ttf', name='Comic Sans MS', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.05
2025-03-13 15:43:37,757 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\calibri.ttf', name='Calibri', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.335
2025-03-13 15:43:37,757 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\PERI____.TTF', name='Perpetua', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.335
2025-03-13 15:43:37,757 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GARAIT.TTF', name='Garamond', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.335
2025-03-13 15:43:37,758 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\corbelz.ttf', name='Corbel', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.05
2025-03-13 15:43:37,758 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GARA.TTF', name='Garamond', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.335
2025-03-13 15:43:37,758 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\georgiab.ttf', name='Georgia', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.05
2025-03-13 15:43:37,758 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ROCK.TTF', name='Rockwell', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.335
2025-03-13 15:43:37,758 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\PARCHM.TTF', name='Parchment', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.335
2025-03-13 15:43:37,758 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\CALIFB.TTF', name='Californian FB', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.05
2025-03-13 15:43:37,759 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\cambriaz.ttf', name='Cambria', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.05
2025-03-13 15:43:37,759 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ebrimabd.ttf', name='Ebrima', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.05
2025-03-13 15:43:37,759 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LSANS.TTF', name='Lucida Sans', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.335
2025-03-13 15:43:37,759 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\timesbd.ttf', name='Times New Roman', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.05
2025-03-13 15:43:37,759 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\CALIFR.TTF', name='Californian FB', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.335
2025-03-13 15:43:37,759 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\consola.ttf', name='Consolas', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.335
2025-03-13 15:43:37,759 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\msjhl.ttc', name='Microsoft JhengHei', style='normal', variant='normal', weight=290, stretch='normal', size='scalable')) = 10.4395
2025-03-13 15:43:37,760 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Candarab.ttf', name='Candara', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.05
2025-03-13 15:43:37,760 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\MTEXTRA.TTF', name='MT Extra', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.335
2025-03-13 15:43:37,760 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ntailu.ttf', name='Microsoft New Tai Lue', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.335
2025-03-13 15:43:37,760 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\seguibli.ttf', name='Segoe UI', style='italic', variant='normal', weight=900, stretch='normal', size='scalable')) = 11.24
2025-03-13 15:43:37,760 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\javatext.ttf', name='Javanese Text', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.335
2025-03-13 15:43:37,760 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\SHOWG.TTF', name='Showcard Gothic', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.335
2025-03-13 15:43:37,761 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\CASTELAR.TTF', name='Castellar', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.335
2025-03-13 15:43:37,761 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\HATTEN.TTF', name='Haettenschweiler', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.335
2025-03-13 15:43:37,761 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ariali.ttf', name='Arial', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 7.698636363636363
2025-03-13 15:43:37,762 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\AGENCYR.TTF', name='Agency FB', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.335
2025-03-13 15:43:37,762 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\malgun.ttf', name='Malgun Gothic', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.335
2025-03-13 15:43:37,762 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BOD_BLAR.TTF', name='Bodoni MT', style='normal', variant='normal', weight=900, stretch='normal', size='scalable')) = 10.24
2025-03-13 15:43:37,762 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LeelawUI.ttf', name='Leelawadee UI', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.335
2025-03-13 15:43:37,762 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\CHILLER.TTF', name='Chiller', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.335
2025-03-13 15:43:37,762 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\CALIST.TTF', name='Calisto MT', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.335
2025-03-13 15:43:37,762 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\JUICE___.TTF', name='Juice ITC', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.335
2025-03-13 15:43:37,763 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\JOKERMAN.TTF', name='Jokerman', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.335
2025-03-13 15:43:37,763 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\cambria.ttc', name='Cambria', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.335
2025-03-13 15:43:37,763 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LHANDW.TTF', name='Lucida Handwriting', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.335
2025-03-13 15:43:37,763 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BAUHS93.TTF', name='Bauhaus 93', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.335
2025-03-13 15:43:37,763 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\COPRGTL.TTF', name='Copperplate Gothic Light', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.335
2025-03-13 15:43:37,763 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LSANSD.TTF', name='Lucida Sans', style='normal', variant='normal', weight=600, stretch='normal', size='scalable')) = 10.145
2025-03-13 15:43:37,764 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LTYPEBO.TTF', name='Lucida Sans Typewriter', style='oblique', variant='normal', weight=600, stretch='normal', size='scalable')) = 11.145
2025-03-13 15:43:37,764 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\arial.ttf', name='Arial', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 6.698636363636363
2025-03-13 15:43:37,764 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ERASDEMI.TTF', name='Eras Demi ITC', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.335
2025-03-13 15:43:37,764 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\TEMPSITC.TTF', name='Tempus Sans ITC', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.335
2025-03-13 15:43:37,764 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ARIALN.TTF', name='Arial', style='normal', variant='normal', weight=400, stretch='condensed', size='scalable')) = 6.8986363636363635
2025-03-13 15:43:37,765 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\COLONNA.TTF', name='Colonna MT', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.335
2025-03-13 15:43:37,765 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ROCKEB.TTF', name='Rockwell Extra Bold', style='normal', variant='normal', weight=800, stretch='normal', size='scalable')) = 10.145
2025-03-13 15:43:37,765 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\CALISTBI.TTF', name='Calisto MT', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.05
2025-03-13 15:43:37,765 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\palabi.ttf', name='Palatino Linotype', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.05
2025-03-13 15:43:37,765 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\segoescb.ttf', name='Segoe Script', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.05
2025-03-13 15:43:37,765 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\corbeli.ttf', name='Corbel', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.335
2025-03-13 15:43:37,765 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\segoeuisl.ttf', name='Segoe UI', style='normal', variant='normal', weight=350, stretch='normal', size='scalable')) = 10.3825
2025-03-13 15:43:37,767 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ROCKBI.TTF', name='Rockwell', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.05
2025-03-13 15:43:37,767 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LBRITED.TTF', name='Lucida Bright', style='normal', variant='normal', weight=600, stretch='normal', size='scalable')) = 10.145
2025-03-13 15:43:37,767 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\CALISTI.TTF', name='Calisto MT', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.335
2025-03-13 15:43:37,767 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\courbd.ttf', name='Courier New', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.05
2025-03-13 15:43:37,767 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\lucon.ttf', name='Lucida Console', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.335
2025-03-13 15:43:37,767 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\POORICH.TTF', name='Poor Richard', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.335
2025-03-13 15:43:37,768 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\taileb.ttf', name='Microsoft Tai Le', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.05
2025-03-13 15:43:37,768 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ARLRDBD.TTF', name='Arial Rounded MT Bold', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.335
2025-03-13 15:43:37,768 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GLSNECB.TTF', name='Gill Sans MT Ext Condensed Bold', style='normal', variant='normal', weight=400, stretch='condensed', size='scalable')) = 10.535
2025-03-13 15:43:37,768 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\mingliub.ttc', name='MingLiU-ExtB', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.335
2025-03-13 15:43:37,768 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\timesbi.ttf', name='Times New Roman', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.05
2025-03-13 15:43:37,769 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\calibriz.ttf', name='Calibri', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.05
2025-03-13 15:43:37,769 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BOD_R.TTF', name='Bodoni MT', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.335
2025-03-13 15:43:37,770 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\wingding.ttf', name='Wingdings', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.335
2025-03-13 15:43:37,770 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BRADHITC.TTF', name='Bradley Hand ITC', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.335
2025-03-13 15:43:37,770 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\framd.ttf', name='Franklin Gothic Medium', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.335
2025-03-13 15:43:37,770 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\DUBAI-MEDIUM.TTF', name='Dubai', style='normal', variant='normal', weight=500, stretch='normal', size='scalable')) = 10.24
2025-03-13 15:43:37,771 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\trebucbi.ttf', name='Trebuchet MS', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.05
2025-03-13 15:43:37,771 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\cambriab.ttf', name='Cambria', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.05
2025-03-13 15:43:37,771 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\palai.ttf', name='Palatino Linotype', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.335
2025-03-13 15:43:37,771 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\times.ttf', name='Times New Roman', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.335
2025-03-13 15:43:37,772 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\constanz.ttf', name='Constantia', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.05
2025-03-13 15:43:37,772 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\corbel.ttf', name='Corbel', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.335
2025-03-13 15:43:37,772 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\gadugi.ttf', name='Gadugi', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.335
2025-03-13 15:43:37,772 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LBRITE.TTF', name='Lucida Bright', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.335
2025-03-13 15:43:37,772 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GOUDYSTO.TTF', name='Goudy Stout', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.335
2025-03-13 15:43:37,772 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\verdanab.ttf', name='Verdana', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 3.6863636363636365
2025-03-13 15:43:37,773 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GOTHICB.TTF', name='Century Gothic', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.05
2025-03-13 15:43:37,773 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\NIAGENG.TTF', name='Niagara Engraved', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.335
2025-03-13 15:43:37,773 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\segoeuib.ttf', name='Segoe UI', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.05
2025-03-13 15:43:37,773 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\seguihis.ttf', name='Segoe UI Historic', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.335
2025-03-13 15:43:37,773 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\msyhl.ttc', name='Microsoft YaHei', style='normal', variant='normal', weight=290, stretch='normal', size='scalable')) = 10.4395
2025-03-13 15:43:37,773 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ROCKB.TTF', name='Rockwell', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.05
2025-03-13 15:43:37,774 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\PERTIBD.TTF', name='Perpetua Titling MT', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.05
2025-03-13 15:43:37,774 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\comic.ttf', name='Comic Sans MS', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.335
2025-03-13 15:43:37,774 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\OCRAEXT.TTF', name='OCR A Extended', style='normal', variant='normal', weight=400, stretch='expanded', size='scalable')) = 10.535
2025-03-13 15:43:37,774 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\TCBI____.TTF', name='Tw Cen MT', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.05
2025-03-13 15:43:37,774 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\IMPRISHA.TTF', name='Imprint MT Shadow', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.335
2025-03-13 15:43:37,774 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\MOD20.TTF', name='Modern No. 20', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.335
2025-03-13 15:43:37,774 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GILB____.TTF', name='Gill Sans MT', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.05
2025-03-13 15:43:37,774 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LTYPE.TTF', name='Lucida Sans Typewriter', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.335
2025-03-13 15:43:37,774 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BRLNSDB.TTF', name='Berlin Sans FB Demi', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.05
2025-03-13 15:43:37,775 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\STENCIL.TTF', name='Stencil', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.335
2025-03-13 15:43:37,775 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\msyhbd.ttc', name='Microsoft YaHei', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.05
2025-03-13 15:43:37,775 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\SimsunExtG.ttf', name='SimSun-ExtG', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.335
2025-03-13 15:43:37,775 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LeelUIsl.ttf', name='Leelawadee UI', style='normal', variant='normal', weight=350, stretch='normal', size='scalable')) = 10.3825
2025-03-13 15:43:37,775 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\OUTLOOK.TTF', name='MS Outlook', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.335
2025-03-13 15:43:37,775 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BOD_CB.TTF', name='Bodoni MT', style='normal', variant='normal', weight=700, stretch='condensed', size='scalable')) = 10.25
2025-03-13 15:43:37,776 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\mmrtextb.ttf', name='Myanmar Text', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.05
2025-03-13 15:43:37,776 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GOTHICI.TTF', name='Century Gothic', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.335
2025-03-13 15:43:37,776 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\SegoeIcons.ttf', name='Segoe Fluent Icons', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.335
2025-03-13 15:43:37,776 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ALGER.TTF', name='Algerian', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.335
2025-03-13 15:43:37,777 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BOOKOSBI.TTF', name='Bookman Old Style', style='italic', variant='normal', weight=600, stretch='normal', size='scalable')) = 11.145
2025-03-13 15:43:37,777 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BSSYM7.TTF', name='Bookshelf Symbol 7', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.335
2025-03-13 15:43:37,777 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\tahomabd.ttf', name='Tahoma', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.05
2025-03-13 15:43:37,777 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\msyi.ttf', name='Microsoft Yi Baiti', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.335
2025-03-13 15:43:37,778 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\CURLZ___.TTF', name='Curlz MT', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.335
2025-03-13 15:43:37,778 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\RAVIE.TTF', name='Ravie', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.335
2025-03-13 15:43:37,778 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\simsunb.ttf', name='SimSun-ExtB', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.335
2025-03-13 15:43:37,778 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BELLB.TTF', name='Bell MT', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.05
2025-03-13 15:43:37,779 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\PERTILI.TTF', name='Perpetua Titling MT', style='normal', variant='normal', weight=300, stretch='normal', size='scalable')) = 10.43
2025-03-13 15:43:37,779 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\seguili.ttf', name='Segoe UI', style='italic', variant='normal', weight=300, stretch='normal', size='scalable')) = 11.43
2025-03-13 15:43:37,779 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\CALISTB.TTF', name='Calisto MT', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.05
2025-03-13 15:43:37,779 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ITCKRIST.TTF', name='Kristen ITC', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.335
2025-03-13 15:43:37,779 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ANTQUABI.TTF', name='Book Antiqua', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.05
2025-03-13 15:43:37,779 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\PERB____.TTF', name='Perpetua', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.05
2025-03-13 15:43:37,780 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ROCC____.TTF', name='Rockwell Condensed', style='normal', variant='normal', weight=400, stretch='condensed', size='scalable')) = 10.535
2025-03-13 15:43:37,780 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GILBI___.TTF', name='Gill Sans MT', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.05
2025-03-13 15:43:37,780 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\MSUIGHUB.TTF', name='Microsoft Uighur', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.05
2025-03-13 15:43:37,780 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\segmdl2.ttf', name='Segoe MDL2 Assets', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.335
2025-03-13 15:43:37,781 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ARIALNI.TTF', name='Arial', style='italic', variant='normal', weight=400, stretch='condensed', size='scalable')) = 7.8986363636363635
2025-03-13 15:43:37,781 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\bahnschrift.ttf', name='Bahnschrift', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.335
2025-03-13 15:43:37,781 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\TCM_____.TTF', name='Tw Cen MT', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.335
2025-03-13 15:43:37,781 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\REFSPCL.TTF', name='MS Reference Specialty', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.335
2025-03-13 15:43:37,781 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\FRAHV.TTF', name='Franklin Gothic Heavy', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.335
2025-03-13 15:43:37,782 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Candaraz.ttf', name='Candara', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.05
2025-03-13 15:43:37,782 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\georgia.ttf', name='Georgia', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.335
2025-03-13 15:43:37,782 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\MATURASC.TTF', name='Matura MT Script Capitals', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.335
2025-03-13 15:43:37,782 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GIGI.TTF', name='Gigi', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.335
2025-03-13 15:43:37,783 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\CALIFI.TTF', name='Californian FB', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.335
2025-03-13 15:43:37,783 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\SegUIVar.ttf', name='Segoe UI Variable', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.335
2025-03-13 15:43:37,783 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\FRABK.TTF', name='Franklin Gothic Book', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.335
2025-03-13 15:43:37,783 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\couri.ttf', name='Courier New', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.335
2025-03-13 15:43:37,783 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BOOKOSI.TTF', name='Bookman Old Style', style='italic', variant='normal', weight=300, stretch='normal', size='scalable')) = 11.43
2025-03-13 15:43:37,783 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\verdanai.ttf', name='Verdana', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 4.971363636363637
2025-03-13 15:43:37,785 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\calibril.ttf', name='Calibri', style='normal', variant='normal', weight=300, stretch='normal', size='scalable')) = 10.43
2025-03-13 15:43:37,785 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\FREESCPT.TTF', name='Freestyle Script', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.335
2025-03-13 15:43:37,785 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BOD_I.TTF', name='Bodoni MT', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.335
2025-03-13 15:43:37,785 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\msjhbd.ttc', name='Microsoft JhengHei', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.05
2025-03-13 15:43:37,785 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\COOPBL.TTF', name='Cooper Black', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.335
2025-03-13 15:43:37,786 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\TCCM____.TTF', name='Tw Cen MT Condensed', style='normal', variant='normal', weight=400, stretch='condensed', size='scalable')) = 10.535
2025-03-13 15:43:37,786 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\AGENCYB.TTF', name='Agency FB', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.05
2025-03-13 15:43:37,786 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LSANSI.TTF', name='Lucida Sans', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.335
2025-03-13 15:43:37,786 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\NIAGSOL.TTF', name='Niagara Solid', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.335
2025-03-13 15:43:37,786 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LTYPEB.TTF', name='Lucida Sans Typewriter', style='normal', variant='normal', weight=600, stretch='normal', size='scalable')) = 10.145
2025-03-13 15:43:37,786 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GLECB.TTF', name='Gloucester MT Extra Condensed', style='normal', variant='normal', weight=400, stretch='condensed', size='scalable')) = 10.535
2025-03-13 15:43:37,786 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\webdings.ttf', name='Webdings', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.335
2025-03-13 15:43:37,787 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\msjh.ttc', name='Microsoft JhengHei', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.335
2025-03-13 15:43:37,787 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\HTOWERTI.TTF', name='High Tower Text', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.335
2025-03-13 15:43:37,787 - matplotlib.font_manager - DEBUG - findfont: Matching sans\-serif:style=normal:variant=normal:weight=bold:stretch=normal:size=9.0 to DejaVu Sans ('C:\\Users\\msameerakram\\AppData\\Local\\anaconda3\\Lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\DejaVuSans-Bold.ttf') with score of 0.050000.
2025-03-13 15:43:38,074 - PIL.PngImagePlugin - DEBUG - STREAM b'IHDR' 16 13
2025-03-13 15:43:38,074 - PIL.PngImagePlugin - DEBUG - STREAM b'tEXt' 41 57
2025-03-13 15:43:38,075 - PIL.PngImagePlugin - DEBUG - STREAM b'pHYs' 110 9
2025-03-13 15:43:38,075 - PIL.PngImagePlugin - DEBUG - STREAM b'IDAT' 131 65536
2025-03-13 15:43:38,616 - fpdf.fpdf - DEBUG - Page break on page 2 at y=274 for element of height 10 > 282
2025-03-13 15:43:38,936 - PIL.PngImagePlugin - DEBUG - STREAM b'IHDR' 16 13
2025-03-13 15:43:38,936 - PIL.PngImagePlugin - DEBUG - STREAM b'tEXt' 41 57
2025-03-13 15:43:38,937 - PIL.PngImagePlugin - DEBUG - STREAM b'pHYs' 110 9
2025-03-13 15:43:38,937 - PIL.PngImagePlugin - DEBUG - STREAM b'IDAT' 131 65536
2025-03-13 15:43:39,553 - fpdf.fpdf - DEBUG - Page break on page 4 at y=274 for element of height 10 > 282
2025-03-13 15:43:39,858 - PIL.PngImagePlugin - DEBUG - STREAM b'IHDR' 16 13
2025-03-13 15:43:39,859 - PIL.PngImagePlugin - DEBUG - STREAM b'tEXt' 41 57
2025-03-13 15:43:39,859 - PIL.PngImagePlugin - DEBUG - STREAM b'pHYs' 110 9
2025-03-13 15:43:39,859 - PIL.PngImagePlugin - DEBUG - STREAM b'IDAT' 131 65536
2025-03-13 15:43:40,395 - fpdf.fpdf - DEBUG - Page break on page 6 at y=274 for element of height 10 > 282
2025-03-13 15:43:40,738 - PIL.PngImagePlugin - DEBUG - STREAM b'IHDR' 16 13
2025-03-13 15:43:40,738 - PIL.PngImagePlugin - DEBUG - STREAM b'tEXt' 41 57
2025-03-13 15:43:40,738 - PIL.PngImagePlugin - DEBUG - STREAM b'pHYs' 110 9
2025-03-13 15:43:40,738 - PIL.PngImagePlugin - DEBUG - STREAM b'IDAT' 131 65536
2025-03-13 15:43:41,312 - fpdf.fpdf - DEBUG - Page break on page 8 at y=274 for element of height 10 > 282
2025-03-13 15:43:41,638 - PIL.PngImagePlugin - DEBUG - STREAM b'IHDR' 16 13
2025-03-13 15:43:41,639 - PIL.PngImagePlugin - DEBUG - STREAM b'tEXt' 41 57
2025-03-13 15:43:41,639 - PIL.PngImagePlugin - DEBUG - STREAM b'pHYs' 110 9
2025-03-13 15:43:41,639 - PIL.PngImagePlugin - DEBUG - STREAM b'IDAT' 131 65536
2025-03-13 15:43:42,179 - fpdf.fpdf - DEBUG - Page break on page 10 at y=274 for element of height 10 > 282
2025-03-13 15:43:42,498 - PIL.PngImagePlugin - DEBUG - STREAM b'IHDR' 16 13
2025-03-13 15:43:42,498 - PIL.PngImagePlugin - DEBUG - STREAM b'tEXt' 41 57
2025-03-13 15:43:42,498 - PIL.PngImagePlugin - DEBUG - STREAM b'pHYs' 110 9
2025-03-13 15:43:42,499 - PIL.PngImagePlugin - DEBUG - STREAM b'IDAT' 131 65536
2025-03-13 15:43:43,057 - fpdf.fpdf - DEBUG - Page break on page 12 at y=274 for element of height 10 > 282
2025-03-13 15:43:43,427 - PIL.PngImagePlugin - DEBUG - STREAM b'IHDR' 16 13
2025-03-13 15:43:43,428 - PIL.PngImagePlugin - DEBUG - STREAM b'tEXt' 41 57
2025-03-13 15:43:43,428 - PIL.PngImagePlugin - DEBUG - STREAM b'pHYs' 110 9
2025-03-13 15:43:43,428 - PIL.PngImagePlugin - DEBUG - STREAM b'IDAT' 131 65536
2025-03-13 15:43:43,994 - fpdf.fpdf - DEBUG - Page break on page 14 at y=274 for element of height 10 > 282
2025-03-13 15:43:44,300 - PIL.PngImagePlugin - DEBUG - STREAM b'IHDR' 16 13
2025-03-13 15:43:44,300 - PIL.PngImagePlugin - DEBUG - STREAM b'tEXt' 41 57
2025-03-13 15:43:44,300 - PIL.PngImagePlugin - DEBUG - STREAM b'pHYs' 110 9
2025-03-13 15:43:44,301 - PIL.PngImagePlugin - DEBUG - STREAM b'IDAT' 131 65536
2025-03-13 15:43:44,800 - fpdf.fpdf - DEBUG - Page break on page 16 at y=274 for element of height 10 > 282
2025-03-13 15:43:44,866 - pymongo.topology - DEBUG - {"topologyId": {"$oid": "67d2b6901e52438c18c36b9c"}, "driverConnectionId": 1, "serverConnectionId": 13155, "serverHost": "3.144.134.141", "serverPort": 27017, "awaited": true, "durationMS": 10015.999999999622, "reply": "{\"isWritablePrimary\": true, \"topologyVersion\": {\"processId\": {\"$oid\": \"67b7e5814f77c1a87c56d054\"}}, \"maxBsonObjectSize\": 16777216, \"maxMessageSizeBytes\": 48000000, \"maxWriteBatchSize\": 100000, \"localTime\": {\"$date\": \"2025-03-13T10:43:44.892Z\"}, \"logicalSessionTimeoutMinutes\": 30, \"connectionId\": 13155, \"maxWireVersion\": 25, \"ok\": 1.0}", "message": "Server heartbeat succeeded"}
2025-03-13 15:43:44,867 - pymongo.topology - DEBUG - {"topologyId": {"$oid": "67d2b6901e52438c18c36b9c"}, "driverConnectionId": 1, "serverConnectionId": 13155, "serverHost": "3.144.134.141", "serverPort": 27017, "awaited": true, "message": "Server heartbeat started"}
2025-03-13 15:43:45,131 - PIL.PngImagePlugin - DEBUG - STREAM b'IHDR' 16 13
2025-03-13 15:43:45,132 - PIL.PngImagePlugin - DEBUG - STREAM b'tEXt' 41 57
2025-03-13 15:43:45,132 - PIL.PngImagePlugin - DEBUG - STREAM b'pHYs' 110 9
2025-03-13 15:43:45,133 - PIL.PngImagePlugin - DEBUG - STREAM b'IDAT' 131 65536
2025-03-13 15:43:45,661 - fpdf.fpdf - DEBUG - Page break on page 18 at y=274 for element of height 10 > 282
2025-03-13 15:43:45,954 - PIL.PngImagePlugin - DEBUG - STREAM b'IHDR' 16 13
2025-03-13 15:43:45,955 - PIL.PngImagePlugin - DEBUG - STREAM b'tEXt' 41 57
2025-03-13 15:43:45,955 - PIL.PngImagePlugin - DEBUG - STREAM b'pHYs' 110 9
2025-03-13 15:43:45,955 - PIL.PngImagePlugin - DEBUG - STREAM b'IDAT' 131 65536
2025-03-13 15:43:46,496 - fpdf.fpdf - DEBUG - Page break on page 20 at y=274 for element of height 10 > 282
2025-03-13 15:43:46,806 - PIL.PngImagePlugin - DEBUG - STREAM b'IHDR' 16 13
2025-03-13 15:43:46,806 - PIL.PngImagePlugin - DEBUG - STREAM b'tEXt' 41 57
2025-03-13 15:43:46,806 - PIL.PngImagePlugin - DEBUG - STREAM b'pHYs' 110 9
2025-03-13 15:43:46,806 - PIL.PngImagePlugin - DEBUG - STREAM b'IDAT' 131 65536
2025-03-13 15:43:47,359 - fpdf.fpdf - DEBUG - Page break on page 22 at y=274 for element of height 10 > 282
2025-03-13 15:43:47,709 - PIL.PngImagePlugin - DEBUG - STREAM b'IHDR' 16 13
2025-03-13 15:43:47,709 - PIL.PngImagePlugin - DEBUG - STREAM b'tEXt' 41 57
2025-03-13 15:43:47,709 - PIL.PngImagePlugin - DEBUG - STREAM b'pHYs' 110 9
2025-03-13 15:43:47,709 - PIL.PngImagePlugin - DEBUG - STREAM b'IDAT' 131 65536
2025-03-13 15:43:48,250 - fpdf.fpdf - DEBUG - Page break on page 24 at y=274 for element of height 10 > 282
2025-03-13 15:43:48,755 - PIL.PngImagePlugin - DEBUG - STREAM b'IHDR' 16 13
2025-03-13 15:43:48,756 - PIL.PngImagePlugin - DEBUG - STREAM b'tEXt' 41 57
2025-03-13 15:43:48,756 - PIL.PngImagePlugin - DEBUG - STREAM b'pHYs' 110 9
2025-03-13 15:43:48,756 - PIL.PngImagePlugin - DEBUG - STREAM b'IDAT' 131 65536
2025-03-13 15:43:49,338 - fpdf.fpdf - DEBUG - Page break on page 26 at y=274 for element of height 10 > 282
2025-03-13 15:43:49,634 - PIL.PngImagePlugin - DEBUG - STREAM b'IHDR' 16 13
2025-03-13 15:43:49,635 - PIL.PngImagePlugin - DEBUG - STREAM b'tEXt' 41 57
2025-03-13 15:43:49,635 - PIL.PngImagePlugin - DEBUG - STREAM b'pHYs' 110 9
2025-03-13 15:43:49,635 - PIL.PngImagePlugin - DEBUG - STREAM b'IDAT' 131 65536
2025-03-13 15:43:50,135 - fpdf.fpdf - DEBUG - Page break on page 28 at y=274 for element of height 10 > 282
2025-03-13 15:43:50,439 - PIL.PngImagePlugin - DEBUG - STREAM b'IHDR' 16 13
2025-03-13 15:43:50,439 - PIL.PngImagePlugin - DEBUG - STREAM b'tEXt' 41 57
2025-03-13 15:43:50,440 - PIL.PngImagePlugin - DEBUG - STREAM b'pHYs' 110 9
2025-03-13 15:43:50,440 - PIL.PngImagePlugin - DEBUG - STREAM b'IDAT' 131 65536
2025-03-13 15:43:50,941 - fpdf.fpdf - DEBUG - Page break on page 30 at y=274 for element of height 10 > 282
2025-03-13 15:43:51,237 - PIL.PngImagePlugin - DEBUG - STREAM b'IHDR' 16 13
2025-03-13 15:43:51,237 - PIL.PngImagePlugin - DEBUG - STREAM b'tEXt' 41 57
2025-03-13 15:43:51,238 - PIL.PngImagePlugin - DEBUG - STREAM b'pHYs' 110 9
2025-03-13 15:43:51,238 - PIL.PngImagePlugin - DEBUG - STREAM b'IDAT' 131 65536
2025-03-13 15:43:51,825 - fpdf.fpdf - DEBUG - Page break on page 32 at y=274 for element of height 10 > 282
2025-03-13 15:43:52,277 - PIL.PngImagePlugin - DEBUG - STREAM b'IHDR' 16 13
2025-03-13 15:43:52,277 - PIL.PngImagePlugin - DEBUG - STREAM b'tEXt' 41 57
2025-03-13 15:43:52,278 - PIL.PngImagePlugin - DEBUG - STREAM b'pHYs' 110 9
2025-03-13 15:43:52,278 - PIL.PngImagePlugin - DEBUG - STREAM b'IDAT' 131 65536
2025-03-13 15:43:52,836 - fpdf.fpdf - DEBUG - Page break on page 34 at y=274 for element of height 10 > 282
2025-03-13 15:43:53,189 - PIL.PngImagePlugin - DEBUG - STREAM b'IHDR' 16 13
2025-03-13 15:43:53,189 - PIL.PngImagePlugin - DEBUG - STREAM b'tEXt' 41 57
2025-03-13 15:43:53,190 - PIL.PngImagePlugin - DEBUG - STREAM b'pHYs' 110 9
2025-03-13 15:43:53,190 - PIL.PngImagePlugin - DEBUG - STREAM b'IDAT' 131 65536
2025-03-13 15:43:53,774 - fpdf.fpdf - DEBUG - Page break on page 36 at y=274 for element of height 10 > 282
2025-03-13 15:43:54,114 - PIL.PngImagePlugin - DEBUG - STREAM b'IHDR' 16 13
2025-03-13 15:43:54,115 - PIL.PngImagePlugin - DEBUG - STREAM b'tEXt' 41 57
2025-03-13 15:43:54,115 - PIL.PngImagePlugin - DEBUG - STREAM b'pHYs' 110 9
2025-03-13 15:43:54,115 - PIL.PngImagePlugin - DEBUG - STREAM b'IDAT' 131 65536
2025-03-13 15:43:54,710 - fpdf.fpdf - DEBUG - Page break on page 38 at y=274 for element of height 10 > 282
2025-03-13 15:43:54,865 - pymongo.topology - DEBUG - {"topologyId": {"$oid": "67d2b6901e52438c18c36b9c"}, "driverConnectionId": 1, "serverConnectionId": 13155, "serverHost": "3.144.134.141", "serverPort": 27017, "awaited": true, "durationMS": 9984.000000000378, "reply": "{\"isWritablePrimary\": true, \"topologyVersion\": {\"processId\": {\"$oid\": \"67b7e5814f77c1a87c56d054\"}}, \"maxBsonObjectSize\": 16777216, \"maxMessageSizeBytes\": 48000000, \"maxWriteBatchSize\": 100000, \"localTime\": {\"$date\": \"2025-03-13T10:43:54.893Z\"}, \"logicalSessionTimeoutMinutes\": 30, \"connectionId\": 13155, \"maxWireVersion\": 25, \"ok\": 1.0}", "message": "Server heartbeat succeeded"}
2025-03-13 15:43:54,867 - pymongo.topology - DEBUG - {"topologyId": {"$oid": "67d2b6901e52438c18c36b9c"}, "driverConnectionId": 1, "serverConnectionId": 13155, "serverHost": "3.144.134.141", "serverPort": 27017, "awaited": true, "message": "Server heartbeat started"}
2025-03-13 15:43:55,081 - PIL.PngImagePlugin - DEBUG - STREAM b'IHDR' 16 13
2025-03-13 15:43:55,081 - PIL.PngImagePlugin - DEBUG - STREAM b'tEXt' 41 57
2025-03-13 15:43:55,081 - PIL.PngImagePlugin - DEBUG - STREAM b'pHYs' 110 9
2025-03-13 15:43:55,082 - PIL.PngImagePlugin - DEBUG - STREAM b'IDAT' 131 65536
2025-03-13 15:43:55,660 - fpdf.fpdf - DEBUG - Page break on page 40 at y=274 for element of height 10 > 282
2025-03-13 15:43:56,004 - PIL.PngImagePlugin - DEBUG - STREAM b'IHDR' 16 13
2025-03-13 15:43:56,004 - PIL.PngImagePlugin - DEBUG - STREAM b'tEXt' 41 57
2025-03-13 15:43:56,004 - PIL.PngImagePlugin - DEBUG - STREAM b'pHYs' 110 9
2025-03-13 15:43:56,005 - PIL.PngImagePlugin - DEBUG - STREAM b'IDAT' 131 65536
2025-03-13 15:43:56,602 - fpdf.fpdf - DEBUG - Page break on page 42 at y=274 for element of height 10 > 282
2025-03-13 15:43:56,984 - PIL.PngImagePlugin - DEBUG - STREAM b'IHDR' 16 13
2025-03-13 15:43:56,985 - PIL.PngImagePlugin - DEBUG - STREAM b'tEXt' 41 57
2025-03-13 15:43:56,985 - PIL.PngImagePlugin - DEBUG - STREAM b'pHYs' 110 9
2025-03-13 15:43:56,985 - PIL.PngImagePlugin - DEBUG - STREAM b'IDAT' 131 65536
2025-03-13 15:43:57,627 - fpdf.fpdf - DEBUG - Page break on page 44 at y=274 for element of height 10 > 282
2025-03-13 15:43:58,024 - PIL.PngImagePlugin - DEBUG - STREAM b'IHDR' 16 13
2025-03-13 15:43:58,024 - PIL.PngImagePlugin - DEBUG - STREAM b'tEXt' 41 57
2025-03-13 15:43:58,024 - PIL.PngImagePlugin - DEBUG - STREAM b'pHYs' 110 9
2025-03-13 15:43:58,024 - PIL.PngImagePlugin - DEBUG - STREAM b'IDAT' 131 65536
2025-03-13 15:43:58,683 - fpdf.fpdf - DEBUG - Page break on page 46 at y=274 for element of height 10 > 282
2025-03-13 15:43:59,085 - PIL.PngImagePlugin - DEBUG - STREAM b'IHDR' 16 13
2025-03-13 15:43:59,085 - PIL.PngImagePlugin - DEBUG - STREAM b'tEXt' 41 57
2025-03-13 15:43:59,085 - PIL.PngImagePlugin - DEBUG - STREAM b'pHYs' 110 9
2025-03-13 15:43:59,086 - PIL.PngImagePlugin - DEBUG - STREAM b'IDAT' 131 65536
2025-03-13 15:43:59,738 - fpdf.fpdf - DEBUG - Page break on page 48 at y=274 for element of height 10 > 282
2025-03-13 15:44:00,115 - PIL.PngImagePlugin - DEBUG - STREAM b'IHDR' 16 13
2025-03-13 15:44:00,116 - PIL.PngImagePlugin - DEBUG - STREAM b'tEXt' 41 57
2025-03-13 15:44:00,116 - PIL.PngImagePlugin - DEBUG - STREAM b'pHYs' 110 9
2025-03-13 15:44:00,116 - PIL.PngImagePlugin - DEBUG - STREAM b'IDAT' 131 65536
2025-03-13 15:44:00,750 - fpdf.fpdf - DEBUG - Page break on page 50 at y=274 for element of height 10 > 282
2025-03-13 15:44:01,121 - PIL.PngImagePlugin - DEBUG - STREAM b'IHDR' 16 13
2025-03-13 15:44:01,121 - PIL.PngImagePlugin - DEBUG - STREAM b'tEXt' 41 57
2025-03-13 15:44:01,121 - PIL.PngImagePlugin - DEBUG - STREAM b'pHYs' 110 9
2025-03-13 15:44:01,121 - PIL.PngImagePlugin - DEBUG - STREAM b'IDAT' 131 65536
2025-03-13 15:44:01,758 - fpdf.fpdf - DEBUG - Page break on page 52 at y=274 for element of height 10 > 282
2025-03-13 15:44:02,136 - PIL.PngImagePlugin - DEBUG - STREAM b'IHDR' 16 13
2025-03-13 15:44:02,136 - PIL.PngImagePlugin - DEBUG - STREAM b'tEXt' 41 57
2025-03-13 15:44:02,136 - PIL.PngImagePlugin - DEBUG - STREAM b'pHYs' 110 9
2025-03-13 15:44:02,137 - PIL.PngImagePlugin - DEBUG - STREAM b'IDAT' 131 65536
2025-03-13 15:44:02,792 - fpdf.fpdf - DEBUG - Page break on page 54 at y=274 for element of height 10 > 282
2025-03-13 15:44:03,179 - PIL.PngImagePlugin - DEBUG - STREAM b'IHDR' 16 13
2025-03-13 15:44:03,179 - PIL.PngImagePlugin - DEBUG - STREAM b'tEXt' 41 57
2025-03-13 15:44:03,180 - PIL.PngImagePlugin - DEBUG - STREAM b'pHYs' 110 9
2025-03-13 15:44:03,180 - PIL.PngImagePlugin - DEBUG - STREAM b'IDAT' 131 65536
2025-03-13 15:44:03,812 - fpdf.fpdf - DEBUG - Page break on page 56 at y=274 for element of height 10 > 282
2025-03-13 15:44:04,207 - PIL.PngImagePlugin - DEBUG - STREAM b'IHDR' 16 13
2025-03-13 15:44:04,207 - PIL.PngImagePlugin - DEBUG - STREAM b'tEXt' 41 57
2025-03-13 15:44:04,208 - PIL.PngImagePlugin - DEBUG - STREAM b'pHYs' 110 9
2025-03-13 15:44:04,208 - PIL.PngImagePlugin - DEBUG - STREAM b'IDAT' 131 65536
2025-03-13 15:44:04,885 - fpdf.fpdf - DEBUG - Page break on page 58 at y=274 for element of height 10 > 282
2025-03-13 15:44:04,885 - pymongo.topology - DEBUG - {"topologyId": {"$oid": "67d2b6901e52438c18c36b9c"}, "driverConnectionId": 1, "serverConnectionId": 13155, "serverHost": "3.144.134.141", "serverPort": 27017, "awaited": true, "durationMS": 10015.999999999622, "reply": "{\"isWritablePrimary\": true, \"topologyVersion\": {\"processId\": {\"$oid\": \"67b7e5814f77c1a87c56d054\"}}, \"maxBsonObjectSize\": 16777216, \"maxMessageSizeBytes\": 48000000, \"maxWriteBatchSize\": 100000, \"localTime\": {\"$date\": \"2025-03-13T10:44:04.903Z\"}, \"logicalSessionTimeoutMinutes\": 30, \"connectionId\": 13155, \"maxWireVersion\": 25, \"ok\": 1.0}", "message": "Server heartbeat succeeded"}
2025-03-13 15:44:04,889 - pymongo.topology - DEBUG - {"topologyId": {"$oid": "67d2b6901e52438c18c36b9c"}, "driverConnectionId": 1, "serverConnectionId": 13155, "serverHost": "3.144.134.141", "serverPort": 27017, "awaited": true, "message": "Server heartbeat started"}
2025-03-13 15:44:05,261 - PIL.PngImagePlugin - DEBUG - STREAM b'IHDR' 16 13
2025-03-13 15:44:05,262 - PIL.PngImagePlugin - DEBUG - STREAM b'tEXt' 41 57
2025-03-13 15:44:05,262 - PIL.PngImagePlugin - DEBUG - STREAM b'pHYs' 110 9
2025-03-13 15:44:05,262 - PIL.PngImagePlugin - DEBUG - STREAM b'IDAT' 131 65536
2025-03-13 15:44:05,887 - fpdf.fpdf - DEBUG - Page break on page 60 at y=274 for element of height 10 > 282
2025-03-13 15:44:06,256 - PIL.PngImagePlugin - DEBUG - STREAM b'IHDR' 16 13
2025-03-13 15:44:06,256 - PIL.PngImagePlugin - DEBUG - STREAM b'tEXt' 41 57
2025-03-13 15:44:06,256 - PIL.PngImagePlugin - DEBUG - STREAM b'pHYs' 110 9
2025-03-13 15:44:06,256 - PIL.PngImagePlugin - DEBUG - STREAM b'IDAT' 131 65536
2025-03-13 15:44:06,905 - fpdf.fpdf - DEBUG - Page break on page 62 at y=274 for element of height 10 > 282
2025-03-13 15:44:07,286 - PIL.PngImagePlugin - DEBUG - STREAM b'IHDR' 16 13
2025-03-13 15:44:07,286 - PIL.PngImagePlugin - DEBUG - STREAM b'tEXt' 41 57
2025-03-13 15:44:07,286 - PIL.PngImagePlugin - DEBUG - STREAM b'pHYs' 110 9
2025-03-13 15:44:07,287 - PIL.PngImagePlugin - DEBUG - STREAM b'IDAT' 131 65536
2025-03-13 15:44:07,949 - fpdf.fpdf - DEBUG - Page break on page 64 at y=274 for element of height 10 > 282
2025-03-13 15:44:08,342 - PIL.PngImagePlugin - DEBUG - STREAM b'IHDR' 16 13
2025-03-13 15:44:08,342 - PIL.PngImagePlugin - DEBUG - STREAM b'tEXt' 41 57
2025-03-13 15:44:08,342 - PIL.PngImagePlugin - DEBUG - STREAM b'pHYs' 110 9
2025-03-13 15:44:08,342 - PIL.PngImagePlugin - DEBUG - STREAM b'IDAT' 131 65536
2025-03-13 15:44:08,993 - fpdf.fpdf - DEBUG - Page break on page 66 at y=274 for element of height 10 > 282
2025-03-13 15:44:09,486 - PIL.PngImagePlugin - DEBUG - STREAM b'IHDR' 16 13
2025-03-13 15:44:09,487 - PIL.PngImagePlugin - DEBUG - STREAM b'tEXt' 41 57
2025-03-13 15:44:09,487 - PIL.PngImagePlugin - DEBUG - STREAM b'pHYs' 110 9
2025-03-13 15:44:09,487 - PIL.PngImagePlugin - DEBUG - STREAM b'IDAT' 131 65536
2025-03-13 15:44:10,095 - fpdf.fpdf - DEBUG - Page break on page 68 at y=274 for element of height 10 > 282
2025-03-13 15:44:10,484 - PIL.PngImagePlugin - DEBUG - STREAM b'IHDR' 16 13
2025-03-13 15:44:10,485 - PIL.PngImagePlugin - DEBUG - STREAM b'tEXt' 41 57
2025-03-13 15:44:10,485 - PIL.PngImagePlugin - DEBUG - STREAM b'pHYs' 110 9
2025-03-13 15:44:10,485 - PIL.PngImagePlugin - DEBUG - STREAM b'IDAT' 131 65536
2025-03-13 15:44:11,106 - fpdf.fpdf - DEBUG - Page break on page 70 at y=274 for element of height 10 > 282
2025-03-13 15:44:11,473 - PIL.PngImagePlugin - DEBUG - STREAM b'IHDR' 16 13
2025-03-13 15:44:11,473 - PIL.PngImagePlugin - DEBUG - STREAM b'tEXt' 41 57
2025-03-13 15:44:11,473 - PIL.PngImagePlugin - DEBUG - STREAM b'pHYs' 110 9
2025-03-13 15:44:11,473 - PIL.PngImagePlugin - DEBUG - STREAM b'IDAT' 131 65536
2025-03-13 15:44:12,120 - fpdf.fpdf - DEBUG - Page break on page 72 at y=274 for element of height 10 > 282
2025-03-13 15:44:12,499 - PIL.PngImagePlugin - DEBUG - STREAM b'IHDR' 16 13
2025-03-13 15:44:12,500 - PIL.PngImagePlugin - DEBUG - STREAM b'tEXt' 41 57
2025-03-13 15:44:12,500 - PIL.PngImagePlugin - DEBUG - STREAM b'pHYs' 110 9
2025-03-13 15:44:12,500 - PIL.PngImagePlugin - DEBUG - STREAM b'IDAT' 131 65536
2025-03-13 15:44:13,162 - fpdf.fpdf - DEBUG - Page break on page 74 at y=274 for element of height 10 > 282
2025-03-13 15:44:13,547 - PIL.PngImagePlugin - DEBUG - STREAM b'IHDR' 16 13
2025-03-13 15:44:13,547 - PIL.PngImagePlugin - DEBUG - STREAM b'tEXt' 41 57
2025-03-13 15:44:13,548 - PIL.PngImagePlugin - DEBUG - STREAM b'pHYs' 110 9
2025-03-13 15:44:13,548 - PIL.PngImagePlugin - DEBUG - STREAM b'IDAT' 131 65536
2025-03-13 15:44:14,209 - fpdf.fpdf - DEBUG - Page break on page 76 at y=274 for element of height 10 > 282
2025-03-13 15:44:14,625 - PIL.PngImagePlugin - DEBUG - STREAM b'IHDR' 16 13
2025-03-13 15:44:14,625 - PIL.PngImagePlugin - DEBUG - STREAM b'tEXt' 41 57
2025-03-13 15:44:14,625 - PIL.PngImagePlugin - DEBUG - STREAM b'pHYs' 110 9
2025-03-13 15:44:14,625 - PIL.PngImagePlugin - DEBUG - STREAM b'IDAT' 131 65536
2025-03-13 15:44:14,874 - pymongo.topology - DEBUG - {"topologyId": {"$oid": "67d2b6901e52438c18c36b9c"}, "driverConnectionId": 1, "serverConnectionId": 13155, "serverHost": "3.144.134.141", "serverPort": 27017, "awaited": true, "durationMS": 9984.000000000378, "reply": "{\"isWritablePrimary\": true, \"topologyVersion\": {\"processId\": {\"$oid\": \"67b7e5814f77c1a87c56d054\"}}, \"maxBsonObjectSize\": 16777216, \"maxMessageSizeBytes\": 48000000, \"maxWriteBatchSize\": 100000, \"localTime\": {\"$date\": \"2025-03-13T10:44:14.904Z\"}, \"logicalSessionTimeoutMinutes\": 30, \"connectionId\": 13155, \"maxWireVersion\": 25, \"ok\": 1.0}", "message": "Server heartbeat succeeded"}
2025-03-13 15:44:14,875 - pymongo.topology - DEBUG - {"topologyId": {"$oid": "67d2b6901e52438c18c36b9c"}, "driverConnectionId": 1, "serverConnectionId": 13155, "serverHost": "3.144.134.141", "serverPort": 27017, "awaited": true, "message": "Server heartbeat started"}
2025-03-13 15:44:15,296 - fpdf.fpdf - DEBUG - Page break on page 78 at y=274 for element of height 10 > 282
2025-03-13 15:44:15,672 - PIL.PngImagePlugin - DEBUG - STREAM b'IHDR' 16 13
2025-03-13 15:44:15,673 - PIL.PngImagePlugin - DEBUG - STREAM b'tEXt' 41 57
2025-03-13 15:44:15,673 - PIL.PngImagePlugin - DEBUG - STREAM b'pHYs' 110 9
2025-03-13 15:44:15,674 - PIL.PngImagePlugin - DEBUG - STREAM b'IDAT' 131 65536
2025-03-13 15:44:16,306 - fpdf.fpdf - DEBUG - Page break on page 80 at y=274 for element of height 10 > 282
2025-03-13 15:44:16,672 - PIL.PngImagePlugin - DEBUG - STREAM b'IHDR' 16 13
2025-03-13 15:44:16,672 - PIL.PngImagePlugin - DEBUG - STREAM b'tEXt' 41 57
2025-03-13 15:44:16,672 - PIL.PngImagePlugin - DEBUG - STREAM b'pHYs' 110 9
2025-03-13 15:44:16,672 - PIL.PngImagePlugin - DEBUG - STREAM b'IDAT' 131 65536
2025-03-13 15:44:17,317 - fpdf.fpdf - DEBUG - Page break on page 82 at y=274 for element of height 10 > 282
2025-03-13 15:44:17,682 - PIL.PngImagePlugin - DEBUG - STREAM b'IHDR' 16 13
2025-03-13 15:44:17,682 - PIL.PngImagePlugin - DEBUG - STREAM b'tEXt' 41 57
2025-03-13 15:44:17,684 - PIL.PngImagePlugin - DEBUG - STREAM b'pHYs' 110 9
2025-03-13 15:44:17,684 - PIL.PngImagePlugin - DEBUG - STREAM b'IDAT' 131 65536
2025-03-13 15:44:18,317 - fpdf.fpdf - DEBUG - Page break on page 84 at y=274 for element of height 10 > 282
2025-03-13 15:44:18,669 - PIL.PngImagePlugin - DEBUG - STREAM b'IHDR' 16 13
2025-03-13 15:44:18,670 - PIL.PngImagePlugin - DEBUG - STREAM b'tEXt' 41 57
2025-03-13 15:44:18,670 - PIL.PngImagePlugin - DEBUG - STREAM b'pHYs' 110 9
2025-03-13 15:44:18,670 - PIL.PngImagePlugin - DEBUG - STREAM b'IDAT' 131 65536
2025-03-13 15:44:19,307 - fpdf.fpdf - DEBUG - Page break on page 86 at y=274 for element of height 10 > 282
2025-03-13 15:44:19,672 - PIL.PngImagePlugin - DEBUG - STREAM b'IHDR' 16 13
2025-03-13 15:44:19,672 - PIL.PngImagePlugin - DEBUG - STREAM b'tEXt' 41 57
2025-03-13 15:44:19,672 - PIL.PngImagePlugin - DEBUG - STREAM b'pHYs' 110 9
2025-03-13 15:44:19,672 - PIL.PngImagePlugin - DEBUG - STREAM b'IDAT' 131 65536
2025-03-13 15:44:20,341 - fpdf.fpdf - DEBUG - Page break on page 88 at y=274 for element of height 10 > 282
2025-03-13 15:44:20,720 - PIL.PngImagePlugin - DEBUG - STREAM b'IHDR' 16 13
2025-03-13 15:44:20,720 - PIL.PngImagePlugin - DEBUG - STREAM b'tEXt' 41 57
2025-03-13 15:44:20,721 - PIL.PngImagePlugin - DEBUG - STREAM b'pHYs' 110 9
2025-03-13 15:44:20,721 - PIL.PngImagePlugin - DEBUG - STREAM b'IDAT' 131 65536
2025-03-13 15:44:21,390 - fpdf.fpdf - DEBUG - Page break on page 90 at y=274 for element of height 10 > 282
2025-03-13 15:44:21,840 - PIL.PngImagePlugin - DEBUG - STREAM b'IHDR' 16 13
2025-03-13 15:44:21,840 - PIL.PngImagePlugin - DEBUG - STREAM b'tEXt' 41 57
2025-03-13 15:44:21,841 - PIL.PngImagePlugin - DEBUG - STREAM b'pHYs' 110 9
2025-03-13 15:44:21,841 - PIL.PngImagePlugin - DEBUG - STREAM b'IDAT' 131 65536
2025-03-13 15:44:22,521 - fpdf.fpdf - DEBUG - Page break on page 92 at y=274 for element of height 10 > 282
2025-03-13 15:44:22,938 - PIL.PngImagePlugin - DEBUG - STREAM b'IHDR' 16 13
2025-03-13 15:44:22,938 - PIL.PngImagePlugin - DEBUG - STREAM b'tEXt' 41 57
2025-03-13 15:44:22,939 - PIL.PngImagePlugin - DEBUG - STREAM b'pHYs' 110 9
2025-03-13 15:44:22,939 - PIL.PngImagePlugin - DEBUG - STREAM b'IDAT' 131 65536
2025-03-13 15:44:23,624 - fpdf.fpdf - DEBUG - Page break on page 94 at y=274 for element of height 10 > 282
2025-03-13 15:44:24,055 - PIL.PngImagePlugin - DEBUG - STREAM b'IHDR' 16 13
2025-03-13 15:44:24,055 - PIL.PngImagePlugin - DEBUG - STREAM b'tEXt' 41 57
2025-03-13 15:44:24,056 - PIL.PngImagePlugin - DEBUG - STREAM b'pHYs' 110 9
2025-03-13 15:44:24,056 - PIL.PngImagePlugin - DEBUG - STREAM b'IDAT' 131 65536
2025-03-13 15:44:24,746 - fpdf.fpdf - DEBUG - Page break on page 96 at y=274 for element of height 10 > 282
2025-03-13 15:44:24,953 - pymongo.topology - DEBUG - {"topologyId": {"$oid": "67d2b6901e52438c18c36b9c"}, "driverConnectionId": 1, "serverConnectionId": 13155, "serverHost": "3.144.134.141", "serverPort": 27017, "awaited": true, "durationMS": 10077.99999999952, "reply": "{\"isWritablePrimary\": true, \"topologyVersion\": {\"processId\": {\"$oid\": \"67b7e5814f77c1a87c56d054\"}}, \"maxBsonObjectSize\": 16777216, \"maxMessageSizeBytes\": 48000000, \"maxWriteBatchSize\": 100000, \"localTime\": {\"$date\": \"2025-03-13T10:44:24.905Z\"}, \"logicalSessionTimeoutMinutes\": 30, \"connectionId\": 13155, \"maxWireVersion\": 25, \"ok\": 1.0}", "message": "Server heartbeat succeeded"}
2025-03-13 15:44:24,954 - pymongo.topology - DEBUG - {"topologyId": {"$oid": "67d2b6901e52438c18c36b9c"}, "driverConnectionId": 1, "serverConnectionId": 13155, "serverHost": "3.144.134.141", "serverPort": 27017, "awaited": true, "message": "Server heartbeat started"}
2025-03-13 15:44:25,214 - PIL.PngImagePlugin - DEBUG - STREAM b'IHDR' 16 13
2025-03-13 15:44:25,215 - PIL.PngImagePlugin - DEBUG - STREAM b'tEXt' 41 57
2025-03-13 15:44:25,215 - PIL.PngImagePlugin - DEBUG - STREAM b'pHYs' 110 9
2025-03-13 15:44:25,215 - PIL.PngImagePlugin - DEBUG - STREAM b'IDAT' 131 65536
2025-03-13 15:44:25,900 - fpdf.fpdf - DEBUG - Page break on page 98 at y=274 for element of height 10 > 282
2025-03-13 15:44:26,299 - PIL.PngImagePlugin - DEBUG - STREAM b'IHDR' 16 13
2025-03-13 15:44:26,300 - PIL.PngImagePlugin - DEBUG - STREAM b'tEXt' 41 57
2025-03-13 15:44:26,300 - PIL.PngImagePlugin - DEBUG - STREAM b'pHYs' 110 9
2025-03-13 15:44:26,300 - PIL.PngImagePlugin - DEBUG - STREAM b'IDAT' 131 65536
2025-03-13 15:44:26,926 - fpdf.fpdf - DEBUG - Page break on page 100 at y=274 for element of height 10 > 282
2025-03-13 15:44:27,311 - PIL.PngImagePlugin - DEBUG - STREAM b'IHDR' 16 13
2025-03-13 15:44:27,311 - PIL.PngImagePlugin - DEBUG - STREAM b'tEXt' 41 57
2025-03-13 15:44:27,312 - PIL.PngImagePlugin - DEBUG - STREAM b'pHYs' 110 9
2025-03-13 15:44:27,312 - PIL.PngImagePlugin - DEBUG - STREAM b'IDAT' 131 65536
2025-03-13 15:44:27,962 - fpdf.fpdf - DEBUG - Page break on page 102 at y=274 for element of height 10 > 282
2025-03-13 15:44:28,349 - PIL.PngImagePlugin - DEBUG - STREAM b'IHDR' 16 13
2025-03-13 15:44:28,350 - PIL.PngImagePlugin - DEBUG - STREAM b'tEXt' 41 57
2025-03-13 15:44:28,350 - PIL.PngImagePlugin - DEBUG - STREAM b'pHYs' 110 9
2025-03-13 15:44:28,350 - PIL.PngImagePlugin - DEBUG - STREAM b'IDAT' 131 65536
2025-03-13 15:44:29,055 - fpdf.fpdf - DEBUG - Page break on page 104 at y=274 for element of height 10 > 282
2025-03-13 15:44:29,472 - PIL.PngImagePlugin - DEBUG - STREAM b'IHDR' 16 13
2025-03-13 15:44:29,472 - PIL.PngImagePlugin - DEBUG - STREAM b'tEXt' 41 57
2025-03-13 15:44:29,472 - PIL.PngImagePlugin - DEBUG - STREAM b'pHYs' 110 9
2025-03-13 15:44:29,472 - PIL.PngImagePlugin - DEBUG - STREAM b'IDAT' 131 65536
2025-03-13 15:44:30,149 - fpdf.fpdf - DEBUG - Page break on page 106 at y=274 for element of height 10 > 282
2025-03-13 15:44:30,519 - PIL.PngImagePlugin - DEBUG - STREAM b'IHDR' 16 13
2025-03-13 15:44:30,520 - PIL.PngImagePlugin - DEBUG - STREAM b'tEXt' 41 57
2025-03-13 15:44:30,520 - PIL.PngImagePlugin - DEBUG - STREAM b'pHYs' 110 9
2025-03-13 15:44:30,520 - PIL.PngImagePlugin - DEBUG - STREAM b'IDAT' 131 65536
2025-03-13 15:44:31,137 - fpdf.fpdf - DEBUG - Page break on page 108 at y=274 for element of height 10 > 282
2025-03-13 15:44:31,599 - PIL.PngImagePlugin - DEBUG - STREAM b'IHDR' 16 13
2025-03-13 15:44:31,600 - PIL.PngImagePlugin - DEBUG - STREAM b'tEXt' 41 57
2025-03-13 15:44:31,600 - PIL.PngImagePlugin - DEBUG - STREAM b'pHYs' 110 9
2025-03-13 15:44:31,600 - PIL.PngImagePlugin - DEBUG - STREAM b'IDAT' 131 65536
2025-03-13 15:44:32,308 - fpdf.fpdf - DEBUG - Page break on page 110 at y=274 for element of height 10 > 282
2025-03-13 15:44:32,753 - PIL.PngImagePlugin - DEBUG - STREAM b'IHDR' 16 13
2025-03-13 15:44:32,754 - PIL.PngImagePlugin - DEBUG - STREAM b'tEXt' 41 57
2025-03-13 15:44:32,754 - PIL.PngImagePlugin - DEBUG - STREAM b'pHYs' 110 9
2025-03-13 15:44:32,754 - PIL.PngImagePlugin - DEBUG - STREAM b'IDAT' 131 65536
2025-03-13 15:44:33,466 - fpdf.fpdf - DEBUG - Page break on page 112 at y=274 for element of height 10 > 282
2025-03-13 15:44:33,852 - PIL.PngImagePlugin - DEBUG - STREAM b'IHDR' 16 13
2025-03-13 15:44:33,852 - PIL.PngImagePlugin - DEBUG - STREAM b'tEXt' 41 57
2025-03-13 15:44:33,852 - PIL.PngImagePlugin - DEBUG - STREAM b'pHYs' 110 9
2025-03-13 15:44:33,852 - PIL.PngImagePlugin - DEBUG - STREAM b'IDAT' 131 65536
2025-03-13 15:44:34,507 - fpdf.fpdf - DEBUG - Page break on page 114 at y=274 for element of height 10 > 282
2025-03-13 15:44:34,972 - PIL.PngImagePlugin - DEBUG - STREAM b'IHDR' 16 13
2025-03-13 15:44:34,973 - pymongo.topology - DEBUG - {"topologyId": {"$oid": "67d2b6901e52438c18c36b9c"}, "driverConnectionId": 1, "serverConnectionId": 13155, "serverHost": "3.144.134.141", "serverPort": 27017, "awaited": true, "durationMS": 10015.999999999622, "reply": "{\"isWritablePrimary\": true, \"topologyVersion\": {\"processId\": {\"$oid\": \"67b7e5814f77c1a87c56d054\"}}, \"maxBsonObjectSize\": 16777216, \"maxMessageSizeBytes\": 48000000, \"maxWriteBatchSize\": 100000, \"localTime\": {\"$date\": \"2025-03-13T10:44:34.906Z\"}, \"logicalSessionTimeoutMinutes\": 30, \"connectionId\": 13155, \"maxWireVersion\": 25, \"ok\": 1.0}", "message": "Server heartbeat succeeded"}
2025-03-13 15:44:34,973 - PIL.PngImagePlugin - DEBUG - STREAM b'tEXt' 41 57
2025-03-13 15:44:34,973 - pymongo.topology - DEBUG - {"topologyId": {"$oid": "67d2b6901e52438c18c36b9c"}, "driverConnectionId": 1, "serverConnectionId": 13155, "serverHost": "3.144.134.141", "serverPort": 27017, "awaited": true, "message": "Server heartbeat started"}
2025-03-13 15:44:34,975 - PIL.PngImagePlugin - DEBUG - STREAM b'pHYs' 110 9
2025-03-13 15:44:34,975 - PIL.PngImagePlugin - DEBUG - STREAM b'IDAT' 131 65536
2025-03-13 15:44:35,687 - fpdf.fpdf - DEBUG - Page break on page 116 at y=274 for element of height 10 > 282
2025-03-13 15:44:36,092 - PIL.PngImagePlugin - DEBUG - STREAM b'IHDR' 16 13
2025-03-13 15:44:36,092 - PIL.PngImagePlugin - DEBUG - STREAM b'tEXt' 41 57
2025-03-13 15:44:36,092 - PIL.PngImagePlugin - DEBUG - STREAM b'pHYs' 110 9
2025-03-13 15:44:36,092 - PIL.PngImagePlugin - DEBUG - STREAM b'IDAT' 131 65536
2025-03-13 15:44:36,817 - fpdf.fpdf - DEBUG - Page break on page 118 at y=274 for element of height 10 > 282
2025-03-13 15:44:37,189 - PIL.PngImagePlugin - DEBUG - STREAM b'IHDR' 16 13
2025-03-13 15:44:37,189 - PIL.PngImagePlugin - DEBUG - STREAM b'tEXt' 41 57
2025-03-13 15:44:37,190 - PIL.PngImagePlugin - DEBUG - STREAM b'pHYs' 110 9
2025-03-13 15:44:37,190 - PIL.PngImagePlugin - DEBUG - STREAM b'IDAT' 131 65536
2025-03-13 15:44:37,868 - fpdf.fpdf - DEBUG - Page break on page 120 at y=274 for element of height 10 > 282
2025-03-13 15:44:38,238 - PIL.PngImagePlugin - DEBUG - STREAM b'IHDR' 16 13
2025-03-13 15:44:38,238 - PIL.PngImagePlugin - DEBUG - STREAM b'tEXt' 41 57
2025-03-13 15:44:38,238 - PIL.PngImagePlugin - DEBUG - STREAM b'pHYs' 110 9
2025-03-13 15:44:38,238 - PIL.PngImagePlugin - DEBUG - STREAM b'IDAT' 131 65536
2025-03-13 15:44:38,929 - fpdf.fpdf - DEBUG - Page break on page 122 at y=274 for element of height 10 > 282
2025-03-13 15:44:39,332 - PIL.PngImagePlugin - DEBUG - STREAM b'IHDR' 16 13
2025-03-13 15:44:39,333 - PIL.PngImagePlugin - DEBUG - STREAM b'tEXt' 41 57
2025-03-13 15:44:39,333 - PIL.PngImagePlugin - DEBUG - STREAM b'pHYs' 110 9
2025-03-13 15:44:39,333 - PIL.PngImagePlugin - DEBUG - STREAM b'IDAT' 131 65536
2025-03-13 15:44:40,016 - fpdf.fpdf - DEBUG - Page break on page 124 at y=274 for element of height 10 > 282
2025-03-13 15:44:40,396 - PIL.PngImagePlugin - DEBUG - STREAM b'IHDR' 16 13
2025-03-13 15:44:40,396 - PIL.PngImagePlugin - DEBUG - STREAM b'tEXt' 41 57
2025-03-13 15:44:40,397 - PIL.PngImagePlugin - DEBUG - STREAM b'pHYs' 110 9
2025-03-13 15:44:40,397 - PIL.PngImagePlugin - DEBUG - STREAM b'IDAT' 131 65536
2025-03-13 15:44:41,051 - fpdf.fpdf - DEBUG - Page break on page 126 at y=274 for element of height 10 > 282
2025-03-13 15:44:41,444 - PIL.PngImagePlugin - DEBUG - STREAM b'IHDR' 16 13
2025-03-13 15:44:41,444 - PIL.PngImagePlugin - DEBUG - STREAM b'tEXt' 41 57
2025-03-13 15:44:41,444 - PIL.PngImagePlugin - DEBUG - STREAM b'pHYs' 110 9
2025-03-13 15:44:41,445 - PIL.PngImagePlugin - DEBUG - STREAM b'IDAT' 131 65536
2025-03-13 15:44:42,144 - fpdf.fpdf - DEBUG - Page break on page 128 at y=274 for element of height 10 > 282
2025-03-13 15:44:42,600 - PIL.PngImagePlugin - DEBUG - STREAM b'IHDR' 16 13
2025-03-13 15:44:42,601 - PIL.PngImagePlugin - DEBUG - STREAM b'tEXt' 41 57
2025-03-13 15:44:42,601 - PIL.PngImagePlugin - DEBUG - STREAM b'pHYs' 110 9
2025-03-13 15:44:42,602 - PIL.PngImagePlugin - DEBUG - STREAM b'IDAT' 131 65536
2025-03-13 15:44:43,325 - fpdf.fpdf - DEBUG - Page break on page 130 at y=274 for element of height 10 > 282
2025-03-13 15:44:43,775 - PIL.PngImagePlugin - DEBUG - STREAM b'IHDR' 16 13
2025-03-13 15:44:43,776 - PIL.PngImagePlugin - DEBUG - STREAM b'tEXt' 41 57
2025-03-13 15:44:43,776 - PIL.PngImagePlugin - DEBUG - STREAM b'pHYs' 110 9
2025-03-13 15:44:43,776 - PIL.PngImagePlugin - DEBUG - STREAM b'IDAT' 131 65536
2025-03-13 15:44:44,535 - fpdf.fpdf - DEBUG - Page break on page 132 at y=274 for element of height 10 > 282
2025-03-13 15:44:44,961 - pymongo.topology - DEBUG - {"topologyId": {"$oid": "67d2b6901e52438c18c36b9c"}, "driverConnectionId": 1, "serverConnectionId": 13155, "serverHost": "3.144.134.141", "serverPort": 27017, "awaited": true, "durationMS": 10000.0, "reply": "{\"isWritablePrimary\": true, \"topologyVersion\": {\"processId\": {\"$oid\": \"67b7e5814f77c1a87c56d054\"}}, \"maxBsonObjectSize\": 16777216, \"maxMessageSizeBytes\": 48000000, \"maxWriteBatchSize\": 100000, \"localTime\": {\"$date\": \"2025-03-13T10:44:44.907Z\"}, \"logicalSessionTimeoutMinutes\": 30, \"connectionId\": 13155, \"maxWireVersion\": 25, \"ok\": 1.0}", "message": "Server heartbeat succeeded"}
2025-03-13 15:44:44,962 - pymongo.topology - DEBUG - {"topologyId": {"$oid": "67d2b6901e52438c18c36b9c"}, "driverConnectionId": 1, "serverConnectionId": 13155, "serverHost": "3.144.134.141", "serverPort": 27017, "awaited": true, "message": "Server heartbeat started"}
2025-03-13 15:44:44,980 - PIL.PngImagePlugin - DEBUG - STREAM b'IHDR' 16 13
2025-03-13 15:44:44,981 - PIL.PngImagePlugin - DEBUG - STREAM b'tEXt' 41 57
2025-03-13 15:44:44,982 - PIL.PngImagePlugin - DEBUG - STREAM b'pHYs' 110 9
2025-03-13 15:44:44,982 - PIL.PngImagePlugin - DEBUG - STREAM b'IDAT' 131 65536
2025-03-13 15:44:45,714 - fpdf.fpdf - DEBUG - Page break on page 134 at y=274 for element of height 10 > 282
2025-03-13 15:44:46,161 - PIL.PngImagePlugin - DEBUG - STREAM b'IHDR' 16 13
2025-03-13 15:44:46,161 - PIL.PngImagePlugin - DEBUG - STREAM b'tEXt' 41 57
2025-03-13 15:44:46,161 - PIL.PngImagePlugin - DEBUG - STREAM b'pHYs' 110 9
2025-03-13 15:44:46,161 - PIL.PngImagePlugin - DEBUG - STREAM b'IDAT' 131 65536
2025-03-13 15:44:46,882 - fpdf.fpdf - DEBUG - Page break on page 136 at y=274 for element of height 10 > 282
2025-03-13 15:44:47,249 - PIL.PngImagePlugin - DEBUG - STREAM b'IHDR' 16 13
2025-03-13 15:44:47,249 - PIL.PngImagePlugin - DEBUG - STREAM b'tEXt' 41 57
2025-03-13 15:44:47,249 - PIL.PngImagePlugin - DEBUG - STREAM b'pHYs' 110 9
2025-03-13 15:44:47,249 - PIL.PngImagePlugin - DEBUG - STREAM b'IDAT' 131 65536
2025-03-13 15:44:47,898 - fpdf.fpdf - DEBUG - Page break on page 138 at y=274 for element of height 10 > 282
2025-03-13 15:44:48,328 - PIL.PngImagePlugin - DEBUG - STREAM b'IHDR' 16 13
2025-03-13 15:44:48,328 - PIL.PngImagePlugin - DEBUG - STREAM b'tEXt' 41 57
2025-03-13 15:44:48,328 - PIL.PngImagePlugin - DEBUG - STREAM b'pHYs' 110 9
2025-03-13 15:44:48,329 - PIL.PngImagePlugin - DEBUG - STREAM b'IDAT' 131 65536
2025-03-13 15:44:49,017 - fpdf.fpdf - DEBUG - Page break on page 140 at y=274 for element of height 10 > 282
2025-03-13 15:44:49,393 - PIL.PngImagePlugin - DEBUG - STREAM b'IHDR' 16 13
2025-03-13 15:44:49,394 - PIL.PngImagePlugin - DEBUG - STREAM b'tEXt' 41 57
2025-03-13 15:44:49,394 - PIL.PngImagePlugin - DEBUG - STREAM b'pHYs' 110 9
2025-03-13 15:44:49,394 - PIL.PngImagePlugin - DEBUG - STREAM b'IDAT' 131 65536
2025-03-13 15:44:50,100 - fpdf.fpdf - DEBUG - Page break on page 142 at y=274 for element of height 10 > 282
2025-03-13 15:44:50,478 - PIL.PngImagePlugin - DEBUG - STREAM b'IHDR' 16 13
2025-03-13 15:44:50,479 - PIL.PngImagePlugin - DEBUG - STREAM b'tEXt' 41 57
2025-03-13 15:44:50,479 - PIL.PngImagePlugin - DEBUG - STREAM b'pHYs' 110 9
2025-03-13 15:44:50,479 - PIL.PngImagePlugin - DEBUG - STREAM b'IDAT' 131 65536
2025-03-13 15:44:51,195 - fpdf.fpdf - DEBUG - Page break on page 144 at y=274 for element of height 10 > 282
2025-03-13 15:44:51,615 - PIL.PngImagePlugin - DEBUG - STREAM b'IHDR' 16 13
2025-03-13 15:44:51,615 - PIL.PngImagePlugin - DEBUG - STREAM b'tEXt' 41 57
2025-03-13 15:44:51,615 - PIL.PngImagePlugin - DEBUG - STREAM b'pHYs' 110 9
2025-03-13 15:44:51,615 - PIL.PngImagePlugin - DEBUG - STREAM b'IDAT' 131 65536
2025-03-13 15:44:52,302 - fpdf.fpdf - DEBUG - Page break on page 146 at y=274 for element of height 10 > 282
2025-03-13 15:44:52,702 - PIL.PngImagePlugin - DEBUG - STREAM b'IHDR' 16 13
2025-03-13 15:44:52,702 - PIL.PngImagePlugin - DEBUG - STREAM b'tEXt' 41 57
2025-03-13 15:44:52,702 - PIL.PngImagePlugin - DEBUG - STREAM b'pHYs' 110 9
2025-03-13 15:44:52,702 - PIL.PngImagePlugin - DEBUG - STREAM b'IDAT' 131 65536
2025-03-13 15:44:53,366 - fpdf.fpdf - DEBUG - Page break on page 148 at y=274 for element of height 10 > 282
2025-03-13 15:44:53,775 - PIL.PngImagePlugin - DEBUG - STREAM b'IHDR' 16 13
2025-03-13 15:44:53,775 - PIL.PngImagePlugin - DEBUG - STREAM b'tEXt' 41 57
2025-03-13 15:44:53,775 - PIL.PngImagePlugin - DEBUG - STREAM b'pHYs' 110 9
2025-03-13 15:44:53,775 - PIL.PngImagePlugin - DEBUG - STREAM b'IDAT' 131 65536
2025-03-13 15:44:54,464 - fpdf.fpdf - DEBUG - Page break on page 150 at y=274 for element of height 10 > 282
2025-03-13 15:44:54,863 - PIL.PngImagePlugin - DEBUG - STREAM b'IHDR' 16 13
2025-03-13 15:44:54,863 - PIL.PngImagePlugin - DEBUG - STREAM b'tEXt' 41 57
2025-03-13 15:44:54,863 - PIL.PngImagePlugin - DEBUG - STREAM b'pHYs' 110 9
2025-03-13 15:44:54,863 - PIL.PngImagePlugin - DEBUG - STREAM b'IDAT' 131 65536
2025-03-13 15:44:54,956 - pymongo.topology - DEBUG - {"topologyId": {"$oid": "67d2b6901e52438c18c36b9c"}, "driverConnectionId": 1, "serverConnectionId": 13155, "serverHost": "3.144.134.141", "serverPort": 27017, "awaited": true, "durationMS": 9984.000000000378, "reply": "{\"isWritablePrimary\": true, \"topologyVersion\": {\"processId\": {\"$oid\": \"67b7e5814f77c1a87c56d054\"}}, \"maxBsonObjectSize\": 16777216, \"maxMessageSizeBytes\": 48000000, \"maxWriteBatchSize\": 100000, \"localTime\": {\"$date\": \"2025-03-13T10:44:54.907Z\"}, \"logicalSessionTimeoutMinutes\": 30, \"connectionId\": 13155, \"maxWireVersion\": 25, \"ok\": 1.0}", "message": "Server heartbeat succeeded"}
2025-03-13 15:44:54,992 - pymongo.topology - DEBUG - {"topologyId": {"$oid": "67d2b6901e52438c18c36b9c"}, "driverConnectionId": 1, "serverConnectionId": 13155, "serverHost": "3.144.134.141", "serverPort": 27017, "awaited": true, "message": "Server heartbeat started"}
2025-03-13 15:44:55,465 - fpdf.fpdf - DEBUG - Page break on page 152 at y=274 for element of height 10 > 282
2025-03-13 15:44:55,838 - PIL.PngImagePlugin - DEBUG - STREAM b'IHDR' 16 13
2025-03-13 15:44:55,839 - PIL.PngImagePlugin - DEBUG - STREAM b'tEXt' 41 57
2025-03-13 15:44:55,839 - PIL.PngImagePlugin - DEBUG - STREAM b'pHYs' 110 9
2025-03-13 15:44:55,839 - PIL.PngImagePlugin - DEBUG - STREAM b'IDAT' 131 65536
2025-03-13 15:44:56,458 - fpdf.fpdf - DEBUG - Page break on page 154 at y=274 for element of height 10 > 282
2025-03-13 15:44:56,857 - PIL.PngImagePlugin - DEBUG - STREAM b'IHDR' 16 13
2025-03-13 15:44:56,857 - PIL.PngImagePlugin - DEBUG - STREAM b'tEXt' 41 57
2025-03-13 15:44:56,857 - PIL.PngImagePlugin - DEBUG - STREAM b'pHYs' 110 9
2025-03-13 15:44:56,857 - PIL.PngImagePlugin - DEBUG - STREAM b'IDAT' 131 65536
2025-03-13 15:44:57,494 - fpdf.fpdf - DEBUG - Page break on page 156 at y=274 for element of height 10 > 282
2025-03-13 15:44:57,850 - PIL.PngImagePlugin - DEBUG - STREAM b'IHDR' 16 13
2025-03-13 15:44:57,850 - PIL.PngImagePlugin - DEBUG - STREAM b'tEXt' 41 57
2025-03-13 15:44:57,850 - PIL.PngImagePlugin - DEBUG - STREAM b'pHYs' 110 9
2025-03-13 15:44:57,850 - PIL.PngImagePlugin - DEBUG - STREAM b'IDAT' 131 65536
2025-03-13 15:44:58,465 - fpdf.fpdf - DEBUG - Page break on page 158 at y=274 for element of height 10 > 282
2025-03-13 15:44:58,897 - PIL.PngImagePlugin - DEBUG - STREAM b'IHDR' 16 13
2025-03-13 15:44:58,898 - PIL.PngImagePlugin - DEBUG - STREAM b'tEXt' 41 57
2025-03-13 15:44:58,898 - PIL.PngImagePlugin - DEBUG - STREAM b'pHYs' 110 9
2025-03-13 15:44:58,898 - PIL.PngImagePlugin - DEBUG - STREAM b'IDAT' 131 65536
2025-03-13 15:44:59,587 - fpdf.fpdf - DEBUG - Page break on page 160 at y=274 for element of height 10 > 282
2025-03-13 15:44:59,991 - PIL.PngImagePlugin - DEBUG - STREAM b'IHDR' 16 13
2025-03-13 15:44:59,991 - PIL.PngImagePlugin - DEBUG - STREAM b'tEXt' 41 57
2025-03-13 15:44:59,992 - PIL.PngImagePlugin - DEBUG - STREAM b'pHYs' 110 9
2025-03-13 15:44:59,992 - PIL.PngImagePlugin - DEBUG - STREAM b'IDAT' 131 65536
2025-03-13 15:45:00,647 - fpdf.fpdf - DEBUG - Page break on page 162 at y=274 for element of height 10 > 282
2025-03-13 15:45:01,078 - PIL.PngImagePlugin - DEBUG - STREAM b'IHDR' 16 13
2025-03-13 15:45:01,078 - PIL.PngImagePlugin - DEBUG - STREAM b'tEXt' 41 57
2025-03-13 15:45:01,078 - PIL.PngImagePlugin - DEBUG - STREAM b'pHYs' 110 9
2025-03-13 15:45:01,079 - PIL.PngImagePlugin - DEBUG - STREAM b'IDAT' 131 65536
2025-03-13 15:45:01,762 - fpdf.fpdf - DEBUG - Page break on page 164 at y=274 for element of height 10 > 282
2025-03-13 15:45:02,201 - PIL.PngImagePlugin - DEBUG - STREAM b'IHDR' 16 13
2025-03-13 15:45:02,202 - PIL.PngImagePlugin - DEBUG - STREAM b'tEXt' 41 57
2025-03-13 15:45:02,202 - PIL.PngImagePlugin - DEBUG - STREAM b'pHYs' 110 9
2025-03-13 15:45:02,202 - PIL.PngImagePlugin - DEBUG - STREAM b'IDAT' 131 65536
2025-03-13 15:45:02,947 - fpdf.fpdf - DEBUG - Page break on page 166 at y=274 for element of height 10 > 282
2025-03-13 15:45:03,359 - PIL.PngImagePlugin - DEBUG - STREAM b'IHDR' 16 13
2025-03-13 15:45:03,359 - PIL.PngImagePlugin - DEBUG - STREAM b'tEXt' 41 57
2025-03-13 15:45:03,359 - PIL.PngImagePlugin - DEBUG - STREAM b'pHYs' 110 9
2025-03-13 15:45:03,361 - PIL.PngImagePlugin - DEBUG - STREAM b'IDAT' 131 65536
2025-03-13 15:45:03,986 - fpdf.fpdf - DEBUG - Page break on page 168 at y=274 for element of height 10 > 282
2025-03-13 15:45:04,393 - PIL.PngImagePlugin - DEBUG - STREAM b'IHDR' 16 13
2025-03-13 15:45:04,394 - PIL.PngImagePlugin - DEBUG - STREAM b'tEXt' 41 57
2025-03-13 15:45:04,394 - PIL.PngImagePlugin - DEBUG - STREAM b'pHYs' 110 9
2025-03-13 15:45:04,394 - PIL.PngImagePlugin - DEBUG - STREAM b'IDAT' 131 65536
2025-03-13 15:45:05,013 - pymongo.topology - DEBUG - {"topologyId": {"$oid": "67d2b6901e52438c18c36b9c"}, "driverConnectionId": 1, "serverConnectionId": 13155, "serverHost": "3.144.134.141", "serverPort": 27017, "awaited": true, "durationMS": 10015.999999999622, "reply": "{\"isWritablePrimary\": true, \"topologyVersion\": {\"processId\": {\"$oid\": \"67b7e5814f77c1a87c56d054\"}}, \"maxBsonObjectSize\": 16777216, \"maxMessageSizeBytes\": 48000000, \"maxWriteBatchSize\": 100000, \"localTime\": {\"$date\": \"2025-03-13T10:45:04.908Z\"}, \"logicalSessionTimeoutMinutes\": 30, \"connectionId\": 13155, \"maxWireVersion\": 25, \"ok\": 1.0}", "message": "Server heartbeat succeeded"}
2025-03-13 15:45:05,015 - fpdf.fpdf - DEBUG - Page break on page 170 at y=274 for element of height 10 > 282
2025-03-13 15:45:05,015 - pymongo.topology - DEBUG - {"topologyId": {"$oid": "67d2b6901e52438c18c36b9c"}, "driverConnectionId": 1, "serverConnectionId": 13155, "serverHost": "3.144.134.141", "serverPort": 27017, "awaited": true, "message": "Server heartbeat started"}
2025-03-13 15:45:05,383 - PIL.PngImagePlugin - DEBUG - STREAM b'IHDR' 16 13
2025-03-13 15:45:05,383 - PIL.PngImagePlugin - DEBUG - STREAM b'tEXt' 41 57
2025-03-13 15:45:05,383 - PIL.PngImagePlugin - DEBUG - STREAM b'pHYs' 110 9
2025-03-13 15:45:05,384 - PIL.PngImagePlugin - DEBUG - STREAM b'IDAT' 131 65536
2025-03-13 15:45:06,027 - fpdf.fpdf - DEBUG - Page break on page 172 at y=274 for element of height 10 > 282
2025-03-13 15:45:06,405 - PIL.PngImagePlugin - DEBUG - STREAM b'IHDR' 16 13
2025-03-13 15:45:06,405 - PIL.PngImagePlugin - DEBUG - STREAM b'tEXt' 41 57
2025-03-13 15:45:06,405 - PIL.PngImagePlugin - DEBUG - STREAM b'pHYs' 110 9
2025-03-13 15:45:06,405 - PIL.PngImagePlugin - DEBUG - STREAM b'IDAT' 131 65536
2025-03-13 15:45:07,036 - fpdf.fpdf - DEBUG - Page break on page 174 at y=274 for element of height 10 > 282
2025-03-13 15:45:07,445 - PIL.PngImagePlugin - DEBUG - STREAM b'IHDR' 16 13
2025-03-13 15:45:07,446 - PIL.PngImagePlugin - DEBUG - STREAM b'tEXt' 41 57
2025-03-13 15:45:07,446 - PIL.PngImagePlugin - DEBUG - STREAM b'pHYs' 110 9
2025-03-13 15:45:07,446 - PIL.PngImagePlugin - DEBUG - STREAM b'IDAT' 131 65536
2025-03-13 15:45:08,077 - fpdf.fpdf - DEBUG - Page break on page 176 at y=274 for element of height 10 > 282
2025-03-13 15:45:08,643 - PIL.PngImagePlugin - DEBUG - STREAM b'IHDR' 16 13
2025-03-13 15:45:08,644 - PIL.PngImagePlugin - DEBUG - STREAM b'tEXt' 41 57
2025-03-13 15:45:08,644 - PIL.PngImagePlugin - DEBUG - STREAM b'pHYs' 110 9
2025-03-13 15:45:08,644 - PIL.PngImagePlugin - DEBUG - STREAM b'IDAT' 131 65536
2025-03-13 15:45:09,266 - fpdf.fpdf - DEBUG - Page break on page 178 at y=274 for element of height 10 > 282
2025-03-13 15:45:09,642 - PIL.PngImagePlugin - DEBUG - STREAM b'IHDR' 16 13
2025-03-13 15:45:09,642 - PIL.PngImagePlugin - DEBUG - STREAM b'tEXt' 41 57
2025-03-13 15:45:09,642 - PIL.PngImagePlugin - DEBUG - STREAM b'pHYs' 110 9
2025-03-13 15:45:09,643 - PIL.PngImagePlugin - DEBUG - STREAM b'IDAT' 131 65536
2025-03-13 15:45:10,232 - fpdf.fpdf - DEBUG - Page break on page 180 at y=274 for element of height 10 > 282
2025-03-13 15:45:10,608 - PIL.PngImagePlugin - DEBUG - STREAM b'IHDR' 16 13
2025-03-13 15:45:10,609 - PIL.PngImagePlugin - DEBUG - STREAM b'tEXt' 41 57
2025-03-13 15:45:10,609 - PIL.PngImagePlugin - DEBUG - STREAM b'pHYs' 110 9
2025-03-13 15:45:10,609 - PIL.PngImagePlugin - DEBUG - STREAM b'IDAT' 131 65536
2025-03-13 15:45:11,211 - fpdf.fpdf - DEBUG - Page break on page 182 at y=274 for element of height 10 > 282
2025-03-13 15:45:11,580 - PIL.PngImagePlugin - DEBUG - STREAM b'IHDR' 16 13
2025-03-13 15:45:11,580 - PIL.PngImagePlugin - DEBUG - STREAM b'tEXt' 41 57
2025-03-13 15:45:11,580 - PIL.PngImagePlugin - DEBUG - STREAM b'pHYs' 110 9
2025-03-13 15:45:11,580 - PIL.PngImagePlugin - DEBUG - STREAM b'IDAT' 131 65536
2025-03-13 15:45:12,202 - fpdf.fpdf - DEBUG - Page break on page 184 at y=274 for element of height 10 > 282
2025-03-13 15:45:12,610 - PIL.PngImagePlugin - DEBUG - STREAM b'IHDR' 16 13
2025-03-13 15:45:12,610 - PIL.PngImagePlugin - DEBUG - STREAM b'tEXt' 41 57
2025-03-13 15:45:12,610 - PIL.PngImagePlugin - DEBUG - STREAM b'pHYs' 110 9
2025-03-13 15:45:12,611 - PIL.PngImagePlugin - DEBUG - STREAM b'IDAT' 131 65536
2025-03-13 15:45:13,237 - fpdf.fpdf - DEBUG - Page break on page 186 at y=274 for element of height 10 > 282
2025-03-13 15:45:13,628 - PIL.PngImagePlugin - DEBUG - STREAM b'IHDR' 16 13
2025-03-13 15:45:13,628 - PIL.PngImagePlugin - DEBUG - STREAM b'tEXt' 41 57
2025-03-13 15:45:13,628 - PIL.PngImagePlugin - DEBUG - STREAM b'pHYs' 110 9
2025-03-13 15:45:13,629 - PIL.PngImagePlugin - DEBUG - STREAM b'IDAT' 131 65536
2025-03-13 15:45:14,267 - fpdf.fpdf - DEBUG - Page break on page 188 at y=274 for element of height 10 > 282
2025-03-13 15:45:14,646 - PIL.PngImagePlugin - DEBUG - STREAM b'IHDR' 16 13
2025-03-13 15:45:14,646 - PIL.PngImagePlugin - DEBUG - STREAM b'tEXt' 41 57
2025-03-13 15:45:14,647 - PIL.PngImagePlugin - DEBUG - STREAM b'pHYs' 110 9
2025-03-13 15:45:14,647 - PIL.PngImagePlugin - DEBUG - STREAM b'IDAT' 131 65536
2025-03-13 15:45:15,051 - pymongo.topology - DEBUG - {"topologyId": {"$oid": "67d2b6901e52438c18c36b9c"}, "driverConnectionId": 1, "serverConnectionId": 13155, "serverHost": "3.144.134.141", "serverPort": 27017, "awaited": true, "durationMS": 10031.000000000859, "reply": "{\"isWritablePrimary\": true, \"topologyVersion\": {\"processId\": {\"$oid\": \"67b7e5814f77c1a87c56d054\"}}, \"maxBsonObjectSize\": 16777216, \"maxMessageSizeBytes\": 48000000, \"maxWriteBatchSize\": 100000, \"localTime\": {\"$date\": \"2025-03-13T10:45:14.909Z\"}, \"logicalSessionTimeoutMinutes\": 30, \"connectionId\": 13155, \"maxWireVersion\": 25, \"ok\": 1.0}", "message": "Server heartbeat succeeded"}
2025-03-13 15:45:15,081 - pymongo.topology - DEBUG - {"topologyId": {"$oid": "67d2b6901e52438c18c36b9c"}, "driverConnectionId": 1, "serverConnectionId": 13155, "serverHost": "3.144.134.141", "serverPort": 27017, "awaited": true, "message": "Server heartbeat started"}
2025-03-13 15:45:15,250 - fpdf.fpdf - DEBUG - Page break on page 190 at y=274 for element of height 10 > 282
2025-03-13 15:45:15,635 - PIL.PngImagePlugin - DEBUG - STREAM b'IHDR' 16 13
2025-03-13 15:45:15,635 - PIL.PngImagePlugin - DEBUG - STREAM b'tEXt' 41 57
2025-03-13 15:45:15,635 - PIL.PngImagePlugin - DEBUG - STREAM b'pHYs' 110 9
2025-03-13 15:45:15,635 - PIL.PngImagePlugin - DEBUG - STREAM b'IDAT' 131 65536
2025-03-13 15:45:16,263 - fpdf.fpdf - DEBUG - Page break on page 192 at y=274 for element of height 10 > 282
2025-03-13 15:45:16,609 - fpdf.fpdf - DEBUG - Page break on page 194 at y=274 for element of height 10 > 282
2025-03-13 15:45:16,954 - PIL.PngImagePlugin - DEBUG - STREAM b'IHDR' 16 13
2025-03-13 15:45:16,955 - PIL.PngImagePlugin - DEBUG - STREAM b'tEXt' 41 57
2025-03-13 15:45:16,955 - PIL.PngImagePlugin - DEBUG - STREAM b'pHYs' 110 9
2025-03-13 15:45:16,955 - PIL.PngImagePlugin - DEBUG - STREAM b'IDAT' 131 61690
2025-03-13 15:45:17,555 - fpdf.fpdf - DEBUG - Page break on page 196 at y=274 for element of height 10 > 282
2025-03-13 15:45:17,937 - PIL.PngImagePlugin - DEBUG - STREAM b'IHDR' 16 13
2025-03-13 15:45:17,937 - PIL.PngImagePlugin - DEBUG - STREAM b'tEXt' 41 57
2025-03-13 15:45:17,937 - PIL.PngImagePlugin - DEBUG - STREAM b'pHYs' 110 9
2025-03-13 15:45:17,937 - PIL.PngImagePlugin - DEBUG - STREAM b'IDAT' 131 65536
2025-03-13 15:45:18,534 - fpdf.fpdf - DEBUG - Page break on page 198 at y=274 for element of height 10 > 282
2025-03-13 15:45:18,913 - PIL.PngImagePlugin - DEBUG - STREAM b'IHDR' 16 13
2025-03-13 15:45:18,913 - PIL.PngImagePlugin - DEBUG - STREAM b'tEXt' 41 57
2025-03-13 15:45:18,913 - PIL.PngImagePlugin - DEBUG - STREAM b'pHYs' 110 9
2025-03-13 15:45:18,914 - PIL.PngImagePlugin - DEBUG - STREAM b'IDAT' 131 65536
2025-03-13 15:45:19,545 - fpdf.fpdf - DEBUG - Page break on page 200 at y=274 for element of height 10 > 282
2025-03-13 15:45:19,903 - PIL.PngImagePlugin - DEBUG - STREAM b'IHDR' 16 13
2025-03-13 15:45:19,903 - PIL.PngImagePlugin - DEBUG - STREAM b'tEXt' 41 57
2025-03-13 15:45:19,904 - PIL.PngImagePlugin - DEBUG - STREAM b'pHYs' 110 9
2025-03-13 15:45:19,904 - PIL.PngImagePlugin - DEBUG - STREAM b'IDAT' 131 65536
2025-03-13 15:45:20,548 - fpdf.fpdf - DEBUG - Page break on page 202 at y=274 for element of height 10 > 282
2025-03-13 15:45:20,953 - PIL.PngImagePlugin - DEBUG - STREAM b'IHDR' 16 13
2025-03-13 15:45:20,953 - PIL.PngImagePlugin - DEBUG - STREAM b'tEXt' 41 57
2025-03-13 15:45:20,954 - PIL.PngImagePlugin - DEBUG - STREAM b'pHYs' 110 9
2025-03-13 15:45:20,954 - PIL.PngImagePlugin - DEBUG - STREAM b'IDAT' 131 65536
2025-03-13 15:45:21,613 - fpdf.fpdf - DEBUG - Page break on page 204 at y=274 for element of height 10 > 282
2025-03-13 15:45:22,024 - PIL.PngImagePlugin - DEBUG - STREAM b'IHDR' 16 13
2025-03-13 15:45:22,024 - PIL.PngImagePlugin - DEBUG - STREAM b'tEXt' 41 57
2025-03-13 15:45:22,024 - PIL.PngImagePlugin - DEBUG - STREAM b'pHYs' 110 9
2025-03-13 15:45:22,025 - PIL.PngImagePlugin - DEBUG - STREAM b'IDAT' 131 65536
2025-03-13 15:45:22,711 - fpdf.fpdf - DEBUG - Page break on page 206 at y=274 for element of height 10 > 282
2025-03-13 15:45:23,107 - PIL.PngImagePlugin - DEBUG - STREAM b'IHDR' 16 13
2025-03-13 15:45:23,107 - PIL.PngImagePlugin - DEBUG - STREAM b'tEXt' 41 57
2025-03-13 15:45:23,107 - PIL.PngImagePlugin - DEBUG - STREAM b'pHYs' 110 9
2025-03-13 15:45:23,108 - PIL.PngImagePlugin - DEBUG - STREAM b'IDAT' 131 65536
2025-03-13 15:45:23,777 - fpdf.fpdf - DEBUG - Page break on page 208 at y=274 for element of height 10 > 282
2025-03-13 15:45:24,170 - PIL.PngImagePlugin - DEBUG - STREAM b'IHDR' 16 13
2025-03-13 15:45:24,172 - PIL.PngImagePlugin - DEBUG - STREAM b'tEXt' 41 57
2025-03-13 15:45:24,173 - PIL.PngImagePlugin - DEBUG - STREAM b'pHYs' 110 9
2025-03-13 15:45:24,173 - PIL.PngImagePlugin - DEBUG - STREAM b'IDAT' 131 65536
2025-03-13 15:45:24,790 - fpdf.fpdf - DEBUG - Page break on page 210 at y=274 for element of height 10 > 282
2025-03-13 15:45:24,951 - pymongo.topology - DEBUG - {"topologyId": {"$oid": "67d2b6901e52438c18c36b9c"}, "driverConnectionId": 1, "serverConnectionId": 13155, "serverHost": "3.144.134.141", "serverPort": 27017, "awaited": true, "durationMS": 9843.999999999141, "reply": "{\"isWritablePrimary\": true, \"topologyVersion\": {\"processId\": {\"$oid\": \"67b7e5814f77c1a87c56d054\"}}, \"maxBsonObjectSize\": 16777216, \"maxMessageSizeBytes\": 48000000, \"maxWriteBatchSize\": 100000, \"localTime\": {\"$date\": \"2025-03-13T10:45:24.911Z\"}, \"logicalSessionTimeoutMinutes\": 30, \"connectionId\": 13155, \"maxWireVersion\": 25, \"ok\": 1.0}", "message": "Server heartbeat succeeded"}
2025-03-13 15:45:24,952 - pymongo.topology - DEBUG - {"topologyId": {"$oid": "67d2b6901e52438c18c36b9c"}, "driverConnectionId": 1, "serverConnectionId": 13155, "serverHost": "3.144.134.141", "serverPort": 27017, "awaited": true, "message": "Server heartbeat started"}
2025-03-13 15:45:25,161 - PIL.PngImagePlugin - DEBUG - STREAM b'IHDR' 16 13
2025-03-13 15:45:25,161 - PIL.PngImagePlugin - DEBUG - STREAM b'tEXt' 41 57
2025-03-13 15:45:25,161 - PIL.PngImagePlugin - DEBUG - STREAM b'pHYs' 110 9
2025-03-13 15:45:25,162 - PIL.PngImagePlugin - DEBUG - STREAM b'IDAT' 131 65536
2025-03-13 15:45:25,802 - fpdf.fpdf - DEBUG - Page break on page 212 at y=274 for element of height 10 > 282
2025-03-13 15:45:26,217 - PIL.PngImagePlugin - DEBUG - STREAM b'IHDR' 16 13
2025-03-13 15:45:26,217 - PIL.PngImagePlugin - DEBUG - STREAM b'tEXt' 41 57
2025-03-13 15:45:26,217 - PIL.PngImagePlugin - DEBUG - STREAM b'pHYs' 110 9
2025-03-13 15:45:26,218 - PIL.PngImagePlugin - DEBUG - STREAM b'IDAT' 131 65536
2025-03-13 15:45:26,850 - fpdf.fpdf - DEBUG - Page break on page 214 at y=274 for element of height 10 > 282
2025-03-13 15:45:27,237 - PIL.PngImagePlugin - DEBUG - STREAM b'IHDR' 16 13
2025-03-13 15:45:27,237 - PIL.PngImagePlugin - DEBUG - STREAM b'tEXt' 41 57
2025-03-13 15:45:27,237 - PIL.PngImagePlugin - DEBUG - STREAM b'pHYs' 110 9
2025-03-13 15:45:27,237 - PIL.PngImagePlugin - DEBUG - STREAM b'IDAT' 131 65536
2025-03-13 15:45:27,898 - fpdf.fpdf - DEBUG - Page break on page 216 at y=274 for element of height 10 > 282
2025-03-13 15:45:28,316 - PIL.PngImagePlugin - DEBUG - STREAM b'IHDR' 16 13
2025-03-13 15:45:28,317 - PIL.PngImagePlugin - DEBUG - STREAM b'tEXt' 41 57
2025-03-13 15:45:28,317 - PIL.PngImagePlugin - DEBUG - STREAM b'pHYs' 110 9
2025-03-13 15:45:28,317 - PIL.PngImagePlugin - DEBUG - STREAM b'IDAT' 131 65536
2025-03-13 15:45:28,947 - fpdf.fpdf - DEBUG - Page break on page 218 at y=274 for element of height 10 > 282
2025-03-13 15:45:29,331 - PIL.PngImagePlugin - DEBUG - STREAM b'IHDR' 16 13
2025-03-13 15:45:29,332 - PIL.PngImagePlugin - DEBUG - STREAM b'tEXt' 41 57
2025-03-13 15:45:29,332 - PIL.PngImagePlugin - DEBUG - STREAM b'pHYs' 110 9
2025-03-13 15:45:29,333 - PIL.PngImagePlugin - DEBUG - STREAM b'IDAT' 131 65536
2025-03-13 15:45:29,928 - fpdf.fpdf - DEBUG - Page break on page 220 at y=274 for element of height 10 > 282
2025-03-13 15:45:30,307 - PIL.PngImagePlugin - DEBUG - STREAM b'IHDR' 16 13
2025-03-13 15:45:30,307 - PIL.PngImagePlugin - DEBUG - STREAM b'tEXt' 41 57
2025-03-13 15:45:30,307 - PIL.PngImagePlugin - DEBUG - STREAM b'pHYs' 110 9
2025-03-13 15:45:30,308 - PIL.PngImagePlugin - DEBUG - STREAM b'IDAT' 131 65387
2025-03-13 15:45:30,906 - fpdf.fpdf - DEBUG - Page break on page 222 at y=274 for element of height 10 > 282
2025-03-13 15:45:31,288 - PIL.PngImagePlugin - DEBUG - STREAM b'IHDR' 16 13
2025-03-13 15:45:31,288 - PIL.PngImagePlugin - DEBUG - STREAM b'tEXt' 41 57
2025-03-13 15:45:31,289 - PIL.PngImagePlugin - DEBUG - STREAM b'pHYs' 110 9
2025-03-13 15:45:31,289 - PIL.PngImagePlugin - DEBUG - STREAM b'IDAT' 131 65536
2025-03-13 15:45:31,883 - fpdf.fpdf - DEBUG - Page break on page 224 at y=274 for element of height 10 > 282
2025-03-13 15:45:32,259 - PIL.PngImagePlugin - DEBUG - STREAM b'IHDR' 16 13
2025-03-13 15:45:32,260 - PIL.PngImagePlugin - DEBUG - STREAM b'tEXt' 41 57
2025-03-13 15:45:32,260 - PIL.PngImagePlugin - DEBUG - STREAM b'pHYs' 110 9
2025-03-13 15:45:32,260 - PIL.PngImagePlugin - DEBUG - STREAM b'IDAT' 131 65536
2025-03-13 15:45:32,904 - fpdf.fpdf - DEBUG - Page break on page 226 at y=274 for element of height 10 > 282
2025-03-13 15:45:33,331 - PIL.PngImagePlugin - DEBUG - STREAM b'IHDR' 16 13
2025-03-13 15:45:33,331 - PIL.PngImagePlugin - DEBUG - STREAM b'tEXt' 41 57
2025-03-13 15:45:33,331 - PIL.PngImagePlugin - DEBUG - STREAM b'pHYs' 110 9
2025-03-13 15:45:33,332 - PIL.PngImagePlugin - DEBUG - STREAM b'IDAT' 131 65536
2025-03-13 15:45:33,978 - fpdf.fpdf - DEBUG - Page break on page 228 at y=274 for element of height 10 > 282
2025-03-13 15:45:34,362 - PIL.PngImagePlugin - DEBUG - STREAM b'IHDR' 16 13
2025-03-13 15:45:34,363 - PIL.PngImagePlugin - DEBUG - STREAM b'tEXt' 41 57
2025-03-13 15:45:34,363 - PIL.PngImagePlugin - DEBUG - STREAM b'pHYs' 110 9
2025-03-13 15:45:34,363 - PIL.PngImagePlugin - DEBUG - STREAM b'IDAT' 131 65536
2025-03-13 15:45:35,039 - pymongo.topology - DEBUG - {"topologyId": {"$oid": "67d2b6901e52438c18c36b9c"}, "driverConnectionId": 1, "serverConnectionId": 13155, "serverHost": "3.144.134.141", "serverPort": 27017, "awaited": true, "durationMS": 10094.00000000096, "reply": "{\"isWritablePrimary\": true, \"topologyVersion\": {\"processId\": {\"$oid\": \"67b7e5814f77c1a87c56d054\"}}, \"maxBsonObjectSize\": 16777216, \"maxMessageSizeBytes\": 48000000, \"maxWriteBatchSize\": 100000, \"localTime\": {\"$date\": \"2025-03-13T10:45:34.921Z\"}, \"logicalSessionTimeoutMinutes\": 30, \"connectionId\": 13155, \"maxWireVersion\": 25, \"ok\": 1.0}", "message": "Server heartbeat succeeded"}
2025-03-13 15:45:35,071 - pymongo.topology - DEBUG - {"topologyId": {"$oid": "67d2b6901e52438c18c36b9c"}, "driverConnectionId": 1, "serverConnectionId": 13155, "serverHost": "3.144.134.141", "serverPort": 27017, "awaited": true, "message": "Server heartbeat started"}
2025-03-13 15:45:35,072 - fpdf.fpdf - DEBUG - Page break on page 230 at y=274 for element of height 10 > 282
2025-03-13 15:45:35,521 - PIL.PngImagePlugin - DEBUG - STREAM b'IHDR' 16 13
2025-03-13 15:45:35,521 - PIL.PngImagePlugin - DEBUG - STREAM b'tEXt' 41 57
2025-03-13 15:45:35,521 - PIL.PngImagePlugin - DEBUG - STREAM b'pHYs' 110 9
2025-03-13 15:45:35,521 - PIL.PngImagePlugin - DEBUG - STREAM b'IDAT' 131 65536
2025-03-13 15:45:36,245 - fpdf.fpdf - DEBUG - Page break on page 232 at y=274 for element of height 10 > 282
2025-03-13 15:45:36,656 - fpdf.fpdf - DEBUG - Page break on page 234 at y=274 for element of height 10 > 282
2025-03-13 15:45:37,025 - PIL.PngImagePlugin - DEBUG - STREAM b'IHDR' 16 13
2025-03-13 15:45:37,025 - PIL.PngImagePlugin - DEBUG - STREAM b'tEXt' 41 57
2025-03-13 15:45:37,025 - PIL.PngImagePlugin - DEBUG - STREAM b'pHYs' 110 9
2025-03-13 15:45:37,025 - PIL.PngImagePlugin - DEBUG - STREAM b'IDAT' 131 65536
2025-03-13 15:45:37,641 - fpdf.fpdf - DEBUG - Page break on page 236 at y=274 for element of height 10 > 282
2025-03-13 15:45:38,014 - PIL.PngImagePlugin - DEBUG - STREAM b'IHDR' 16 13
2025-03-13 15:45:38,015 - PIL.PngImagePlugin - DEBUG - STREAM b'tEXt' 41 57
2025-03-13 15:45:38,015 - PIL.PngImagePlugin - DEBUG - STREAM b'pHYs' 110 9
2025-03-13 15:45:38,015 - PIL.PngImagePlugin - DEBUG - STREAM b'IDAT' 131 65536
2025-03-13 15:45:38,662 - fpdf.fpdf - DEBUG - Page break on page 238 at y=274 for element of height 10 > 282
2025-03-13 15:45:39,048 - PIL.PngImagePlugin - DEBUG - STREAM b'IHDR' 16 13
2025-03-13 15:45:39,048 - PIL.PngImagePlugin - DEBUG - STREAM b'tEXt' 41 57
2025-03-13 15:45:39,049 - PIL.PngImagePlugin - DEBUG - STREAM b'pHYs' 110 9
2025-03-13 15:45:39,049 - PIL.PngImagePlugin - DEBUG - STREAM b'IDAT' 131 65536
2025-03-13 15:45:39,666 - fpdf.fpdf - DEBUG - Page break on page 240 at y=274 for element of height 10 > 282
2025-03-13 15:45:40,059 - PIL.PngImagePlugin - DEBUG - STREAM b'IHDR' 16 13
2025-03-13 15:45:40,060 - PIL.PngImagePlugin - DEBUG - STREAM b'tEXt' 41 57
2025-03-13 15:45:40,060 - PIL.PngImagePlugin - DEBUG - STREAM b'pHYs' 110 9
2025-03-13 15:45:40,060 - PIL.PngImagePlugin - DEBUG - STREAM b'IDAT' 131 65536
2025-03-13 15:45:40,669 - fpdf.fpdf - DEBUG - Page break on page 242 at y=274 for element of height 10 > 282
2025-03-13 15:45:41,035 - PIL.PngImagePlugin - DEBUG - STREAM b'IHDR' 16 13
2025-03-13 15:45:41,035 - PIL.PngImagePlugin - DEBUG - STREAM b'tEXt' 41 57
2025-03-13 15:45:41,035 - PIL.PngImagePlugin - DEBUG - STREAM b'pHYs' 110 9
2025-03-13 15:45:41,036 - PIL.PngImagePlugin - DEBUG - STREAM b'IDAT' 131 65536
2025-03-13 15:45:41,695 - fpdf.fpdf - DEBUG - Page break on page 244 at y=274 for element of height 10 > 282
2025-03-13 15:45:42,080 - PIL.PngImagePlugin - DEBUG - STREAM b'IHDR' 16 13
2025-03-13 15:45:42,081 - PIL.PngImagePlugin - DEBUG - STREAM b'tEXt' 41 57
2025-03-13 15:45:42,081 - PIL.PngImagePlugin - DEBUG - STREAM b'pHYs' 110 9
2025-03-13 15:45:42,081 - PIL.PngImagePlugin - DEBUG - STREAM b'IDAT' 131 65536
2025-03-13 15:45:42,704 - fpdf.fpdf - DEBUG - Page break on page 246 at y=274 for element of height 10 > 282
2025-03-13 15:45:43,077 - PIL.PngImagePlugin - DEBUG - STREAM b'IHDR' 16 13
2025-03-13 15:45:43,077 - PIL.PngImagePlugin - DEBUG - STREAM b'tEXt' 41 57
2025-03-13 15:45:43,077 - PIL.PngImagePlugin - DEBUG - STREAM b'pHYs' 110 9
2025-03-13 15:45:43,078 - PIL.PngImagePlugin - DEBUG - STREAM b'IDAT' 131 65536
2025-03-13 15:45:43,747 - fpdf.fpdf - DEBUG - Page break on page 248 at y=274 for element of height 10 > 282
2025-03-13 15:45:44,147 - PIL.PngImagePlugin - DEBUG - STREAM b'IHDR' 16 13
2025-03-13 15:45:44,147 - PIL.PngImagePlugin - DEBUG - STREAM b'tEXt' 41 57
2025-03-13 15:45:44,147 - PIL.PngImagePlugin - DEBUG - STREAM b'pHYs' 110 9
2025-03-13 15:45:44,148 - PIL.PngImagePlugin - DEBUG - STREAM b'IDAT' 131 65536
2025-03-13 15:45:44,795 - fpdf.fpdf - DEBUG - Page break on page 250 at y=274 for element of height 10 > 282
2025-03-13 15:45:44,983 - pymongo.topology - DEBUG - {"topologyId": {"$oid": "67d2b6901e52438c18c36b9c"}, "driverConnectionId": 1, "serverConnectionId": 13155, "serverHost": "3.144.134.141", "serverPort": 27017, "awaited": true, "durationMS": 9906.000000000859, "reply": "{\"isWritablePrimary\": true, \"topologyVersion\": {\"processId\": {\"$oid\": \"67b7e5814f77c1a87c56d054\"}}, \"maxBsonObjectSize\": 16777216, \"maxMessageSizeBytes\": 48000000, \"maxWriteBatchSize\": 100000, \"localTime\": {\"$date\": \"2025-03-13T10:45:44.931Z\"}, \"logicalSessionTimeoutMinutes\": 30, \"connectionId\": 13155, \"maxWireVersion\": 25, \"ok\": 1.0}", "message": "Server heartbeat succeeded"}
2025-03-13 15:45:44,984 - pymongo.topology - DEBUG - {"topologyId": {"$oid": "67d2b6901e52438c18c36b9c"}, "driverConnectionId": 1, "serverConnectionId": 13155, "serverHost": "3.144.134.141", "serverPort": 27017, "awaited": true, "message": "Server heartbeat started"}
2025-03-13 15:45:45,182 - PIL.PngImagePlugin - DEBUG - STREAM b'IHDR' 16 13
2025-03-13 15:45:45,182 - PIL.PngImagePlugin - DEBUG - STREAM b'tEXt' 41 57
2025-03-13 15:45:45,182 - PIL.PngImagePlugin - DEBUG - STREAM b'pHYs' 110 9
2025-03-13 15:45:45,182 - PIL.PngImagePlugin - DEBUG - STREAM b'IDAT' 131 65536
2025-03-13 15:45:45,851 - fpdf.fpdf - DEBUG - Page break on page 252 at y=274 for element of height 10 > 282
2025-03-13 15:45:45,870 - fontTools.subset.timer - DEBUG - Took 0.000s to load 'maxp'
2025-03-13 15:45:45,871 - fontTools.subset.timer - DEBUG - Took 0.000s to prune 'maxp'
2025-03-13 15:45:45,871 - fontTools.subset - INFO - maxp pruned
2025-03-13 15:45:45,871 - fontTools.subset.timer - DEBUG - Took 0.000s to load 'cmap'
2025-03-13 15:45:45,871 - fontTools.subset.timer - DEBUG - Took 0.000s to prune 'cmap'
2025-03-13 15:45:45,872 - fontTools.subset - INFO - cmap pruned
2025-03-13 15:45:45,881 - fontTools.subset.timer - DEBUG - Took 0.000s to load 'post'
2025-03-13 15:45:45,881 - fontTools.subset.timer - DEBUG - Took 0.000s to prune 'post'
2025-03-13 15:45:45,881 - fontTools.subset - INFO - post pruned
2025-03-13 15:45:45,885 - fontTools.subset - INFO - GDEF dropped
2025-03-13 15:45:45,885 - fontTools.subset - INFO - GPOS dropped
2025-03-13 15:45:45,885 - fontTools.subset - INFO - GSUB dropped
2025-03-13 15:45:45,886 - fontTools.ttLib.ttFont - DEBUG - Reading 'glyf' table from disk
2025-03-13 15:45:45,886 - fontTools.ttLib.ttFont - DEBUG - Decompiling 'glyf' table
2025-03-13 15:45:45,886 - fontTools.ttLib.ttFont - DEBUG - Reading 'loca' table from disk
2025-03-13 15:45:45,887 - fontTools.ttLib.ttFont - DEBUG - Decompiling 'loca' table
2025-03-13 15:45:45,890 - fontTools.subset.timer - DEBUG - Took 0.004s to load 'glyf'
2025-03-13 15:45:45,890 - fontTools.subset.timer - DEBUG - Took 0.000s to prune 'glyf'
2025-03-13 15:45:45,890 - fontTools.subset - INFO - glyf pruned
2025-03-13 15:45:45,890 - fontTools.subset.timer - DEBUG - Took 0.000s to close glyph list over 'cmap'
2025-03-13 15:45:45,891 - fontTools.subset - INFO - Added gid0 to subset
2025-03-13 15:45:45,891 - fontTools.subset - INFO - Added first four glyphs to subset
2025-03-13 15:45:45,892 - fontTools.subset - INFO - Closing glyph list over 'glyf': 47 glyphs before
2025-03-13 15:45:45,892 - fontTools.subset - INFO - Glyph names: ['.notdef', 'G', 'H', 'I', 'P', 'S', 'T', 'V', 'a', 'b', 'bar', 'braceleft', 'braceright', 'c', 'colon', 'd', 'e', 'eight', 'f', 'five', 'four', 'g', 'h', 'hyphen', 'i', 'l', 'n', 'nine', 'o', 'one', 'p', 'period', 'r', 's', 'seven', 'six', 'space', 't', 'three', 'two', 'uni0000', 'uni0002', 'uni000D', 'v', 'y', 'z', 'zero']
2025-03-13 15:45:45,893 - fontTools.subset - INFO - Glyph IDs:   [0, 1, 2, 3, 4, 17, 18, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 43, 44, 45, 52, 55, 56, 58, 69, 70, 71, 72, 73, 74, 75, 76, 77, 80, 82, 83, 84, 86, 87, 88, 90, 93, 94, 95, 96, 97]
2025-03-13 15:45:45,894 - fontTools.subset - INFO - Closed glyph list over 'glyf': 47 glyphs after
2025-03-13 15:45:45,894 - fontTools.subset - INFO - Glyph names: ['.notdef', 'G', 'H', 'I', 'P', 'S', 'T', 'V', 'a', 'b', 'bar', 'braceleft', 'braceright', 'c', 'colon', 'd', 'e', 'eight', 'f', 'five', 'four', 'g', 'h', 'hyphen', 'i', 'l', 'n', 'nine', 'o', 'one', 'p', 'period', 'r', 's', 'seven', 'six', 'space', 't', 'three', 'two', 'uni0000', 'uni0002', 'uni000D', 'v', 'y', 'z', 'zero']
2025-03-13 15:45:45,895 - fontTools.subset - INFO - Glyph IDs:   [0, 1, 2, 3, 4, 17, 18, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 43, 44, 45, 52, 55, 56, 58, 69, 70, 71, 72, 73, 74, 75, 76, 77, 80, 82, 83, 84, 86, 87, 88, 90, 93, 94, 95, 96, 97]
2025-03-13 15:45:45,895 - fontTools.subset.timer - DEBUG - Took 0.003s to close glyph list over 'glyf'
2025-03-13 15:45:45,895 - fontTools.subset - INFO - Retaining 47 glyphs
2025-03-13 15:45:45,896 - fontTools.subset - INFO - head subsetting not needed
2025-03-13 15:45:45,896 - fontTools.subset - INFO - hhea subsetting not needed
2025-03-13 15:45:45,897 - fontTools.subset - INFO - maxp subsetting not needed
2025-03-13 15:45:45,897 - fontTools.subset - INFO - OS/2 subsetting not needed
2025-03-13 15:45:45,897 - fontTools.subset.timer - DEBUG - Took 0.000s to subset 'hmtx'
2025-03-13 15:45:45,897 - fontTools.subset - INFO - hmtx subsetted
2025-03-13 15:45:45,898 - fontTools.subset.timer - DEBUG - Took 0.000s to subset 'cmap'
2025-03-13 15:45:45,899 - fontTools.subset - INFO - cmap subsetted
2025-03-13 15:45:45,899 - fontTools.subset - INFO - fpgm subsetting not needed
2025-03-13 15:45:45,899 - fontTools.subset - INFO - prep subsetting not needed
2025-03-13 15:45:45,900 - fontTools.subset - INFO - cvt  subsetting not needed
2025-03-13 15:45:45,900 - fontTools.subset - INFO - loca subsetting not needed
2025-03-13 15:45:45,900 - fontTools.subset.timer - DEBUG - Took 0.000s to subset 'post'
2025-03-13 15:45:45,901 - fontTools.subset - INFO - post subsetted
2025-03-13 15:45:45,901 - fontTools.subset - INFO - gasp subsetting not needed
2025-03-13 15:45:45,901 - fontTools.subset - INFO - STAT subsetting not needed
2025-03-13 15:45:45,901 - fontTools.subset - INFO - name subsetting not needed
2025-03-13 15:45:45,902 - fontTools.subset.timer - DEBUG - Took 0.001s to subset 'glyf'
2025-03-13 15:45:45,903 - fontTools.subset - INFO - glyf subsetted
2025-03-13 15:45:45,903 - fontTools.subset.timer - DEBUG - Took 0.000s to subset GlyphOrder
2025-03-13 15:45:45,903 - fontTools.subset.timer - DEBUG - Took 0.000s to prune 'head'
2025-03-13 15:45:45,904 - fontTools.subset - INFO - head pruned
2025-03-13 15:45:45,904 - fontTools.subset - INFO - OS/2 Unicode ranges pruned: [0]
2025-03-13 15:45:45,905 - fontTools.subset - INFO - OS/2 CodePage ranges pruned: [0]
2025-03-13 15:45:45,907 - fontTools.subset.timer - DEBUG - Took 0.001s to prune 'glyf'
2025-03-13 15:45:45,907 - fontTools.subset - INFO - glyf pruned
2025-03-13 15:45:45,908 - fontTools.ttLib.ttFont - DEBUG - Reading 'fpgm' table from disk
2025-03-13 15:45:45,908 - fontTools.ttLib.ttFont - DEBUG - Decompiling 'fpgm' table
2025-03-13 15:45:45,908 - fontTools.ttLib.ttFont - DEBUG - Reading 'prep' table from disk
2025-03-13 15:45:45,909 - fontTools.ttLib.ttFont - DEBUG - Decompiling 'prep' table
2025-03-13 15:45:45,909 - fontTools.ttLib.ttFont - DEBUG - Reading 'cvt ' table from disk
2025-03-13 15:45:45,909 - fontTools.ttLib.ttFont - DEBUG - Decompiling 'cvt ' table
2025-03-13 15:45:45,910 - fontTools.ttLib.ttFont - DEBUG - Reading 'gasp' table from disk
2025-03-13 15:45:45,910 - fontTools.ttLib.ttFont - DEBUG - Decompiling 'gasp' table
2025-03-13 15:45:45,910 - fontTools.ttLib.ttFont - DEBUG - Reading 'STAT' table from disk
2025-03-13 15:45:45,911 - fontTools.ttLib.ttFont - DEBUG - Decompiling 'STAT' table
2025-03-13 15:45:45,912 - fontTools.subset.timer - DEBUG - Took 0.004s to prune 'name'
2025-03-13 15:45:45,912 - fontTools.subset - INFO - name pruned
2025-03-13 15:45:45,912 - fontTools.ttLib.ttFont - DEBUG - Compiling 'glyf' table
2025-03-13 15:45:45,919 - fontTools.ttLib.ttFont - DEBUG - Writing 'glyf' table to disk
2025-03-13 15:45:45,919 - fontTools.ttLib.ttFont - DEBUG - Compiling 'maxp' table
2025-03-13 15:45:45,920 - fontTools.ttLib.ttFont - DEBUG - Writing 'maxp' table to disk
2025-03-13 15:45:45,920 - fontTools.ttLib.ttFont - DEBUG - Compiling 'loca' table
2025-03-13 15:45:45,921 - fontTools.ttLib.ttFont - DEBUG - Writing 'loca' table to disk
2025-03-13 15:45:45,921 - fontTools.ttLib.ttFont - DEBUG - Compiling 'head' table
2025-03-13 15:45:45,921 - fontTools.ttLib.ttFont - DEBUG - Writing 'head' table to disk
2025-03-13 15:45:45,921 - fontTools.ttLib.ttFont - DEBUG - Compiling 'hmtx' table
2025-03-13 15:45:45,922 - fontTools.ttLib.ttFont - DEBUG - Writing 'hmtx' table to disk
2025-03-13 15:45:45,922 - fontTools.ttLib.ttFont - DEBUG - Compiling 'hhea' table
2025-03-13 15:45:45,923 - fontTools.ttLib.ttFont - DEBUG - Writing 'hhea' table to disk
2025-03-13 15:45:45,923 - fontTools.ttLib.ttFont - DEBUG - Compiling 'OS/2' table
2025-03-13 15:45:45,923 - fontTools.ttLib.ttFont - DEBUG - Writing 'OS/2' table to disk
2025-03-13 15:45:45,923 - fontTools.ttLib.ttFont - DEBUG - Compiling 'cmap' table
2025-03-13 15:45:45,925 - fontTools.ttLib.ttFont - DEBUG - Writing 'cmap' table to disk
2025-03-13 15:45:45,925 - fontTools.ttLib.ttFont - DEBUG - Compiling 'fpgm' table
2025-03-13 15:45:45,926 - fontTools.ttLib.ttFont - DEBUG - Writing 'fpgm' table to disk
2025-03-13 15:45:45,926 - fontTools.ttLib.ttFont - DEBUG - Compiling 'prep' table
2025-03-13 15:45:45,926 - fontTools.ttLib.ttFont - DEBUG - Writing 'prep' table to disk
2025-03-13 15:45:45,926 - fontTools.ttLib.ttFont - DEBUG - Compiling 'cvt ' table
2025-03-13 15:45:45,926 - fontTools.ttLib.ttFont - DEBUG - Writing 'cvt ' table to disk
2025-03-13 15:45:45,927 - fontTools.ttLib.ttFont - DEBUG - Compiling 'name' table
2025-03-13 15:45:45,927 - fontTools.ttLib.ttFont - DEBUG - Writing 'name' table to disk
2025-03-13 15:45:45,927 - fontTools.ttLib.ttFont - DEBUG - Compiling 'post' table
2025-03-13 15:45:45,928 - fontTools.ttLib.ttFont - DEBUG - Writing 'post' table to disk
2025-03-13 15:45:45,928 - fontTools.ttLib.ttFont - DEBUG - Compiling 'gasp' table
2025-03-13 15:45:45,928 - fontTools.ttLib.ttFont - DEBUG - Writing 'gasp' table to disk
2025-03-13 15:45:45,928 - fontTools.ttLib.ttFont - DEBUG - Compiling 'STAT' table
2025-03-13 15:45:45,929 - fontTools.ttLib.ttFont - DEBUG - Writing 'STAT' table to disk
2025-03-13 15:45:45,932 - fontTools.subset.timer - DEBUG - Took 0.000s to load 'maxp'
2025-03-13 15:45:45,933 - fontTools.subset.timer - DEBUG - Took 0.000s to prune 'maxp'
2025-03-13 15:45:45,933 - fontTools.subset - INFO - maxp pruned
2025-03-13 15:45:45,933 - fontTools.subset.timer - DEBUG - Took 0.000s to load 'cmap'
2025-03-13 15:45:45,933 - fontTools.subset.timer - DEBUG - Took 0.000s to prune 'cmap'
2025-03-13 15:45:45,934 - fontTools.subset - INFO - cmap pruned
2025-03-13 15:45:45,934 - fontTools.subset.timer - DEBUG - Took 0.000s to load 'post'
2025-03-13 15:45:45,934 - fontTools.subset.timer - DEBUG - Took 0.000s to prune 'post'
2025-03-13 15:45:45,934 - fontTools.subset - INFO - post pruned
2025-03-13 15:45:45,935 - fontTools.subset - INFO - GDEF dropped
2025-03-13 15:45:45,935 - fontTools.subset - INFO - GPOS dropped
2025-03-13 15:45:45,935 - fontTools.subset - INFO - GSUB dropped
2025-03-13 15:45:45,935 - fontTools.ttLib.ttFont - DEBUG - Reading 'glyf' table from disk
2025-03-13 15:45:45,936 - fontTools.ttLib.ttFont - DEBUG - Decompiling 'glyf' table
2025-03-13 15:45:45,936 - fontTools.ttLib.ttFont - DEBUG - Reading 'loca' table from disk
2025-03-13 15:45:45,936 - fontTools.ttLib.ttFont - DEBUG - Decompiling 'loca' table
2025-03-13 15:45:45,939 - fontTools.subset.timer - DEBUG - Took 0.003s to load 'glyf'
2025-03-13 15:45:45,939 - fontTools.subset.timer - DEBUG - Took 0.000s to prune 'glyf'
2025-03-13 15:45:45,940 - fontTools.subset - INFO - glyf pruned
2025-03-13 15:45:45,940 - fontTools.subset.timer - DEBUG - Took 0.000s to close glyph list over 'cmap'
2025-03-13 15:45:45,940 - fontTools.subset - INFO - Added gid0 to subset
2025-03-13 15:45:45,941 - fontTools.subset - INFO - Added first four glyphs to subset
2025-03-13 15:45:45,941 - fontTools.subset - INFO - Closing glyph list over 'glyf': 66 glyphs before
2025-03-13 15:45:45,941 - fontTools.subset - INFO - Glyph names: ['.notdef', 'A', 'D', 'E', 'G', 'H', 'I', 'J', 'K', 'L', 'M', 'N', 'O', 'P', 'R', 'S', 'T', 'U', 'V', 'W', 'Z', 'a', 'b', 'braceleft', 'braceright', 'c', 'colon', 'd', 'e', 'eight', 'f', 'five', 'four', 'g', 'h', 'hyphen', 'i', 'j', 'k', 'l', 'm', 'n', 'nine', 'numbersign', 'o', 'one', 'p', 'q', 'r', 's', 'seven', 'six', 'space', 't', 'three', 'two', 'u', 'underscore', 'uni0000', 'uni0002', 'uni000D', 'v', 'w', 'x', 'y', 'zero']
2025-03-13 15:45:45,941 - fontTools.subset - INFO - Glyph IDs:   [0, 1, 2, 3, 4, 7, 17, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 37, 40, 41, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 54, 55, 56, 57, 58, 59, 62, 67, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 95, 97]
2025-03-13 15:45:45,943 - fontTools.subset - INFO - Closed glyph list over 'glyf': 67 glyphs after
2025-03-13 15:45:45,943 - fontTools.subset - INFO - Glyph names: ['.notdef', 'A', 'D', 'E', 'G', 'H', 'I', 'J', 'K', 'L', 'M', 'N', 'O', 'P', 'R', 'S', 'T', 'U', 'V', 'W', 'Z', 'a', 'b', 'braceleft', 'braceright', 'c', 'colon', 'd', 'e', 'eight', 'f', 'five', 'four', 'g', 'h', 'hyphen', 'i', 'j', 'k', 'l', 'm', 'n', 'nine', 'numbersign', 'o', 'one', 'p', 'period', 'q', 'r', 's', 'seven', 'six', 'space', 't', 'three', 'two', 'u', 'underscore', 'uni0000', 'uni0002', 'uni000D', 'v', 'w', 'x', 'y', 'zero']
2025-03-13 15:45:45,944 - fontTools.subset - INFO - Glyph IDs:   [0, 1, 2, 3, 4, 7, 17, 18, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 37, 40, 41, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 54, 55, 56, 57, 58, 59, 62, 67, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 95, 97]
2025-03-13 15:45:45,944 - fontTools.subset.timer - DEBUG - Took 0.003s to close glyph list over 'glyf'
2025-03-13 15:45:45,944 - fontTools.subset - INFO - Retaining 67 glyphs
2025-03-13 15:45:45,945 - fontTools.subset - INFO - head subsetting not needed
2025-03-13 15:45:45,945 - fontTools.subset - INFO - hhea subsetting not needed
2025-03-13 15:45:45,945 - fontTools.subset - INFO - maxp subsetting not needed
2025-03-13 15:45:45,946 - fontTools.subset - INFO - OS/2 subsetting not needed
2025-03-13 15:45:45,946 - fontTools.subset.timer - DEBUG - Took 0.000s to subset 'hmtx'
2025-03-13 15:45:45,946 - fontTools.subset - INFO - hmtx subsetted
2025-03-13 15:45:45,947 - fontTools.subset.timer - DEBUG - Took 0.000s to subset 'cmap'
2025-03-13 15:45:45,947 - fontTools.subset - INFO - cmap subsetted
2025-03-13 15:45:45,947 - fontTools.subset - INFO - fpgm subsetting not needed
2025-03-13 15:45:45,948 - fontTools.subset - INFO - prep subsetting not needed
2025-03-13 15:45:45,948 - fontTools.subset - INFO - cvt  subsetting not needed
2025-03-13 15:45:45,948 - fontTools.subset - INFO - loca subsetting not needed
2025-03-13 15:45:45,948 - fontTools.subset.timer - DEBUG - Took 0.000s to subset 'post'
2025-03-13 15:45:45,949 - fontTools.subset - INFO - post subsetted
2025-03-13 15:45:45,949 - fontTools.subset - INFO - gasp subsetting not needed
2025-03-13 15:45:45,949 - fontTools.subset - INFO - STAT subsetting not needed
2025-03-13 15:45:45,949 - fontTools.subset - INFO - name subsetting not needed
2025-03-13 15:45:45,951 - fontTools.subset.timer - DEBUG - Took 0.001s to subset 'glyf'
2025-03-13 15:45:45,951 - fontTools.subset - INFO - glyf subsetted
2025-03-13 15:45:45,952 - fontTools.subset.timer - DEBUG - Took 0.000s to subset GlyphOrder
2025-03-13 15:45:45,953 - fontTools.subset.timer - DEBUG - Took 0.000s to prune 'head'
2025-03-13 15:45:45,954 - fontTools.subset - INFO - head pruned
2025-03-13 15:45:45,955 - fontTools.subset - INFO - OS/2 Unicode ranges pruned: [0]
2025-03-13 15:45:45,956 - fontTools.subset - INFO - OS/2 CodePage ranges pruned: [0]
2025-03-13 15:45:45,957 - fontTools.subset.timer - DEBUG - Took 0.000s to prune 'glyf'
2025-03-13 15:45:45,957 - fontTools.subset - INFO - glyf pruned
2025-03-13 15:45:45,958 - fontTools.ttLib.ttFont - DEBUG - Reading 'fpgm' table from disk
2025-03-13 15:45:45,958 - fontTools.ttLib.ttFont - DEBUG - Decompiling 'fpgm' table
2025-03-13 15:45:45,958 - fontTools.ttLib.ttFont - DEBUG - Reading 'prep' table from disk
2025-03-13 15:45:45,959 - fontTools.ttLib.ttFont - DEBUG - Decompiling 'prep' table
2025-03-13 15:45:45,959 - fontTools.ttLib.ttFont - DEBUG - Reading 'cvt ' table from disk
2025-03-13 15:45:45,959 - fontTools.ttLib.ttFont - DEBUG - Decompiling 'cvt ' table
2025-03-13 15:45:45,960 - fontTools.ttLib.ttFont - DEBUG - Reading 'gasp' table from disk
2025-03-13 15:45:45,960 - fontTools.ttLib.ttFont - DEBUG - Decompiling 'gasp' table
2025-03-13 15:45:45,960 - fontTools.ttLib.ttFont - DEBUG - Reading 'STAT' table from disk
2025-03-13 15:45:45,960 - fontTools.ttLib.ttFont - DEBUG - Decompiling 'STAT' table
2025-03-13 15:45:45,961 - fontTools.subset.timer - DEBUG - Took 0.004s to prune 'name'
2025-03-13 15:45:45,961 - fontTools.subset - INFO - name pruned
2025-03-13 15:45:45,962 - fontTools.ttLib.ttFont - DEBUG - Compiling 'glyf' table
2025-03-13 15:45:45,977 - fontTools.ttLib.ttFont - DEBUG - Writing 'glyf' table to disk
2025-03-13 15:45:45,978 - fontTools.ttLib.ttFont - DEBUG - Compiling 'maxp' table
2025-03-13 15:45:45,979 - fontTools.ttLib.ttFont - DEBUG - Writing 'maxp' table to disk
2025-03-13 15:45:45,979 - fontTools.ttLib.ttFont - DEBUG - Compiling 'loca' table
2025-03-13 15:45:45,979 - fontTools.ttLib.ttFont - DEBUG - Writing 'loca' table to disk
2025-03-13 15:45:45,980 - fontTools.ttLib.ttFont - DEBUG - Compiling 'head' table
2025-03-13 15:45:45,980 - fontTools.ttLib.ttFont - DEBUG - Writing 'head' table to disk
2025-03-13 15:45:45,981 - fontTools.ttLib.ttFont - DEBUG - Compiling 'hmtx' table
2025-03-13 15:45:45,982 - fontTools.ttLib.ttFont - DEBUG - Writing 'hmtx' table to disk
2025-03-13 15:45:45,982 - fontTools.ttLib.ttFont - DEBUG - Compiling 'hhea' table
2025-03-13 15:45:45,982 - fontTools.ttLib.ttFont - DEBUG - Writing 'hhea' table to disk
2025-03-13 15:45:45,983 - fontTools.ttLib.ttFont - DEBUG - Compiling 'OS/2' table
2025-03-13 15:45:45,983 - fontTools.ttLib.ttFont - DEBUG - Writing 'OS/2' table to disk
2025-03-13 15:45:45,983 - fontTools.ttLib.ttFont - DEBUG - Compiling 'cmap' table
2025-03-13 15:45:45,984 - fontTools.ttLib.ttFont - DEBUG - Writing 'cmap' table to disk
2025-03-13 15:45:45,984 - fontTools.ttLib.ttFont - DEBUG - Compiling 'fpgm' table
2025-03-13 15:45:45,985 - fontTools.ttLib.ttFont - DEBUG - Writing 'fpgm' table to disk
2025-03-13 15:45:45,985 - fontTools.ttLib.ttFont - DEBUG - Compiling 'prep' table
2025-03-13 15:45:45,987 - fontTools.ttLib.ttFont - DEBUG - Writing 'prep' table to disk
2025-03-13 15:45:45,987 - fontTools.ttLib.ttFont - DEBUG - Compiling 'cvt ' table
2025-03-13 15:45:45,987 - fontTools.ttLib.ttFont - DEBUG - Writing 'cvt ' table to disk
2025-03-13 15:45:45,988 - fontTools.ttLib.ttFont - DEBUG - Compiling 'name' table
2025-03-13 15:45:45,988 - fontTools.ttLib.ttFont - DEBUG - Writing 'name' table to disk
2025-03-13 15:45:45,988 - fontTools.ttLib.ttFont - DEBUG - Compiling 'post' table
2025-03-13 15:45:45,988 - fontTools.ttLib.ttFont - DEBUG - Writing 'post' table to disk
2025-03-13 15:45:45,989 - fontTools.ttLib.ttFont - DEBUG - Compiling 'gasp' table
2025-03-13 15:45:45,989 - fontTools.ttLib.ttFont - DEBUG - Writing 'gasp' table to disk
2025-03-13 15:45:45,989 - fontTools.ttLib.ttFont - DEBUG - Compiling 'STAT' table
2025-03-13 15:45:45,990 - fontTools.ttLib.ttFont - DEBUG - Writing 'STAT' table to disk
2025-03-13 15:45:46,125 - fpdf.output - DEBUG - Final size summary of the biggest document sections:
2025-03-13 15:45:46,125 - fpdf.output - DEBUG - - pages: 214.0KiB
2025-03-13 15:45:46,125 - fpdf.output - DEBUG - - fonts: 21.5KiB
2025-03-13 15:45:46,127 - fpdf.output - DEBUG - - images: 10.2MiB
2025-03-13 15:45:54,967 - pymongo.topology - DEBUG - {"topologyId": {"$oid": "67d2b6901e52438c18c36b9c"}, "driverConnectionId": 1, "serverConnectionId": 13155, "serverHost": "3.144.134.141", "serverPort": 27017, "awaited": true, "durationMS": 9984.999999998763, "reply": "{\"isWritablePrimary\": true, \"topologyVersion\": {\"processId\": {\"$oid\": \"67b7e5814f77c1a87c56d054\"}}, \"maxBsonObjectSize\": 16777216, \"maxMessageSizeBytes\": 48000000, \"maxWriteBatchSize\": 100000, \"localTime\": {\"$date\": \"2025-03-13T10:45:54.932Z\"}, \"logicalSessionTimeoutMinutes\": 30, \"connectionId\": 13155, \"maxWireVersion\": 25, \"ok\": 1.0}", "message": "Server heartbeat succeeded"}
2025-03-13 15:45:54,968 - pymongo.topology - DEBUG - {"topologyId": {"$oid": "67d2b6901e52438c18c36b9c"}, "driverConnectionId": 1, "serverConnectionId": 13155, "serverHost": "3.144.134.141", "serverPort": 27017, "awaited": true, "message": "Server heartbeat started"}
2025-03-13 15:46:04,961 - pymongo.topology - DEBUG - {"topologyId": {"$oid": "67d2b6901e52438c18c36b9c"}, "driverConnectionId": 1, "serverConnectionId": 13155, "serverHost": "3.144.134.141", "serverPort": 27017, "awaited": true, "durationMS": 10000.0, "reply": "{\"isWritablePrimary\": true, \"topologyVersion\": {\"processId\": {\"$oid\": \"67b7e5814f77c1a87c56d054\"}}, \"maxBsonObjectSize\": 16777216, \"maxMessageSizeBytes\": 48000000, \"maxWriteBatchSize\": 100000, \"localTime\": {\"$date\": \"2025-03-13T10:46:04.933Z\"}, \"logicalSessionTimeoutMinutes\": 30, \"connectionId\": 13155, \"maxWireVersion\": 25, \"ok\": 1.0}", "message": "Server heartbeat succeeded"}
2025-03-13 15:46:04,961 - pymongo.topology - DEBUG - {"topologyId": {"$oid": "67d2b6901e52438c18c36b9c"}, "driverConnectionId": 1, "serverConnectionId": 13155, "serverHost": "3.144.134.141", "serverPort": 27017, "awaited": true, "message": "Server heartbeat started"}
2025-03-13 15:46:14,977 - pymongo.topology - DEBUG - {"topologyId": {"$oid": "67d2b6901e52438c18c36b9c"}, "driverConnectionId": 1, "serverConnectionId": 13155, "serverHost": "3.144.134.141", "serverPort": 27017, "awaited": true, "durationMS": 10015.000000001237, "reply": "{\"isWritablePrimary\": true, \"topologyVersion\": {\"processId\": {\"$oid\": \"67b7e5814f77c1a87c56d054\"}}, \"maxBsonObjectSize\": 16777216, \"maxMessageSizeBytes\": 48000000, \"maxWriteBatchSize\": 100000, \"localTime\": {\"$date\": \"2025-03-13T10:46:14.934Z\"}, \"logicalSessionTimeoutMinutes\": 30, \"connectionId\": 13155, \"maxWireVersion\": 25, \"ok\": 1.0}", "message": "Server heartbeat succeeded"}
2025-03-13 15:46:14,978 - pymongo.topology - DEBUG - {"topologyId": {"$oid": "67d2b6901e52438c18c36b9c"}, "driverConnectionId": 1, "serverConnectionId": 13155, "serverHost": "3.144.134.141", "serverPort": 27017, "awaited": true, "message": "Server heartbeat started"}
2025-03-13 15:46:24,966 - pymongo.topology - DEBUG - {"topologyId": {"$oid": "67d2b6901e52438c18c36b9c"}, "driverConnectionId": 1, "serverConnectionId": 13155, "serverHost": "3.144.134.141", "serverPort": 27017, "awaited": true, "durationMS": 9984.999999998763, "reply": "{\"isWritablePrimary\": true, \"topologyVersion\": {\"processId\": {\"$oid\": \"67b7e5814f77c1a87c56d054\"}}, \"maxBsonObjectSize\": 16777216, \"maxMessageSizeBytes\": 48000000, \"maxWriteBatchSize\": 100000, \"localTime\": {\"$date\": \"2025-03-13T10:46:24.935Z\"}, \"logicalSessionTimeoutMinutes\": 30, \"connectionId\": 13155, \"maxWireVersion\": 25, \"ok\": 1.0}", "message": "Server heartbeat succeeded"}
2025-03-13 15:46:24,967 - pymongo.topology - DEBUG - {"topologyId": {"$oid": "67d2b6901e52438c18c36b9c"}, "driverConnectionId": 1, "serverConnectionId": 13155, "serverHost": "3.144.134.141", "serverPort": 27017, "awaited": true, "message": "Server heartbeat started"}
2025-03-13 15:46:34,967 - pymongo.topology - DEBUG - {"topologyId": {"$oid": "67d2b6901e52438c18c36b9c"}, "driverConnectionId": 1, "serverConnectionId": 13155, "serverHost": "3.144.134.141", "serverPort": 27017, "awaited": true, "durationMS": 10000.0, "reply": "{\"isWritablePrimary\": true, \"topologyVersion\": {\"processId\": {\"$oid\": \"67b7e5814f77c1a87c56d054\"}}, \"maxBsonObjectSize\": 16777216, \"maxMessageSizeBytes\": 48000000, \"maxWriteBatchSize\": 100000, \"localTime\": {\"$date\": \"2025-03-13T10:46:34.935Z\"}, \"logicalSessionTimeoutMinutes\": 30, \"connectionId\": 13155, \"maxWireVersion\": 25, \"ok\": 1.0}", "message": "Server heartbeat succeeded"}
2025-03-13 15:46:34,968 - pymongo.topology - DEBUG - {"topologyId": {"$oid": "67d2b6901e52438c18c36b9c"}, "driverConnectionId": 1, "serverConnectionId": 13155, "serverHost": "3.144.134.141", "serverPort": 27017, "awaited": true, "message": "Server heartbeat started"}
2025-03-13 15:46:44,953 - pymongo.topology - DEBUG - {"topologyId": {"$oid": "67d2b6901e52438c18c36b9c"}, "driverConnectionId": 1, "serverConnectionId": 13155, "serverHost": "3.144.134.141", "serverPort": 27017, "awaited": true, "durationMS": 9984.000000000378, "reply": "{\"isWritablePrimary\": true, \"topologyVersion\": {\"processId\": {\"$oid\": \"67b7e5814f77c1a87c56d054\"}}, \"maxBsonObjectSize\": 16777216, \"maxMessageSizeBytes\": 48000000, \"maxWriteBatchSize\": 100000, \"localTime\": {\"$date\": \"2025-03-13T10:46:44.936Z\"}, \"logicalSessionTimeoutMinutes\": 30, \"connectionId\": 13155, \"maxWireVersion\": 25, \"ok\": 1.0}", "message": "Server heartbeat succeeded"}
2025-03-13 15:46:44,954 - pymongo.topology - DEBUG - {"topologyId": {"$oid": "67d2b6901e52438c18c36b9c"}, "driverConnectionId": 1, "serverConnectionId": 13155, "serverHost": "3.144.134.141", "serverPort": 27017, "awaited": true, "message": "Server heartbeat started"}
2025-03-13 15:46:54,907 - pymongo.topology - DEBUG - {"topologyId": {"$oid": "67d2b6901e52438c18c36b9c"}, "driverConnectionId": 1, "serverConnectionId": 13155, "serverHost": "3.144.134.141", "serverPort": 27017, "awaited": true, "durationMS": 9952.99999999952, "reply": "{\"isWritablePrimary\": true, \"topologyVersion\": {\"processId\": {\"$oid\": \"67b7e5814f77c1a87c56d054\"}}, \"maxBsonObjectSize\": 16777216, \"maxMessageSizeBytes\": 48000000, \"maxWriteBatchSize\": 100000, \"localTime\": {\"$date\": \"2025-03-13T10:46:54.936Z\"}, \"logicalSessionTimeoutMinutes\": 30, \"connectionId\": 13155, \"maxWireVersion\": 25, \"ok\": 1.0}", "message": "Server heartbeat succeeded"}
2025-03-13 15:46:54,908 - pymongo.topology - DEBUG - {"topologyId": {"$oid": "67d2b6901e52438c18c36b9c"}, "driverConnectionId": 1, "serverConnectionId": 13155, "serverHost": "3.144.134.141", "serverPort": 27017, "awaited": true, "message": "Server heartbeat started"}
2025-03-13 15:47:04,927 - pymongo.topology - DEBUG - {"topologyId": {"$oid": "67d2b6901e52438c18c36b9c"}, "driverConnectionId": 1, "serverConnectionId": 13155, "serverHost": "3.144.134.141", "serverPort": 27017, "awaited": true, "durationMS": 10016.00000000144, "reply": "{\"isWritablePrimary\": true, \"topologyVersion\": {\"processId\": {\"$oid\": \"67b7e5814f77c1a87c56d054\"}}, \"maxBsonObjectSize\": 16777216, \"maxMessageSizeBytes\": 48000000, \"maxWriteBatchSize\": 100000, \"localTime\": {\"$date\": \"2025-03-13T10:47:04.937Z\"}, \"logicalSessionTimeoutMinutes\": 30, \"connectionId\": 13155, \"maxWireVersion\": 25, \"ok\": 1.0}", "message": "Server heartbeat succeeded"}
2025-03-13 15:47:04,928 - pymongo.topology - DEBUG - {"topologyId": {"$oid": "67d2b6901e52438c18c36b9c"}, "driverConnectionId": 1, "serverConnectionId": 13155, "serverHost": "3.144.134.141", "serverPort": 27017, "awaited": true, "message": "Server heartbeat started"}
2025-03-13 15:47:14,988 - pymongo.topology - DEBUG - {"topologyId": {"$oid": "67d2b6901e52438c18c36b9c"}, "driverConnectionId": 1, "serverConnectionId": 13155, "serverHost": "3.144.134.141", "serverPort": 27017, "awaited": true, "durationMS": 10047.00000000048, "reply": "{\"isWritablePrimary\": true, \"topologyVersion\": {\"processId\": {\"$oid\": \"67b7e5814f77c1a87c56d054\"}}, \"maxBsonObjectSize\": 16777216, \"maxMessageSizeBytes\": 48000000, \"maxWriteBatchSize\": 100000, \"localTime\": {\"$date\": \"2025-03-13T10:47:14.938Z\"}, \"logicalSessionTimeoutMinutes\": 30, \"connectionId\": 13155, \"maxWireVersion\": 25, \"ok\": 1.0}", "message": "Server heartbeat succeeded"}
2025-03-13 15:47:14,989 - pymongo.topology - DEBUG - {"topologyId": {"$oid": "67d2b6901e52438c18c36b9c"}, "driverConnectionId": 1, "serverConnectionId": 13155, "serverHost": "3.144.134.141", "serverPort": 27017, "awaited": true, "message": "Server heartbeat started"}
2025-03-13 15:47:24,988 - pymongo.topology - DEBUG - {"topologyId": {"$oid": "67d2b6901e52438c18c36b9c"}, "driverConnectionId": 1, "serverConnectionId": 13155, "serverHost": "3.144.134.141", "serverPort": 27017, "awaited": true, "durationMS": 10000.0, "reply": "{\"isWritablePrimary\": true, \"topologyVersion\": {\"processId\": {\"$oid\": \"67b7e5814f77c1a87c56d054\"}}, \"maxBsonObjectSize\": 16777216, \"maxMessageSizeBytes\": 48000000, \"maxWriteBatchSize\": 100000, \"localTime\": {\"$date\": \"2025-03-13T10:47:24.939Z\"}, \"logicalSessionTimeoutMinutes\": 30, \"connectionId\": 13155, \"maxWireVersion\": 25, \"ok\": 1.0}", "message": "Server heartbeat succeeded"}
2025-03-13 15:47:24,989 - pymongo.topology - DEBUG - {"topologyId": {"$oid": "67d2b6901e52438c18c36b9c"}, "driverConnectionId": 1, "serverConnectionId": 13155, "serverHost": "3.144.134.141", "serverPort": 27017, "awaited": true, "message": "Server heartbeat started"}
2025-03-13 15:47:30,333 - app.api.endpoints.reports - INFO - Processing violation trends request: start_date=datetime.datetime(2025, 3, 1, 10, 42, 32, 208000, tzinfo=TzInfo(UTC)) end_date=datetime.datetime(2025, 3, 13, 10, 42, 32, 208000, tzinfo=TzInfo(UTC)) group_by='day' days=30 driver_uuid=''
2025-03-13 15:47:30,334 - app.services.predictive_analytics - INFO - Analyzing violation trends from 2025-03-01 10:42:32.208000+00:00 to 2025-03-13 10:42:32.208000+00:00 for all drivers
2025-03-13 15:47:30,334 - app.db.repositories.data_repository - INFO - Querying violations from 2025-03-01 10:42:32.208000+00:00 to 2025-03-13 10:42:32.208000+00:00
2025-03-13 15:47:30,334 - app.db.repositories.data_repository - DEBUG - Executing pipeline: [{'$match': {'event_time': {'$gte': datetime.datetime(2025, 3, 1, 10, 42, 32, 208000, tzinfo=TzInfo(UTC)), '$lte': datetime.datetime(2025, 3, 13, 10, 42, 32, 208000, tzinfo=TzInfo(UTC))}}}, {'$group': {'_id': {'time_period': {'$dateToString': {'format': '%Y-%m-%d', 'date': '$event_time'}}, 'violation_type': '$violation_type', 'driver_uuid': '$driver_uuid', 'driver_name': '$driver_name'}, 'count': {'$sum': 1}, 'high_severity_count': {'$sum': {'$cond': [{'$eq': ['$severity', 'HIGH']}, 1, 0]}}}}, {'$sort': {'_id.time_period': 1, '_id.driver_name': 1}}]
2025-03-13 15:47:30,335 - pymongo.serverSelection - DEBUG - {"message": "Server selection started", "selector": "Primary()", "operation": "aggregate", "topologyDescription": "<TopologyDescription id: 67d2b6901e52438c18c36b9c, topology_type: Single, servers: [<ServerDescription ('3.144.134.141', 27017) server_type: Standalone, rtt: 0.2703558494907344>]>", "clientId": {"$oid": "67d2b6901e52438c18c36b9c"}}
2025-03-13 15:47:30,335 - pymongo.serverSelection - DEBUG - {"message": "Server selection succeeded", "selector": "Primary()", "operation": "aggregate", "topologyDescription": "<TopologyDescription id: 67d2b6901e52438c18c36b9c, topology_type: Single, servers: [<ServerDescription ('3.144.134.141', 27017) server_type: Standalone, rtt: 0.2703558494907344>]>", "clientId": {"$oid": "67d2b6901e52438c18c36b9c"}, "serverHost": "3.144.134.141", "serverPort": 27017}
2025-03-13 15:47:30,335 - pymongo.connection - DEBUG - {"clientId": {"$oid": "67d2b6901e52438c18c36b9c"}, "message": "Connection checkout started", "serverHost": "3.144.134.141", "serverPort": 27017}
2025-03-13 15:47:30,336 - pymongo.connection - DEBUG - {"clientId": {"$oid": "67d2b6901e52438c18c36b9c"}, "message": "Connection checked out", "serverHost": "3.144.134.141", "serverPort": 27017, "driverConnectionId": 1, "durationMS": 0.0}
2025-03-13 15:47:30,337 - pymongo.command - DEBUG - {"clientId": {"$oid": "67d2b6901e52438c18c36b9c"}, "message": "Command started", "command": "{\"aggregate\": \"violations\", \"pipeline\": [{\"$match\": {\"event_time\": {\"$gte\": {\"$date\": \"2025-03-01T10:42:32.208Z\"}, \"$lte\": {\"$date\": \"2025-03-13T10:42:32.208Z\"}}}}, {\"$group\": {\"_id\": {\"time_period\": {\"$dateToString\": {\"format\": \"%Y-%m-%d\", \"date\": \"$event_time\"}}, \"violation_type\": \"$violation_type\", \"driver_uuid\": \"$driver_uuid\", \"driver_name\": \"$driver_name\"}, \"count\": {\"$sum\": 1}, \"high_severity_count\": {\"$sum\": {\"$cond\": [{\"$eq\": [\"$severity\", \"HIGH\"]}, 1]}}}}, {\"$sort\": {\"_id.time_period\": 1, \"_id.driver_name\": 1}}], \"lsid\": {\"id\": {\"$binary\": {\"base64\": \"m/SmtYFiRaqmrvMUrCKjTg==\", \"subType\": \"04\"}}}, \"$db\": \"opal_server\"}", "commandName": "aggregate", "databaseName": "opal_server", "requestId": 26962, "operationId": 26962, "driverConnectionId": 1, "serverConnectionId": 13157, "serverHost": "3.144.134.141", "serverPort": 27017}
2025-03-13 15:47:31,013 - pymongo.command - DEBUG - {"clientId": {"$oid": "67d2b6901e52438c18c36b9c"}, "message": "Command succeeded", "durationMS": 676.393, "reply": "{\"cursor\": {\"firstBatch\": [{\"_id\": {\"time_period\": \"2025-03-03\", \"violation_type\": \"SPEED_LOW\", \"driver_uuid\": \"fb6b6c56-18fd-4602-aa8d-10d95f46f3d5\", \"driver_name\": \"AMIR 95957295\"}, \"count\": 9}, {\"_id\": {\"time_period\": \"2025-03-03\", \"violation_type\": \"SPEED_MEDIUM\", \"driver_uuid\": \"fb6b6c56-18fd-4602-aa8d-10d95f46f3d5\", \"driver_name\": \"AMIR 95957295\"}, \"count\": 29}, {\"_id\": {\"time_period\": \"2025-03-03\", \"violation_type\": \"SPEED_LOW\", \"driver_uuid\": \"3dd80f61-5ed1-4038-b3a8-5d2e37759893\", \"driver_name\": \"DALER SINGH\"}, \"count\": 29}, {\"_id\": {\"time_period\": \"2025-03-03\", \"violation_type\": \"SPEED_MEDIUM\", \"driver_uuid\": \"3dd80f61-5ed1-4038-b3a8-5d2e37759893\", \"driver_name\": \"DALER SINGH\"}, \"count\": 19}, {\"_id\": {\"time_period\": \"2025-03-03\", \"violation_type\": \"SPEED_LOW\", \"driver_uuid\": \"7463170a-de85-4c5d-a77b-b506d939aca1\", \"driver_name\": \"GUL ZAMAN #94378054\"}, \"count\": 18}, {\"_id\": {\"time_period\": \"2025-03-03\", \"violation_type\": \"SPEED_MEDIUM\", \"driver_uuid\": \"7463170a-de85-4c5d-a77b...", "commandName": "aggregate", "databaseName": "opal_server", "requestId": 26962, "operationId": 26962, "driverConnectionId": 1, "serverConnectionId": 13157, "serverHost": "3.144.134.141", "serverPort": 27017}
2025-03-13 15:47:31,013 - pymongo.connection - DEBUG - {"clientId": {"$oid": "67d2b6901e52438c18c36b9c"}, "message": "Connection checked in", "serverHost": "3.144.134.141", "serverPort": 27017, "driverConnectionId": 1}
2025-03-13 15:47:31,015 - pymongo.serverSelection - DEBUG - {"message": "Server selection started", "selector": "<function any_server_selector at 0x0000014891928720>", "operation": "getMore", "topologyDescription": "<TopologyDescription id: 67d2b6901e52438c18c36b9c, topology_type: Single, servers: [<ServerDescription ('3.144.134.141', 27017) server_type: Standalone, rtt: 0.2703558494907344>]>", "clientId": {"$oid": "67d2b6901e52438c18c36b9c"}}
2025-03-13 15:47:31,015 - pymongo.serverSelection - DEBUG - {"message": "Server selection succeeded", "selector": "<function any_server_selector at 0x0000014891928720>", "operation": "getMore", "topologyDescription": "<TopologyDescription id: 67d2b6901e52438c18c36b9c, topology_type: Single, servers: [<ServerDescription ('3.144.134.141', 27017) server_type: Standalone, rtt: 0.2703558494907344>]>", "clientId": {"$oid": "67d2b6901e52438c18c36b9c"}, "serverHost": "3.144.134.141", "serverPort": 27017}
2025-03-13 15:47:31,017 - pymongo.connection - DEBUG - {"clientId": {"$oid": "67d2b6901e52438c18c36b9c"}, "message": "Connection checkout started", "serverHost": "3.144.134.141", "serverPort": 27017}
2025-03-13 15:47:31,017 - pymongo.connection - DEBUG - {"clientId": {"$oid": "67d2b6901e52438c18c36b9c"}, "message": "Connection checked out", "serverHost": "3.144.134.141", "serverPort": 27017, "driverConnectionId": 1, "durationMS": 0.0}
2025-03-13 15:47:31,018 - pymongo.command - DEBUG - {"clientId": {"$oid": "67d2b6901e52438c18c36b9c"}, "message": "Command started", "command": "{\"getMore\": 4051454199304448087, \"collection\": \"violations\", \"lsid\": {\"id\": {\"$binary\": {\"base64\": \"m/SmtYFiRaqmrvMUrCKjTg==\", \"subType\": \"04\"}}}, \"$db\": \"opal_server\"}", "commandName": "getMore", "databaseName": "opal_server", "requestId": 24464, "operationId": 24464, "driverConnectionId": 1, "serverConnectionId": 13157, "serverHost": "3.144.134.141", "serverPort": 27017}
2025-03-13 15:47:32,241 - pymongo.command - DEBUG - {"clientId": {"$oid": "67d2b6901e52438c18c36b9c"}, "message": "Command succeeded", "durationMS": 1223.647, "reply": "{\"cursor\": {\"nextBatch\": [{\"_id\": {\"time_period\": \"2025-03-04\", \"violation_type\": \"SPEED_MEDIUM\", \"driver_uuid\": \"7471351\", \"driver_name\": \"Unknown\"}, \"count\": 16}, {\"_id\": {\"time_period\": \"2025-03-04\", \"violation_type\": \"SPEED_MEDIUM\", \"driver_uuid\": \"3494638\", \"driver_name\": \"Unknown\"}, \"count\": 1}, {\"_id\": {\"time_period\": \"2025-03-04\", \"violation_type\": \"SPEED_MEDIUM\", \"driver_uuid\": \"10358628\", \"driver_name\": \"Unknown\"}, \"count\": 11}, {\"_id\": {\"time_period\": \"2025-03-04\", \"violation_type\": \"SPEED_HIGH\", \"driver_uuid\": \"12454992\", \"driver_name\": \"Unknown\"}, \"count\": 3, \"high_severity_count\": 3}, {\"_id\": {\"time_period\": \"2025-03-04\", \"violation_type\": \"SPEED_LOW\", \"driver_uuid\": \"12861265\", \"driver_name\": \"Unknown\"}, \"count\": 2}, {\"_id\": {\"time_period\": \"2025-03-04\", \"violation_type\": \"SPEED_LOW\", \"driver_uuid\": \"3165973\", \"driver_name\": \"Unknown\"}, \"count\": 2}, {\"_id\": {\"time_period\": \"2025-03-04\", \"violation_type\": \"SPEED_MEDIUM\", \"driver_uuid\": \"7445245\", \"driver_name\": \"Unknown\"}...", "commandName": "getMore", "databaseName": "opal_server", "requestId": 24464, "operationId": 24464, "driverConnectionId": 1, "serverConnectionId": 13157, "serverHost": "3.144.134.141", "serverPort": 27017}
2025-03-13 15:47:32,241 - pymongo.connection - DEBUG - {"clientId": {"$oid": "67d2b6901e52438c18c36b9c"}, "message": "Connection checked in", "serverHost": "3.144.134.141", "serverPort": 27017, "driverConnectionId": 1}
2025-03-13 15:47:32,244 - app.db.repositories.data_repository - INFO - Found 1379 trend records
2025-03-13 15:47:32,246 - app.services.predictive_analytics - INFO - Processed 705 time period-driver combinations
2025-03-13 15:47:34,970 - pymongo.topology - DEBUG - {"topologyId": {"$oid": "67d2b6901e52438c18c36b9c"}, "driverConnectionId": 1, "serverConnectionId": 13155, "serverHost": "3.144.134.141", "serverPort": 27017, "awaited": true, "durationMS": 9984.999999998763, "reply": "{\"isWritablePrimary\": true, \"topologyVersion\": {\"processId\": {\"$oid\": \"67b7e5814f77c1a87c56d054\"}}, \"maxBsonObjectSize\": 16777216, \"maxMessageSizeBytes\": 48000000, \"maxWriteBatchSize\": 100000, \"localTime\": {\"$date\": \"2025-03-13T10:47:34.939Z\"}, \"logicalSessionTimeoutMinutes\": 30, \"connectionId\": 13155, \"maxWireVersion\": 25, \"ok\": 1.0}", "message": "Server heartbeat succeeded"}
2025-03-13 15:47:34,971 - pymongo.topology - DEBUG - {"topologyId": {"$oid": "67d2b6901e52438c18c36b9c"}, "driverConnectionId": 1, "serverConnectionId": 13155, "serverHost": "3.144.134.141", "serverPort": 27017, "awaited": true, "message": "Server heartbeat started"}
2025-03-13 15:47:44,964 - pymongo.topology - DEBUG - {"topologyId": {"$oid": "67d2b6901e52438c18c36b9c"}, "driverConnectionId": 1, "serverConnectionId": 13155, "serverHost": "3.144.134.141", "serverPort": 27017, "awaited": true, "durationMS": 10000.0, "reply": "{\"isWritablePrimary\": true, \"topologyVersion\": {\"processId\": {\"$oid\": \"67b7e5814f77c1a87c56d054\"}}, \"maxBsonObjectSize\": 16777216, \"maxMessageSizeBytes\": 48000000, \"maxWriteBatchSize\": 100000, \"localTime\": {\"$date\": \"2025-03-13T10:47:44.940Z\"}, \"logicalSessionTimeoutMinutes\": 30, \"connectionId\": 13155, \"maxWireVersion\": 25, \"ok\": 1.0}", "message": "Server heartbeat succeeded"}
2025-03-13 15:47:44,965 - pymongo.topology - DEBUG - {"topologyId": {"$oid": "67d2b6901e52438c18c36b9c"}, "driverConnectionId": 1, "serverConnectionId": 13155, "serverHost": "3.144.134.141", "serverPort": 27017, "awaited": true, "message": "Server heartbeat started"}
2025-03-13 15:47:54,955 - pymongo.topology - DEBUG - {"topologyId": {"$oid": "67d2b6901e52438c18c36b9c"}, "driverConnectionId": 1, "serverConnectionId": 13155, "serverHost": "3.144.134.141", "serverPort": 27017, "awaited": true, "durationMS": 9984.000000000378, "reply": "{\"isWritablePrimary\": true, \"topologyVersion\": {\"processId\": {\"$oid\": \"67b7e5814f77c1a87c56d054\"}}, \"maxBsonObjectSize\": 16777216, \"maxMessageSizeBytes\": 48000000, \"maxWriteBatchSize\": 100000, \"localTime\": {\"$date\": \"2025-03-13T10:47:54.941Z\"}, \"logicalSessionTimeoutMinutes\": 30, \"connectionId\": 13155, \"maxWireVersion\": 25, \"ok\": 1.0}", "message": "Server heartbeat succeeded"}
2025-03-13 15:47:54,955 - pymongo.topology - DEBUG - {"topologyId": {"$oid": "67d2b6901e52438c18c36b9c"}, "driverConnectionId": 1, "serverConnectionId": 13155, "serverHost": "3.144.134.141", "serverPort": 27017, "awaited": true, "message": "Server heartbeat started"}
2025-03-13 15:48:04,969 - pymongo.topology - DEBUG - {"topologyId": {"$oid": "67d2b6901e52438c18c36b9c"}, "driverConnectionId": 1, "serverConnectionId": 13155, "serverHost": "3.144.134.141", "serverPort": 27017, "awaited": true, "durationMS": 10015.999999999622, "reply": "{\"isWritablePrimary\": true, \"topologyVersion\": {\"processId\": {\"$oid\": \"67b7e5814f77c1a87c56d054\"}}, \"maxBsonObjectSize\": 16777216, \"maxMessageSizeBytes\": 48000000, \"maxWriteBatchSize\": 100000, \"localTime\": {\"$date\": \"2025-03-13T10:48:04.942Z\"}, \"logicalSessionTimeoutMinutes\": 30, \"connectionId\": 13155, \"maxWireVersion\": 25, \"ok\": 1.0}", "message": "Server heartbeat succeeded"}
2025-03-13 15:48:04,970 - pymongo.topology - DEBUG - {"topologyId": {"$oid": "67d2b6901e52438c18c36b9c"}, "driverConnectionId": 1, "serverConnectionId": 13155, "serverHost": "3.144.134.141", "serverPort": 27017, "awaited": true, "message": "Server heartbeat started"}
2025-03-13 15:48:14,937 - pymongo.topology - DEBUG - {"topologyId": {"$oid": "67d2b6901e52438c18c36b9c"}, "driverConnectionId": 1, "serverConnectionId": 13155, "serverHost": "3.144.134.141", "serverPort": 27017, "awaited": true, "durationMS": 9968.000000000757, "reply": "{\"isWritablePrimary\": true, \"topologyVersion\": {\"processId\": {\"$oid\": \"67b7e5814f77c1a87c56d054\"}}, \"maxBsonObjectSize\": 16777216, \"maxMessageSizeBytes\": 48000000, \"maxWriteBatchSize\": 100000, \"localTime\": {\"$date\": \"2025-03-13T10:48:14.942Z\"}, \"logicalSessionTimeoutMinutes\": 30, \"connectionId\": 13155, \"maxWireVersion\": 25, \"ok\": 1.0}", "message": "Server heartbeat succeeded"}
2025-03-13 15:48:14,938 - pymongo.topology - DEBUG - {"topologyId": {"$oid": "67d2b6901e52438c18c36b9c"}, "driverConnectionId": 1, "serverConnectionId": 13155, "serverHost": "3.144.134.141", "serverPort": 27017, "awaited": true, "message": "Server heartbeat started"}
2025-03-13 15:48:30,059 - numexpr.utils - INFO - Note: NumExpr detected 12 cores but "NUMEXPR_MAX_THREADS" not set, so enforcing safe limit of 8.
2025-03-13 15:48:30,059 - numexpr.utils - INFO - NumExpr defaulting to 8 threads.
2025-03-13 15:48:31,330 - matplotlib - DEBUG - matplotlib data path: C:\Users\msameerakram\AppData\Local\anaconda3\Lib\site-packages\matplotlib\mpl-data
2025-03-13 15:48:31,336 - matplotlib - DEBUG - CONFIGDIR=C:\Users\msameerakram\.matplotlib
2025-03-13 15:48:31,338 - matplotlib - DEBUG - interactive is False
2025-03-13 15:48:31,338 - matplotlib - DEBUG - platform is win32
2025-03-13 15:48:31,407 - matplotlib - DEBUG - CACHEDIR=C:\Users\msameerakram\.matplotlib
2025-03-13 15:48:31,411 - matplotlib.font_manager - DEBUG - Using fontManager instance from C:\Users\msameerakram\.matplotlib\fontlist-v390.json
2025-03-13 15:48:33,892 - numexpr.utils - INFO - Note: NumExpr detected 12 cores but "NUMEXPR_MAX_THREADS" not set, so enforcing safe limit of 8.
2025-03-13 15:48:33,893 - numexpr.utils - INFO - NumExpr defaulting to 8 threads.
2025-03-13 15:48:35,060 - matplotlib - DEBUG - matplotlib data path: C:\Users\msameerakram\AppData\Local\anaconda3\Lib\site-packages\matplotlib\mpl-data
2025-03-13 15:48:35,065 - matplotlib - DEBUG - CONFIGDIR=C:\Users\msameerakram\.matplotlib
2025-03-13 15:48:35,067 - matplotlib - DEBUG - interactive is False
2025-03-13 15:48:35,067 - matplotlib - DEBUG - platform is win32
2025-03-13 15:48:35,122 - matplotlib - DEBUG - CACHEDIR=C:\Users\msameerakram\.matplotlib
2025-03-13 15:48:35,126 - matplotlib.font_manager - DEBUG - Using fontManager instance from C:\Users\msameerakram\.matplotlib\fontlist-v390.json
2025-03-13 15:48:36,365 - asyncio - DEBUG - Using selector: SelectSelector
2025-03-13 15:48:36,397 - pymongo.topology - DEBUG - {"topologyId": {"$oid": "67d2b80436e2980ea4233d92"}, "message": "Starting topology monitoring"}
2025-03-13 15:48:36,397 - pymongo.topology - DEBUG - {"topologyId": {"$oid": "67d2b80436e2980ea4233d92"}, "previousDescription": "<TopologyDescription id: 67d2b80436e2980ea4233d92, topology_type: Unknown, servers: []>", "newDescription": "<TopologyDescription id: 67d2b80436e2980ea4233d92, topology_type: Unknown, servers: [<ServerDescription ('3.144.134.141', 27017) server_type: Unknown, rtt: None>]>", "message": "Topology description changed"}
2025-03-13 15:48:36,398 - pymongo.topology - DEBUG - {"topologyId": {"$oid": "67d2b80436e2980ea4233d92"}, "serverHost": "3.144.134.141", "serverPort": 27017, "message": "Starting server monitoring"}
2025-03-13 15:48:36,399 - pymongo.connection - DEBUG - {"clientId": {"$oid": "67d2b80436e2980ea4233d92"}, "message": "Connection pool created", "serverHost": "3.144.134.141", "serverPort": 27017}
2025-03-13 15:48:36,400 - pymongo.serverSelection - DEBUG - {"message": "Server selection started", "selector": "Primary()", "operation": "ping", "topologyDescription": "<TopologyDescription id: 67d2b80436e2980ea4233d92, topology_type: Unknown, servers: [<ServerDescription ('3.144.134.141', 27017) server_type: Unknown, rtt: None>]>", "clientId": {"$oid": "67d2b80436e2980ea4233d92"}}
2025-03-13 15:48:36,400 - pymongo.serverSelection - DEBUG - {"message": "Waiting for suitable server to become available", "selector": "Primary()", "operation": "ping", "topologyDescription": "<TopologyDescription id: 67d2b80436e2980ea4233d92, topology_type: Unknown, servers: [<ServerDescription ('3.144.134.141', 27017) server_type: Unknown, rtt: None>]>", "clientId": {"$oid": "67d2b80436e2980ea4233d92"}, "remainingTimeMS": 30}
2025-03-13 15:48:36,645 - pymongo.topology - DEBUG - {"topologyId": {"$oid": "67d2b80436e2980ea4233d92"}, "driverConnectionId": 1, "serverHost": "3.144.134.141", "serverPort": 27017, "awaited": false, "message": "Server heartbeat started"}
2025-03-13 15:48:36,891 - pymongo.topology - DEBUG - {"topologyId": {"$oid": "67d2b80436e2980ea4233d92"}, "driverConnectionId": 1, "serverConnectionId": 13171, "serverHost": "3.144.134.141", "serverPort": 27017, "awaited": false, "durationMS": 250.0, "reply": "{\"helloOk\": true, \"ismaster\": true, \"topologyVersion\": {\"processId\": {\"$oid\": \"67b7e5814f77c1a87c56d054\"}}, \"maxBsonObjectSize\": 16777216, \"maxMessageSizeBytes\": 48000000, \"maxWriteBatchSize\": 100000, \"localTime\": {\"$date\": \"2025-03-13T10:48:36.925Z\"}, \"logicalSessionTimeoutMinutes\": 30, \"connectionId\": 13171, \"maxWireVersion\": 25, \"ok\": 1.0}", "message": "Server heartbeat succeeded"}
2025-03-13 15:48:36,891 - pymongo.connection - DEBUG - {"clientId": {"$oid": "67d2b80436e2980ea4233d92"}, "message": "Connection pool ready", "serverHost": "3.144.134.141", "serverPort": 27017}
2025-03-13 15:48:36,892 - pymongo.topology - DEBUG - {"topologyId": {"$oid": "67d2b80436e2980ea4233d92"}, "previousDescription": "<TopologyDescription id: 67d2b80436e2980ea4233d92, topology_type: Unknown, servers: [<ServerDescription ('3.144.134.141', 27017) server_type: Unknown, rtt: None>]>", "newDescription": "<TopologyDescription id: 67d2b80436e2980ea4233d92, topology_type: Single, servers: [<ServerDescription ('3.144.134.141', 27017) server_type: Standalone, rtt: 0.25>]>", "message": "Topology description changed"}
2025-03-13 15:48:36,893 - pymongo.serverSelection - DEBUG - {"message": "Server selection succeeded", "selector": "Primary()", "operation": "ping", "topologyDescription": "<TopologyDescription id: 67d2b80436e2980ea4233d92, topology_type: Single, servers: [<ServerDescription ('3.144.134.141', 27017) server_type: Standalone, rtt: 0.25>]>", "clientId": {"$oid": "67d2b80436e2980ea4233d92"}, "serverHost": "3.144.134.141", "serverPort": 27017}
2025-03-13 15:48:36,894 - pymongo.connection - DEBUG - {"clientId": {"$oid": "67d2b80436e2980ea4233d92"}, "message": "Connection checkout started", "serverHost": "3.144.134.141", "serverPort": 27017}
2025-03-13 15:48:36,895 - pymongo.topology - DEBUG - {"topologyId": {"$oid": "67d2b80436e2980ea4233d92"}, "driverConnectionId": 1, "serverConnectionId": 13171, "serverHost": "3.144.134.141", "serverPort": 27017, "awaited": true, "message": "Server heartbeat started"}
2025-03-13 15:48:36,895 - pymongo.connection - DEBUG - {"clientId": {"$oid": "67d2b80436e2980ea4233d92"}, "message": "Connection created", "serverHost": "3.144.134.141", "serverPort": 27017, "driverConnectionId": 1}
2025-03-13 15:48:37,653 - pymongo.connection - DEBUG - {"clientId": {"$oid": "67d2b80436e2980ea4233d92"}, "message": "Connection ready", "serverHost": "3.144.134.141", "serverPort": 27017, "driverConnectionId": 1, "durationMS": 0.5}
2025-03-13 15:48:37,654 - pymongo.connection - DEBUG - {"clientId": {"$oid": "67d2b80436e2980ea4233d92"}, "message": "Connection checked out", "serverHost": "3.144.134.141", "serverPort": 27017, "driverConnectionId": 1, "durationMS": 0.7649999999994179}
2025-03-13 15:48:37,654 - pymongo.command - DEBUG - {"clientId": {"$oid": "67d2b80436e2980ea4233d92"}, "message": "Command started", "command": "{\"ping\": 1, \"lsid\": {\"id\": {\"$binary\": {\"base64\": \"pwo32uQnT6iMbZ/NL3LxtA==\", \"subType\": \"04\"}}}, \"$db\": \"opal_server\"}", "commandName": "ping", "databaseName": "opal_server", "requestId": 6334, "operationId": 6334, "driverConnectionId": 1, "serverConnectionId": 13172, "serverHost": "3.144.134.141", "serverPort": 27017}
2025-03-13 15:48:37,897 - pymongo.command - DEBUG - {"clientId": {"$oid": "67d2b80436e2980ea4233d92"}, "message": "Command succeeded", "durationMS": 243.38899999999998, "reply": "{\"ok\": 1.0}", "commandName": "ping", "databaseName": "opal_server", "requestId": 6334, "operationId": 6334, "driverConnectionId": 1, "serverConnectionId": 13172, "serverHost": "3.144.134.141", "serverPort": 27017}
2025-03-13 15:48:37,898 - pymongo.connection - DEBUG - {"clientId": {"$oid": "67d2b80436e2980ea4233d92"}, "message": "Connection checked in", "serverHost": "3.144.134.141", "serverPort": 27017, "driverConnectionId": 1}
2025-03-13 15:48:44,108 - app.api.endpoints.reports - INFO - Processing violation trends request: start_date=datetime.datetime(2025, 3, 1, 10, 42, 32, 208000, tzinfo=TzInfo(UTC)) end_date=datetime.datetime(2025, 3, 13, 10, 42, 32, 208000, tzinfo=TzInfo(UTC)) group_by='driver' days=30 driver_uuid=''
2025-03-13 15:48:44,108 - app.services.predictive_analytics - INFO - Analyzing violation trends from 2025-03-01 10:42:32.208000+00:00 to 2025-03-13 10:42:32.208000+00:00 for all drivers
2025-03-13 15:48:44,108 - app.db.repositories.data_repository - INFO - Querying violations from 2025-03-01 10:42:32.208000+00:00 to 2025-03-13 10:42:32.208000+00:00
2025-03-13 15:48:44,108 - app.db.repositories.data_repository - DEBUG - Executing pipeline: [{'$match': {'event_time': {'$gte': datetime.datetime(2025, 3, 1, 10, 42, 32, 208000, tzinfo=TzInfo(UTC)), '$lte': datetime.datetime(2025, 3, 13, 10, 42, 32, 208000, tzinfo=TzInfo(UTC))}}}, {'$group': {'_id': {'time_period': {'$dateToString': {'format': '%Y-%m-%d', 'date': '$event_time'}}, 'violation_type': '$violation_type', 'driver_uuid': '$driver_uuid', 'driver_name': '$driver_name'}, 'count': {'$sum': 1}, 'high_severity_count': {'$sum': {'$cond': [{'$eq': ['$severity', 'HIGH']}, 1, 0]}}}}, {'$sort': {'_id.time_period': 1, '_id.driver_name': 1}}]
2025-03-13 15:48:44,109 - pymongo.serverSelection - DEBUG - {"message": "Server selection started", "selector": "Primary()", "operation": "aggregate", "topologyDescription": "<TopologyDescription id: 67d2b80436e2980ea4233d92, topology_type: Single, servers: [<ServerDescription ('3.144.134.141', 27017) server_type: Standalone, rtt: 0.25>]>", "clientId": {"$oid": "67d2b80436e2980ea4233d92"}}
2025-03-13 15:48:44,109 - pymongo.serverSelection - DEBUG - {"message": "Server selection succeeded", "selector": "Primary()", "operation": "aggregate", "topologyDescription": "<TopologyDescription id: 67d2b80436e2980ea4233d92, topology_type: Single, servers: [<ServerDescription ('3.144.134.141', 27017) server_type: Standalone, rtt: 0.25>]>", "clientId": {"$oid": "67d2b80436e2980ea4233d92"}, "serverHost": "3.144.134.141", "serverPort": 27017}
2025-03-13 15:48:44,110 - pymongo.connection - DEBUG - {"clientId": {"$oid": "67d2b80436e2980ea4233d92"}, "message": "Connection checkout started", "serverHost": "3.144.134.141", "serverPort": 27017}
2025-03-13 15:48:44,110 - pymongo.connection - DEBUG - {"clientId": {"$oid": "67d2b80436e2980ea4233d92"}, "message": "Connection checked out", "serverHost": "3.144.134.141", "serverPort": 27017, "driverConnectionId": 1, "durationMS": 0.0}
2025-03-13 15:48:44,111 - pymongo.command - DEBUG - {"clientId": {"$oid": "67d2b80436e2980ea4233d92"}, "message": "Command started", "command": "{\"aggregate\": \"violations\", \"pipeline\": [{\"$match\": {\"event_time\": {\"$gte\": {\"$date\": \"2025-03-01T10:42:32.208Z\"}, \"$lte\": {\"$date\": \"2025-03-13T10:42:32.208Z\"}}}}, {\"$group\": {\"_id\": {\"time_period\": {\"$dateToString\": {\"format\": \"%Y-%m-%d\", \"date\": \"$event_time\"}}, \"violation_type\": \"$violation_type\", \"driver_uuid\": \"$driver_uuid\", \"driver_name\": \"$driver_name\"}, \"count\": {\"$sum\": 1}, \"high_severity_count\": {\"$sum\": {\"$cond\": [{\"$eq\": [\"$severity\", \"HIGH\"]}, 1]}}}}, {\"$sort\": {\"_id.time_period\": 1, \"_id.driver_name\": 1}}], \"lsid\": {\"id\": {\"$binary\": {\"base64\": \"pwo32uQnT6iMbZ/NL3LxtA==\", \"subType\": \"04\"}}}, \"$db\": \"opal_server\"}", "commandName": "aggregate", "databaseName": "opal_server", "requestId": 26500, "operationId": 26500, "driverConnectionId": 1, "serverConnectionId": 13172, "serverHost": "3.144.134.141", "serverPort": 27017}
2025-03-13 15:48:44,626 - pymongo.command - DEBUG - {"clientId": {"$oid": "67d2b80436e2980ea4233d92"}, "message": "Command succeeded", "durationMS": 515.223, "reply": "{\"cursor\": {\"firstBatch\": [{\"_id\": {\"time_period\": \"2025-03-03\", \"violation_type\": \"SPEED_LOW\", \"driver_uuid\": \"fb6b6c56-18fd-4602-aa8d-10d95f46f3d5\", \"driver_name\": \"AMIR 95957295\"}, \"count\": 9}, {\"_id\": {\"time_period\": \"2025-03-03\", \"violation_type\": \"SPEED_MEDIUM\", \"driver_uuid\": \"fb6b6c56-18fd-4602-aa8d-10d95f46f3d5\", \"driver_name\": \"AMIR 95957295\"}, \"count\": 29}, {\"_id\": {\"time_period\": \"2025-03-03\", \"violation_type\": \"SPEED_MEDIUM\", \"driver_uuid\": \"3dd80f61-5ed1-4038-b3a8-5d2e37759893\", \"driver_name\": \"DALER SINGH\"}, \"count\": 19}, {\"_id\": {\"time_period\": \"2025-03-03\", \"violation_type\": \"SPEED_LOW\", \"driver_uuid\": \"3dd80f61-5ed1-4038-b3a8-5d2e37759893\", \"driver_name\": \"DALER SINGH\"}, \"count\": 29}, {\"_id\": {\"time_period\": \"2025-03-03\", \"violation_type\": \"SPEED_MEDIUM\", \"driver_uuid\": \"7463170a-de85-4c5d-a77b-b506d939aca1\", \"driver_name\": \"GUL ZAMAN #94378054\"}, \"count\": 6}, {\"_id\": {\"time_period\": \"2025-03-03\", \"violation_type\": \"SPEED_LOW\", \"driver_uuid\": \"7463170a-de85-4c5d-a77b-...", "commandName": "aggregate", "databaseName": "opal_server", "requestId": 26500, "operationId": 26500, "driverConnectionId": 1, "serverConnectionId": 13172, "serverHost": "3.144.134.141", "serverPort": 27017}
2025-03-13 15:48:44,627 - pymongo.connection - DEBUG - {"clientId": {"$oid": "67d2b80436e2980ea4233d92"}, "message": "Connection checked in", "serverHost": "3.144.134.141", "serverPort": 27017, "driverConnectionId": 1}
2025-03-13 15:48:44,628 - pymongo.serverSelection - DEBUG - {"message": "Server selection started", "selector": "<function any_server_selector at 0x0000019D22C88720>", "operation": "getMore", "topologyDescription": "<TopologyDescription id: 67d2b80436e2980ea4233d92, topology_type: Single, servers: [<ServerDescription ('3.144.134.141', 27017) server_type: Standalone, rtt: 0.25>]>", "clientId": {"$oid": "67d2b80436e2980ea4233d92"}}
2025-03-13 15:48:44,629 - pymongo.serverSelection - DEBUG - {"message": "Server selection succeeded", "selector": "<function any_server_selector at 0x0000019D22C88720>", "operation": "getMore", "topologyDescription": "<TopologyDescription id: 67d2b80436e2980ea4233d92, topology_type: Single, servers: [<ServerDescription ('3.144.134.141', 27017) server_type: Standalone, rtt: 0.25>]>", "clientId": {"$oid": "67d2b80436e2980ea4233d92"}, "serverHost": "3.144.134.141", "serverPort": 27017}
2025-03-13 15:48:44,629 - pymongo.connection - DEBUG - {"clientId": {"$oid": "67d2b80436e2980ea4233d92"}, "message": "Connection checkout started", "serverHost": "3.144.134.141", "serverPort": 27017}
2025-03-13 15:48:44,629 - pymongo.connection - DEBUG - {"clientId": {"$oid": "67d2b80436e2980ea4233d92"}, "message": "Connection checked out", "serverHost": "3.144.134.141", "serverPort": 27017, "driverConnectionId": 1, "durationMS": 0.0}
2025-03-13 15:48:44,629 - pymongo.command - DEBUG - {"clientId": {"$oid": "67d2b80436e2980ea4233d92"}, "message": "Command started", "command": "{\"getMore\": 3373892973855223843, \"collection\": \"violations\", \"lsid\": {\"id\": {\"$binary\": {\"base64\": \"pwo32uQnT6iMbZ/NL3LxtA==\", \"subType\": \"04\"}}}, \"$db\": \"opal_server\"}", "commandName": "getMore", "databaseName": "opal_server", "requestId": 19169, "operationId": 19169, "driverConnectionId": 1, "serverConnectionId": 13172, "serverHost": "3.144.134.141", "serverPort": 27017}
2025-03-13 15:48:45,610 - pymongo.command - DEBUG - {"clientId": {"$oid": "67d2b80436e2980ea4233d92"}, "message": "Command succeeded", "durationMS": 980.403, "reply": "{\"cursor\": {\"nextBatch\": [{\"_id\": {\"time_period\": \"2025-03-04\", \"violation_type\": \"SPEED_HIGH\", \"driver_uuid\": \"13457552\", \"driver_name\": \"Unknown\"}, \"count\": 2, \"high_severity_count\": 2}, {\"_id\": {\"time_period\": \"2025-03-04\", \"violation_type\": \"SPEED_LOW\", \"driver_uuid\": \"9928039\", \"driver_name\": \"Unknown\"}, \"count\": 10}, {\"_id\": {\"time_period\": \"2025-03-04\", \"violation_type\": \"SPEED_HIGH\", \"driver_uuid\": \"12861265\", \"driver_name\": \"Unknown\"}, \"count\": 1, \"high_severity_count\": 1}, {\"_id\": {\"time_period\": \"2025-03-04\", \"violation_type\": \"SPEED_LOW\", \"driver_uuid\": \"7465620\", \"driver_name\": \"Unknown\"}, \"count\": 1}, {\"_id\": {\"time_period\": \"2025-03-04\", \"violation_type\": \"SPEED_LOW\", \"driver_uuid\": \"unknown\", \"driver_name\": \"Unknown\"}, \"count\": 54}, {\"_id\": {\"time_period\": \"2025-03-04\", \"violation_type\": \"SPEED_HIGH\", \"driver_uuid\": \"3171915\", \"driver_name\": \"Unknown\"}, \"count\": 1, \"high_severity_count\": 1}, {\"_id\": {\"time_period\": \"2025-03-04\", \"violation_type\": \"SPEED_LOW\", \"driver_uu...", "commandName": "getMore", "databaseName": "opal_server", "requestId": 19169, "operationId": 19169, "driverConnectionId": 1, "serverConnectionId": 13172, "serverHost": "3.144.134.141", "serverPort": 27017}
2025-03-13 15:48:45,611 - pymongo.connection - DEBUG - {"clientId": {"$oid": "67d2b80436e2980ea4233d92"}, "message": "Connection checked in", "serverHost": "3.144.134.141", "serverPort": 27017, "driverConnectionId": 1}
2025-03-13 15:48:45,612 - app.db.repositories.data_repository - INFO - Found 1379 trend records
2025-03-13 15:48:45,613 - app.services.predictive_analytics - INFO - Processed 705 time period-driver combinations
2025-03-13 15:48:47,141 - pymongo.topology - DEBUG - {"topologyId": {"$oid": "67d2b80436e2980ea4233d92"}, "driverConnectionId": 1, "serverConnectionId": 13171, "serverHost": "3.144.134.141", "serverPort": 27017, "awaited": true, "durationMS": 10250.0, "reply": "{\"isWritablePrimary\": true, \"topologyVersion\": {\"processId\": {\"$oid\": \"67b7e5814f77c1a87c56d054\"}}, \"maxBsonObjectSize\": 16777216, \"maxMessageSizeBytes\": 48000000, \"maxWriteBatchSize\": 100000, \"localTime\": {\"$date\": \"2025-03-13T10:48:47.175Z\"}, \"logicalSessionTimeoutMinutes\": 30, \"connectionId\": 13171, \"maxWireVersion\": 25, \"ok\": 1.0}", "message": "Server heartbeat succeeded"}
2025-03-13 15:48:47,141 - pymongo.topology - DEBUG - {"topologyId": {"$oid": "67d2b80436e2980ea4233d92"}, "driverConnectionId": 1, "serverConnectionId": 13171, "serverHost": "3.144.134.141", "serverPort": 27017, "awaited": true, "message": "Server heartbeat started"}
2025-03-13 15:48:57,142 - pymongo.topology - DEBUG - {"topologyId": {"$oid": "67d2b80436e2980ea4233d92"}, "driverConnectionId": 1, "serverConnectionId": 13171, "serverHost": "3.144.134.141", "serverPort": 27017, "awaited": true, "durationMS": 10000.0, "reply": "{\"isWritablePrimary\": true, \"topologyVersion\": {\"processId\": {\"$oid\": \"67b7e5814f77c1a87c56d054\"}}, \"maxBsonObjectSize\": 16777216, \"maxMessageSizeBytes\": 48000000, \"maxWriteBatchSize\": 100000, \"localTime\": {\"$date\": \"2025-03-13T10:48:57.176Z\"}, \"logicalSessionTimeoutMinutes\": 30, \"connectionId\": 13171, \"maxWireVersion\": 25, \"ok\": 1.0}", "message": "Server heartbeat succeeded"}
2025-03-13 15:48:57,143 - pymongo.topology - DEBUG - {"topologyId": {"$oid": "67d2b80436e2980ea4233d92"}, "driverConnectionId": 1, "serverConnectionId": 13171, "serverHost": "3.144.134.141", "serverPort": 27017, "awaited": true, "message": "Server heartbeat started"}
2025-03-13 15:49:05,904 - app.api.endpoints.reports - INFO - Processing violation trends request: start_date=datetime.datetime(2025, 3, 10, 10, 42, 32, 208000, tzinfo=TzInfo(UTC)) end_date=datetime.datetime(2025, 3, 13, 10, 42, 32, 208000, tzinfo=TzInfo(UTC)) group_by='driver' days=30 driver_uuid=''
2025-03-13 15:49:05,904 - app.services.predictive_analytics - INFO - Analyzing violation trends from 2025-03-10 10:42:32.208000+00:00 to 2025-03-13 10:42:32.208000+00:00 for all drivers
2025-03-13 15:49:05,906 - app.db.repositories.data_repository - INFO - Querying violations from 2025-03-10 10:42:32.208000+00:00 to 2025-03-13 10:42:32.208000+00:00
2025-03-13 15:49:05,906 - app.db.repositories.data_repository - DEBUG - Executing pipeline: [{'$match': {'event_time': {'$gte': datetime.datetime(2025, 3, 10, 10, 42, 32, 208000, tzinfo=TzInfo(UTC)), '$lte': datetime.datetime(2025, 3, 13, 10, 42, 32, 208000, tzinfo=TzInfo(UTC))}}}, {'$group': {'_id': {'time_period': {'$dateToString': {'format': '%Y-%m-%d', 'date': '$event_time'}}, 'violation_type': '$violation_type', 'driver_uuid': '$driver_uuid', 'driver_name': '$driver_name'}, 'count': {'$sum': 1}, 'high_severity_count': {'$sum': {'$cond': [{'$eq': ['$severity', 'HIGH']}, 1, 0]}}}}, {'$sort': {'_id.time_period': 1, '_id.driver_name': 1}}]
2025-03-13 15:49:05,907 - pymongo.serverSelection - DEBUG - {"message": "Server selection started", "selector": "Primary()", "operation": "aggregate", "topologyDescription": "<TopologyDescription id: 67d2b80436e2980ea4233d92, topology_type: Single, servers: [<ServerDescription ('3.144.134.141', 27017) server_type: Standalone, rtt: 0.25>]>", "clientId": {"$oid": "67d2b80436e2980ea4233d92"}}
2025-03-13 15:49:05,907 - pymongo.serverSelection - DEBUG - {"message": "Server selection succeeded", "selector": "Primary()", "operation": "aggregate", "topologyDescription": "<TopologyDescription id: 67d2b80436e2980ea4233d92, topology_type: Single, servers: [<ServerDescription ('3.144.134.141', 27017) server_type: Standalone, rtt: 0.25>]>", "clientId": {"$oid": "67d2b80436e2980ea4233d92"}, "serverHost": "3.144.134.141", "serverPort": 27017}
2025-03-13 15:49:05,908 - pymongo.connection - DEBUG - {"clientId": {"$oid": "67d2b80436e2980ea4233d92"}, "message": "Connection checkout started", "serverHost": "3.144.134.141", "serverPort": 27017}
2025-03-13 15:49:05,908 - pymongo.connection - DEBUG - {"clientId": {"$oid": "67d2b80436e2980ea4233d92"}, "message": "Connection checked out", "serverHost": "3.144.134.141", "serverPort": 27017, "driverConnectionId": 1, "durationMS": 0.0}
2025-03-13 15:49:05,908 - pymongo.command - DEBUG - {"clientId": {"$oid": "67d2b80436e2980ea4233d92"}, "message": "Command started", "command": "{\"aggregate\": \"violations\", \"pipeline\": [{\"$match\": {\"event_time\": {\"$gte\": {\"$date\": \"2025-03-10T10:42:32.208Z\"}, \"$lte\": {\"$date\": \"2025-03-13T10:42:32.208Z\"}}}}, {\"$group\": {\"_id\": {\"time_period\": {\"$dateToString\": {\"format\": \"%Y-%m-%d\", \"date\": \"$event_time\"}}, \"violation_type\": \"$violation_type\", \"driver_uuid\": \"$driver_uuid\", \"driver_name\": \"$driver_name\"}, \"count\": {\"$sum\": 1}, \"high_severity_count\": {\"$sum\": {\"$cond\": [{\"$eq\": [\"$severity\", \"HIGH\"]}, 1]}}}}, {\"$sort\": {\"_id.time_period\": 1, \"_id.driver_name\": 1}}], \"lsid\": {\"id\": {\"$binary\": {\"base64\": \"pwo32uQnT6iMbZ/NL3LxtA==\", \"subType\": \"04\"}}}, \"$db\": \"opal_server\"}", "commandName": "aggregate", "databaseName": "opal_server", "requestId": 15724, "operationId": 15724, "driverConnectionId": 1, "serverConnectionId": 13172, "serverHost": "3.144.134.141", "serverPort": 27017}
2025-03-13 15:49:06,410 - pymongo.command - DEBUG - {"clientId": {"$oid": "67d2b80436e2980ea4233d92"}, "message": "Command succeeded", "durationMS": 500.997, "reply": "{\"cursor\": {\"firstBatch\": [{\"_id\": {\"time_period\": \"2025-03-10\", \"violation_type\": \"SPEED_LOW\", \"driver_uuid\": \"fb6b6c56-18fd-4602-aa8d-10d95f46f3d5\", \"driver_name\": \"AMIR 95957295\"}, \"count\": 18}, {\"_id\": {\"time_period\": \"2025-03-10\", \"violation_type\": \"SPEED_MEDIUM\", \"driver_uuid\": \"fb6b6c56-18fd-4602-aa8d-10d95f46f3d5\", \"driver_name\": \"AMIR 95957295\"}, \"count\": 17}, {\"_id\": {\"time_period\": \"2025-03-10\", \"violation_type\": \"SPEED_MEDIUM\", \"driver_uuid\": \"3dd80f61-5ed1-4038-b3a8-5d2e37759893\", \"driver_name\": \"DALER SINGH\"}, \"count\": 84}, {\"_id\": {\"time_period\": \"2025-03-10\", \"violation_type\": \"SPEED_LOW\", \"driver_uuid\": \"3dd80f61-5ed1-4038-b3a8-5d2e37759893\", \"driver_name\": \"DALER SINGH\"}, \"count\": 32}, {\"_id\": {\"time_period\": \"2025-03-10\", \"violation_type\": \"SPEED_LOW\", \"driver_uuid\": \"7463170a-de85-4c5d-a77b-b506d939aca1\", \"driver_name\": \"GUL ZAMAN #94378054\"}, \"count\": 7}, {\"_id\": {\"time_period\": \"2025-03-10\", \"violation_type\": \"SPEED_MEDIUM\", \"driver_uuid\": \"7463170a-de85-4c5d-a77b...", "commandName": "aggregate", "databaseName": "opal_server", "requestId": 15724, "operationId": 15724, "driverConnectionId": 1, "serverConnectionId": 13172, "serverHost": "3.144.134.141", "serverPort": 27017}
2025-03-13 15:49:06,410 - pymongo.connection - DEBUG - {"clientId": {"$oid": "67d2b80436e2980ea4233d92"}, "message": "Connection checked in", "serverHost": "3.144.134.141", "serverPort": 27017, "driverConnectionId": 1}
2025-03-13 15:49:06,411 - pymongo.serverSelection - DEBUG - {"message": "Server selection started", "selector": "<function any_server_selector at 0x0000019D22C88720>", "operation": "getMore", "topologyDescription": "<TopologyDescription id: 67d2b80436e2980ea4233d92, topology_type: Single, servers: [<ServerDescription ('3.144.134.141', 27017) server_type: Standalone, rtt: 0.25>]>", "clientId": {"$oid": "67d2b80436e2980ea4233d92"}}
2025-03-13 15:49:06,411 - pymongo.serverSelection - DEBUG - {"message": "Server selection succeeded", "selector": "<function any_server_selector at 0x0000019D22C88720>", "operation": "getMore", "topologyDescription": "<TopologyDescription id: 67d2b80436e2980ea4233d92, topology_type: Single, servers: [<ServerDescription ('3.144.134.141', 27017) server_type: Standalone, rtt: 0.25>]>", "clientId": {"$oid": "67d2b80436e2980ea4233d92"}, "serverHost": "3.144.134.141", "serverPort": 27017}
2025-03-13 15:49:06,412 - pymongo.connection - DEBUG - {"clientId": {"$oid": "67d2b80436e2980ea4233d92"}, "message": "Connection checkout started", "serverHost": "3.144.134.141", "serverPort": 27017}
2025-03-13 15:49:06,412 - pymongo.connection - DEBUG - {"clientId": {"$oid": "67d2b80436e2980ea4233d92"}, "message": "Connection checked out", "serverHost": "3.144.134.141", "serverPort": 27017, "driverConnectionId": 1, "durationMS": 0.0}
2025-03-13 15:49:06,412 - pymongo.command - DEBUG - {"clientId": {"$oid": "67d2b80436e2980ea4233d92"}, "message": "Command started", "command": "{\"getMore\": 5611053789106975373, \"collection\": \"violations\", \"lsid\": {\"id\": {\"$binary\": {\"base64\": \"pwo32uQnT6iMbZ/NL3LxtA==\", \"subType\": \"04\"}}}, \"$db\": \"opal_server\"}", "commandName": "getMore", "databaseName": "opal_server", "requestId": 11478, "operationId": 11478, "driverConnectionId": 1, "serverConnectionId": 13172, "serverHost": "3.144.134.141", "serverPort": 27017}
2025-03-13 15:49:06,904 - pymongo.command - DEBUG - {"clientId": {"$oid": "67d2b80436e2980ea4233d92"}, "message": "Command succeeded", "durationMS": 491.353, "reply": "{\"cursor\": {\"nextBatch\": [{\"_id\": {\"time_period\": \"2025-03-11\", \"violation_type\": \"SPEED_MEDIUM\", \"driver_uuid\": \"12854230\", \"driver_name\": \"Unknown\"}, \"count\": 1}, {\"_id\": {\"time_period\": \"2025-03-11\", \"violation_type\": \"SPEED_LOW\", \"driver_uuid\": \"13399355\", \"driver_name\": \"Unknown\"}, \"count\": 2}, {\"_id\": {\"time_period\": \"2025-03-11\", \"violation_type\": \"SPEED_MEDIUM\", \"driver_uuid\": \"1227148\", \"driver_name\": \"Unknown\"}, \"count\": 2}, {\"_id\": {\"time_period\": \"2025-03-11\", \"violation_type\": \"SPEED_LOW\", \"driver_uuid\": \"12923083\", \"driver_name\": \"Unknown\"}, \"count\": 1}, {\"_id\": {\"time_period\": \"2025-03-11\", \"violation_type\": \"SPEED_HIGH\", \"driver_uuid\": \"13394592\", \"driver_name\": \"Unknown\"}, \"count\": 1, \"high_severity_count\": 1}, {\"_id\": {\"time_period\": \"2025-03-11\", \"violation_type\": \"SPEED_MEDIUM\", \"driver_uuid\": \"10003181\", \"driver_name\": \"Unknown\"}, \"count\": 8}, {\"_id\": {\"time_period\": \"2025-03-11\", \"violation_type\": \"SPEED_LOW\", \"driver_uuid\": \"10009164\", \"driver_name\": \"Unknown\"}, ...", "commandName": "getMore", "databaseName": "opal_server", "requestId": 11478, "operationId": 11478, "driverConnectionId": 1, "serverConnectionId": 13172, "serverHost": "3.144.134.141", "serverPort": 27017}
2025-03-13 15:49:06,905 - pymongo.connection - DEBUG - {"clientId": {"$oid": "67d2b80436e2980ea4233d92"}, "message": "Connection checked in", "serverHost": "3.144.134.141", "serverPort": 27017, "driverConnectionId": 1}
2025-03-13 15:49:06,905 - app.db.repositories.data_repository - INFO - Found 483 trend records
2025-03-13 15:49:06,906 - app.services.predictive_analytics - INFO - Processed 252 time period-driver combinations
2025-03-13 15:49:07,142 - pymongo.topology - DEBUG - {"topologyId": {"$oid": "67d2b80436e2980ea4233d92"}, "driverConnectionId": 1, "serverConnectionId": 13171, "serverHost": "3.144.134.141", "serverPort": 27017, "awaited": true, "durationMS": 10000.0, "reply": "{\"isWritablePrimary\": true, \"topologyVersion\": {\"processId\": {\"$oid\": \"67b7e5814f77c1a87c56d054\"}}, \"maxBsonObjectSize\": 16777216, \"maxMessageSizeBytes\": 48000000, \"maxWriteBatchSize\": 100000, \"localTime\": {\"$date\": \"2025-03-13T10:49:07.177Z\"}, \"logicalSessionTimeoutMinutes\": 30, \"connectionId\": 13171, \"maxWireVersion\": 25, \"ok\": 1.0}", "message": "Server heartbeat succeeded"}
2025-03-13 15:49:07,143 - pymongo.topology - DEBUG - {"topologyId": {"$oid": "67d2b80436e2980ea4233d92"}, "driverConnectionId": 1, "serverConnectionId": 13171, "serverHost": "3.144.134.141", "serverPort": 27017, "awaited": true, "message": "Server heartbeat started"}
2025-03-13 15:49:16,351 - app.api.endpoints.reports - INFO - Processing violation trends request: start_date=datetime.datetime(2025, 3, 10, 10, 42, 32, 208000, tzinfo=TzInfo(UTC)) end_date=datetime.datetime(2025, 3, 13, 10, 42, 32, 208000, tzinfo=TzInfo(UTC)) group_by='driver' days=30 driver_uuid=''
2025-03-13 15:49:16,351 - app.services.predictive_analytics - INFO - Analyzing violation trends from 2025-03-10 10:42:32.208000+00:00 to 2025-03-13 10:42:32.208000+00:00 for all drivers
2025-03-13 15:49:16,351 - app.db.repositories.data_repository - INFO - Querying violations from 2025-03-10 10:42:32.208000+00:00 to 2025-03-13 10:42:32.208000+00:00
2025-03-13 15:49:16,351 - app.db.repositories.data_repository - DEBUG - Executing pipeline: [{'$match': {'event_time': {'$gte': datetime.datetime(2025, 3, 10, 10, 42, 32, 208000, tzinfo=TzInfo(UTC)), '$lte': datetime.datetime(2025, 3, 13, 10, 42, 32, 208000, tzinfo=TzInfo(UTC))}}}, {'$group': {'_id': {'time_period': {'$dateToString': {'format': '%Y-%m-%d', 'date': '$event_time'}}, 'violation_type': '$violation_type', 'driver_uuid': '$driver_uuid', 'driver_name': '$driver_name'}, 'count': {'$sum': 1}, 'high_severity_count': {'$sum': {'$cond': [{'$eq': ['$severity', 'HIGH']}, 1, 0]}}}}, {'$sort': {'_id.time_period': 1, '_id.driver_name': 1}}]
2025-03-13 15:49:16,352 - pymongo.serverSelection - DEBUG - {"message": "Server selection started", "selector": "Primary()", "operation": "aggregate", "topologyDescription": "<TopologyDescription id: 67d2b80436e2980ea4233d92, topology_type: Single, servers: [<ServerDescription ('3.144.134.141', 27017) server_type: Standalone, rtt: 0.25>]>", "clientId": {"$oid": "67d2b80436e2980ea4233d92"}}
2025-03-13 15:49:16,353 - pymongo.serverSelection - DEBUG - {"message": "Server selection succeeded", "selector": "Primary()", "operation": "aggregate", "topologyDescription": "<TopologyDescription id: 67d2b80436e2980ea4233d92, topology_type: Single, servers: [<ServerDescription ('3.144.134.141', 27017) server_type: Standalone, rtt: 0.25>]>", "clientId": {"$oid": "67d2b80436e2980ea4233d92"}, "serverHost": "3.144.134.141", "serverPort": 27017}
2025-03-13 15:49:16,353 - pymongo.connection - DEBUG - {"clientId": {"$oid": "67d2b80436e2980ea4233d92"}, "message": "Connection checkout started", "serverHost": "3.144.134.141", "serverPort": 27017}
2025-03-13 15:49:16,353 - pymongo.connection - DEBUG - {"clientId": {"$oid": "67d2b80436e2980ea4233d92"}, "message": "Connection checked out", "serverHost": "3.144.134.141", "serverPort": 27017, "driverConnectionId": 1, "durationMS": 0.0}
2025-03-13 15:49:16,354 - pymongo.command - DEBUG - {"clientId": {"$oid": "67d2b80436e2980ea4233d92"}, "message": "Command started", "command": "{\"aggregate\": \"violations\", \"pipeline\": [{\"$match\": {\"event_time\": {\"$gte\": {\"$date\": \"2025-03-10T10:42:32.208Z\"}, \"$lte\": {\"$date\": \"2025-03-13T10:42:32.208Z\"}}}}, {\"$group\": {\"_id\": {\"time_period\": {\"$dateToString\": {\"format\": \"%Y-%m-%d\", \"date\": \"$event_time\"}}, \"violation_type\": \"$violation_type\", \"driver_uuid\": \"$driver_uuid\", \"driver_name\": \"$driver_name\"}, \"count\": {\"$sum\": 1}, \"high_severity_count\": {\"$sum\": {\"$cond\": [{\"$eq\": [\"$severity\", \"HIGH\"]}, 1]}}}}, {\"$sort\": {\"_id.time_period\": 1, \"_id.driver_name\": 1}}], \"lsid\": {\"id\": {\"$binary\": {\"base64\": \"pwo32uQnT6iMbZ/NL3LxtA==\", \"subType\": \"04\"}}}, \"$db\": \"opal_server\"}", "commandName": "aggregate", "databaseName": "opal_server", "requestId": 29358, "operationId": 29358, "driverConnectionId": 1, "serverConnectionId": 13172, "serverHost": "3.144.134.141", "serverPort": 27017}
2025-03-13 15:49:16,855 - pymongo.command - DEBUG - {"clientId": {"$oid": "67d2b80436e2980ea4233d92"}, "message": "Command succeeded", "durationMS": 500.664, "reply": "{\"cursor\": {\"firstBatch\": [{\"_id\": {\"time_period\": \"2025-03-10\", \"violation_type\": \"SPEED_LOW\", \"driver_uuid\": \"fb6b6c56-18fd-4602-aa8d-10d95f46f3d5\", \"driver_name\": \"AMIR 95957295\"}, \"count\": 18}, {\"_id\": {\"time_period\": \"2025-03-10\", \"violation_type\": \"SPEED_MEDIUM\", \"driver_uuid\": \"fb6b6c56-18fd-4602-aa8d-10d95f46f3d5\", \"driver_name\": \"AMIR 95957295\"}, \"count\": 17}, {\"_id\": {\"time_period\": \"2025-03-10\", \"violation_type\": \"SPEED_MEDIUM\", \"driver_uuid\": \"3dd80f61-5ed1-4038-b3a8-5d2e37759893\", \"driver_name\": \"DALER SINGH\"}, \"count\": 84}, {\"_id\": {\"time_period\": \"2025-03-10\", \"violation_type\": \"SPEED_LOW\", \"driver_uuid\": \"3dd80f61-5ed1-4038-b3a8-5d2e37759893\", \"driver_name\": \"DALER SINGH\"}, \"count\": 32}, {\"_id\": {\"time_period\": \"2025-03-10\", \"violation_type\": \"SPEED_LOW\", \"driver_uuid\": \"7463170a-de85-4c5d-a77b-b506d939aca1\", \"driver_name\": \"GUL ZAMAN #94378054\"}, \"count\": 7}, {\"_id\": {\"time_period\": \"2025-03-10\", \"violation_type\": \"SPEED_MEDIUM\", \"driver_uuid\": \"7463170a-de85-4c5d-a77b...", "commandName": "aggregate", "databaseName": "opal_server", "requestId": 29358, "operationId": 29358, "driverConnectionId": 1, "serverConnectionId": 13172, "serverHost": "3.144.134.141", "serverPort": 27017}
2025-03-13 15:49:16,856 - pymongo.connection - DEBUG - {"clientId": {"$oid": "67d2b80436e2980ea4233d92"}, "message": "Connection checked in", "serverHost": "3.144.134.141", "serverPort": 27017, "driverConnectionId": 1}
2025-03-13 15:49:16,856 - pymongo.serverSelection - DEBUG - {"message": "Server selection started", "selector": "<function any_server_selector at 0x0000019D22C88720>", "operation": "getMore", "topologyDescription": "<TopologyDescription id: 67d2b80436e2980ea4233d92, topology_type: Single, servers: [<ServerDescription ('3.144.134.141', 27017) server_type: Standalone, rtt: 0.25>]>", "clientId": {"$oid": "67d2b80436e2980ea4233d92"}}
2025-03-13 15:49:16,857 - pymongo.serverSelection - DEBUG - {"message": "Server selection succeeded", "selector": "<function any_server_selector at 0x0000019D22C88720>", "operation": "getMore", "topologyDescription": "<TopologyDescription id: 67d2b80436e2980ea4233d92, topology_type: Single, servers: [<ServerDescription ('3.144.134.141', 27017) server_type: Standalone, rtt: 0.25>]>", "clientId": {"$oid": "67d2b80436e2980ea4233d92"}, "serverHost": "3.144.134.141", "serverPort": 27017}
2025-03-13 15:49:16,857 - pymongo.connection - DEBUG - {"clientId": {"$oid": "67d2b80436e2980ea4233d92"}, "message": "Connection checkout started", "serverHost": "3.144.134.141", "serverPort": 27017}
2025-03-13 15:49:16,857 - pymongo.connection - DEBUG - {"clientId": {"$oid": "67d2b80436e2980ea4233d92"}, "message": "Connection checked out", "serverHost": "3.144.134.141", "serverPort": 27017, "driverConnectionId": 1, "durationMS": 0.0}
2025-03-13 15:49:16,858 - pymongo.command - DEBUG - {"clientId": {"$oid": "67d2b80436e2980ea4233d92"}, "message": "Command started", "command": "{\"getMore\": 687469549384996269, \"collection\": \"violations\", \"lsid\": {\"id\": {\"$binary\": {\"base64\": \"pwo32uQnT6iMbZ/NL3LxtA==\", \"subType\": \"04\"}}}, \"$db\": \"opal_server\"}", "commandName": "getMore", "databaseName": "opal_server", "requestId": 26962, "operationId": 26962, "driverConnectionId": 1, "serverConnectionId": 13172, "serverHost": "3.144.134.141", "serverPort": 27017}
2025-03-13 15:49:17,143 - pymongo.topology - DEBUG - {"topologyId": {"$oid": "67d2b80436e2980ea4233d92"}, "driverConnectionId": 1, "serverConnectionId": 13171, "serverHost": "3.144.134.141", "serverPort": 27017, "awaited": true, "durationMS": 10000.0, "reply": "{\"isWritablePrimary\": true, \"topologyVersion\": {\"processId\": {\"$oid\": \"67b7e5814f77c1a87c56d054\"}}, \"maxBsonObjectSize\": 16777216, \"maxMessageSizeBytes\": 48000000, \"maxWriteBatchSize\": 100000, \"localTime\": {\"$date\": \"2025-03-13T10:49:17.178Z\"}, \"logicalSessionTimeoutMinutes\": 30, \"connectionId\": 13171, \"maxWireVersion\": 25, \"ok\": 1.0}", "message": "Server heartbeat succeeded"}
2025-03-13 15:49:17,144 - pymongo.topology - DEBUG - {"topologyId": {"$oid": "67d2b80436e2980ea4233d92"}, "driverConnectionId": 1, "serverConnectionId": 13171, "serverHost": "3.144.134.141", "serverPort": 27017, "awaited": true, "message": "Server heartbeat started"}
2025-03-13 15:49:17,352 - pymongo.command - DEBUG - {"clientId": {"$oid": "67d2b80436e2980ea4233d92"}, "message": "Command succeeded", "durationMS": 493.471, "reply": "{\"cursor\": {\"nextBatch\": [{\"_id\": {\"time_period\": \"2025-03-11\", \"violation_type\": \"SPEED_MEDIUM\", \"driver_uuid\": \"12854230\", \"driver_name\": \"Unknown\"}, \"count\": 1}, {\"_id\": {\"time_period\": \"2025-03-11\", \"violation_type\": \"SPEED_LOW\", \"driver_uuid\": \"13399355\", \"driver_name\": \"Unknown\"}, \"count\": 2}, {\"_id\": {\"time_period\": \"2025-03-11\", \"violation_type\": \"SPEED_MEDIUM\", \"driver_uuid\": \"1227148\", \"driver_name\": \"Unknown\"}, \"count\": 2}, {\"_id\": {\"time_period\": \"2025-03-11\", \"violation_type\": \"SPEED_LOW\", \"driver_uuid\": \"12923083\", \"driver_name\": \"Unknown\"}, \"count\": 1}, {\"_id\": {\"time_period\": \"2025-03-11\", \"violation_type\": \"SPEED_HIGH\", \"driver_uuid\": \"13394592\", \"driver_name\": \"Unknown\"}, \"count\": 1, \"high_severity_count\": 1}, {\"_id\": {\"time_period\": \"2025-03-11\", \"violation_type\": \"SPEED_MEDIUM\", \"driver_uuid\": \"10003181\", \"driver_name\": \"Unknown\"}, \"count\": 8}, {\"_id\": {\"time_period\": \"2025-03-11\", \"violation_type\": \"SPEED_LOW\", \"driver_uuid\": \"10009164\", \"driver_name\": \"Unknown\"}, ...", "commandName": "getMore", "databaseName": "opal_server", "requestId": 26962, "operationId": 26962, "driverConnectionId": 1, "serverConnectionId": 13172, "serverHost": "3.144.134.141", "serverPort": 27017}
2025-03-13 15:49:17,353 - pymongo.connection - DEBUG - {"clientId": {"$oid": "67d2b80436e2980ea4233d92"}, "message": "Connection checked in", "serverHost": "3.144.134.141", "serverPort": 27017, "driverConnectionId": 1}
2025-03-13 15:49:17,355 - app.db.repositories.data_repository - INFO - Found 483 trend records
2025-03-13 15:49:17,356 - app.services.predictive_analytics - INFO - Processed 252 time period-driver combinations
2025-03-13 15:49:17,357 - fontTools.ttLib.ttFont - DEBUG - Reading 'head' table from disk
2025-03-13 15:49:17,358 - fontTools.ttLib.ttFont - DEBUG - Decompiling 'head' table
2025-03-13 15:49:17,358 - fontTools.ttLib.ttFont - DEBUG - Reading 'hmtx' table from disk
2025-03-13 15:49:17,358 - fontTools.ttLib.ttFont - DEBUG - Decompiling 'hmtx' table
2025-03-13 15:49:17,358 - fontTools.ttLib.ttFont - DEBUG - Reading 'maxp' table from disk
2025-03-13 15:49:17,358 - fontTools.ttLib.ttFont - DEBUG - Decompiling 'maxp' table
2025-03-13 15:49:17,359 - fontTools.ttLib.ttFont - DEBUG - Reading 'hhea' table from disk
2025-03-13 15:49:17,361 - fontTools.ttLib.ttFont - DEBUG - Decompiling 'hhea' table
2025-03-13 15:49:17,361 - fontTools.ttLib.ttFont - DEBUG - Reading 'post' table from disk
2025-03-13 15:49:17,361 - fontTools.ttLib.ttFont - DEBUG - Decompiling 'post' table
2025-03-13 15:49:17,362 - fontTools.ttLib.ttFont - DEBUG - Reading 'cmap' table from disk
2025-03-13 15:49:17,362 - fontTools.ttLib.ttFont - DEBUG - Decompiling 'cmap' table
2025-03-13 15:49:17,376 - fontTools.ttLib.ttFont - DEBUG - Reading 'OS/2' table from disk
2025-03-13 15:49:17,378 - fontTools.ttLib.ttFont - DEBUG - Decompiling 'OS/2' table
2025-03-13 15:49:17,378 - fontTools.ttLib.ttFont - DEBUG - Reading 'cmap' table from disk
2025-03-13 15:49:17,378 - fontTools.ttLib.ttFont - DEBUG - Decompiling 'cmap' table
2025-03-13 15:49:17,382 - fontTools.ttLib.ttFont - DEBUG - Reading 'name' table from disk
2025-03-13 15:49:17,382 - fontTools.ttLib.ttFont - DEBUG - Decompiling 'name' table
2025-03-13 15:49:17,384 - fontTools.ttLib.ttFont - DEBUG - Reading 'head' table from disk
2025-03-13 15:49:17,384 - fontTools.ttLib.ttFont - DEBUG - Decompiling 'head' table
2025-03-13 15:49:17,385 - fontTools.ttLib.ttFont - DEBUG - Reading 'hmtx' table from disk
2025-03-13 15:49:17,385 - fontTools.ttLib.ttFont - DEBUG - Decompiling 'hmtx' table
2025-03-13 15:49:17,385 - fontTools.ttLib.ttFont - DEBUG - Reading 'maxp' table from disk
2025-03-13 15:49:17,385 - fontTools.ttLib.ttFont - DEBUG - Decompiling 'maxp' table
2025-03-13 15:49:17,385 - fontTools.ttLib.ttFont - DEBUG - Reading 'hhea' table from disk
2025-03-13 15:49:17,386 - fontTools.ttLib.ttFont - DEBUG - Decompiling 'hhea' table
2025-03-13 15:49:17,386 - fontTools.ttLib.ttFont - DEBUG - Reading 'post' table from disk
2025-03-13 15:49:17,386 - fontTools.ttLib.ttFont - DEBUG - Decompiling 'post' table
2025-03-13 15:49:17,387 - fontTools.ttLib.ttFont - DEBUG - Reading 'cmap' table from disk
2025-03-13 15:49:17,387 - fontTools.ttLib.ttFont - DEBUG - Decompiling 'cmap' table
2025-03-13 15:49:17,477 - fontTools.ttLib.ttFont - DEBUG - Reading 'OS/2' table from disk
2025-03-13 15:49:17,477 - fontTools.ttLib.ttFont - DEBUG - Decompiling 'OS/2' table
2025-03-13 15:49:17,478 - fontTools.ttLib.ttFont - DEBUG - Reading 'cmap' table from disk
2025-03-13 15:49:17,478 - fontTools.ttLib.ttFont - DEBUG - Decompiling 'cmap' table
2025-03-13 15:49:17,481 - fontTools.ttLib.ttFont - DEBUG - Reading 'name' table from disk
2025-03-13 15:49:17,482 - fontTools.ttLib.ttFont - DEBUG - Decompiling 'name' table
2025-03-13 15:49:17,491 - PIL.PngImagePlugin - DEBUG - STREAM b'IHDR' 16 13
2025-03-13 15:49:17,491 - PIL.PngImagePlugin - DEBUG - STREAM b'tEXt' 41 25
2025-03-13 15:49:17,491 - PIL.PngImagePlugin - DEBUG - STREAM b'IDAT' 78 35679
2025-03-13 15:49:17,601 - matplotlib.pyplot - DEBUG - Loaded backend qtagg version 5.15.10.
2025-03-13 15:49:17,643 - matplotlib.font_manager - DEBUG - findfont: Matching sans\-serif:style=normal:variant=normal:weight=normal:stretch=normal:size=10.0.
2025-03-13 15:49:17,643 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Users\\msameerakram\\AppData\\Local\\anaconda3\\Lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\cmss10.ttf', name='cmss10', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-13 15:49:17,643 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Users\\msameerakram\\AppData\\Local\\anaconda3\\Lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\DejaVuSans-Oblique.ttf', name='DejaVu Sans', style='oblique', variant='normal', weight=400, stretch='normal', size='scalable')) = 1.05
2025-03-13 15:49:17,644 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Users\\msameerakram\\AppData\\Local\\anaconda3\\Lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\cmb10.ttf', name='cmb10', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-13 15:49:17,644 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Users\\msameerakram\\AppData\\Local\\anaconda3\\Lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\DejaVuSansDisplay.ttf', name='DejaVu Sans Display', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-13 15:49:17,644 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Users\\msameerakram\\AppData\\Local\\anaconda3\\Lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\DejaVuSansMono-Oblique.ttf', name='DejaVu Sans Mono', style='oblique', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-03-13 15:49:17,644 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Users\\msameerakram\\AppData\\Local\\anaconda3\\Lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXSizFiveSymReg.ttf', name='STIXSizeFiveSym', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-13 15:49:17,645 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Users\\msameerakram\\AppData\\Local\\anaconda3\\Lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\DejaVuSansMono.ttf', name='DejaVu Sans Mono', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-13 15:49:17,646 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Users\\msameerakram\\AppData\\Local\\anaconda3\\Lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\DejaVuSans.ttf', name='DejaVu Sans', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 0.05
2025-03-13 15:49:17,646 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Users\\msameerakram\\AppData\\Local\\anaconda3\\Lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXGeneralBolIta.ttf', name='STIXGeneral', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2025-03-13 15:49:17,646 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Users\\msameerakram\\AppData\\Local\\anaconda3\\Lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXSizThreeSymBol.ttf', name='STIXSizeThreeSym', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-03-13 15:49:17,646 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Users\\msameerakram\\AppData\\Local\\anaconda3\\Lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXNonUniBolIta.ttf', name='STIXNonUnicode', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2025-03-13 15:49:17,646 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Users\\msameerakram\\AppData\\Local\\anaconda3\\Lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXGeneralItalic.ttf', name='STIXGeneral', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-03-13 15:49:17,647 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Users\\msameerakram\\AppData\\Local\\anaconda3\\Lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\DejaVuSerif-Bold.ttf', name='DejaVu Serif', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-03-13 15:49:17,647 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Users\\msameerakram\\AppData\\Local\\anaconda3\\Lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXSizTwoSymReg.ttf', name='STIXSizeTwoSym', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-13 15:49:17,647 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Users\\msameerakram\\AppData\\Local\\anaconda3\\Lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\DejaVuSansMono-Bold.ttf', name='DejaVu Sans Mono', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-03-13 15:49:17,647 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Users\\msameerakram\\AppData\\Local\\anaconda3\\Lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\cmr10.ttf', name='cmr10', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-13 15:49:17,647 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Users\\msameerakram\\AppData\\Local\\anaconda3\\Lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXSizFourSymBol.ttf', name='STIXSizeFourSym', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-03-13 15:49:17,648 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Users\\msameerakram\\AppData\\Local\\anaconda3\\Lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\cmtt10.ttf', name='cmtt10', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-13 15:49:17,648 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Users\\msameerakram\\AppData\\Local\\anaconda3\\Lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXSizTwoSymBol.ttf', name='STIXSizeTwoSym', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-03-13 15:49:17,648 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Users\\msameerakram\\AppData\\Local\\anaconda3\\Lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXGeneral.ttf', name='STIXGeneral', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-13 15:49:17,648 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Users\\msameerakram\\AppData\\Local\\anaconda3\\Lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXNonUni.ttf', name='STIXNonUnicode', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-13 15:49:17,648 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Users\\msameerakram\\AppData\\Local\\anaconda3\\Lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\DejaVuSansMono-BoldOblique.ttf', name='DejaVu Sans Mono', style='oblique', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2025-03-13 15:49:17,648 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Users\\msameerakram\\AppData\\Local\\anaconda3\\Lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXSizFourSymReg.ttf', name='STIXSizeFourSym', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-13 15:49:17,649 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Users\\msameerakram\\AppData\\Local\\anaconda3\\Lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXSizOneSymReg.ttf', name='STIXSizeOneSym', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-13 15:49:17,649 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Users\\msameerakram\\AppData\\Local\\anaconda3\\Lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXNonUniBol.ttf', name='STIXNonUnicode', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-03-13 15:49:17,649 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Users\\msameerakram\\AppData\\Local\\anaconda3\\Lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXSizThreeSymReg.ttf', name='STIXSizeThreeSym', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-13 15:49:17,649 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Users\\msameerakram\\AppData\\Local\\anaconda3\\Lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\cmsy10.ttf', name='cmsy10', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-13 15:49:17,649 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Users\\msameerakram\\AppData\\Local\\anaconda3\\Lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\DejaVuSans-Bold.ttf', name='DejaVu Sans', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 0.33499999999999996
2025-03-13 15:49:17,649 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Users\\msameerakram\\AppData\\Local\\anaconda3\\Lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\cmmi10.ttf', name='cmmi10', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-13 15:49:17,650 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Users\\msameerakram\\AppData\\Local\\anaconda3\\Lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\DejaVuSans-BoldOblique.ttf', name='DejaVu Sans', style='oblique', variant='normal', weight=700, stretch='normal', size='scalable')) = 1.335
2025-03-13 15:49:17,650 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Users\\msameerakram\\AppData\\Local\\anaconda3\\Lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXGeneralBol.ttf', name='STIXGeneral', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-03-13 15:49:17,650 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Users\\msameerakram\\AppData\\Local\\anaconda3\\Lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\cmex10.ttf', name='cmex10', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-13 15:49:17,650 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Users\\msameerakram\\AppData\\Local\\anaconda3\\Lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\DejaVuSerif-Italic.ttf', name='DejaVu Serif', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-03-13 15:49:17,650 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Users\\msameerakram\\AppData\\Local\\anaconda3\\Lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\DejaVuSerifDisplay.ttf', name='DejaVu Serif Display', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-13 15:49:17,650 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Users\\msameerakram\\AppData\\Local\\anaconda3\\Lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXSizOneSymBol.ttf', name='STIXSizeOneSym', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-03-13 15:49:17,651 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Users\\msameerakram\\AppData\\Local\\anaconda3\\Lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\DejaVuSerif.ttf', name='DejaVu Serif', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-13 15:49:17,651 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Users\\msameerakram\\AppData\\Local\\anaconda3\\Lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXNonUniIta.ttf', name='STIXNonUnicode', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-03-13 15:49:17,651 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Users\\msameerakram\\AppData\\Local\\anaconda3\\Lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\DejaVuSerif-BoldItalic.ttf', name='DejaVu Serif', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2025-03-13 15:49:17,651 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\RAGE.TTF', name='Rage Italic', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-03-13 15:49:17,652 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BOD_PSTC.TTF', name='Bodoni MT', style='normal', variant='normal', weight=300, stretch='normal', size='scalable')) = 10.145
2025-03-13 15:49:17,652 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\FRSCRIPT.TTF', name='French Script MT', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-13 15:49:17,652 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\SitkaVF-Italic.ttf', name='Sitka', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-03-13 15:49:17,652 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\comicz.ttf', name='Comic Sans MS', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2025-03-13 15:49:17,653 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\FTLTLT.TTF', name='Footlight MT Light', style='normal', variant='normal', weight=300, stretch='normal', size='scalable')) = 10.145
2025-03-13 15:49:17,653 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BOOKOS.TTF', name='Bookman Old Style', style='normal', variant='normal', weight=300, stretch='normal', size='scalable')) = 10.145
2025-03-13 15:49:17,653 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BRUSHSCI.TTF', name='Brush Script MT', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-03-13 15:49:17,653 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\FRADMIT.TTF', name='Franklin Gothic Demi', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-03-13 15:49:17,653 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\PALSCRI.TTF', name='Palace Script MT', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-13 15:49:17,653 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ANTQUAB.TTF', name='Book Antiqua', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-03-13 15:49:17,654 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GILSANUB.TTF', name='Gill Sans Ultra Bold', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-13 15:49:17,654 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\georgiaz.ttf', name='Georgia', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2025-03-13 15:49:17,654 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\cambriai.ttf', name='Cambria', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-03-13 15:49:17,654 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\trebucbd.ttf', name='Trebuchet MS', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-03-13 15:49:17,655 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Candarai.ttf', name='Candara', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-03-13 15:49:17,655 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\segoeprb.ttf', name='Segoe Print', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-03-13 15:49:17,655 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ELEPHNT.TTF', name='Elephant', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-13 15:49:17,656 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\HARLOWSI.TTF', name='Harlow Solid Italic', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-03-13 15:49:17,656 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\KUNSTLER.TTF', name='Kunstler Script', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-13 15:49:17,656 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ebrima.ttf', name='Ebrima', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-13 15:49:17,656 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\simsun.ttc', name='SimSun', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-13 15:49:17,656 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\seguisym.ttf', name='Segoe UI Symbol', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-13 15:49:17,656 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ARIALNBI.TTF', name='Arial', style='italic', variant='normal', weight=700, stretch='condensed', size='scalable')) = 7.8986363636363635
2025-03-13 15:49:17,656 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\mvboli.ttf', name='MV Boli', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-13 15:49:17,657 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\comici.ttf', name='Comic Sans MS', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-03-13 15:49:17,657 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LATINWD.TTF', name='Wide Latin', style='normal', variant='normal', weight=400, stretch='expanded', size='scalable')) = 10.25
2025-03-13 15:49:17,657 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\georgiai.ttf', name='Georgia', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-03-13 15:49:17,657 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\verdanaz.ttf', name='Verdana', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 4.971363636363637
2025-03-13 15:49:17,658 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\micross.ttf', name='Microsoft Sans Serif', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-13 15:49:17,658 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LeelaUIb.ttf', name='Leelawadee UI', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-03-13 15:49:17,658 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\MAIAN.TTF', name='Maiandra GD', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-13 15:49:17,658 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Candara.ttf', name='Candara', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-13 15:49:17,659 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\corbelb.ttf', name='Corbel', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-03-13 15:49:17,659 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\FELIXTI.TTF', name='Felix Titling', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-13 15:49:17,659 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\SitkaVF.ttf', name='Sitka', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-13 15:49:17,659 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GOTHIC.TTF', name='Century Gothic', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-13 15:49:17,659 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\FRABKIT.TTF', name='Franklin Gothic Book', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-03-13 15:49:17,660 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GOUDOSI.TTF', name='Goudy Old Style', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-03-13 15:49:17,660 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\segoeui.ttf', name='Segoe UI', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-13 15:49:17,660 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\CENSCBK.TTF', name='Century Schoolbook', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-13 15:49:17,660 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\SCHLBKBI.TTF', name='Century Schoolbook', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2025-03-13 15:49:17,661 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\YuGothL.ttc', name='Yu Gothic', style='normal', variant='normal', weight=300, stretch='normal', size='scalable')) = 10.145
2025-03-13 15:49:17,661 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ENGR.TTF', name='Engravers MT', style='normal', variant='normal', weight=500, stretch='normal', size='scalable')) = 10.145
2025-03-13 15:49:17,661 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\malgunsl.ttf', name='Malgun Gothic', style='normal', variant='normal', weight=300, stretch='normal', size='scalable')) = 10.145
2025-03-13 15:49:17,661 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\palab.ttf', name='Palatino Linotype', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-03-13 15:49:17,662 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ELEPHNTI.TTF', name='Elephant', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-03-13 15:49:17,662 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BRLNSR.TTF', name='Berlin Sans FB', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-13 15:49:17,662 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\framdit.ttf', name='Franklin Gothic Medium', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-03-13 15:49:17,662 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\gadugib.ttf', name='Gadugi', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-03-13 15:49:17,662 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\YuGothB.ttc', name='Yu Gothic', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-03-13 15:49:17,663 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\SCRIPTBL.TTF', name='Script MT Bold', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-03-13 15:49:17,663 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BASKVILL.TTF', name='Baskerville Old Face', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-13 15:49:17,663 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\calibrili.ttf', name='Calibri', style='italic', variant='normal', weight=300, stretch='normal', size='scalable')) = 11.145
2025-03-13 15:49:17,663 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ITCBLKAD.TTF', name='Blackadder ITC', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-13 15:49:17,663 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\DUBAI-REGULAR.TTF', name='Dubai', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-13 15:49:17,663 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ITCEDSCR.TTF', name='Edwardian Script ITC', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-13 15:49:17,663 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\WINGDNG3.TTF', name='Wingdings 3', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-13 15:49:17,665 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ERASLGHT.TTF', name='Eras Light ITC', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-13 15:49:17,665 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\MSUIGHUR.TTF', name='Microsoft Uighur', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-13 15:49:17,665 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\segoesc.ttf', name='Segoe Script', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-13 15:49:17,665 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\trebucit.ttf', name='Trebuchet MS', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-03-13 15:49:17,666 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\CENTURY.TTF', name='Century', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-13 15:49:17,666 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\PLAYBILL.TTF', name='Playbill', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-13 15:49:17,666 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LBRITEI.TTF', name='Lucida Bright', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-03-13 15:49:17,666 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\segoeuil.ttf', name='Segoe UI', style='normal', variant='normal', weight=300, stretch='normal', size='scalable')) = 10.145
2025-03-13 15:49:17,666 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BRITANIC.TTF', name='Britannic Bold', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-13 15:49:17,666 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\taile.ttf', name='Microsoft Tai Le', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-13 15:49:17,667 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ntailub.ttf', name='Microsoft New Tai Lue', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-03-13 15:49:17,667 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BRLNSB.TTF', name='Berlin Sans FB', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-03-13 15:49:17,667 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\arialbd.ttf', name='Arial', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 6.698636363636363
2025-03-13 15:49:17,667 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\seguisb.ttf', name='Segoe UI', style='normal', variant='normal', weight=600, stretch='normal', size='scalable')) = 10.24
2025-03-13 15:49:17,667 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\segoeuiz.ttf', name='Segoe UI', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2025-03-13 15:49:17,668 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ERASMD.TTF', name='Eras Medium ITC', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-13 15:49:17,668 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\seguiemj.ttf', name='Segoe UI Emoji', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-13 15:49:17,668 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BROADW.TTF', name='Broadway', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-13 15:49:17,668 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BOD_BLAI.TTF', name='Bodoni MT', style='italic', variant='normal', weight=900, stretch='normal', size='scalable')) = 11.525
2025-03-13 15:49:17,668 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\seguibl.ttf', name='Segoe UI', style='normal', variant='normal', weight=900, stretch='normal', size='scalable')) = 10.525
2025-03-13 15:49:17,668 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LFAX.TTF', name='Lucida Fax', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-13 15:49:17,669 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\YuGothR.ttc', name='Yu Gothic', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-13 15:49:17,669 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\TCCEB.TTF', name='Tw Cen MT Condensed Extra Bold', style='normal', variant='normal', weight=400, stretch='condensed', size='scalable')) = 10.25
2025-03-13 15:49:17,669 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GILLUBCD.TTF', name='Gill Sans Ultra Bold Condensed', style='normal', variant='normal', weight=400, stretch='condensed', size='scalable')) = 10.25
2025-03-13 15:49:17,669 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LFAXD.TTF', name='Lucida Fax', style='normal', variant='normal', weight=600, stretch='normal', size='scalable')) = 10.24
2025-03-13 15:49:17,669 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\PER_____.TTF', name='Perpetua', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-13 15:49:17,669 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\segoeuii.ttf', name='Segoe UI', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-03-13 15:49:17,670 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\consolaz.ttf', name='Consolas', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2025-03-13 15:49:17,670 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\REFSAN.TTF', name='MS Reference Sans Serif', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-13 15:49:17,670 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\himalaya.ttf', name='Microsoft Himalaya', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-13 15:49:17,670 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ROCCB___.TTF', name='Rockwell Condensed', style='normal', variant='normal', weight=700, stretch='condensed', size='scalable')) = 10.535
2025-03-13 15:49:17,670 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\msyh.ttc', name='Microsoft YaHei', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-13 15:49:17,670 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\DUBAI-BOLD.TTF', name='Dubai', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-03-13 15:49:17,670 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\phagspa.ttf', name='Microsoft PhagsPa', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-13 15:49:17,671 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\COPRGTB.TTF', name='Copperplate Gothic Bold', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-13 15:49:17,671 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\constani.ttf', name='Constantia', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-03-13 15:49:17,671 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LTYPEO.TTF', name='Lucida Sans Typewriter', style='oblique', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-03-13 15:49:17,671 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\seguisli.ttf', name='Segoe UI', style='italic', variant='normal', weight=350, stretch='normal', size='scalable')) = 11.0975
2025-03-13 15:49:17,671 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\PERBI___.TTF', name='Perpetua', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2025-03-13 15:49:17,671 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\MAGNETOB.TTF', name='Magneto', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-03-13 15:49:17,672 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\tahoma.ttf', name='Tahoma', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-13 15:49:17,672 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BELLI.TTF', name='Bell MT', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-03-13 15:49:17,672 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\msgothic.ttc', name='MS Gothic', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-13 15:49:17,672 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\consolai.ttf', name='Consolas', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-03-13 15:49:17,672 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\courbi.ttf', name='Courier New', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2025-03-13 15:49:17,673 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\SansSerifCollection.ttf', name='Sans Serif Collection', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-13 15:49:17,673 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LFAXDI.TTF', name='Lucida Fax', style='italic', variant='normal', weight=600, stretch='normal', size='scalable')) = 11.24
2025-03-13 15:49:17,673 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BOOKOSB.TTF', name='Bookman Old Style', style='normal', variant='normal', weight=600, stretch='normal', size='scalable')) = 10.24
2025-03-13 15:49:17,673 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BELL.TTF', name='Bell MT', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-13 15:49:17,673 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GOUDOS.TTF', name='Goudy Old Style', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-13 15:49:17,673 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\consolab.ttf', name='Consolas', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-03-13 15:49:17,674 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ROCKI.TTF', name='Rockwell', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-03-13 15:49:17,674 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\constanb.ttf', name='Constantia', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-03-13 15:49:17,674 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\seguisbi.ttf', name='Segoe UI', style='italic', variant='normal', weight=600, stretch='normal', size='scalable')) = 11.24
2025-03-13 15:49:17,674 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Nirmala.ttc', name='Nirmala UI', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-13 15:49:17,674 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LEELAWDB.TTF', name='Leelawadee', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-03-13 15:49:17,674 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\cour.ttf', name='Courier New', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-13 15:49:17,675 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\malgunbd.ttf', name='Malgun Gothic', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-03-13 15:49:17,675 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\MTCORSVA.TTF', name='Monotype Corsiva', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-13 15:49:17,675 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\SCHLBKI.TTF', name='Century Schoolbook', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-03-13 15:49:17,675 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LEELAWAD.TTF', name='Leelawadee', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-13 15:49:17,675 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\corbelli.ttf', name='Corbel', style='italic', variant='normal', weight=300, stretch='normal', size='scalable')) = 11.145
2025-03-13 15:49:17,675 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\symbol.ttf', name='Symbol', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-13 15:49:17,675 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BERNHC.TTF', name='Bernard MT Condensed', style='normal', variant='normal', weight=400, stretch='condensed', size='scalable')) = 10.25
2025-03-13 15:49:17,676 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\YuGothM.ttc', name='Yu Gothic', style='normal', variant='normal', weight=500, stretch='normal', size='scalable')) = 10.145
2025-03-13 15:49:17,676 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BOD_CBI.TTF', name='Bodoni MT', style='italic', variant='normal', weight=700, stretch='condensed', size='scalable')) = 11.535
2025-03-13 15:49:17,676 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\monbaiti.ttf', name='Mongolian Baiti', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-13 15:49:17,676 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Gabriola.ttf', name='Gabriola', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-13 15:49:17,676 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\timesi.ttf', name='Times New Roman', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-03-13 15:49:17,676 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BOD_B.TTF', name='Bodoni MT', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-03-13 15:49:17,677 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\verdana.ttf', name='Verdana', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 3.6863636363636365
2025-03-13 15:49:17,677 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Candarali.ttf', name='Candara', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-03-13 15:49:17,677 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\PRISTINA.TTF', name='Pristina', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-13 15:49:17,677 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\arialbi.ttf', name='Arial', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 7.698636363636363
2025-03-13 15:49:17,678 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LCALLIG.TTF', name='Lucida Calligraphy', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-03-13 15:49:17,678 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Candaral.ttf', name='Candara', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-13 15:49:17,678 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\FRAHVIT.TTF', name='Franklin Gothic Heavy', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-03-13 15:49:17,678 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Inkfree.ttf', name='Ink Free', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-13 15:49:17,679 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\VLADIMIR.TTF', name='Vladimir Script', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-13 15:49:17,679 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ONYX.TTF', name='Onyx', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-13 15:49:17,679 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LBRITEDI.TTF', name='Lucida Bright', style='italic', variant='normal', weight=600, stretch='normal', size='scalable')) = 11.24
2025-03-13 15:49:17,679 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\WINGDNG2.TTF', name='Wingdings 2', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-13 15:49:17,680 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\DUBAI-LIGHT.TTF', name='Dubai', style='normal', variant='normal', weight=300, stretch='normal', size='scalable')) = 10.145
2025-03-13 15:49:17,680 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\l_10646.ttf', name='Lucida Sans Unicode', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-13 15:49:17,680 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\TCCB____.TTF', name='Tw Cen MT Condensed', style='normal', variant='normal', weight=700, stretch='condensed', size='scalable')) = 10.535
2025-03-13 15:49:17,681 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ARIALNB.TTF', name='Arial', style='normal', variant='normal', weight=700, stretch='condensed', size='scalable')) = 6.8986363636363635
2025-03-13 15:49:17,681 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\trebuc.ttf', name='Trebuchet MS', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-13 15:49:17,681 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\TCMI____.TTF', name='Tw Cen MT', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-03-13 15:49:17,681 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ERASBD.TTF', name='Eras Bold ITC', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-13 15:49:17,682 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LSANSDI.TTF', name='Lucida Sans', style='italic', variant='normal', weight=600, stretch='normal', size='scalable')) = 11.24
2025-03-13 15:49:17,682 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\CENTAUR.TTF', name='Centaur', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-13 15:49:17,682 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\HTOWERT.TTF', name='High Tower Text', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-13 15:49:17,682 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\INFROMAN.TTF', name='Informal Roman', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-13 15:49:17,683 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\constan.ttf', name='Constantia', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-13 15:49:17,683 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LFAXI.TTF', name='Lucida Fax', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-03-13 15:49:17,683 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\phagspab.ttf', name='Microsoft PhagsPa', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-03-13 15:49:17,683 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GIL_____.TTF', name='Gill Sans MT', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-13 15:49:17,683 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ariblk.ttf', name='Arial', style='normal', variant='normal', weight=900, stretch='normal', size='scalable')) = 6.888636363636364
2025-03-13 15:49:17,684 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GOTHICBI.TTF', name='Century Gothic', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2025-03-13 15:49:17,684 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\FRADMCN.TTF', name='Franklin Gothic Demi Cond', style='normal', variant='normal', weight=400, stretch='condensed', size='scalable')) = 10.25
2025-03-13 15:49:17,684 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\calibrii.ttf', name='Calibri', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-03-13 15:49:17,684 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GARABD.TTF', name='Garamond', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-03-13 15:49:17,684 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\MISTRAL.TTF', name='Mistral', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-13 15:49:17,685 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BOD_BI.TTF', name='Bodoni MT', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2025-03-13 15:49:17,685 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GOUDOSB.TTF', name='Goudy Old Style', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-03-13 15:49:17,685 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\FORTE.TTF', name='Forte', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-13 15:49:17,685 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\HARNGTON.TTF', name='Harrington', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-13 15:49:17,686 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BOD_CI.TTF', name='Bodoni MT', style='italic', variant='normal', weight=400, stretch='condensed', size='scalable')) = 11.25
2025-03-13 15:49:17,686 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BKANT.TTF', name='Book Antiqua', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-13 15:49:17,686 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GILC____.TTF', name='Gill Sans MT Condensed', style='normal', variant='normal', weight=400, stretch='condensed', size='scalable')) = 10.25
2025-03-13 15:49:17,686 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\segoepr.ttf', name='Segoe Print', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-13 15:49:17,686 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\VINERITC.TTF', name='Viner Hand ITC', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-13 15:49:17,687 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\FRAMDCN.TTF', name='Franklin Gothic Medium Cond', style='normal', variant='normal', weight=400, stretch='condensed', size='scalable')) = 10.25
2025-03-13 15:49:17,687 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\sylfaen.ttf', name='Sylfaen', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-13 15:49:17,687 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\mmrtext.ttf', name='Myanmar Text', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-13 15:49:17,687 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\SNAP____.TTF', name='Snap ITC', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-13 15:49:17,688 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GILI____.TTF', name='Gill Sans MT', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-03-13 15:49:17,688 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\calibrib.ttf', name='Calibri', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-03-13 15:49:17,688 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\impact.ttf', name='Impact', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-13 15:49:17,688 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\SCHLBKB.TTF', name='Century Schoolbook', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-03-13 15:49:17,689 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\TCB_____.TTF', name='Tw Cen MT', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-03-13 15:49:17,689 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ANTQUAI.TTF', name='Book Antiqua', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-03-13 15:49:17,689 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BOD_CR.TTF', name='Bodoni MT', style='normal', variant='normal', weight=400, stretch='condensed', size='scalable')) = 10.25
2025-03-13 15:49:17,689 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\corbell.ttf', name='Corbel', style='normal', variant='normal', weight=300, stretch='normal', size='scalable')) = 10.145
2025-03-13 15:49:17,689 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\FRADM.TTF', name='Franklin Gothic Demi', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-13 15:49:17,690 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\PAPYRUS.TTF', name='Papyrus', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-13 15:49:17,690 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\VIVALDII.TTF', name='Vivaldi', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-03-13 15:49:17,690 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\OLDENGL.TTF', name='Old English Text MT', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-13 15:49:17,690 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\pala.ttf', name='Palatino Linotype', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-13 15:49:17,690 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\comicbd.ttf', name='Comic Sans MS', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-03-13 15:49:17,691 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\calibri.ttf', name='Calibri', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-13 15:49:17,691 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\PERI____.TTF', name='Perpetua', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-03-13 15:49:17,691 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GARAIT.TTF', name='Garamond', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-03-13 15:49:17,691 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\corbelz.ttf', name='Corbel', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2025-03-13 15:49:17,691 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GARA.TTF', name='Garamond', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-13 15:49:17,692 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\georgiab.ttf', name='Georgia', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-03-13 15:49:17,692 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ROCK.TTF', name='Rockwell', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-13 15:49:17,692 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\PARCHM.TTF', name='Parchment', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-13 15:49:17,693 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\CALIFB.TTF', name='Californian FB', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-03-13 15:49:17,693 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\cambriaz.ttf', name='Cambria', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2025-03-13 15:49:17,693 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ebrimabd.ttf', name='Ebrima', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-03-13 15:49:17,693 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LSANS.TTF', name='Lucida Sans', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-13 15:49:17,694 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\timesbd.ttf', name='Times New Roman', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-03-13 15:49:17,694 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\CALIFR.TTF', name='Californian FB', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-13 15:49:17,694 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\consola.ttf', name='Consolas', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-13 15:49:17,694 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\msjhl.ttc', name='Microsoft JhengHei', style='normal', variant='normal', weight=290, stretch='normal', size='scalable')) = 10.1545
2025-03-13 15:49:17,694 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Candarab.ttf', name='Candara', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-03-13 15:49:17,695 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\MTEXTRA.TTF', name='MT Extra', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-13 15:49:17,695 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ntailu.ttf', name='Microsoft New Tai Lue', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-13 15:49:17,695 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\seguibli.ttf', name='Segoe UI', style='italic', variant='normal', weight=900, stretch='normal', size='scalable')) = 11.525
2025-03-13 15:49:17,695 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\javatext.ttf', name='Javanese Text', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-13 15:49:17,695 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\SHOWG.TTF', name='Showcard Gothic', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-13 15:49:17,696 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\CASTELAR.TTF', name='Castellar', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-13 15:49:17,696 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\HATTEN.TTF', name='Haettenschweiler', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-13 15:49:17,696 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ariali.ttf', name='Arial', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 7.413636363636363
2025-03-13 15:49:17,696 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\AGENCYR.TTF', name='Agency FB', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-13 15:49:17,696 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\malgun.ttf', name='Malgun Gothic', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-13 15:49:17,697 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BOD_BLAR.TTF', name='Bodoni MT', style='normal', variant='normal', weight=900, stretch='normal', size='scalable')) = 10.525
2025-03-13 15:49:17,697 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LeelawUI.ttf', name='Leelawadee UI', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-13 15:49:17,697 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\CHILLER.TTF', name='Chiller', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-13 15:49:17,697 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\CALIST.TTF', name='Calisto MT', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-13 15:49:17,698 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\JUICE___.TTF', name='Juice ITC', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-13 15:49:17,698 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\JOKERMAN.TTF', name='Jokerman', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-13 15:49:17,698 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\cambria.ttc', name='Cambria', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-13 15:49:17,698 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LHANDW.TTF', name='Lucida Handwriting', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-03-13 15:49:17,698 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BAUHS93.TTF', name='Bauhaus 93', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-13 15:49:17,699 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\COPRGTL.TTF', name='Copperplate Gothic Light', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-13 15:49:17,699 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LSANSD.TTF', name='Lucida Sans', style='normal', variant='normal', weight=600, stretch='normal', size='scalable')) = 10.24
2025-03-13 15:49:17,699 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LTYPEBO.TTF', name='Lucida Sans Typewriter', style='oblique', variant='normal', weight=600, stretch='normal', size='scalable')) = 11.24
2025-03-13 15:49:17,699 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\arial.ttf', name='Arial', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 6.413636363636363
2025-03-13 15:49:17,700 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ERASDEMI.TTF', name='Eras Demi ITC', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-13 15:49:17,700 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\TEMPSITC.TTF', name='Tempus Sans ITC', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-13 15:49:17,700 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ARIALN.TTF', name='Arial', style='normal', variant='normal', weight=400, stretch='condensed', size='scalable')) = 6.613636363636363
2025-03-13 15:49:17,701 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\COLONNA.TTF', name='Colonna MT', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-13 15:49:17,701 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ROCKEB.TTF', name='Rockwell Extra Bold', style='normal', variant='normal', weight=800, stretch='normal', size='scalable')) = 10.43
2025-03-13 15:49:17,701 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\CALISTBI.TTF', name='Calisto MT', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2025-03-13 15:49:17,701 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\palabi.ttf', name='Palatino Linotype', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2025-03-13 15:49:17,702 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\segoescb.ttf', name='Segoe Script', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-03-13 15:49:17,702 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\corbeli.ttf', name='Corbel', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-03-13 15:49:17,703 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\segoeuisl.ttf', name='Segoe UI', style='normal', variant='normal', weight=350, stretch='normal', size='scalable')) = 10.0975
2025-03-13 15:49:17,703 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ROCKBI.TTF', name='Rockwell', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2025-03-13 15:49:17,703 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LBRITED.TTF', name='Lucida Bright', style='normal', variant='normal', weight=600, stretch='normal', size='scalable')) = 10.24
2025-03-13 15:49:17,703 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\CALISTI.TTF', name='Calisto MT', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-03-13 15:49:17,703 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\courbd.ttf', name='Courier New', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-03-13 15:49:17,704 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\lucon.ttf', name='Lucida Console', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-13 15:49:17,704 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\POORICH.TTF', name='Poor Richard', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-13 15:49:17,704 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\taileb.ttf', name='Microsoft Tai Le', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-03-13 15:49:17,704 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ARLRDBD.TTF', name='Arial Rounded MT Bold', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-13 15:49:17,704 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GLSNECB.TTF', name='Gill Sans MT Ext Condensed Bold', style='normal', variant='normal', weight=400, stretch='condensed', size='scalable')) = 10.25
2025-03-13 15:49:17,705 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\mingliub.ttc', name='MingLiU-ExtB', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-13 15:49:17,705 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\timesbi.ttf', name='Times New Roman', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2025-03-13 15:49:17,705 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\calibriz.ttf', name='Calibri', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2025-03-13 15:49:17,705 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BOD_R.TTF', name='Bodoni MT', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-13 15:49:17,705 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\wingding.ttf', name='Wingdings', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-13 15:49:17,706 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BRADHITC.TTF', name='Bradley Hand ITC', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-13 15:49:17,706 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\framd.ttf', name='Franklin Gothic Medium', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-13 15:49:17,706 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\DUBAI-MEDIUM.TTF', name='Dubai', style='normal', variant='normal', weight=500, stretch='normal', size='scalable')) = 10.145
2025-03-13 15:49:17,706 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\trebucbi.ttf', name='Trebuchet MS', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2025-03-13 15:49:17,706 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\cambriab.ttf', name='Cambria', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-03-13 15:49:17,706 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\palai.ttf', name='Palatino Linotype', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-03-13 15:49:17,707 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\times.ttf', name='Times New Roman', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-13 15:49:17,707 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\constanz.ttf', name='Constantia', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2025-03-13 15:49:17,707 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\corbel.ttf', name='Corbel', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-13 15:49:17,707 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\gadugi.ttf', name='Gadugi', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-13 15:49:17,707 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LBRITE.TTF', name='Lucida Bright', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-13 15:49:17,707 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GOUDYSTO.TTF', name='Goudy Stout', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-13 15:49:17,708 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\verdanab.ttf', name='Verdana', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 3.9713636363636367
2025-03-13 15:49:17,708 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GOTHICB.TTF', name='Century Gothic', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-03-13 15:49:17,708 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\NIAGENG.TTF', name='Niagara Engraved', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-13 15:49:17,708 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\segoeuib.ttf', name='Segoe UI', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-03-13 15:49:17,708 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\seguihis.ttf', name='Segoe UI Historic', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-13 15:49:17,709 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\msyhl.ttc', name='Microsoft YaHei', style='normal', variant='normal', weight=290, stretch='normal', size='scalable')) = 10.1545
2025-03-13 15:49:17,709 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ROCKB.TTF', name='Rockwell', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-03-13 15:49:17,709 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\PERTIBD.TTF', name='Perpetua Titling MT', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-03-13 15:49:17,709 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\comic.ttf', name='Comic Sans MS', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-13 15:49:17,709 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\OCRAEXT.TTF', name='OCR A Extended', style='normal', variant='normal', weight=400, stretch='expanded', size='scalable')) = 10.25
2025-03-13 15:49:17,710 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\TCBI____.TTF', name='Tw Cen MT', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2025-03-13 15:49:17,710 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\IMPRISHA.TTF', name='Imprint MT Shadow', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-13 15:49:17,710 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\MOD20.TTF', name='Modern No. 20', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-13 15:49:17,710 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GILB____.TTF', name='Gill Sans MT', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-03-13 15:49:17,710 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LTYPE.TTF', name='Lucida Sans Typewriter', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-13 15:49:17,711 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BRLNSDB.TTF', name='Berlin Sans FB Demi', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-03-13 15:49:17,711 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\STENCIL.TTF', name='Stencil', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-13 15:49:17,711 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\msyhbd.ttc', name='Microsoft YaHei', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-03-13 15:49:17,711 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\SimsunExtG.ttf', name='SimSun-ExtG', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-13 15:49:17,711 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LeelUIsl.ttf', name='Leelawadee UI', style='normal', variant='normal', weight=350, stretch='normal', size='scalable')) = 10.0975
2025-03-13 15:49:17,711 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\OUTLOOK.TTF', name='MS Outlook', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-13 15:49:17,712 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BOD_CB.TTF', name='Bodoni MT', style='normal', variant='normal', weight=700, stretch='condensed', size='scalable')) = 10.535
2025-03-13 15:49:17,712 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\mmrtextb.ttf', name='Myanmar Text', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-03-13 15:49:17,712 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GOTHICI.TTF', name='Century Gothic', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-03-13 15:49:17,712 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\SegoeIcons.ttf', name='Segoe Fluent Icons', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-13 15:49:17,712 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ALGER.TTF', name='Algerian', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-13 15:49:17,712 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BOOKOSBI.TTF', name='Bookman Old Style', style='italic', variant='normal', weight=600, stretch='normal', size='scalable')) = 11.24
2025-03-13 15:49:17,713 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BSSYM7.TTF', name='Bookshelf Symbol 7', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-13 15:49:17,713 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\tahomabd.ttf', name='Tahoma', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-03-13 15:49:17,713 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\msyi.ttf', name='Microsoft Yi Baiti', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-13 15:49:17,713 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\CURLZ___.TTF', name='Curlz MT', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-13 15:49:17,713 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\RAVIE.TTF', name='Ravie', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-13 15:49:17,713 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\simsunb.ttf', name='SimSun-ExtB', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-13 15:49:17,714 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BELLB.TTF', name='Bell MT', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-03-13 15:49:17,714 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\PERTILI.TTF', name='Perpetua Titling MT', style='normal', variant='normal', weight=300, stretch='normal', size='scalable')) = 10.145
2025-03-13 15:49:17,714 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\seguili.ttf', name='Segoe UI', style='italic', variant='normal', weight=300, stretch='normal', size='scalable')) = 11.145
2025-03-13 15:49:17,714 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\CALISTB.TTF', name='Calisto MT', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-03-13 15:49:17,714 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ITCKRIST.TTF', name='Kristen ITC', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-13 15:49:17,715 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ANTQUABI.TTF', name='Book Antiqua', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2025-03-13 15:49:17,715 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\PERB____.TTF', name='Perpetua', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-03-13 15:49:17,715 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ROCC____.TTF', name='Rockwell Condensed', style='normal', variant='normal', weight=400, stretch='condensed', size='scalable')) = 10.25
2025-03-13 15:49:17,715 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GILBI___.TTF', name='Gill Sans MT', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2025-03-13 15:49:17,715 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\MSUIGHUB.TTF', name='Microsoft Uighur', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-03-13 15:49:17,715 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\segmdl2.ttf', name='Segoe MDL2 Assets', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-13 15:49:17,716 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ARIALNI.TTF', name='Arial', style='italic', variant='normal', weight=400, stretch='condensed', size='scalable')) = 7.613636363636363
2025-03-13 15:49:17,716 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\bahnschrift.ttf', name='Bahnschrift', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-13 15:49:17,716 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\TCM_____.TTF', name='Tw Cen MT', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-13 15:49:17,716 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\REFSPCL.TTF', name='MS Reference Specialty', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-13 15:49:17,716 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\FRAHV.TTF', name='Franklin Gothic Heavy', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-13 15:49:17,716 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Candaraz.ttf', name='Candara', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2025-03-13 15:49:17,717 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\georgia.ttf', name='Georgia', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-13 15:49:17,717 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\MATURASC.TTF', name='Matura MT Script Capitals', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-13 15:49:17,717 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GIGI.TTF', name='Gigi', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-13 15:49:17,717 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\CALIFI.TTF', name='Californian FB', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-03-13 15:49:17,717 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\SegUIVar.ttf', name='Segoe UI Variable', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-13 15:49:17,717 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\FRABK.TTF', name='Franklin Gothic Book', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-13 15:49:17,718 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\couri.ttf', name='Courier New', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-03-13 15:49:17,718 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BOOKOSI.TTF', name='Bookman Old Style', style='italic', variant='normal', weight=300, stretch='normal', size='scalable')) = 11.145
2025-03-13 15:49:17,718 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\verdanai.ttf', name='Verdana', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 4.6863636363636365
2025-03-13 15:49:17,718 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\calibril.ttf', name='Calibri', style='normal', variant='normal', weight=300, stretch='normal', size='scalable')) = 10.145
2025-03-13 15:49:17,718 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\FREESCPT.TTF', name='Freestyle Script', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-13 15:49:17,718 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BOD_I.TTF', name='Bodoni MT', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-03-13 15:49:17,719 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\msjhbd.ttc', name='Microsoft JhengHei', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-03-13 15:49:17,719 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\COOPBL.TTF', name='Cooper Black', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-13 15:49:17,719 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\TCCM____.TTF', name='Tw Cen MT Condensed', style='normal', variant='normal', weight=400, stretch='condensed', size='scalable')) = 10.25
2025-03-13 15:49:17,719 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\AGENCYB.TTF', name='Agency FB', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-03-13 15:49:17,719 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LSANSI.TTF', name='Lucida Sans', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-03-13 15:49:17,719 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\NIAGSOL.TTF', name='Niagara Solid', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-13 15:49:17,720 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LTYPEB.TTF', name='Lucida Sans Typewriter', style='normal', variant='normal', weight=600, stretch='normal', size='scalable')) = 10.24
2025-03-13 15:49:17,720 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GLECB.TTF', name='Gloucester MT Extra Condensed', style='normal', variant='normal', weight=400, stretch='condensed', size='scalable')) = 10.25
2025-03-13 15:49:17,720 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\webdings.ttf', name='Webdings', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-13 15:49:17,720 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\msjh.ttc', name='Microsoft JhengHei', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-13 15:49:17,720 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\HTOWERTI.TTF', name='High Tower Text', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-03-13 15:49:17,720 - matplotlib.font_manager - DEBUG - findfont: Matching sans\-serif:style=normal:variant=normal:weight=normal:stretch=normal:size=10.0 to DejaVu Sans ('C:\\Users\\msameerakram\\AppData\\Local\\anaconda3\\Lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\DejaVuSans.ttf') with score of 0.050000.
2025-03-13 15:49:17,763 - matplotlib.font_manager - DEBUG - findfont: Matching sans\-serif:style=normal:variant=normal:weight=bold:stretch=normal:size=12.0.
2025-03-13 15:49:17,763 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Users\\msameerakram\\AppData\\Local\\anaconda3\\Lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\cmss10.ttf', name='cmss10', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.335
2025-03-13 15:49:17,764 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Users\\msameerakram\\AppData\\Local\\anaconda3\\Lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\DejaVuSans-Oblique.ttf', name='DejaVu Sans', style='oblique', variant='normal', weight=400, stretch='normal', size='scalable')) = 1.335
2025-03-13 15:49:17,764 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Users\\msameerakram\\AppData\\Local\\anaconda3\\Lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\cmb10.ttf', name='cmb10', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.335
2025-03-13 15:49:17,764 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Users\\msameerakram\\AppData\\Local\\anaconda3\\Lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\DejaVuSansDisplay.ttf', name='DejaVu Sans Display', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.335
2025-03-13 15:49:17,765 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Users\\msameerakram\\AppData\\Local\\anaconda3\\Lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\DejaVuSansMono-Oblique.ttf', name='DejaVu Sans Mono', style='oblique', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.335
2025-03-13 15:49:17,765 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Users\\msameerakram\\AppData\\Local\\anaconda3\\Lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXSizFiveSymReg.ttf', name='STIXSizeFiveSym', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.335
2025-03-13 15:49:17,765 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Users\\msameerakram\\AppData\\Local\\anaconda3\\Lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\DejaVuSansMono.ttf', name='DejaVu Sans Mono', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.335
2025-03-13 15:49:17,765 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Users\\msameerakram\\AppData\\Local\\anaconda3\\Lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\DejaVuSans.ttf', name='DejaVu Sans', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 0.33499999999999996
2025-03-13 15:49:17,765 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Users\\msameerakram\\AppData\\Local\\anaconda3\\Lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXGeneralBolIta.ttf', name='STIXGeneral', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.05
2025-03-13 15:49:17,766 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Users\\msameerakram\\AppData\\Local\\anaconda3\\Lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXSizThreeSymBol.ttf', name='STIXSizeThreeSym', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.05
2025-03-13 15:49:17,766 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Users\\msameerakram\\AppData\\Local\\anaconda3\\Lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXNonUniBolIta.ttf', name='STIXNonUnicode', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.05
2025-03-13 15:49:17,766 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Users\\msameerakram\\AppData\\Local\\anaconda3\\Lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXGeneralItalic.ttf', name='STIXGeneral', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.335
2025-03-13 15:49:17,766 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Users\\msameerakram\\AppData\\Local\\anaconda3\\Lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\DejaVuSerif-Bold.ttf', name='DejaVu Serif', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.05
2025-03-13 15:49:17,766 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Users\\msameerakram\\AppData\\Local\\anaconda3\\Lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXSizTwoSymReg.ttf', name='STIXSizeTwoSym', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.335
2025-03-13 15:49:17,767 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Users\\msameerakram\\AppData\\Local\\anaconda3\\Lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\DejaVuSansMono-Bold.ttf', name='DejaVu Sans Mono', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.05
2025-03-13 15:49:17,767 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Users\\msameerakram\\AppData\\Local\\anaconda3\\Lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\cmr10.ttf', name='cmr10', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.335
2025-03-13 15:49:17,767 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Users\\msameerakram\\AppData\\Local\\anaconda3\\Lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXSizFourSymBol.ttf', name='STIXSizeFourSym', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.05
2025-03-13 15:49:17,767 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Users\\msameerakram\\AppData\\Local\\anaconda3\\Lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\cmtt10.ttf', name='cmtt10', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.335
2025-03-13 15:49:17,768 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Users\\msameerakram\\AppData\\Local\\anaconda3\\Lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXSizTwoSymBol.ttf', name='STIXSizeTwoSym', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.05
2025-03-13 15:49:17,768 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Users\\msameerakram\\AppData\\Local\\anaconda3\\Lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXGeneral.ttf', name='STIXGeneral', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.335
2025-03-13 15:49:17,768 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Users\\msameerakram\\AppData\\Local\\anaconda3\\Lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXNonUni.ttf', name='STIXNonUnicode', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.335
2025-03-13 15:49:17,768 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Users\\msameerakram\\AppData\\Local\\anaconda3\\Lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\DejaVuSansMono-BoldOblique.ttf', name='DejaVu Sans Mono', style='oblique', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.05
2025-03-13 15:49:17,768 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Users\\msameerakram\\AppData\\Local\\anaconda3\\Lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXSizFourSymReg.ttf', name='STIXSizeFourSym', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.335
2025-03-13 15:49:17,769 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Users\\msameerakram\\AppData\\Local\\anaconda3\\Lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXSizOneSymReg.ttf', name='STIXSizeOneSym', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.335
2025-03-13 15:49:17,769 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Users\\msameerakram\\AppData\\Local\\anaconda3\\Lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXNonUniBol.ttf', name='STIXNonUnicode', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.05
2025-03-13 15:49:17,769 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Users\\msameerakram\\AppData\\Local\\anaconda3\\Lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXSizThreeSymReg.ttf', name='STIXSizeThreeSym', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.335
2025-03-13 15:49:17,770 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Users\\msameerakram\\AppData\\Local\\anaconda3\\Lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\cmsy10.ttf', name='cmsy10', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.335
2025-03-13 15:49:17,770 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Users\\msameerakram\\AppData\\Local\\anaconda3\\Lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\DejaVuSans-Bold.ttf', name='DejaVu Sans', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 0.05
2025-03-13 15:49:17,770 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Users\\msameerakram\\AppData\\Local\\anaconda3\\Lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\cmmi10.ttf', name='cmmi10', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.335
2025-03-13 15:49:17,771 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Users\\msameerakram\\AppData\\Local\\anaconda3\\Lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\DejaVuSans-BoldOblique.ttf', name='DejaVu Sans', style='oblique', variant='normal', weight=700, stretch='normal', size='scalable')) = 1.05
2025-03-13 15:49:17,771 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Users\\msameerakram\\AppData\\Local\\anaconda3\\Lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXGeneralBol.ttf', name='STIXGeneral', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.05
2025-03-13 15:49:17,771 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Users\\msameerakram\\AppData\\Local\\anaconda3\\Lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\cmex10.ttf', name='cmex10', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.335
2025-03-13 15:49:17,772 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Users\\msameerakram\\AppData\\Local\\anaconda3\\Lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\DejaVuSerif-Italic.ttf', name='DejaVu Serif', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.335
2025-03-13 15:49:17,772 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Users\\msameerakram\\AppData\\Local\\anaconda3\\Lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\DejaVuSerifDisplay.ttf', name='DejaVu Serif Display', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.335
2025-03-13 15:49:17,772 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Users\\msameerakram\\AppData\\Local\\anaconda3\\Lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXSizOneSymBol.ttf', name='STIXSizeOneSym', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.05
2025-03-13 15:49:17,772 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Users\\msameerakram\\AppData\\Local\\anaconda3\\Lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\DejaVuSerif.ttf', name='DejaVu Serif', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.335
2025-03-13 15:49:17,773 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Users\\msameerakram\\AppData\\Local\\anaconda3\\Lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXNonUniIta.ttf', name='STIXNonUnicode', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.335
2025-03-13 15:49:17,773 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Users\\msameerakram\\AppData\\Local\\anaconda3\\Lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\DejaVuSerif-BoldItalic.ttf', name='DejaVu Serif', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.05
2025-03-13 15:49:17,773 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\RAGE.TTF', name='Rage Italic', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.335
2025-03-13 15:49:17,773 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BOD_PSTC.TTF', name='Bodoni MT', style='normal', variant='normal', weight=300, stretch='normal', size='scalable')) = 10.43
2025-03-13 15:49:17,773 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\FRSCRIPT.TTF', name='French Script MT', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.335
2025-03-13 15:49:17,774 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\SitkaVF-Italic.ttf', name='Sitka', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.335
2025-03-13 15:49:17,774 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\comicz.ttf', name='Comic Sans MS', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.05
2025-03-13 15:49:17,774 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\FTLTLT.TTF', name='Footlight MT Light', style='normal', variant='normal', weight=300, stretch='normal', size='scalable')) = 10.43
2025-03-13 15:49:17,774 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BOOKOS.TTF', name='Bookman Old Style', style='normal', variant='normal', weight=300, stretch='normal', size='scalable')) = 10.43
2025-03-13 15:49:17,775 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BRUSHSCI.TTF', name='Brush Script MT', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.335
2025-03-13 15:49:17,775 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\FRADMIT.TTF', name='Franklin Gothic Demi', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.335
2025-03-13 15:49:17,775 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\PALSCRI.TTF', name='Palace Script MT', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.335
2025-03-13 15:49:17,775 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ANTQUAB.TTF', name='Book Antiqua', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.05
2025-03-13 15:49:17,775 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GILSANUB.TTF', name='Gill Sans Ultra Bold', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.335
2025-03-13 15:49:17,776 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\georgiaz.ttf', name='Georgia', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.05
2025-03-13 15:49:17,776 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\cambriai.ttf', name='Cambria', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.335
2025-03-13 15:49:17,776 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\trebucbd.ttf', name='Trebuchet MS', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.05
2025-03-13 15:49:17,776 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Candarai.ttf', name='Candara', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.335
2025-03-13 15:49:17,776 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\segoeprb.ttf', name='Segoe Print', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.05
2025-03-13 15:49:17,777 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ELEPHNT.TTF', name='Elephant', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.335
2025-03-13 15:49:17,777 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\HARLOWSI.TTF', name='Harlow Solid Italic', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.335
2025-03-13 15:49:17,777 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\KUNSTLER.TTF', name='Kunstler Script', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.335
2025-03-13 15:49:17,777 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ebrima.ttf', name='Ebrima', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.335
2025-03-13 15:49:17,777 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\simsun.ttc', name='SimSun', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.335
2025-03-13 15:49:17,778 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\seguisym.ttf', name='Segoe UI Symbol', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.335
2025-03-13 15:49:17,778 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ARIALNBI.TTF', name='Arial', style='italic', variant='normal', weight=700, stretch='condensed', size='scalable')) = 7.613636363636363
2025-03-13 15:49:17,778 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\mvboli.ttf', name='MV Boli', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.335
2025-03-13 15:49:17,778 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\comici.ttf', name='Comic Sans MS', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.335
2025-03-13 15:49:17,778 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LATINWD.TTF', name='Wide Latin', style='normal', variant='normal', weight=400, stretch='expanded', size='scalable')) = 10.535
2025-03-13 15:49:17,779 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\georgiai.ttf', name='Georgia', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.335
2025-03-13 15:49:17,779 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\verdanaz.ttf', name='Verdana', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 4.6863636363636365
2025-03-13 15:49:17,779 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\micross.ttf', name='Microsoft Sans Serif', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.335
2025-03-13 15:49:17,779 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LeelaUIb.ttf', name='Leelawadee UI', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.05
2025-03-13 15:49:17,779 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\MAIAN.TTF', name='Maiandra GD', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.335
2025-03-13 15:49:17,779 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Candara.ttf', name='Candara', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.335
2025-03-13 15:49:17,780 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\corbelb.ttf', name='Corbel', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.05
2025-03-13 15:49:17,780 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\FELIXTI.TTF', name='Felix Titling', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.335
2025-03-13 15:49:17,780 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\SitkaVF.ttf', name='Sitka', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.335
2025-03-13 15:49:17,780 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GOTHIC.TTF', name='Century Gothic', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.335
2025-03-13 15:49:17,780 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\FRABKIT.TTF', name='Franklin Gothic Book', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.335
2025-03-13 15:49:17,780 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GOUDOSI.TTF', name='Goudy Old Style', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.335
2025-03-13 15:49:17,781 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\segoeui.ttf', name='Segoe UI', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.335
2025-03-13 15:49:17,781 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\CENSCBK.TTF', name='Century Schoolbook', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.335
2025-03-13 15:49:17,781 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\SCHLBKBI.TTF', name='Century Schoolbook', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.05
2025-03-13 15:49:17,781 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\YuGothL.ttc', name='Yu Gothic', style='normal', variant='normal', weight=300, stretch='normal', size='scalable')) = 10.43
2025-03-13 15:49:17,781 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ENGR.TTF', name='Engravers MT', style='normal', variant='normal', weight=500, stretch='normal', size='scalable')) = 10.24
2025-03-13 15:49:17,781 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\malgunsl.ttf', name='Malgun Gothic', style='normal', variant='normal', weight=300, stretch='normal', size='scalable')) = 10.43
2025-03-13 15:49:17,782 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\palab.ttf', name='Palatino Linotype', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.05
2025-03-13 15:49:17,782 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ELEPHNTI.TTF', name='Elephant', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.335
2025-03-13 15:49:17,782 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BRLNSR.TTF', name='Berlin Sans FB', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.335
2025-03-13 15:49:17,782 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\framdit.ttf', name='Franklin Gothic Medium', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.335
2025-03-13 15:49:17,782 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\gadugib.ttf', name='Gadugi', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.05
2025-03-13 15:49:17,783 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\YuGothB.ttc', name='Yu Gothic', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.05
2025-03-13 15:49:17,783 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\SCRIPTBL.TTF', name='Script MT Bold', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.05
2025-03-13 15:49:17,783 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BASKVILL.TTF', name='Baskerville Old Face', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.335
2025-03-13 15:49:17,783 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\calibrili.ttf', name='Calibri', style='italic', variant='normal', weight=300, stretch='normal', size='scalable')) = 11.43
2025-03-13 15:49:17,783 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ITCBLKAD.TTF', name='Blackadder ITC', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.335
2025-03-13 15:49:17,784 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\DUBAI-REGULAR.TTF', name='Dubai', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.335
2025-03-13 15:49:17,784 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ITCEDSCR.TTF', name='Edwardian Script ITC', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.335
2025-03-13 15:49:17,784 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\WINGDNG3.TTF', name='Wingdings 3', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.335
2025-03-13 15:49:17,784 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ERASLGHT.TTF', name='Eras Light ITC', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.335
2025-03-13 15:49:17,784 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\MSUIGHUR.TTF', name='Microsoft Uighur', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.335
2025-03-13 15:49:17,785 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\segoesc.ttf', name='Segoe Script', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.335
2025-03-13 15:49:17,785 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\trebucit.ttf', name='Trebuchet MS', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.335
2025-03-13 15:49:17,785 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\CENTURY.TTF', name='Century', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.335
2025-03-13 15:49:17,785 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\PLAYBILL.TTF', name='Playbill', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.335
2025-03-13 15:49:17,785 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LBRITEI.TTF', name='Lucida Bright', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.335
2025-03-13 15:49:17,785 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\segoeuil.ttf', name='Segoe UI', style='normal', variant='normal', weight=300, stretch='normal', size='scalable')) = 10.43
2025-03-13 15:49:17,786 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BRITANIC.TTF', name='Britannic Bold', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.335
2025-03-13 15:49:17,786 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\taile.ttf', name='Microsoft Tai Le', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.335
2025-03-13 15:49:17,786 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ntailub.ttf', name='Microsoft New Tai Lue', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.05
2025-03-13 15:49:17,786 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BRLNSB.TTF', name='Berlin Sans FB', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.05
2025-03-13 15:49:17,786 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\arialbd.ttf', name='Arial', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 6.413636363636363
2025-03-13 15:49:17,786 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\seguisb.ttf', name='Segoe UI', style='normal', variant='normal', weight=600, stretch='normal', size='scalable')) = 10.145
2025-03-13 15:49:17,787 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\segoeuiz.ttf', name='Segoe UI', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.05
2025-03-13 15:49:17,787 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ERASMD.TTF', name='Eras Medium ITC', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.335
2025-03-13 15:49:17,787 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\seguiemj.ttf', name='Segoe UI Emoji', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.335
2025-03-13 15:49:17,787 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BROADW.TTF', name='Broadway', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.335
2025-03-13 15:49:17,787 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BOD_BLAI.TTF', name='Bodoni MT', style='italic', variant='normal', weight=900, stretch='normal', size='scalable')) = 11.24
2025-03-13 15:49:17,787 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\seguibl.ttf', name='Segoe UI', style='normal', variant='normal', weight=900, stretch='normal', size='scalable')) = 10.24
2025-03-13 15:49:17,787 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LFAX.TTF', name='Lucida Fax', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.335
2025-03-13 15:49:17,788 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\YuGothR.ttc', name='Yu Gothic', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.335
2025-03-13 15:49:17,788 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\TCCEB.TTF', name='Tw Cen MT Condensed Extra Bold', style='normal', variant='normal', weight=400, stretch='condensed', size='scalable')) = 10.535
2025-03-13 15:49:17,788 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GILLUBCD.TTF', name='Gill Sans Ultra Bold Condensed', style='normal', variant='normal', weight=400, stretch='condensed', size='scalable')) = 10.535
2025-03-13 15:49:17,788 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LFAXD.TTF', name='Lucida Fax', style='normal', variant='normal', weight=600, stretch='normal', size='scalable')) = 10.145
2025-03-13 15:49:17,788 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\PER_____.TTF', name='Perpetua', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.335
2025-03-13 15:49:17,789 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\segoeuii.ttf', name='Segoe UI', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.335
2025-03-13 15:49:17,789 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\consolaz.ttf', name='Consolas', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.05
2025-03-13 15:49:17,789 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\REFSAN.TTF', name='MS Reference Sans Serif', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.335
2025-03-13 15:49:17,789 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\himalaya.ttf', name='Microsoft Himalaya', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.335
2025-03-13 15:49:17,789 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ROCCB___.TTF', name='Rockwell Condensed', style='normal', variant='normal', weight=700, stretch='condensed', size='scalable')) = 10.25
2025-03-13 15:49:17,790 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\msyh.ttc', name='Microsoft YaHei', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.335
2025-03-13 15:49:17,790 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\DUBAI-BOLD.TTF', name='Dubai', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.05
2025-03-13 15:49:17,790 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\phagspa.ttf', name='Microsoft PhagsPa', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.335
2025-03-13 15:49:17,790 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\COPRGTB.TTF', name='Copperplate Gothic Bold', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.335
2025-03-13 15:49:17,790 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\constani.ttf', name='Constantia', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.335
2025-03-13 15:49:17,790 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LTYPEO.TTF', name='Lucida Sans Typewriter', style='oblique', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.335
2025-03-13 15:49:17,791 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\seguisli.ttf', name='Segoe UI', style='italic', variant='normal', weight=350, stretch='normal', size='scalable')) = 11.3825
2025-03-13 15:49:17,791 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\PERBI___.TTF', name='Perpetua', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.05
2025-03-13 15:49:17,791 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\MAGNETOB.TTF', name='Magneto', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.05
2025-03-13 15:49:17,791 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\tahoma.ttf', name='Tahoma', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.335
2025-03-13 15:49:17,792 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BELLI.TTF', name='Bell MT', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.335
2025-03-13 15:49:17,792 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\msgothic.ttc', name='MS Gothic', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.335
2025-03-13 15:49:17,792 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\consolai.ttf', name='Consolas', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.335
2025-03-13 15:49:17,792 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\courbi.ttf', name='Courier New', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.05
2025-03-13 15:49:17,792 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\SansSerifCollection.ttf', name='Sans Serif Collection', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.335
2025-03-13 15:49:17,792 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LFAXDI.TTF', name='Lucida Fax', style='italic', variant='normal', weight=600, stretch='normal', size='scalable')) = 11.145
2025-03-13 15:49:17,793 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BOOKOSB.TTF', name='Bookman Old Style', style='normal', variant='normal', weight=600, stretch='normal', size='scalable')) = 10.145
2025-03-13 15:49:17,793 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BELL.TTF', name='Bell MT', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.335
2025-03-13 15:49:17,793 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GOUDOS.TTF', name='Goudy Old Style', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.335
2025-03-13 15:49:17,793 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\consolab.ttf', name='Consolas', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.05
2025-03-13 15:49:17,793 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ROCKI.TTF', name='Rockwell', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.335
2025-03-13 15:49:17,793 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\constanb.ttf', name='Constantia', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.05
2025-03-13 15:49:17,794 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\seguisbi.ttf', name='Segoe UI', style='italic', variant='normal', weight=600, stretch='normal', size='scalable')) = 11.145
2025-03-13 15:49:17,794 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Nirmala.ttc', name='Nirmala UI', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.335
2025-03-13 15:49:17,794 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LEELAWDB.TTF', name='Leelawadee', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.05
2025-03-13 15:49:17,794 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\cour.ttf', name='Courier New', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.335
2025-03-13 15:49:17,794 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\malgunbd.ttf', name='Malgun Gothic', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.05
2025-03-13 15:49:17,794 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\MTCORSVA.TTF', name='Monotype Corsiva', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.335
2025-03-13 15:49:17,794 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\SCHLBKI.TTF', name='Century Schoolbook', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.335
2025-03-13 15:49:17,795 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LEELAWAD.TTF', name='Leelawadee', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.335
2025-03-13 15:49:17,795 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\corbelli.ttf', name='Corbel', style='italic', variant='normal', weight=300, stretch='normal', size='scalable')) = 11.43
2025-03-13 15:49:17,795 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\symbol.ttf', name='Symbol', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.335
2025-03-13 15:49:17,795 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BERNHC.TTF', name='Bernard MT Condensed', style='normal', variant='normal', weight=400, stretch='condensed', size='scalable')) = 10.535
2025-03-13 15:49:17,795 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\YuGothM.ttc', name='Yu Gothic', style='normal', variant='normal', weight=500, stretch='normal', size='scalable')) = 10.24
2025-03-13 15:49:17,795 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BOD_CBI.TTF', name='Bodoni MT', style='italic', variant='normal', weight=700, stretch='condensed', size='scalable')) = 11.25
2025-03-13 15:49:17,796 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\monbaiti.ttf', name='Mongolian Baiti', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.335
2025-03-13 15:49:17,796 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Gabriola.ttf', name='Gabriola', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.335
2025-03-13 15:49:17,796 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\timesi.ttf', name='Times New Roman', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.335
2025-03-13 15:49:17,796 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BOD_B.TTF', name='Bodoni MT', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.05
2025-03-13 15:49:17,796 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\verdana.ttf', name='Verdana', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 3.9713636363636367
2025-03-13 15:49:17,797 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Candarali.ttf', name='Candara', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.335
2025-03-13 15:49:17,797 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\PRISTINA.TTF', name='Pristina', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.335
2025-03-13 15:49:17,797 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\arialbi.ttf', name='Arial', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 7.413636363636363
2025-03-13 15:49:17,797 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LCALLIG.TTF', name='Lucida Calligraphy', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.335
2025-03-13 15:49:17,798 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Candaral.ttf', name='Candara', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.335
2025-03-13 15:49:17,798 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\FRAHVIT.TTF', name='Franklin Gothic Heavy', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.335
2025-03-13 15:49:17,798 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Inkfree.ttf', name='Ink Free', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.335
2025-03-13 15:49:17,798 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\VLADIMIR.TTF', name='Vladimir Script', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.335
2025-03-13 15:49:17,798 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ONYX.TTF', name='Onyx', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.335
2025-03-13 15:49:17,799 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LBRITEDI.TTF', name='Lucida Bright', style='italic', variant='normal', weight=600, stretch='normal', size='scalable')) = 11.145
2025-03-13 15:49:17,799 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\WINGDNG2.TTF', name='Wingdings 2', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.335
2025-03-13 15:49:17,799 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\DUBAI-LIGHT.TTF', name='Dubai', style='normal', variant='normal', weight=300, stretch='normal', size='scalable')) = 10.43
2025-03-13 15:49:17,799 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\l_10646.ttf', name='Lucida Sans Unicode', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.335
2025-03-13 15:49:17,799 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\TCCB____.TTF', name='Tw Cen MT Condensed', style='normal', variant='normal', weight=700, stretch='condensed', size='scalable')) = 10.25
2025-03-13 15:49:17,799 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ARIALNB.TTF', name='Arial', style='normal', variant='normal', weight=700, stretch='condensed', size='scalable')) = 6.613636363636363
2025-03-13 15:49:17,800 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\trebuc.ttf', name='Trebuchet MS', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.335
2025-03-13 15:49:17,800 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\TCMI____.TTF', name='Tw Cen MT', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.335
2025-03-13 15:49:17,800 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ERASBD.TTF', name='Eras Bold ITC', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.335
2025-03-13 15:49:17,800 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LSANSDI.TTF', name='Lucida Sans', style='italic', variant='normal', weight=600, stretch='normal', size='scalable')) = 11.145
2025-03-13 15:49:17,800 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\CENTAUR.TTF', name='Centaur', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.335
2025-03-13 15:49:17,800 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\HTOWERT.TTF', name='High Tower Text', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.335
2025-03-13 15:49:17,801 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\INFROMAN.TTF', name='Informal Roman', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.335
2025-03-13 15:49:17,801 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\constan.ttf', name='Constantia', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.335
2025-03-13 15:49:17,801 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LFAXI.TTF', name='Lucida Fax', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.335
2025-03-13 15:49:17,801 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\phagspab.ttf', name='Microsoft PhagsPa', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.05
2025-03-13 15:49:17,801 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GIL_____.TTF', name='Gill Sans MT', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.335
2025-03-13 15:49:17,801 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ariblk.ttf', name='Arial', style='normal', variant='normal', weight=900, stretch='normal', size='scalable')) = 6.6036363636363635
2025-03-13 15:49:17,802 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GOTHICBI.TTF', name='Century Gothic', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.05
2025-03-13 15:49:17,802 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\FRADMCN.TTF', name='Franklin Gothic Demi Cond', style='normal', variant='normal', weight=400, stretch='condensed', size='scalable')) = 10.535
2025-03-13 15:49:17,802 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\calibrii.ttf', name='Calibri', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.335
2025-03-13 15:49:17,802 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GARABD.TTF', name='Garamond', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.05
2025-03-13 15:49:17,802 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\MISTRAL.TTF', name='Mistral', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.335
2025-03-13 15:49:17,802 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BOD_BI.TTF', name='Bodoni MT', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.05
2025-03-13 15:49:17,803 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GOUDOSB.TTF', name='Goudy Old Style', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.05
2025-03-13 15:49:17,803 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\FORTE.TTF', name='Forte', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.335
2025-03-13 15:49:17,803 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\HARNGTON.TTF', name='Harrington', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.335
2025-03-13 15:49:17,803 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BOD_CI.TTF', name='Bodoni MT', style='italic', variant='normal', weight=400, stretch='condensed', size='scalable')) = 11.535
2025-03-13 15:49:17,803 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BKANT.TTF', name='Book Antiqua', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.335
2025-03-13 15:49:17,804 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GILC____.TTF', name='Gill Sans MT Condensed', style='normal', variant='normal', weight=400, stretch='condensed', size='scalable')) = 10.535
2025-03-13 15:49:17,804 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\segoepr.ttf', name='Segoe Print', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.335
2025-03-13 15:49:17,804 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\VINERITC.TTF', name='Viner Hand ITC', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.335
2025-03-13 15:49:17,804 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\FRAMDCN.TTF', name='Franklin Gothic Medium Cond', style='normal', variant='normal', weight=400, stretch='condensed', size='scalable')) = 10.535
2025-03-13 15:49:17,804 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\sylfaen.ttf', name='Sylfaen', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.335
2025-03-13 15:49:17,806 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\mmrtext.ttf', name='Myanmar Text', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.335
2025-03-13 15:49:17,806 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\SNAP____.TTF', name='Snap ITC', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.335
2025-03-13 15:49:17,806 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GILI____.TTF', name='Gill Sans MT', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.335
2025-03-13 15:49:17,806 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\calibrib.ttf', name='Calibri', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.05
2025-03-13 15:49:17,806 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\impact.ttf', name='Impact', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.335
2025-03-13 15:49:17,807 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\SCHLBKB.TTF', name='Century Schoolbook', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.05
2025-03-13 15:49:17,807 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\TCB_____.TTF', name='Tw Cen MT', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.05
2025-03-13 15:49:17,807 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ANTQUAI.TTF', name='Book Antiqua', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.335
2025-03-13 15:49:17,807 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BOD_CR.TTF', name='Bodoni MT', style='normal', variant='normal', weight=400, stretch='condensed', size='scalable')) = 10.535
2025-03-13 15:49:17,807 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\corbell.ttf', name='Corbel', style='normal', variant='normal', weight=300, stretch='normal', size='scalable')) = 10.43
2025-03-13 15:49:17,808 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\FRADM.TTF', name='Franklin Gothic Demi', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.335
2025-03-13 15:49:17,808 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\PAPYRUS.TTF', name='Papyrus', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.335
2025-03-13 15:49:17,808 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\VIVALDII.TTF', name='Vivaldi', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.335
2025-03-13 15:49:17,808 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\OLDENGL.TTF', name='Old English Text MT', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.335
2025-03-13 15:49:17,808 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\pala.ttf', name='Palatino Linotype', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.335
2025-03-13 15:49:17,808 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\comicbd.ttf', name='Comic Sans MS', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.05
2025-03-13 15:49:17,808 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\calibri.ttf', name='Calibri', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.335
2025-03-13 15:49:17,809 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\PERI____.TTF', name='Perpetua', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.335
2025-03-13 15:49:17,809 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GARAIT.TTF', name='Garamond', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.335
2025-03-13 15:49:17,809 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\corbelz.ttf', name='Corbel', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.05
2025-03-13 15:49:17,809 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GARA.TTF', name='Garamond', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.335
2025-03-13 15:49:17,809 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\georgiab.ttf', name='Georgia', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.05
2025-03-13 15:49:17,809 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ROCK.TTF', name='Rockwell', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.335
2025-03-13 15:49:17,810 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\PARCHM.TTF', name='Parchment', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.335
2025-03-13 15:49:17,810 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\CALIFB.TTF', name='Californian FB', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.05
2025-03-13 15:49:17,810 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\cambriaz.ttf', name='Cambria', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.05
2025-03-13 15:49:17,810 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ebrimabd.ttf', name='Ebrima', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.05
2025-03-13 15:49:17,810 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LSANS.TTF', name='Lucida Sans', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.335
2025-03-13 15:49:17,811 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\timesbd.ttf', name='Times New Roman', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.05
2025-03-13 15:49:17,811 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\CALIFR.TTF', name='Californian FB', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.335
2025-03-13 15:49:17,811 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\consola.ttf', name='Consolas', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.335
2025-03-13 15:49:17,811 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\msjhl.ttc', name='Microsoft JhengHei', style='normal', variant='normal', weight=290, stretch='normal', size='scalable')) = 10.4395
2025-03-13 15:49:17,812 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Candarab.ttf', name='Candara', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.05
2025-03-13 15:49:17,812 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\MTEXTRA.TTF', name='MT Extra', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.335
2025-03-13 15:49:17,812 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ntailu.ttf', name='Microsoft New Tai Lue', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.335
2025-03-13 15:49:17,812 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\seguibli.ttf', name='Segoe UI', style='italic', variant='normal', weight=900, stretch='normal', size='scalable')) = 11.24
2025-03-13 15:49:17,812 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\javatext.ttf', name='Javanese Text', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.335
2025-03-13 15:49:17,813 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\SHOWG.TTF', name='Showcard Gothic', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.335
2025-03-13 15:49:17,813 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\CASTELAR.TTF', name='Castellar', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.335
2025-03-13 15:49:17,813 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\HATTEN.TTF', name='Haettenschweiler', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.335
2025-03-13 15:49:17,813 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ariali.ttf', name='Arial', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 7.698636363636363
2025-03-13 15:49:17,814 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\AGENCYR.TTF', name='Agency FB', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.335
2025-03-13 15:49:17,814 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\malgun.ttf', name='Malgun Gothic', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.335
2025-03-13 15:49:17,814 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BOD_BLAR.TTF', name='Bodoni MT', style='normal', variant='normal', weight=900, stretch='normal', size='scalable')) = 10.24
2025-03-13 15:49:17,814 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LeelawUI.ttf', name='Leelawadee UI', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.335
2025-03-13 15:49:17,814 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\CHILLER.TTF', name='Chiller', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.335
2025-03-13 15:49:17,814 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\CALIST.TTF', name='Calisto MT', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.335
2025-03-13 15:49:17,815 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\JUICE___.TTF', name='Juice ITC', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.335
2025-03-13 15:49:17,815 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\JOKERMAN.TTF', name='Jokerman', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.335
2025-03-13 15:49:17,815 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\cambria.ttc', name='Cambria', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.335
2025-03-13 15:49:17,815 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LHANDW.TTF', name='Lucida Handwriting', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.335
2025-03-13 15:49:17,815 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BAUHS93.TTF', name='Bauhaus 93', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.335
2025-03-13 15:49:17,815 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\COPRGTL.TTF', name='Copperplate Gothic Light', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.335
2025-03-13 15:49:17,816 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LSANSD.TTF', name='Lucida Sans', style='normal', variant='normal', weight=600, stretch='normal', size='scalable')) = 10.145
2025-03-13 15:49:17,816 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LTYPEBO.TTF', name='Lucida Sans Typewriter', style='oblique', variant='normal', weight=600, stretch='normal', size='scalable')) = 11.145
2025-03-13 15:49:17,816 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\arial.ttf', name='Arial', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 6.698636363636363
2025-03-13 15:49:17,816 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ERASDEMI.TTF', name='Eras Demi ITC', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.335
2025-03-13 15:49:17,816 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\TEMPSITC.TTF', name='Tempus Sans ITC', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.335
2025-03-13 15:49:17,816 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ARIALN.TTF', name='Arial', style='normal', variant='normal', weight=400, stretch='condensed', size='scalable')) = 6.8986363636363635
2025-03-13 15:49:17,817 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\COLONNA.TTF', name='Colonna MT', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.335
2025-03-13 15:49:17,817 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ROCKEB.TTF', name='Rockwell Extra Bold', style='normal', variant='normal', weight=800, stretch='normal', size='scalable')) = 10.145
2025-03-13 15:49:17,817 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\CALISTBI.TTF', name='Calisto MT', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.05
2025-03-13 15:49:17,817 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\palabi.ttf', name='Palatino Linotype', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.05
2025-03-13 15:49:17,818 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\segoescb.ttf', name='Segoe Script', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.05
2025-03-13 15:49:17,818 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\corbeli.ttf', name='Corbel', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.335
2025-03-13 15:49:17,818 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\segoeuisl.ttf', name='Segoe UI', style='normal', variant='normal', weight=350, stretch='normal', size='scalable')) = 10.3825
2025-03-13 15:49:17,818 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ROCKBI.TTF', name='Rockwell', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.05
2025-03-13 15:49:17,818 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LBRITED.TTF', name='Lucida Bright', style='normal', variant='normal', weight=600, stretch='normal', size='scalable')) = 10.145
2025-03-13 15:49:17,819 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\CALISTI.TTF', name='Calisto MT', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.335
2025-03-13 15:49:17,819 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\courbd.ttf', name='Courier New', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.05
2025-03-13 15:49:17,819 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\lucon.ttf', name='Lucida Console', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.335
2025-03-13 15:49:17,819 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\POORICH.TTF', name='Poor Richard', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.335
2025-03-13 15:49:17,819 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\taileb.ttf', name='Microsoft Tai Le', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.05
2025-03-13 15:49:17,820 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ARLRDBD.TTF', name='Arial Rounded MT Bold', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.335
2025-03-13 15:49:17,820 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GLSNECB.TTF', name='Gill Sans MT Ext Condensed Bold', style='normal', variant='normal', weight=400, stretch='condensed', size='scalable')) = 10.535
2025-03-13 15:49:17,820 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\mingliub.ttc', name='MingLiU-ExtB', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.335
2025-03-13 15:49:17,820 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\timesbi.ttf', name='Times New Roman', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.05
2025-03-13 15:49:17,820 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\calibriz.ttf', name='Calibri', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.05
2025-03-13 15:49:17,821 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BOD_R.TTF', name='Bodoni MT', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.335
2025-03-13 15:49:17,821 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\wingding.ttf', name='Wingdings', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.335
2025-03-13 15:49:17,821 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BRADHITC.TTF', name='Bradley Hand ITC', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.335
2025-03-13 15:49:17,821 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\framd.ttf', name='Franklin Gothic Medium', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.335
2025-03-13 15:49:17,821 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\DUBAI-MEDIUM.TTF', name='Dubai', style='normal', variant='normal', weight=500, stretch='normal', size='scalable')) = 10.24
2025-03-13 15:49:17,821 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\trebucbi.ttf', name='Trebuchet MS', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.05
2025-03-13 15:49:17,822 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\cambriab.ttf', name='Cambria', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.05
2025-03-13 15:49:17,822 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\palai.ttf', name='Palatino Linotype', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.335
2025-03-13 15:49:17,822 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\times.ttf', name='Times New Roman', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.335
2025-03-13 15:49:17,822 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\constanz.ttf', name='Constantia', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.05
2025-03-13 15:49:17,822 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\corbel.ttf', name='Corbel', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.335
2025-03-13 15:49:17,822 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\gadugi.ttf', name='Gadugi', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.335
2025-03-13 15:49:17,822 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LBRITE.TTF', name='Lucida Bright', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.335
2025-03-13 15:49:17,823 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GOUDYSTO.TTF', name='Goudy Stout', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.335
2025-03-13 15:49:17,823 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\verdanab.ttf', name='Verdana', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 3.6863636363636365
2025-03-13 15:49:17,823 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GOTHICB.TTF', name='Century Gothic', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.05
2025-03-13 15:49:17,823 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\NIAGENG.TTF', name='Niagara Engraved', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.335
2025-03-13 15:49:17,823 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\segoeuib.ttf', name='Segoe UI', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.05
2025-03-13 15:49:17,823 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\seguihis.ttf', name='Segoe UI Historic', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.335
2025-03-13 15:49:17,824 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\msyhl.ttc', name='Microsoft YaHei', style='normal', variant='normal', weight=290, stretch='normal', size='scalable')) = 10.4395
2025-03-13 15:49:17,824 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ROCKB.TTF', name='Rockwell', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.05
2025-03-13 15:49:17,824 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\PERTIBD.TTF', name='Perpetua Titling MT', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.05
2025-03-13 15:49:17,824 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\comic.ttf', name='Comic Sans MS', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.335
2025-03-13 15:49:17,824 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\OCRAEXT.TTF', name='OCR A Extended', style='normal', variant='normal', weight=400, stretch='expanded', size='scalable')) = 10.535
2025-03-13 15:49:17,825 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\TCBI____.TTF', name='Tw Cen MT', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.05
2025-03-13 15:49:17,825 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\IMPRISHA.TTF', name='Imprint MT Shadow', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.335
2025-03-13 15:49:17,825 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\MOD20.TTF', name='Modern No. 20', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.335
2025-03-13 15:49:17,826 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GILB____.TTF', name='Gill Sans MT', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.05
2025-03-13 15:49:17,826 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LTYPE.TTF', name='Lucida Sans Typewriter', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.335
2025-03-13 15:49:17,826 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BRLNSDB.TTF', name='Berlin Sans FB Demi', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.05
2025-03-13 15:49:17,826 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\STENCIL.TTF', name='Stencil', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.335
2025-03-13 15:49:17,827 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\msyhbd.ttc', name='Microsoft YaHei', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.05
2025-03-13 15:49:17,827 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\SimsunExtG.ttf', name='SimSun-ExtG', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.335
2025-03-13 15:49:17,827 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LeelUIsl.ttf', name='Leelawadee UI', style='normal', variant='normal', weight=350, stretch='normal', size='scalable')) = 10.3825
2025-03-13 15:49:17,827 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\OUTLOOK.TTF', name='MS Outlook', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.335
2025-03-13 15:49:17,827 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BOD_CB.TTF', name='Bodoni MT', style='normal', variant='normal', weight=700, stretch='condensed', size='scalable')) = 10.25
2025-03-13 15:49:17,827 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\mmrtextb.ttf', name='Myanmar Text', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.05
2025-03-13 15:49:17,828 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GOTHICI.TTF', name='Century Gothic', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.335
2025-03-13 15:49:17,828 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\SegoeIcons.ttf', name='Segoe Fluent Icons', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.335
2025-03-13 15:49:17,828 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ALGER.TTF', name='Algerian', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.335
2025-03-13 15:49:17,828 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BOOKOSBI.TTF', name='Bookman Old Style', style='italic', variant='normal', weight=600, stretch='normal', size='scalable')) = 11.145
2025-03-13 15:49:17,828 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BSSYM7.TTF', name='Bookshelf Symbol 7', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.335
2025-03-13 15:49:17,828 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\tahomabd.ttf', name='Tahoma', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.05
2025-03-13 15:49:17,828 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\msyi.ttf', name='Microsoft Yi Baiti', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.335
2025-03-13 15:49:17,829 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\CURLZ___.TTF', name='Curlz MT', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.335
2025-03-13 15:49:17,829 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\RAVIE.TTF', name='Ravie', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.335
2025-03-13 15:49:17,829 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\simsunb.ttf', name='SimSun-ExtB', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.335
2025-03-13 15:49:17,829 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BELLB.TTF', name='Bell MT', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.05
2025-03-13 15:49:17,829 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\PERTILI.TTF', name='Perpetua Titling MT', style='normal', variant='normal', weight=300, stretch='normal', size='scalable')) = 10.43
2025-03-13 15:49:17,830 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\seguili.ttf', name='Segoe UI', style='italic', variant='normal', weight=300, stretch='normal', size='scalable')) = 11.43
2025-03-13 15:49:17,830 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\CALISTB.TTF', name='Calisto MT', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.05
2025-03-13 15:49:17,830 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ITCKRIST.TTF', name='Kristen ITC', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.335
2025-03-13 15:49:17,830 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ANTQUABI.TTF', name='Book Antiqua', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.05
2025-03-13 15:49:17,830 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\PERB____.TTF', name='Perpetua', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.05
2025-03-13 15:49:17,830 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ROCC____.TTF', name='Rockwell Condensed', style='normal', variant='normal', weight=400, stretch='condensed', size='scalable')) = 10.535
2025-03-13 15:49:17,831 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GILBI___.TTF', name='Gill Sans MT', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.05
2025-03-13 15:49:17,831 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\MSUIGHUB.TTF', name='Microsoft Uighur', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.05
2025-03-13 15:49:17,831 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\segmdl2.ttf', name='Segoe MDL2 Assets', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.335
2025-03-13 15:49:17,831 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ARIALNI.TTF', name='Arial', style='italic', variant='normal', weight=400, stretch='condensed', size='scalable')) = 7.8986363636363635
2025-03-13 15:49:17,831 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\bahnschrift.ttf', name='Bahnschrift', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.335
2025-03-13 15:49:17,832 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\TCM_____.TTF', name='Tw Cen MT', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.335
2025-03-13 15:49:17,832 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\REFSPCL.TTF', name='MS Reference Specialty', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.335
2025-03-13 15:49:17,832 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\FRAHV.TTF', name='Franklin Gothic Heavy', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.335
2025-03-13 15:49:17,832 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Candaraz.ttf', name='Candara', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.05
2025-03-13 15:49:17,833 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\georgia.ttf', name='Georgia', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.335
2025-03-13 15:49:17,833 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\MATURASC.TTF', name='Matura MT Script Capitals', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.335
2025-03-13 15:49:17,833 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GIGI.TTF', name='Gigi', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.335
2025-03-13 15:49:17,833 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\CALIFI.TTF', name='Californian FB', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.335
2025-03-13 15:49:17,834 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\SegUIVar.ttf', name='Segoe UI Variable', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.335
2025-03-13 15:49:17,834 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\FRABK.TTF', name='Franklin Gothic Book', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.335
2025-03-13 15:49:17,834 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\couri.ttf', name='Courier New', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.335
2025-03-13 15:49:17,834 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BOOKOSI.TTF', name='Bookman Old Style', style='italic', variant='normal', weight=300, stretch='normal', size='scalable')) = 11.43
2025-03-13 15:49:17,834 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\verdanai.ttf', name='Verdana', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 4.971363636363637
2025-03-13 15:49:17,835 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\calibril.ttf', name='Calibri', style='normal', variant='normal', weight=300, stretch='normal', size='scalable')) = 10.43
2025-03-13 15:49:17,835 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\FREESCPT.TTF', name='Freestyle Script', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.335
2025-03-13 15:49:17,835 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BOD_I.TTF', name='Bodoni MT', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.335
2025-03-13 15:49:17,835 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\msjhbd.ttc', name='Microsoft JhengHei', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.05
2025-03-13 15:49:17,835 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\COOPBL.TTF', name='Cooper Black', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.335
2025-03-13 15:49:17,835 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\TCCM____.TTF', name='Tw Cen MT Condensed', style='normal', variant='normal', weight=400, stretch='condensed', size='scalable')) = 10.535
2025-03-13 15:49:17,835 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\AGENCYB.TTF', name='Agency FB', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.05
2025-03-13 15:49:17,836 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LSANSI.TTF', name='Lucida Sans', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.335
2025-03-13 15:49:17,836 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\NIAGSOL.TTF', name='Niagara Solid', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.335
2025-03-13 15:49:17,836 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LTYPEB.TTF', name='Lucida Sans Typewriter', style='normal', variant='normal', weight=600, stretch='normal', size='scalable')) = 10.145
2025-03-13 15:49:17,836 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GLECB.TTF', name='Gloucester MT Extra Condensed', style='normal', variant='normal', weight=400, stretch='condensed', size='scalable')) = 10.535
2025-03-13 15:49:17,836 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\webdings.ttf', name='Webdings', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.335
2025-03-13 15:49:17,836 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\msjh.ttc', name='Microsoft JhengHei', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.335
2025-03-13 15:49:17,837 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\HTOWERTI.TTF', name='High Tower Text', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.335
2025-03-13 15:49:17,837 - matplotlib.font_manager - DEBUG - findfont: Matching sans\-serif:style=normal:variant=normal:weight=bold:stretch=normal:size=12.0 to DejaVu Sans ('C:\\Users\\msameerakram\\AppData\\Local\\anaconda3\\Lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\DejaVuSans-Bold.ttf') with score of 0.050000.
2025-03-13 15:49:17,842 - matplotlib.font_manager - DEBUG - findfont: Matching sans\-serif:style=normal:variant=normal:weight=normal:stretch=normal:size=9.0.
2025-03-13 15:49:17,842 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Users\\msameerakram\\AppData\\Local\\anaconda3\\Lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\cmss10.ttf', name='cmss10', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-13 15:49:17,843 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Users\\msameerakram\\AppData\\Local\\anaconda3\\Lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\DejaVuSans-Oblique.ttf', name='DejaVu Sans', style='oblique', variant='normal', weight=400, stretch='normal', size='scalable')) = 1.05
2025-03-13 15:49:17,843 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Users\\msameerakram\\AppData\\Local\\anaconda3\\Lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\cmb10.ttf', name='cmb10', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-13 15:49:17,843 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Users\\msameerakram\\AppData\\Local\\anaconda3\\Lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\DejaVuSansDisplay.ttf', name='DejaVu Sans Display', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-13 15:49:17,843 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Users\\msameerakram\\AppData\\Local\\anaconda3\\Lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\DejaVuSansMono-Oblique.ttf', name='DejaVu Sans Mono', style='oblique', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-03-13 15:49:17,843 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Users\\msameerakram\\AppData\\Local\\anaconda3\\Lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXSizFiveSymReg.ttf', name='STIXSizeFiveSym', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-13 15:49:17,844 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Users\\msameerakram\\AppData\\Local\\anaconda3\\Lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\DejaVuSansMono.ttf', name='DejaVu Sans Mono', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-13 15:49:17,844 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Users\\msameerakram\\AppData\\Local\\anaconda3\\Lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\DejaVuSans.ttf', name='DejaVu Sans', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 0.05
2025-03-13 15:49:17,844 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Users\\msameerakram\\AppData\\Local\\anaconda3\\Lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXGeneralBolIta.ttf', name='STIXGeneral', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2025-03-13 15:49:17,844 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Users\\msameerakram\\AppData\\Local\\anaconda3\\Lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXSizThreeSymBol.ttf', name='STIXSizeThreeSym', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-03-13 15:49:17,844 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Users\\msameerakram\\AppData\\Local\\anaconda3\\Lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXNonUniBolIta.ttf', name='STIXNonUnicode', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2025-03-13 15:49:17,845 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Users\\msameerakram\\AppData\\Local\\anaconda3\\Lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXGeneralItalic.ttf', name='STIXGeneral', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-03-13 15:49:17,845 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Users\\msameerakram\\AppData\\Local\\anaconda3\\Lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\DejaVuSerif-Bold.ttf', name='DejaVu Serif', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-03-13 15:49:17,845 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Users\\msameerakram\\AppData\\Local\\anaconda3\\Lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXSizTwoSymReg.ttf', name='STIXSizeTwoSym', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-13 15:49:17,845 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Users\\msameerakram\\AppData\\Local\\anaconda3\\Lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\DejaVuSansMono-Bold.ttf', name='DejaVu Sans Mono', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-03-13 15:49:17,845 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Users\\msameerakram\\AppData\\Local\\anaconda3\\Lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\cmr10.ttf', name='cmr10', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-13 15:49:17,845 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Users\\msameerakram\\AppData\\Local\\anaconda3\\Lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXSizFourSymBol.ttf', name='STIXSizeFourSym', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-03-13 15:49:17,846 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Users\\msameerakram\\AppData\\Local\\anaconda3\\Lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\cmtt10.ttf', name='cmtt10', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-13 15:49:17,846 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Users\\msameerakram\\AppData\\Local\\anaconda3\\Lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXSizTwoSymBol.ttf', name='STIXSizeTwoSym', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-03-13 15:49:17,846 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Users\\msameerakram\\AppData\\Local\\anaconda3\\Lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXGeneral.ttf', name='STIXGeneral', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-13 15:49:17,847 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Users\\msameerakram\\AppData\\Local\\anaconda3\\Lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXNonUni.ttf', name='STIXNonUnicode', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-13 15:49:17,847 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Users\\msameerakram\\AppData\\Local\\anaconda3\\Lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\DejaVuSansMono-BoldOblique.ttf', name='DejaVu Sans Mono', style='oblique', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2025-03-13 15:49:17,847 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Users\\msameerakram\\AppData\\Local\\anaconda3\\Lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXSizFourSymReg.ttf', name='STIXSizeFourSym', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-13 15:49:17,847 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Users\\msameerakram\\AppData\\Local\\anaconda3\\Lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXSizOneSymReg.ttf', name='STIXSizeOneSym', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-13 15:49:17,848 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Users\\msameerakram\\AppData\\Local\\anaconda3\\Lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXNonUniBol.ttf', name='STIXNonUnicode', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-03-13 15:49:17,848 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Users\\msameerakram\\AppData\\Local\\anaconda3\\Lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXSizThreeSymReg.ttf', name='STIXSizeThreeSym', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-13 15:49:17,848 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Users\\msameerakram\\AppData\\Local\\anaconda3\\Lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\cmsy10.ttf', name='cmsy10', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-13 15:49:17,848 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Users\\msameerakram\\AppData\\Local\\anaconda3\\Lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\DejaVuSans-Bold.ttf', name='DejaVu Sans', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 0.33499999999999996
2025-03-13 15:49:17,848 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Users\\msameerakram\\AppData\\Local\\anaconda3\\Lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\cmmi10.ttf', name='cmmi10', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-13 15:49:17,849 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Users\\msameerakram\\AppData\\Local\\anaconda3\\Lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\DejaVuSans-BoldOblique.ttf', name='DejaVu Sans', style='oblique', variant='normal', weight=700, stretch='normal', size='scalable')) = 1.335
2025-03-13 15:49:17,849 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Users\\msameerakram\\AppData\\Local\\anaconda3\\Lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXGeneralBol.ttf', name='STIXGeneral', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-03-13 15:49:17,849 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Users\\msameerakram\\AppData\\Local\\anaconda3\\Lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\cmex10.ttf', name='cmex10', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-13 15:49:17,849 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Users\\msameerakram\\AppData\\Local\\anaconda3\\Lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\DejaVuSerif-Italic.ttf', name='DejaVu Serif', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-03-13 15:49:17,849 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Users\\msameerakram\\AppData\\Local\\anaconda3\\Lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\DejaVuSerifDisplay.ttf', name='DejaVu Serif Display', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-13 15:49:17,849 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Users\\msameerakram\\AppData\\Local\\anaconda3\\Lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXSizOneSymBol.ttf', name='STIXSizeOneSym', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-03-13 15:49:17,850 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Users\\msameerakram\\AppData\\Local\\anaconda3\\Lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\DejaVuSerif.ttf', name='DejaVu Serif', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-13 15:49:17,850 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Users\\msameerakram\\AppData\\Local\\anaconda3\\Lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXNonUniIta.ttf', name='STIXNonUnicode', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-03-13 15:49:17,850 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Users\\msameerakram\\AppData\\Local\\anaconda3\\Lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\DejaVuSerif-BoldItalic.ttf', name='DejaVu Serif', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2025-03-13 15:49:17,850 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\RAGE.TTF', name='Rage Italic', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-03-13 15:49:17,850 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BOD_PSTC.TTF', name='Bodoni MT', style='normal', variant='normal', weight=300, stretch='normal', size='scalable')) = 10.145
2025-03-13 15:49:17,850 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\FRSCRIPT.TTF', name='French Script MT', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-13 15:49:17,851 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\SitkaVF-Italic.ttf', name='Sitka', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-03-13 15:49:17,851 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\comicz.ttf', name='Comic Sans MS', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2025-03-13 15:49:17,851 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\FTLTLT.TTF', name='Footlight MT Light', style='normal', variant='normal', weight=300, stretch='normal', size='scalable')) = 10.145
2025-03-13 15:49:17,851 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BOOKOS.TTF', name='Bookman Old Style', style='normal', variant='normal', weight=300, stretch='normal', size='scalable')) = 10.145
2025-03-13 15:49:17,851 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BRUSHSCI.TTF', name='Brush Script MT', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-03-13 15:49:17,851 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\FRADMIT.TTF', name='Franklin Gothic Demi', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-03-13 15:49:17,851 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\PALSCRI.TTF', name='Palace Script MT', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-13 15:49:17,852 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ANTQUAB.TTF', name='Book Antiqua', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-03-13 15:49:17,852 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GILSANUB.TTF', name='Gill Sans Ultra Bold', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-13 15:49:17,852 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\georgiaz.ttf', name='Georgia', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2025-03-13 15:49:17,852 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\cambriai.ttf', name='Cambria', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-03-13 15:49:17,853 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\trebucbd.ttf', name='Trebuchet MS', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-03-13 15:49:17,853 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Candarai.ttf', name='Candara', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-03-13 15:49:17,853 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\segoeprb.ttf', name='Segoe Print', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-03-13 15:49:17,853 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ELEPHNT.TTF', name='Elephant', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-13 15:49:17,854 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\HARLOWSI.TTF', name='Harlow Solid Italic', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-03-13 15:49:17,854 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\KUNSTLER.TTF', name='Kunstler Script', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-13 15:49:17,854 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ebrima.ttf', name='Ebrima', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-13 15:49:17,854 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\simsun.ttc', name='SimSun', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-13 15:49:17,855 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\seguisym.ttf', name='Segoe UI Symbol', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-13 15:49:17,855 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ARIALNBI.TTF', name='Arial', style='italic', variant='normal', weight=700, stretch='condensed', size='scalable')) = 7.8986363636363635
2025-03-13 15:49:17,855 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\mvboli.ttf', name='MV Boli', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-13 15:49:17,855 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\comici.ttf', name='Comic Sans MS', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-03-13 15:49:17,855 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LATINWD.TTF', name='Wide Latin', style='normal', variant='normal', weight=400, stretch='expanded', size='scalable')) = 10.25
2025-03-13 15:49:17,855 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\georgiai.ttf', name='Georgia', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-03-13 15:49:17,855 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\verdanaz.ttf', name='Verdana', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 4.971363636363637
2025-03-13 15:49:17,856 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\micross.ttf', name='Microsoft Sans Serif', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-13 15:49:17,856 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LeelaUIb.ttf', name='Leelawadee UI', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-03-13 15:49:17,856 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\MAIAN.TTF', name='Maiandra GD', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-13 15:49:17,856 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Candara.ttf', name='Candara', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-13 15:49:17,856 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\corbelb.ttf', name='Corbel', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-03-13 15:49:17,856 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\FELIXTI.TTF', name='Felix Titling', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-13 15:49:17,856 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\SitkaVF.ttf', name='Sitka', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-13 15:49:17,857 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GOTHIC.TTF', name='Century Gothic', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-13 15:49:17,857 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\FRABKIT.TTF', name='Franklin Gothic Book', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-03-13 15:49:17,857 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GOUDOSI.TTF', name='Goudy Old Style', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-03-13 15:49:17,857 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\segoeui.ttf', name='Segoe UI', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-13 15:49:17,857 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\CENSCBK.TTF', name='Century Schoolbook', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-13 15:49:17,858 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\SCHLBKBI.TTF', name='Century Schoolbook', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2025-03-13 15:49:17,858 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\YuGothL.ttc', name='Yu Gothic', style='normal', variant='normal', weight=300, stretch='normal', size='scalable')) = 10.145
2025-03-13 15:49:17,858 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ENGR.TTF', name='Engravers MT', style='normal', variant='normal', weight=500, stretch='normal', size='scalable')) = 10.145
2025-03-13 15:49:17,858 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\malgunsl.ttf', name='Malgun Gothic', style='normal', variant='normal', weight=300, stretch='normal', size='scalable')) = 10.145
2025-03-13 15:49:17,858 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\palab.ttf', name='Palatino Linotype', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-03-13 15:49:17,858 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ELEPHNTI.TTF', name='Elephant', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-03-13 15:49:17,859 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BRLNSR.TTF', name='Berlin Sans FB', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-13 15:49:17,859 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\framdit.ttf', name='Franklin Gothic Medium', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-03-13 15:49:17,859 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\gadugib.ttf', name='Gadugi', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-03-13 15:49:17,859 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\YuGothB.ttc', name='Yu Gothic', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-03-13 15:49:17,860 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\SCRIPTBL.TTF', name='Script MT Bold', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-03-13 15:49:17,860 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BASKVILL.TTF', name='Baskerville Old Face', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-13 15:49:17,860 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\calibrili.ttf', name='Calibri', style='italic', variant='normal', weight=300, stretch='normal', size='scalable')) = 11.145
2025-03-13 15:49:17,860 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ITCBLKAD.TTF', name='Blackadder ITC', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-13 15:49:17,860 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\DUBAI-REGULAR.TTF', name='Dubai', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-13 15:49:17,860 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ITCEDSCR.TTF', name='Edwardian Script ITC', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-13 15:49:17,861 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\WINGDNG3.TTF', name='Wingdings 3', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-13 15:49:17,861 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ERASLGHT.TTF', name='Eras Light ITC', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-13 15:49:17,861 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\MSUIGHUR.TTF', name='Microsoft Uighur', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-13 15:49:17,861 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\segoesc.ttf', name='Segoe Script', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-13 15:49:17,861 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\trebucit.ttf', name='Trebuchet MS', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-03-13 15:49:17,862 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\CENTURY.TTF', name='Century', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-13 15:49:17,862 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\PLAYBILL.TTF', name='Playbill', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-13 15:49:17,862 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LBRITEI.TTF', name='Lucida Bright', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-03-13 15:49:17,862 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\segoeuil.ttf', name='Segoe UI', style='normal', variant='normal', weight=300, stretch='normal', size='scalable')) = 10.145
2025-03-13 15:49:17,862 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BRITANIC.TTF', name='Britannic Bold', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-13 15:49:17,862 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\taile.ttf', name='Microsoft Tai Le', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-13 15:49:17,863 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ntailub.ttf', name='Microsoft New Tai Lue', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-03-13 15:49:17,863 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BRLNSB.TTF', name='Berlin Sans FB', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-03-13 15:49:17,863 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\arialbd.ttf', name='Arial', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 6.698636363636363
2025-03-13 15:49:17,863 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\seguisb.ttf', name='Segoe UI', style='normal', variant='normal', weight=600, stretch='normal', size='scalable')) = 10.24
2025-03-13 15:49:17,863 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\segoeuiz.ttf', name='Segoe UI', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2025-03-13 15:49:17,863 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ERASMD.TTF', name='Eras Medium ITC', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-13 15:49:17,864 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\seguiemj.ttf', name='Segoe UI Emoji', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-13 15:49:17,864 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BROADW.TTF', name='Broadway', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-13 15:49:17,864 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BOD_BLAI.TTF', name='Bodoni MT', style='italic', variant='normal', weight=900, stretch='normal', size='scalable')) = 11.525
2025-03-13 15:49:17,864 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\seguibl.ttf', name='Segoe UI', style='normal', variant='normal', weight=900, stretch='normal', size='scalable')) = 10.525
2025-03-13 15:49:17,864 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LFAX.TTF', name='Lucida Fax', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-13 15:49:17,864 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\YuGothR.ttc', name='Yu Gothic', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-13 15:49:17,865 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\TCCEB.TTF', name='Tw Cen MT Condensed Extra Bold', style='normal', variant='normal', weight=400, stretch='condensed', size='scalable')) = 10.25
2025-03-13 15:49:17,865 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GILLUBCD.TTF', name='Gill Sans Ultra Bold Condensed', style='normal', variant='normal', weight=400, stretch='condensed', size='scalable')) = 10.25
2025-03-13 15:49:17,865 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LFAXD.TTF', name='Lucida Fax', style='normal', variant='normal', weight=600, stretch='normal', size='scalable')) = 10.24
2025-03-13 15:49:17,865 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\PER_____.TTF', name='Perpetua', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-13 15:49:17,865 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\segoeuii.ttf', name='Segoe UI', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-03-13 15:49:17,865 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\consolaz.ttf', name='Consolas', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2025-03-13 15:49:17,865 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\REFSAN.TTF', name='MS Reference Sans Serif', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-13 15:49:17,866 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\himalaya.ttf', name='Microsoft Himalaya', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-13 15:49:17,866 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ROCCB___.TTF', name='Rockwell Condensed', style='normal', variant='normal', weight=700, stretch='condensed', size='scalable')) = 10.535
2025-03-13 15:49:17,866 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\msyh.ttc', name='Microsoft YaHei', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-13 15:49:17,866 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\DUBAI-BOLD.TTF', name='Dubai', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-03-13 15:49:17,867 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\phagspa.ttf', name='Microsoft PhagsPa', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-13 15:49:17,867 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\COPRGTB.TTF', name='Copperplate Gothic Bold', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-13 15:49:17,867 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\constani.ttf', name='Constantia', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-03-13 15:49:17,868 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LTYPEO.TTF', name='Lucida Sans Typewriter', style='oblique', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-03-13 15:49:17,868 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\seguisli.ttf', name='Segoe UI', style='italic', variant='normal', weight=350, stretch='normal', size='scalable')) = 11.0975
2025-03-13 15:49:17,868 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\PERBI___.TTF', name='Perpetua', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2025-03-13 15:49:17,868 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\MAGNETOB.TTF', name='Magneto', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-03-13 15:49:17,868 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\tahoma.ttf', name='Tahoma', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-13 15:49:17,869 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BELLI.TTF', name='Bell MT', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-03-13 15:49:17,869 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\msgothic.ttc', name='MS Gothic', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-13 15:49:17,869 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\consolai.ttf', name='Consolas', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-03-13 15:49:17,869 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\courbi.ttf', name='Courier New', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2025-03-13 15:49:17,869 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\SansSerifCollection.ttf', name='Sans Serif Collection', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-13 15:49:17,869 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LFAXDI.TTF', name='Lucida Fax', style='italic', variant='normal', weight=600, stretch='normal', size='scalable')) = 11.24
2025-03-13 15:49:17,870 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BOOKOSB.TTF', name='Bookman Old Style', style='normal', variant='normal', weight=600, stretch='normal', size='scalable')) = 10.24
2025-03-13 15:49:17,870 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BELL.TTF', name='Bell MT', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-13 15:49:17,870 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GOUDOS.TTF', name='Goudy Old Style', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-13 15:49:17,870 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\consolab.ttf', name='Consolas', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-03-13 15:49:17,870 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ROCKI.TTF', name='Rockwell', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-03-13 15:49:17,870 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\constanb.ttf', name='Constantia', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-03-13 15:49:17,871 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\seguisbi.ttf', name='Segoe UI', style='italic', variant='normal', weight=600, stretch='normal', size='scalable')) = 11.24
2025-03-13 15:49:17,871 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Nirmala.ttc', name='Nirmala UI', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-13 15:49:17,871 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LEELAWDB.TTF', name='Leelawadee', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-03-13 15:49:17,871 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\cour.ttf', name='Courier New', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-13 15:49:17,871 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\malgunbd.ttf', name='Malgun Gothic', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-03-13 15:49:17,871 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\MTCORSVA.TTF', name='Monotype Corsiva', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-13 15:49:17,871 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\SCHLBKI.TTF', name='Century Schoolbook', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-03-13 15:49:17,872 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LEELAWAD.TTF', name='Leelawadee', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-13 15:49:17,872 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\corbelli.ttf', name='Corbel', style='italic', variant='normal', weight=300, stretch='normal', size='scalable')) = 11.145
2025-03-13 15:49:17,872 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\symbol.ttf', name='Symbol', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-13 15:49:17,872 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BERNHC.TTF', name='Bernard MT Condensed', style='normal', variant='normal', weight=400, stretch='condensed', size='scalable')) = 10.25
2025-03-13 15:49:17,872 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\YuGothM.ttc', name='Yu Gothic', style='normal', variant='normal', weight=500, stretch='normal', size='scalable')) = 10.145
2025-03-13 15:49:17,872 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BOD_CBI.TTF', name='Bodoni MT', style='italic', variant='normal', weight=700, stretch='condensed', size='scalable')) = 11.535
2025-03-13 15:49:17,873 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\monbaiti.ttf', name='Mongolian Baiti', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-13 15:49:17,873 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Gabriola.ttf', name='Gabriola', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-13 15:49:17,873 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\timesi.ttf', name='Times New Roman', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-03-13 15:49:17,873 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BOD_B.TTF', name='Bodoni MT', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-03-13 15:49:17,873 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\verdana.ttf', name='Verdana', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 3.6863636363636365
2025-03-13 15:49:17,873 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Candarali.ttf', name='Candara', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-03-13 15:49:17,875 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\PRISTINA.TTF', name='Pristina', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-13 15:49:17,875 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\arialbi.ttf', name='Arial', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 7.698636363636363
2025-03-13 15:49:17,875 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LCALLIG.TTF', name='Lucida Calligraphy', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-03-13 15:49:17,875 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Candaral.ttf', name='Candara', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-13 15:49:17,876 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\FRAHVIT.TTF', name='Franklin Gothic Heavy', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-03-13 15:49:17,876 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Inkfree.ttf', name='Ink Free', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-13 15:49:17,876 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\VLADIMIR.TTF', name='Vladimir Script', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-13 15:49:17,876 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ONYX.TTF', name='Onyx', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-13 15:49:17,876 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LBRITEDI.TTF', name='Lucida Bright', style='italic', variant='normal', weight=600, stretch='normal', size='scalable')) = 11.24
2025-03-13 15:49:17,876 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\WINGDNG2.TTF', name='Wingdings 2', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-13 15:49:17,877 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\DUBAI-LIGHT.TTF', name='Dubai', style='normal', variant='normal', weight=300, stretch='normal', size='scalable')) = 10.145
2025-03-13 15:49:17,877 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\l_10646.ttf', name='Lucida Sans Unicode', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-13 15:49:17,877 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\TCCB____.TTF', name='Tw Cen MT Condensed', style='normal', variant='normal', weight=700, stretch='condensed', size='scalable')) = 10.535
2025-03-13 15:49:17,877 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ARIALNB.TTF', name='Arial', style='normal', variant='normal', weight=700, stretch='condensed', size='scalable')) = 6.8986363636363635
2025-03-13 15:49:17,877 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\trebuc.ttf', name='Trebuchet MS', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-13 15:49:17,877 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\TCMI____.TTF', name='Tw Cen MT', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-03-13 15:49:17,878 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ERASBD.TTF', name='Eras Bold ITC', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-13 15:49:17,878 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LSANSDI.TTF', name='Lucida Sans', style='italic', variant='normal', weight=600, stretch='normal', size='scalable')) = 11.24
2025-03-13 15:49:17,878 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\CENTAUR.TTF', name='Centaur', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-13 15:49:17,878 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\HTOWERT.TTF', name='High Tower Text', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-13 15:49:17,878 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\INFROMAN.TTF', name='Informal Roman', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-13 15:49:17,878 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\constan.ttf', name='Constantia', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-13 15:49:17,879 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LFAXI.TTF', name='Lucida Fax', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-03-13 15:49:17,879 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\phagspab.ttf', name='Microsoft PhagsPa', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-03-13 15:49:17,879 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GIL_____.TTF', name='Gill Sans MT', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-13 15:49:17,879 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ariblk.ttf', name='Arial', style='normal', variant='normal', weight=900, stretch='normal', size='scalable')) = 6.888636363636364
2025-03-13 15:49:17,879 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GOTHICBI.TTF', name='Century Gothic', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2025-03-13 15:49:17,879 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\FRADMCN.TTF', name='Franklin Gothic Demi Cond', style='normal', variant='normal', weight=400, stretch='condensed', size='scalable')) = 10.25
2025-03-13 15:49:17,879 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\calibrii.ttf', name='Calibri', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-03-13 15:49:17,880 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GARABD.TTF', name='Garamond', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-03-13 15:49:17,880 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\MISTRAL.TTF', name='Mistral', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-13 15:49:17,880 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BOD_BI.TTF', name='Bodoni MT', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2025-03-13 15:49:17,881 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GOUDOSB.TTF', name='Goudy Old Style', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-03-13 15:49:17,881 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\FORTE.TTF', name='Forte', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-13 15:49:17,881 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\HARNGTON.TTF', name='Harrington', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-13 15:49:17,881 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BOD_CI.TTF', name='Bodoni MT', style='italic', variant='normal', weight=400, stretch='condensed', size='scalable')) = 11.25
2025-03-13 15:49:17,881 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BKANT.TTF', name='Book Antiqua', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-13 15:49:17,882 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GILC____.TTF', name='Gill Sans MT Condensed', style='normal', variant='normal', weight=400, stretch='condensed', size='scalable')) = 10.25
2025-03-13 15:49:17,882 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\segoepr.ttf', name='Segoe Print', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-13 15:49:17,882 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\VINERITC.TTF', name='Viner Hand ITC', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-13 15:49:17,883 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\FRAMDCN.TTF', name='Franklin Gothic Medium Cond', style='normal', variant='normal', weight=400, stretch='condensed', size='scalable')) = 10.25
2025-03-13 15:49:17,883 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\sylfaen.ttf', name='Sylfaen', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-13 15:49:17,883 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\mmrtext.ttf', name='Myanmar Text', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-13 15:49:17,883 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\SNAP____.TTF', name='Snap ITC', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-13 15:49:17,883 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GILI____.TTF', name='Gill Sans MT', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-03-13 15:49:17,883 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\calibrib.ttf', name='Calibri', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-03-13 15:49:17,884 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\impact.ttf', name='Impact', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-13 15:49:17,884 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\SCHLBKB.TTF', name='Century Schoolbook', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-03-13 15:49:17,884 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\TCB_____.TTF', name='Tw Cen MT', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-03-13 15:49:17,884 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ANTQUAI.TTF', name='Book Antiqua', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-03-13 15:49:17,884 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BOD_CR.TTF', name='Bodoni MT', style='normal', variant='normal', weight=400, stretch='condensed', size='scalable')) = 10.25
2025-03-13 15:49:17,884 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\corbell.ttf', name='Corbel', style='normal', variant='normal', weight=300, stretch='normal', size='scalable')) = 10.145
2025-03-13 15:49:17,885 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\FRADM.TTF', name='Franklin Gothic Demi', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-13 15:49:17,885 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\PAPYRUS.TTF', name='Papyrus', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-13 15:49:17,885 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\VIVALDII.TTF', name='Vivaldi', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-03-13 15:49:17,885 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\OLDENGL.TTF', name='Old English Text MT', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-13 15:49:17,885 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\pala.ttf', name='Palatino Linotype', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-13 15:49:17,885 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\comicbd.ttf', name='Comic Sans MS', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-03-13 15:49:17,885 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\calibri.ttf', name='Calibri', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-13 15:49:17,886 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\PERI____.TTF', name='Perpetua', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-03-13 15:49:17,886 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GARAIT.TTF', name='Garamond', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-03-13 15:49:17,886 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\corbelz.ttf', name='Corbel', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2025-03-13 15:49:17,886 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GARA.TTF', name='Garamond', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-13 15:49:17,886 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\georgiab.ttf', name='Georgia', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-03-13 15:49:17,886 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ROCK.TTF', name='Rockwell', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-13 15:49:17,887 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\PARCHM.TTF', name='Parchment', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-13 15:49:17,887 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\CALIFB.TTF', name='Californian FB', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-03-13 15:49:17,887 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\cambriaz.ttf', name='Cambria', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2025-03-13 15:49:17,887 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ebrimabd.ttf', name='Ebrima', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-03-13 15:49:17,887 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LSANS.TTF', name='Lucida Sans', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-13 15:49:17,888 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\timesbd.ttf', name='Times New Roman', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-03-13 15:49:17,888 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\CALIFR.TTF', name='Californian FB', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-13 15:49:17,888 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\consola.ttf', name='Consolas', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-13 15:49:17,888 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\msjhl.ttc', name='Microsoft JhengHei', style='normal', variant='normal', weight=290, stretch='normal', size='scalable')) = 10.1545
2025-03-13 15:49:17,889 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Candarab.ttf', name='Candara', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-03-13 15:49:17,889 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\MTEXTRA.TTF', name='MT Extra', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-13 15:49:17,889 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ntailu.ttf', name='Microsoft New Tai Lue', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-13 15:49:17,890 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\seguibli.ttf', name='Segoe UI', style='italic', variant='normal', weight=900, stretch='normal', size='scalable')) = 11.525
2025-03-13 15:49:17,890 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\javatext.ttf', name='Javanese Text', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-13 15:49:17,890 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\SHOWG.TTF', name='Showcard Gothic', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-13 15:49:17,890 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\CASTELAR.TTF', name='Castellar', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-13 15:49:17,890 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\HATTEN.TTF', name='Haettenschweiler', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-13 15:49:17,890 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ariali.ttf', name='Arial', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 7.413636363636363
2025-03-13 15:49:17,891 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\AGENCYR.TTF', name='Agency FB', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-13 15:49:17,891 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\malgun.ttf', name='Malgun Gothic', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-13 15:49:17,891 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BOD_BLAR.TTF', name='Bodoni MT', style='normal', variant='normal', weight=900, stretch='normal', size='scalable')) = 10.525
2025-03-13 15:49:17,891 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LeelawUI.ttf', name='Leelawadee UI', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-13 15:49:17,891 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\CHILLER.TTF', name='Chiller', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-13 15:49:17,891 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\CALIST.TTF', name='Calisto MT', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-13 15:49:17,891 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\JUICE___.TTF', name='Juice ITC', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-13 15:49:17,892 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\JOKERMAN.TTF', name='Jokerman', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-13 15:49:17,892 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\cambria.ttc', name='Cambria', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-13 15:49:17,892 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LHANDW.TTF', name='Lucida Handwriting', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-03-13 15:49:17,892 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BAUHS93.TTF', name='Bauhaus 93', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-13 15:49:17,892 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\COPRGTL.TTF', name='Copperplate Gothic Light', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-13 15:49:17,892 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LSANSD.TTF', name='Lucida Sans', style='normal', variant='normal', weight=600, stretch='normal', size='scalable')) = 10.24
2025-03-13 15:49:17,893 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LTYPEBO.TTF', name='Lucida Sans Typewriter', style='oblique', variant='normal', weight=600, stretch='normal', size='scalable')) = 11.24
2025-03-13 15:49:17,893 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\arial.ttf', name='Arial', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 6.413636363636363
2025-03-13 15:49:17,893 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ERASDEMI.TTF', name='Eras Demi ITC', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-13 15:49:17,893 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\TEMPSITC.TTF', name='Tempus Sans ITC', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-13 15:49:17,893 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ARIALN.TTF', name='Arial', style='normal', variant='normal', weight=400, stretch='condensed', size='scalable')) = 6.613636363636363
2025-03-13 15:49:17,893 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\COLONNA.TTF', name='Colonna MT', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-13 15:49:17,894 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ROCKEB.TTF', name='Rockwell Extra Bold', style='normal', variant='normal', weight=800, stretch='normal', size='scalable')) = 10.43
2025-03-13 15:49:17,894 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\CALISTBI.TTF', name='Calisto MT', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2025-03-13 15:49:17,894 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\palabi.ttf', name='Palatino Linotype', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2025-03-13 15:49:17,895 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\segoescb.ttf', name='Segoe Script', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-03-13 15:49:17,895 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\corbeli.ttf', name='Corbel', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-03-13 15:49:17,895 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\segoeuisl.ttf', name='Segoe UI', style='normal', variant='normal', weight=350, stretch='normal', size='scalable')) = 10.0975
2025-03-13 15:49:17,895 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ROCKBI.TTF', name='Rockwell', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2025-03-13 15:49:17,895 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LBRITED.TTF', name='Lucida Bright', style='normal', variant='normal', weight=600, stretch='normal', size='scalable')) = 10.24
2025-03-13 15:49:17,897 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\CALISTI.TTF', name='Calisto MT', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-03-13 15:49:17,897 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\courbd.ttf', name='Courier New', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-03-13 15:49:17,897 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\lucon.ttf', name='Lucida Console', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-13 15:49:17,897 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\POORICH.TTF', name='Poor Richard', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-13 15:49:17,897 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\taileb.ttf', name='Microsoft Tai Le', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-03-13 15:49:17,897 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ARLRDBD.TTF', name='Arial Rounded MT Bold', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-13 15:49:17,897 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GLSNECB.TTF', name='Gill Sans MT Ext Condensed Bold', style='normal', variant='normal', weight=400, stretch='condensed', size='scalable')) = 10.25
2025-03-13 15:49:17,897 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\mingliub.ttc', name='MingLiU-ExtB', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-13 15:49:17,897 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\timesbi.ttf', name='Times New Roman', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2025-03-13 15:49:17,897 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\calibriz.ttf', name='Calibri', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2025-03-13 15:49:17,897 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BOD_R.TTF', name='Bodoni MT', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-13 15:49:17,899 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\wingding.ttf', name='Wingdings', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-13 15:49:17,899 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BRADHITC.TTF', name='Bradley Hand ITC', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-13 15:49:17,899 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\framd.ttf', name='Franklin Gothic Medium', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-13 15:49:17,899 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\DUBAI-MEDIUM.TTF', name='Dubai', style='normal', variant='normal', weight=500, stretch='normal', size='scalable')) = 10.145
2025-03-13 15:49:17,899 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\trebucbi.ttf', name='Trebuchet MS', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2025-03-13 15:49:17,899 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\cambriab.ttf', name='Cambria', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-03-13 15:49:17,899 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\palai.ttf', name='Palatino Linotype', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-03-13 15:49:17,899 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\times.ttf', name='Times New Roman', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-13 15:49:17,899 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\constanz.ttf', name='Constantia', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2025-03-13 15:49:17,899 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\corbel.ttf', name='Corbel', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-13 15:49:17,899 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\gadugi.ttf', name='Gadugi', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-13 15:49:17,899 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LBRITE.TTF', name='Lucida Bright', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-13 15:49:17,899 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GOUDYSTO.TTF', name='Goudy Stout', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-13 15:49:17,900 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\verdanab.ttf', name='Verdana', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 3.9713636363636367
2025-03-13 15:49:17,900 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GOTHICB.TTF', name='Century Gothic', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-03-13 15:49:17,900 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\NIAGENG.TTF', name='Niagara Engraved', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-13 15:49:17,900 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\segoeuib.ttf', name='Segoe UI', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-03-13 15:49:17,900 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\seguihis.ttf', name='Segoe UI Historic', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-13 15:49:17,900 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\msyhl.ttc', name='Microsoft YaHei', style='normal', variant='normal', weight=290, stretch='normal', size='scalable')) = 10.1545
2025-03-13 15:49:17,901 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ROCKB.TTF', name='Rockwell', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-03-13 15:49:17,901 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\PERTIBD.TTF', name='Perpetua Titling MT', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-03-13 15:49:17,901 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\comic.ttf', name='Comic Sans MS', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-13 15:49:17,901 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\OCRAEXT.TTF', name='OCR A Extended', style='normal', variant='normal', weight=400, stretch='expanded', size='scalable')) = 10.25
2025-03-13 15:49:17,901 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\TCBI____.TTF', name='Tw Cen MT', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2025-03-13 15:49:17,902 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\IMPRISHA.TTF', name='Imprint MT Shadow', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-13 15:49:17,902 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\MOD20.TTF', name='Modern No. 20', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-13 15:49:17,902 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GILB____.TTF', name='Gill Sans MT', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-03-13 15:49:17,902 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LTYPE.TTF', name='Lucida Sans Typewriter', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-13 15:49:17,903 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BRLNSDB.TTF', name='Berlin Sans FB Demi', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-03-13 15:49:17,903 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\STENCIL.TTF', name='Stencil', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-13 15:49:17,903 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\msyhbd.ttc', name='Microsoft YaHei', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-03-13 15:49:17,903 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\SimsunExtG.ttf', name='SimSun-ExtG', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-13 15:49:17,903 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LeelUIsl.ttf', name='Leelawadee UI', style='normal', variant='normal', weight=350, stretch='normal', size='scalable')) = 10.0975
2025-03-13 15:49:17,904 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\OUTLOOK.TTF', name='MS Outlook', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-13 15:49:17,904 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BOD_CB.TTF', name='Bodoni MT', style='normal', variant='normal', weight=700, stretch='condensed', size='scalable')) = 10.535
2025-03-13 15:49:17,904 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\mmrtextb.ttf', name='Myanmar Text', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-03-13 15:49:17,904 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GOTHICI.TTF', name='Century Gothic', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-03-13 15:49:17,904 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\SegoeIcons.ttf', name='Segoe Fluent Icons', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-13 15:49:17,904 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ALGER.TTF', name='Algerian', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-13 15:49:17,906 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BOOKOSBI.TTF', name='Bookman Old Style', style='italic', variant='normal', weight=600, stretch='normal', size='scalable')) = 11.24
2025-03-13 15:49:17,906 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BSSYM7.TTF', name='Bookshelf Symbol 7', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-13 15:49:17,906 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\tahomabd.ttf', name='Tahoma', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-03-13 15:49:17,906 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\msyi.ttf', name='Microsoft Yi Baiti', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-13 15:49:17,906 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\CURLZ___.TTF', name='Curlz MT', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-13 15:49:17,906 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\RAVIE.TTF', name='Ravie', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-13 15:49:17,907 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\simsunb.ttf', name='SimSun-ExtB', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-13 15:49:17,907 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BELLB.TTF', name='Bell MT', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-03-13 15:49:17,907 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\PERTILI.TTF', name='Perpetua Titling MT', style='normal', variant='normal', weight=300, stretch='normal', size='scalable')) = 10.145
2025-03-13 15:49:17,907 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\seguili.ttf', name='Segoe UI', style='italic', variant='normal', weight=300, stretch='normal', size='scalable')) = 11.145
2025-03-13 15:49:17,907 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\CALISTB.TTF', name='Calisto MT', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-03-13 15:49:17,907 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ITCKRIST.TTF', name='Kristen ITC', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-13 15:49:17,908 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ANTQUABI.TTF', name='Book Antiqua', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2025-03-13 15:49:17,908 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\PERB____.TTF', name='Perpetua', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-03-13 15:49:17,908 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ROCC____.TTF', name='Rockwell Condensed', style='normal', variant='normal', weight=400, stretch='condensed', size='scalable')) = 10.25
2025-03-13 15:49:17,908 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GILBI___.TTF', name='Gill Sans MT', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2025-03-13 15:49:17,909 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\MSUIGHUB.TTF', name='Microsoft Uighur', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-03-13 15:49:17,909 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\segmdl2.ttf', name='Segoe MDL2 Assets', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-13 15:49:17,909 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ARIALNI.TTF', name='Arial', style='italic', variant='normal', weight=400, stretch='condensed', size='scalable')) = 7.613636363636363
2025-03-13 15:49:17,909 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\bahnschrift.ttf', name='Bahnschrift', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-13 15:49:17,910 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\TCM_____.TTF', name='Tw Cen MT', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-13 15:49:17,910 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\REFSPCL.TTF', name='MS Reference Specialty', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-13 15:49:17,910 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\FRAHV.TTF', name='Franklin Gothic Heavy', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-13 15:49:17,910 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Candaraz.ttf', name='Candara', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2025-03-13 15:49:17,911 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\georgia.ttf', name='Georgia', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-13 15:49:17,911 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\MATURASC.TTF', name='Matura MT Script Capitals', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-13 15:49:17,911 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GIGI.TTF', name='Gigi', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-13 15:49:17,911 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\CALIFI.TTF', name='Californian FB', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-03-13 15:49:17,911 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\SegUIVar.ttf', name='Segoe UI Variable', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-13 15:49:17,911 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\FRABK.TTF', name='Franklin Gothic Book', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-13 15:49:17,911 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\couri.ttf', name='Courier New', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-03-13 15:49:17,911 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BOOKOSI.TTF', name='Bookman Old Style', style='italic', variant='normal', weight=300, stretch='normal', size='scalable')) = 11.145
2025-03-13 15:49:17,911 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\verdanai.ttf', name='Verdana', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 4.6863636363636365
2025-03-13 15:49:17,912 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\calibril.ttf', name='Calibri', style='normal', variant='normal', weight=300, stretch='normal', size='scalable')) = 10.145
2025-03-13 15:49:17,912 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\FREESCPT.TTF', name='Freestyle Script', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-13 15:49:17,912 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BOD_I.TTF', name='Bodoni MT', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-03-13 15:49:17,912 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\msjhbd.ttc', name='Microsoft JhengHei', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-03-13 15:49:17,912 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\COOPBL.TTF', name='Cooper Black', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-13 15:49:17,912 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\TCCM____.TTF', name='Tw Cen MT Condensed', style='normal', variant='normal', weight=400, stretch='condensed', size='scalable')) = 10.25
2025-03-13 15:49:17,912 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\AGENCYB.TTF', name='Agency FB', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-03-13 15:49:17,913 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LSANSI.TTF', name='Lucida Sans', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-03-13 15:49:17,913 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\NIAGSOL.TTF', name='Niagara Solid', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-13 15:49:17,913 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LTYPEB.TTF', name='Lucida Sans Typewriter', style='normal', variant='normal', weight=600, stretch='normal', size='scalable')) = 10.24
2025-03-13 15:49:17,913 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GLECB.TTF', name='Gloucester MT Extra Condensed', style='normal', variant='normal', weight=400, stretch='condensed', size='scalable')) = 10.25
2025-03-13 15:49:17,913 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\webdings.ttf', name='Webdings', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-13 15:49:17,913 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\msjh.ttc', name='Microsoft JhengHei', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-13 15:49:17,914 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\HTOWERTI.TTF', name='High Tower Text', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-03-13 15:49:17,914 - matplotlib.font_manager - DEBUG - findfont: Matching sans\-serif:style=normal:variant=normal:weight=normal:stretch=normal:size=9.0 to DejaVu Sans ('C:\\Users\\msameerakram\\AppData\\Local\\anaconda3\\Lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\DejaVuSans.ttf') with score of 0.050000.
2025-03-13 15:49:18,208 - PIL.PngImagePlugin - DEBUG - STREAM b'IHDR' 16 13
2025-03-13 15:49:18,208 - PIL.PngImagePlugin - DEBUG - STREAM b'tEXt' 41 57
2025-03-13 15:49:18,209 - PIL.PngImagePlugin - DEBUG - STREAM b'pHYs' 110 9
2025-03-13 15:49:18,210 - PIL.PngImagePlugin - DEBUG - STREAM b'IDAT' 131 65536
2025-03-13 15:49:18,779 - matplotlib.font_manager - DEBUG - findfont: Matching sans\-serif:style=normal:variant=normal:weight=bold:stretch=normal:size=9.0.
2025-03-13 15:49:18,779 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Users\\msameerakram\\AppData\\Local\\anaconda3\\Lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\cmss10.ttf', name='cmss10', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.335
2025-03-13 15:49:18,780 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Users\\msameerakram\\AppData\\Local\\anaconda3\\Lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\DejaVuSans-Oblique.ttf', name='DejaVu Sans', style='oblique', variant='normal', weight=400, stretch='normal', size='scalable')) = 1.335
2025-03-13 15:49:18,780 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Users\\msameerakram\\AppData\\Local\\anaconda3\\Lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\cmb10.ttf', name='cmb10', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.335
2025-03-13 15:49:18,780 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Users\\msameerakram\\AppData\\Local\\anaconda3\\Lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\DejaVuSansDisplay.ttf', name='DejaVu Sans Display', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.335
2025-03-13 15:49:18,781 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Users\\msameerakram\\AppData\\Local\\anaconda3\\Lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\DejaVuSansMono-Oblique.ttf', name='DejaVu Sans Mono', style='oblique', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.335
2025-03-13 15:49:18,781 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Users\\msameerakram\\AppData\\Local\\anaconda3\\Lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXSizFiveSymReg.ttf', name='STIXSizeFiveSym', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.335
2025-03-13 15:49:18,781 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Users\\msameerakram\\AppData\\Local\\anaconda3\\Lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\DejaVuSansMono.ttf', name='DejaVu Sans Mono', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.335
2025-03-13 15:49:18,782 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Users\\msameerakram\\AppData\\Local\\anaconda3\\Lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\DejaVuSans.ttf', name='DejaVu Sans', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 0.33499999999999996
2025-03-13 15:49:18,782 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Users\\msameerakram\\AppData\\Local\\anaconda3\\Lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXGeneralBolIta.ttf', name='STIXGeneral', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.05
2025-03-13 15:49:18,782 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Users\\msameerakram\\AppData\\Local\\anaconda3\\Lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXSizThreeSymBol.ttf', name='STIXSizeThreeSym', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.05
2025-03-13 15:49:18,782 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Users\\msameerakram\\AppData\\Local\\anaconda3\\Lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXNonUniBolIta.ttf', name='STIXNonUnicode', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.05
2025-03-13 15:49:18,783 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Users\\msameerakram\\AppData\\Local\\anaconda3\\Lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXGeneralItalic.ttf', name='STIXGeneral', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.335
2025-03-13 15:49:18,783 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Users\\msameerakram\\AppData\\Local\\anaconda3\\Lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\DejaVuSerif-Bold.ttf', name='DejaVu Serif', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.05
2025-03-13 15:49:18,783 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Users\\msameerakram\\AppData\\Local\\anaconda3\\Lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXSizTwoSymReg.ttf', name='STIXSizeTwoSym', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.335
2025-03-13 15:49:18,784 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Users\\msameerakram\\AppData\\Local\\anaconda3\\Lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\DejaVuSansMono-Bold.ttf', name='DejaVu Sans Mono', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.05
2025-03-13 15:49:18,784 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Users\\msameerakram\\AppData\\Local\\anaconda3\\Lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\cmr10.ttf', name='cmr10', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.335
2025-03-13 15:49:18,784 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Users\\msameerakram\\AppData\\Local\\anaconda3\\Lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXSizFourSymBol.ttf', name='STIXSizeFourSym', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.05
2025-03-13 15:49:18,784 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Users\\msameerakram\\AppData\\Local\\anaconda3\\Lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\cmtt10.ttf', name='cmtt10', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.335
2025-03-13 15:49:18,785 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Users\\msameerakram\\AppData\\Local\\anaconda3\\Lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXSizTwoSymBol.ttf', name='STIXSizeTwoSym', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.05
2025-03-13 15:49:18,785 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Users\\msameerakram\\AppData\\Local\\anaconda3\\Lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXGeneral.ttf', name='STIXGeneral', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.335
2025-03-13 15:49:18,785 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Users\\msameerakram\\AppData\\Local\\anaconda3\\Lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXNonUni.ttf', name='STIXNonUnicode', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.335
2025-03-13 15:49:18,785 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Users\\msameerakram\\AppData\\Local\\anaconda3\\Lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\DejaVuSansMono-BoldOblique.ttf', name='DejaVu Sans Mono', style='oblique', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.05
2025-03-13 15:49:18,786 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Users\\msameerakram\\AppData\\Local\\anaconda3\\Lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXSizFourSymReg.ttf', name='STIXSizeFourSym', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.335
2025-03-13 15:49:18,786 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Users\\msameerakram\\AppData\\Local\\anaconda3\\Lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXSizOneSymReg.ttf', name='STIXSizeOneSym', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.335
2025-03-13 15:49:18,786 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Users\\msameerakram\\AppData\\Local\\anaconda3\\Lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXNonUniBol.ttf', name='STIXNonUnicode', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.05
2025-03-13 15:49:18,786 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Users\\msameerakram\\AppData\\Local\\anaconda3\\Lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXSizThreeSymReg.ttf', name='STIXSizeThreeSym', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.335
2025-03-13 15:49:18,786 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Users\\msameerakram\\AppData\\Local\\anaconda3\\Lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\cmsy10.ttf', name='cmsy10', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.335
2025-03-13 15:49:18,786 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Users\\msameerakram\\AppData\\Local\\anaconda3\\Lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\DejaVuSans-Bold.ttf', name='DejaVu Sans', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 0.05
2025-03-13 15:49:18,788 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Users\\msameerakram\\AppData\\Local\\anaconda3\\Lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\cmmi10.ttf', name='cmmi10', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.335
2025-03-13 15:49:18,788 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Users\\msameerakram\\AppData\\Local\\anaconda3\\Lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\DejaVuSans-BoldOblique.ttf', name='DejaVu Sans', style='oblique', variant='normal', weight=700, stretch='normal', size='scalable')) = 1.05
2025-03-13 15:49:18,788 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Users\\msameerakram\\AppData\\Local\\anaconda3\\Lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXGeneralBol.ttf', name='STIXGeneral', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.05
2025-03-13 15:49:18,788 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Users\\msameerakram\\AppData\\Local\\anaconda3\\Lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\cmex10.ttf', name='cmex10', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.335
2025-03-13 15:49:18,788 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Users\\msameerakram\\AppData\\Local\\anaconda3\\Lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\DejaVuSerif-Italic.ttf', name='DejaVu Serif', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.335
2025-03-13 15:49:18,788 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Users\\msameerakram\\AppData\\Local\\anaconda3\\Lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\DejaVuSerifDisplay.ttf', name='DejaVu Serif Display', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.335
2025-03-13 15:49:18,788 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Users\\msameerakram\\AppData\\Local\\anaconda3\\Lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXSizOneSymBol.ttf', name='STIXSizeOneSym', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.05
2025-03-13 15:49:18,788 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Users\\msameerakram\\AppData\\Local\\anaconda3\\Lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\DejaVuSerif.ttf', name='DejaVu Serif', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.335
2025-03-13 15:49:18,789 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Users\\msameerakram\\AppData\\Local\\anaconda3\\Lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXNonUniIta.ttf', name='STIXNonUnicode', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.335
2025-03-13 15:49:18,789 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Users\\msameerakram\\AppData\\Local\\anaconda3\\Lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\DejaVuSerif-BoldItalic.ttf', name='DejaVu Serif', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.05
2025-03-13 15:49:18,789 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\RAGE.TTF', name='Rage Italic', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.335
2025-03-13 15:49:18,789 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BOD_PSTC.TTF', name='Bodoni MT', style='normal', variant='normal', weight=300, stretch='normal', size='scalable')) = 10.43
2025-03-13 15:49:18,790 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\FRSCRIPT.TTF', name='French Script MT', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.335
2025-03-13 15:49:18,790 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\SitkaVF-Italic.ttf', name='Sitka', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.335
2025-03-13 15:49:18,790 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\comicz.ttf', name='Comic Sans MS', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.05
2025-03-13 15:49:18,790 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\FTLTLT.TTF', name='Footlight MT Light', style='normal', variant='normal', weight=300, stretch='normal', size='scalable')) = 10.43
2025-03-13 15:49:18,791 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BOOKOS.TTF', name='Bookman Old Style', style='normal', variant='normal', weight=300, stretch='normal', size='scalable')) = 10.43
2025-03-13 15:49:18,791 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BRUSHSCI.TTF', name='Brush Script MT', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.335
2025-03-13 15:49:18,791 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\FRADMIT.TTF', name='Franklin Gothic Demi', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.335
2025-03-13 15:49:18,791 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\PALSCRI.TTF', name='Palace Script MT', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.335
2025-03-13 15:49:18,792 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ANTQUAB.TTF', name='Book Antiqua', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.05
2025-03-13 15:49:18,792 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GILSANUB.TTF', name='Gill Sans Ultra Bold', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.335
2025-03-13 15:49:18,792 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\georgiaz.ttf', name='Georgia', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.05
2025-03-13 15:49:18,792 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\cambriai.ttf', name='Cambria', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.335
2025-03-13 15:49:18,792 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\trebucbd.ttf', name='Trebuchet MS', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.05
2025-03-13 15:49:18,792 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Candarai.ttf', name='Candara', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.335
2025-03-13 15:49:18,793 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\segoeprb.ttf', name='Segoe Print', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.05
2025-03-13 15:49:18,793 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ELEPHNT.TTF', name='Elephant', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.335
2025-03-13 15:49:18,793 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\HARLOWSI.TTF', name='Harlow Solid Italic', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.335
2025-03-13 15:49:18,793 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\KUNSTLER.TTF', name='Kunstler Script', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.335
2025-03-13 15:49:18,793 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ebrima.ttf', name='Ebrima', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.335
2025-03-13 15:49:18,793 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\simsun.ttc', name='SimSun', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.335
2025-03-13 15:49:18,794 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\seguisym.ttf', name='Segoe UI Symbol', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.335
2025-03-13 15:49:18,794 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ARIALNBI.TTF', name='Arial', style='italic', variant='normal', weight=700, stretch='condensed', size='scalable')) = 7.613636363636363
2025-03-13 15:49:18,794 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\mvboli.ttf', name='MV Boli', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.335
2025-03-13 15:49:18,794 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\comici.ttf', name='Comic Sans MS', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.335
2025-03-13 15:49:18,794 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LATINWD.TTF', name='Wide Latin', style='normal', variant='normal', weight=400, stretch='expanded', size='scalable')) = 10.535
2025-03-13 15:49:18,794 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\georgiai.ttf', name='Georgia', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.335
2025-03-13 15:49:18,795 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\verdanaz.ttf', name='Verdana', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 4.6863636363636365
2025-03-13 15:49:18,795 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\micross.ttf', name='Microsoft Sans Serif', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.335
2025-03-13 15:49:18,795 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LeelaUIb.ttf', name='Leelawadee UI', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.05
2025-03-13 15:49:18,795 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\MAIAN.TTF', name='Maiandra GD', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.335
2025-03-13 15:49:18,795 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Candara.ttf', name='Candara', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.335
2025-03-13 15:49:18,795 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\corbelb.ttf', name='Corbel', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.05
2025-03-13 15:49:18,795 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\FELIXTI.TTF', name='Felix Titling', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.335
2025-03-13 15:49:18,796 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\SitkaVF.ttf', name='Sitka', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.335
2025-03-13 15:49:18,796 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GOTHIC.TTF', name='Century Gothic', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.335
2025-03-13 15:49:18,796 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\FRABKIT.TTF', name='Franklin Gothic Book', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.335
2025-03-13 15:49:18,796 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GOUDOSI.TTF', name='Goudy Old Style', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.335
2025-03-13 15:49:18,796 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\segoeui.ttf', name='Segoe UI', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.335
2025-03-13 15:49:18,797 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\CENSCBK.TTF', name='Century Schoolbook', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.335
2025-03-13 15:49:18,797 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\SCHLBKBI.TTF', name='Century Schoolbook', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.05
2025-03-13 15:49:18,797 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\YuGothL.ttc', name='Yu Gothic', style='normal', variant='normal', weight=300, stretch='normal', size='scalable')) = 10.43
2025-03-13 15:49:18,797 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ENGR.TTF', name='Engravers MT', style='normal', variant='normal', weight=500, stretch='normal', size='scalable')) = 10.24
2025-03-13 15:49:18,798 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\malgunsl.ttf', name='Malgun Gothic', style='normal', variant='normal', weight=300, stretch='normal', size='scalable')) = 10.43
2025-03-13 15:49:18,798 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\palab.ttf', name='Palatino Linotype', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.05
2025-03-13 15:49:18,798 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ELEPHNTI.TTF', name='Elephant', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.335
2025-03-13 15:49:18,798 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BRLNSR.TTF', name='Berlin Sans FB', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.335
2025-03-13 15:49:18,798 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\framdit.ttf', name='Franklin Gothic Medium', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.335
2025-03-13 15:49:18,799 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\gadugib.ttf', name='Gadugi', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.05
2025-03-13 15:49:18,799 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\YuGothB.ttc', name='Yu Gothic', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.05
2025-03-13 15:49:18,799 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\SCRIPTBL.TTF', name='Script MT Bold', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.05
2025-03-13 15:49:18,799 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BASKVILL.TTF', name='Baskerville Old Face', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.335
2025-03-13 15:49:18,799 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\calibrili.ttf', name='Calibri', style='italic', variant='normal', weight=300, stretch='normal', size='scalable')) = 11.43
2025-03-13 15:49:18,799 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ITCBLKAD.TTF', name='Blackadder ITC', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.335
2025-03-13 15:49:18,800 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\DUBAI-REGULAR.TTF', name='Dubai', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.335
2025-03-13 15:49:18,800 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ITCEDSCR.TTF', name='Edwardian Script ITC', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.335
2025-03-13 15:49:18,800 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\WINGDNG3.TTF', name='Wingdings 3', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.335
2025-03-13 15:49:18,800 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ERASLGHT.TTF', name='Eras Light ITC', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.335
2025-03-13 15:49:18,800 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\MSUIGHUR.TTF', name='Microsoft Uighur', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.335
2025-03-13 15:49:18,800 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\segoesc.ttf', name='Segoe Script', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.335
2025-03-13 15:49:18,801 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\trebucit.ttf', name='Trebuchet MS', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.335
2025-03-13 15:49:18,801 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\CENTURY.TTF', name='Century', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.335
2025-03-13 15:49:18,801 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\PLAYBILL.TTF', name='Playbill', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.335
2025-03-13 15:49:18,801 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LBRITEI.TTF', name='Lucida Bright', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.335
2025-03-13 15:49:18,801 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\segoeuil.ttf', name='Segoe UI', style='normal', variant='normal', weight=300, stretch='normal', size='scalable')) = 10.43
2025-03-13 15:49:18,801 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BRITANIC.TTF', name='Britannic Bold', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.335
2025-03-13 15:49:18,801 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\taile.ttf', name='Microsoft Tai Le', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.335
2025-03-13 15:49:18,802 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ntailub.ttf', name='Microsoft New Tai Lue', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.05
2025-03-13 15:49:18,802 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BRLNSB.TTF', name='Berlin Sans FB', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.05
2025-03-13 15:49:18,802 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\arialbd.ttf', name='Arial', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 6.413636363636363
2025-03-13 15:49:18,802 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\seguisb.ttf', name='Segoe UI', style='normal', variant='normal', weight=600, stretch='normal', size='scalable')) = 10.145
2025-03-13 15:49:18,802 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\segoeuiz.ttf', name='Segoe UI', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.05
2025-03-13 15:49:18,803 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ERASMD.TTF', name='Eras Medium ITC', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.335
2025-03-13 15:49:18,803 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\seguiemj.ttf', name='Segoe UI Emoji', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.335
2025-03-13 15:49:18,803 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BROADW.TTF', name='Broadway', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.335
2025-03-13 15:49:18,803 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BOD_BLAI.TTF', name='Bodoni MT', style='italic', variant='normal', weight=900, stretch='normal', size='scalable')) = 11.24
2025-03-13 15:49:18,804 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\seguibl.ttf', name='Segoe UI', style='normal', variant='normal', weight=900, stretch='normal', size='scalable')) = 10.24
2025-03-13 15:49:18,804 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LFAX.TTF', name='Lucida Fax', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.335
2025-03-13 15:49:18,804 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\YuGothR.ttc', name='Yu Gothic', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.335
2025-03-13 15:49:18,804 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\TCCEB.TTF', name='Tw Cen MT Condensed Extra Bold', style='normal', variant='normal', weight=400, stretch='condensed', size='scalable')) = 10.535
2025-03-13 15:49:18,805 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GILLUBCD.TTF', name='Gill Sans Ultra Bold Condensed', style='normal', variant='normal', weight=400, stretch='condensed', size='scalable')) = 10.535
2025-03-13 15:49:18,806 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LFAXD.TTF', name='Lucida Fax', style='normal', variant='normal', weight=600, stretch='normal', size='scalable')) = 10.145
2025-03-13 15:49:18,806 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\PER_____.TTF', name='Perpetua', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.335
2025-03-13 15:49:18,806 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\segoeuii.ttf', name='Segoe UI', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.335
2025-03-13 15:49:18,806 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\consolaz.ttf', name='Consolas', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.05
2025-03-13 15:49:18,807 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\REFSAN.TTF', name='MS Reference Sans Serif', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.335
2025-03-13 15:49:18,807 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\himalaya.ttf', name='Microsoft Himalaya', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.335
2025-03-13 15:49:18,807 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ROCCB___.TTF', name='Rockwell Condensed', style='normal', variant='normal', weight=700, stretch='condensed', size='scalable')) = 10.25
2025-03-13 15:49:18,807 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\msyh.ttc', name='Microsoft YaHei', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.335
2025-03-13 15:49:18,807 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\DUBAI-BOLD.TTF', name='Dubai', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.05
2025-03-13 15:49:18,807 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\phagspa.ttf', name='Microsoft PhagsPa', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.335
2025-03-13 15:49:18,808 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\COPRGTB.TTF', name='Copperplate Gothic Bold', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.335
2025-03-13 15:49:18,808 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\constani.ttf', name='Constantia', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.335
2025-03-13 15:49:18,808 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LTYPEO.TTF', name='Lucida Sans Typewriter', style='oblique', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.335
2025-03-13 15:49:18,808 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\seguisli.ttf', name='Segoe UI', style='italic', variant='normal', weight=350, stretch='normal', size='scalable')) = 11.3825
2025-03-13 15:49:18,808 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\PERBI___.TTF', name='Perpetua', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.05
2025-03-13 15:49:18,809 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\MAGNETOB.TTF', name='Magneto', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.05
2025-03-13 15:49:18,809 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\tahoma.ttf', name='Tahoma', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.335
2025-03-13 15:49:18,809 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BELLI.TTF', name='Bell MT', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.335
2025-03-13 15:49:18,809 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\msgothic.ttc', name='MS Gothic', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.335
2025-03-13 15:49:18,809 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\consolai.ttf', name='Consolas', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.335
2025-03-13 15:49:18,810 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\courbi.ttf', name='Courier New', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.05
2025-03-13 15:49:18,810 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\SansSerifCollection.ttf', name='Sans Serif Collection', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.335
2025-03-13 15:49:18,810 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LFAXDI.TTF', name='Lucida Fax', style='italic', variant='normal', weight=600, stretch='normal', size='scalable')) = 11.145
2025-03-13 15:49:18,810 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BOOKOSB.TTF', name='Bookman Old Style', style='normal', variant='normal', weight=600, stretch='normal', size='scalable')) = 10.145
2025-03-13 15:49:18,811 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BELL.TTF', name='Bell MT', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.335
2025-03-13 15:49:18,811 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GOUDOS.TTF', name='Goudy Old Style', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.335
2025-03-13 15:49:18,811 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\consolab.ttf', name='Consolas', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.05
2025-03-13 15:49:18,811 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ROCKI.TTF', name='Rockwell', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.335
2025-03-13 15:49:18,812 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\constanb.ttf', name='Constantia', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.05
2025-03-13 15:49:18,812 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\seguisbi.ttf', name='Segoe UI', style='italic', variant='normal', weight=600, stretch='normal', size='scalable')) = 11.145
2025-03-13 15:49:18,812 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Nirmala.ttc', name='Nirmala UI', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.335
2025-03-13 15:49:18,812 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LEELAWDB.TTF', name='Leelawadee', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.05
2025-03-13 15:49:18,812 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\cour.ttf', name='Courier New', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.335
2025-03-13 15:49:18,813 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\malgunbd.ttf', name='Malgun Gothic', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.05
2025-03-13 15:49:18,813 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\MTCORSVA.TTF', name='Monotype Corsiva', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.335
2025-03-13 15:49:18,813 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\SCHLBKI.TTF', name='Century Schoolbook', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.335
2025-03-13 15:49:18,813 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LEELAWAD.TTF', name='Leelawadee', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.335
2025-03-13 15:49:18,813 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\corbelli.ttf', name='Corbel', style='italic', variant='normal', weight=300, stretch='normal', size='scalable')) = 11.43
2025-03-13 15:49:18,814 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\symbol.ttf', name='Symbol', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.335
2025-03-13 15:49:18,814 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BERNHC.TTF', name='Bernard MT Condensed', style='normal', variant='normal', weight=400, stretch='condensed', size='scalable')) = 10.535
2025-03-13 15:49:18,814 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\YuGothM.ttc', name='Yu Gothic', style='normal', variant='normal', weight=500, stretch='normal', size='scalable')) = 10.24
2025-03-13 15:49:18,814 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BOD_CBI.TTF', name='Bodoni MT', style='italic', variant='normal', weight=700, stretch='condensed', size='scalable')) = 11.25
2025-03-13 15:49:18,814 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\monbaiti.ttf', name='Mongolian Baiti', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.335
2025-03-13 15:49:18,815 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Gabriola.ttf', name='Gabriola', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.335
2025-03-13 15:49:18,815 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\timesi.ttf', name='Times New Roman', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.335
2025-03-13 15:49:18,815 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BOD_B.TTF', name='Bodoni MT', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.05
2025-03-13 15:49:18,815 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\verdana.ttf', name='Verdana', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 3.9713636363636367
2025-03-13 15:49:18,815 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Candarali.ttf', name='Candara', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.335
2025-03-13 15:49:18,815 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\PRISTINA.TTF', name='Pristina', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.335
2025-03-13 15:49:18,816 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\arialbi.ttf', name='Arial', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 7.413636363636363
2025-03-13 15:49:18,816 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LCALLIG.TTF', name='Lucida Calligraphy', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.335
2025-03-13 15:49:18,816 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Candaral.ttf', name='Candara', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.335
2025-03-13 15:49:18,816 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\FRAHVIT.TTF', name='Franklin Gothic Heavy', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.335
2025-03-13 15:49:18,817 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Inkfree.ttf', name='Ink Free', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.335
2025-03-13 15:49:18,817 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\VLADIMIR.TTF', name='Vladimir Script', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.335
2025-03-13 15:49:18,817 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ONYX.TTF', name='Onyx', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.335
2025-03-13 15:49:18,817 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LBRITEDI.TTF', name='Lucida Bright', style='italic', variant='normal', weight=600, stretch='normal', size='scalable')) = 11.145
2025-03-13 15:49:18,818 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\WINGDNG2.TTF', name='Wingdings 2', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.335
2025-03-13 15:49:18,818 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\DUBAI-LIGHT.TTF', name='Dubai', style='normal', variant='normal', weight=300, stretch='normal', size='scalable')) = 10.43
2025-03-13 15:49:18,818 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\l_10646.ttf', name='Lucida Sans Unicode', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.335
2025-03-13 15:49:18,818 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\TCCB____.TTF', name='Tw Cen MT Condensed', style='normal', variant='normal', weight=700, stretch='condensed', size='scalable')) = 10.25
2025-03-13 15:49:18,818 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ARIALNB.TTF', name='Arial', style='normal', variant='normal', weight=700, stretch='condensed', size='scalable')) = 6.613636363636363
2025-03-13 15:49:18,819 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\trebuc.ttf', name='Trebuchet MS', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.335
2025-03-13 15:49:18,819 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\TCMI____.TTF', name='Tw Cen MT', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.335
2025-03-13 15:49:18,819 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ERASBD.TTF', name='Eras Bold ITC', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.335
2025-03-13 15:49:18,819 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LSANSDI.TTF', name='Lucida Sans', style='italic', variant='normal', weight=600, stretch='normal', size='scalable')) = 11.145
2025-03-13 15:49:18,819 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\CENTAUR.TTF', name='Centaur', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.335
2025-03-13 15:49:18,820 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\HTOWERT.TTF', name='High Tower Text', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.335
2025-03-13 15:49:18,820 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\INFROMAN.TTF', name='Informal Roman', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.335
2025-03-13 15:49:18,820 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\constan.ttf', name='Constantia', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.335
2025-03-13 15:49:18,820 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LFAXI.TTF', name='Lucida Fax', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.335
2025-03-13 15:49:18,820 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\phagspab.ttf', name='Microsoft PhagsPa', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.05
2025-03-13 15:49:18,821 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GIL_____.TTF', name='Gill Sans MT', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.335
2025-03-13 15:49:18,821 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ariblk.ttf', name='Arial', style='normal', variant='normal', weight=900, stretch='normal', size='scalable')) = 6.6036363636363635
2025-03-13 15:49:18,821 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GOTHICBI.TTF', name='Century Gothic', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.05
2025-03-13 15:49:18,821 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\FRADMCN.TTF', name='Franklin Gothic Demi Cond', style='normal', variant='normal', weight=400, stretch='condensed', size='scalable')) = 10.535
2025-03-13 15:49:18,822 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\calibrii.ttf', name='Calibri', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.335
2025-03-13 15:49:18,822 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GARABD.TTF', name='Garamond', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.05
2025-03-13 15:49:18,822 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\MISTRAL.TTF', name='Mistral', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.335
2025-03-13 15:49:18,822 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BOD_BI.TTF', name='Bodoni MT', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.05
2025-03-13 15:49:18,822 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GOUDOSB.TTF', name='Goudy Old Style', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.05
2025-03-13 15:49:18,823 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\FORTE.TTF', name='Forte', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.335
2025-03-13 15:49:18,823 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\HARNGTON.TTF', name='Harrington', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.335
2025-03-13 15:49:18,823 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BOD_CI.TTF', name='Bodoni MT', style='italic', variant='normal', weight=400, stretch='condensed', size='scalable')) = 11.535
2025-03-13 15:49:18,823 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BKANT.TTF', name='Book Antiqua', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.335
2025-03-13 15:49:18,823 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GILC____.TTF', name='Gill Sans MT Condensed', style='normal', variant='normal', weight=400, stretch='condensed', size='scalable')) = 10.535
2025-03-13 15:49:18,824 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\segoepr.ttf', name='Segoe Print', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.335
2025-03-13 15:49:18,824 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\VINERITC.TTF', name='Viner Hand ITC', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.335
2025-03-13 15:49:18,824 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\FRAMDCN.TTF', name='Franklin Gothic Medium Cond', style='normal', variant='normal', weight=400, stretch='condensed', size='scalable')) = 10.535
2025-03-13 15:49:18,824 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\sylfaen.ttf', name='Sylfaen', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.335
2025-03-13 15:49:18,825 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\mmrtext.ttf', name='Myanmar Text', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.335
2025-03-13 15:49:18,825 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\SNAP____.TTF', name='Snap ITC', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.335
2025-03-13 15:49:18,825 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GILI____.TTF', name='Gill Sans MT', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.335
2025-03-13 15:49:18,826 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\calibrib.ttf', name='Calibri', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.05
2025-03-13 15:49:18,826 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\impact.ttf', name='Impact', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.335
2025-03-13 15:49:18,826 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\SCHLBKB.TTF', name='Century Schoolbook', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.05
2025-03-13 15:49:18,826 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\TCB_____.TTF', name='Tw Cen MT', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.05
2025-03-13 15:49:18,826 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ANTQUAI.TTF', name='Book Antiqua', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.335
2025-03-13 15:49:18,826 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BOD_CR.TTF', name='Bodoni MT', style='normal', variant='normal', weight=400, stretch='condensed', size='scalable')) = 10.535
2025-03-13 15:49:18,827 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\corbell.ttf', name='Corbel', style='normal', variant='normal', weight=300, stretch='normal', size='scalable')) = 10.43
2025-03-13 15:49:18,827 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\FRADM.TTF', name='Franklin Gothic Demi', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.335
2025-03-13 15:49:18,827 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\PAPYRUS.TTF', name='Papyrus', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.335
2025-03-13 15:49:18,827 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\VIVALDII.TTF', name='Vivaldi', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.335
2025-03-13 15:49:18,827 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\OLDENGL.TTF', name='Old English Text MT', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.335
2025-03-13 15:49:18,828 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\pala.ttf', name='Palatino Linotype', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.335
2025-03-13 15:49:18,828 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\comicbd.ttf', name='Comic Sans MS', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.05
2025-03-13 15:49:18,828 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\calibri.ttf', name='Calibri', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.335
2025-03-13 15:49:18,828 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\PERI____.TTF', name='Perpetua', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.335
2025-03-13 15:49:18,828 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GARAIT.TTF', name='Garamond', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.335
2025-03-13 15:49:18,829 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\corbelz.ttf', name='Corbel', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.05
2025-03-13 15:49:18,829 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GARA.TTF', name='Garamond', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.335
2025-03-13 15:49:18,829 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\georgiab.ttf', name='Georgia', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.05
2025-03-13 15:49:18,829 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ROCK.TTF', name='Rockwell', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.335
2025-03-13 15:49:18,829 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\PARCHM.TTF', name='Parchment', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.335
2025-03-13 15:49:18,829 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\CALIFB.TTF', name='Californian FB', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.05
2025-03-13 15:49:18,830 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\cambriaz.ttf', name='Cambria', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.05
2025-03-13 15:49:18,830 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ebrimabd.ttf', name='Ebrima', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.05
2025-03-13 15:49:18,830 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LSANS.TTF', name='Lucida Sans', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.335
2025-03-13 15:49:18,830 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\timesbd.ttf', name='Times New Roman', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.05
2025-03-13 15:49:18,830 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\CALIFR.TTF', name='Californian FB', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.335
2025-03-13 15:49:18,830 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\consola.ttf', name='Consolas', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.335
2025-03-13 15:49:18,831 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\msjhl.ttc', name='Microsoft JhengHei', style='normal', variant='normal', weight=290, stretch='normal', size='scalable')) = 10.4395
2025-03-13 15:49:18,831 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Candarab.ttf', name='Candara', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.05
2025-03-13 15:49:18,831 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\MTEXTRA.TTF', name='MT Extra', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.335
2025-03-13 15:49:18,831 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ntailu.ttf', name='Microsoft New Tai Lue', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.335
2025-03-13 15:49:18,832 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\seguibli.ttf', name='Segoe UI', style='italic', variant='normal', weight=900, stretch='normal', size='scalable')) = 11.24
2025-03-13 15:49:18,832 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\javatext.ttf', name='Javanese Text', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.335
2025-03-13 15:49:18,832 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\SHOWG.TTF', name='Showcard Gothic', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.335
2025-03-13 15:49:18,832 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\CASTELAR.TTF', name='Castellar', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.335
2025-03-13 15:49:18,832 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\HATTEN.TTF', name='Haettenschweiler', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.335
2025-03-13 15:49:18,833 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ariali.ttf', name='Arial', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 7.698636363636363
2025-03-13 15:49:18,833 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\AGENCYR.TTF', name='Agency FB', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.335
2025-03-13 15:49:18,833 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\malgun.ttf', name='Malgun Gothic', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.335
2025-03-13 15:49:18,833 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BOD_BLAR.TTF', name='Bodoni MT', style='normal', variant='normal', weight=900, stretch='normal', size='scalable')) = 10.24
2025-03-13 15:49:18,833 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LeelawUI.ttf', name='Leelawadee UI', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.335
2025-03-13 15:49:18,834 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\CHILLER.TTF', name='Chiller', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.335
2025-03-13 15:49:18,834 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\CALIST.TTF', name='Calisto MT', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.335
2025-03-13 15:49:18,834 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\JUICE___.TTF', name='Juice ITC', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.335
2025-03-13 15:49:18,834 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\JOKERMAN.TTF', name='Jokerman', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.335
2025-03-13 15:49:18,834 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\cambria.ttc', name='Cambria', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.335
2025-03-13 15:49:18,834 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LHANDW.TTF', name='Lucida Handwriting', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.335
2025-03-13 15:49:18,835 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BAUHS93.TTF', name='Bauhaus 93', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.335
2025-03-13 15:49:18,835 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\COPRGTL.TTF', name='Copperplate Gothic Light', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.335
2025-03-13 15:49:18,835 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LSANSD.TTF', name='Lucida Sans', style='normal', variant='normal', weight=600, stretch='normal', size='scalable')) = 10.145
2025-03-13 15:49:18,835 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LTYPEBO.TTF', name='Lucida Sans Typewriter', style='oblique', variant='normal', weight=600, stretch='normal', size='scalable')) = 11.145
2025-03-13 15:49:18,835 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\arial.ttf', name='Arial', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 6.698636363636363
2025-03-13 15:49:18,836 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ERASDEMI.TTF', name='Eras Demi ITC', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.335
2025-03-13 15:49:18,836 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\TEMPSITC.TTF', name='Tempus Sans ITC', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.335
2025-03-13 15:49:18,836 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ARIALN.TTF', name='Arial', style='normal', variant='normal', weight=400, stretch='condensed', size='scalable')) = 6.8986363636363635
2025-03-13 15:49:18,836 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\COLONNA.TTF', name='Colonna MT', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.335
2025-03-13 15:49:18,836 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ROCKEB.TTF', name='Rockwell Extra Bold', style='normal', variant='normal', weight=800, stretch='normal', size='scalable')) = 10.145
2025-03-13 15:49:18,836 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\CALISTBI.TTF', name='Calisto MT', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.05
2025-03-13 15:49:18,837 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\palabi.ttf', name='Palatino Linotype', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.05
2025-03-13 15:49:18,837 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\segoescb.ttf', name='Segoe Script', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.05
2025-03-13 15:49:18,837 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\corbeli.ttf', name='Corbel', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.335
2025-03-13 15:49:18,837 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\segoeuisl.ttf', name='Segoe UI', style='normal', variant='normal', weight=350, stretch='normal', size='scalable')) = 10.3825
2025-03-13 15:49:18,837 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ROCKBI.TTF', name='Rockwell', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.05
2025-03-13 15:49:18,837 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LBRITED.TTF', name='Lucida Bright', style='normal', variant='normal', weight=600, stretch='normal', size='scalable')) = 10.145
2025-03-13 15:49:18,837 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\CALISTI.TTF', name='Calisto MT', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.335
2025-03-13 15:49:18,838 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\courbd.ttf', name='Courier New', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.05
2025-03-13 15:49:18,838 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\lucon.ttf', name='Lucida Console', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.335
2025-03-13 15:49:18,838 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\POORICH.TTF', name='Poor Richard', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.335
2025-03-13 15:49:18,838 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\taileb.ttf', name='Microsoft Tai Le', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.05
2025-03-13 15:49:18,839 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ARLRDBD.TTF', name='Arial Rounded MT Bold', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.335
2025-03-13 15:49:18,839 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GLSNECB.TTF', name='Gill Sans MT Ext Condensed Bold', style='normal', variant='normal', weight=400, stretch='condensed', size='scalable')) = 10.535
2025-03-13 15:49:18,839 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\mingliub.ttc', name='MingLiU-ExtB', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.335
2025-03-13 15:49:18,839 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\timesbi.ttf', name='Times New Roman', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.05
2025-03-13 15:49:18,839 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\calibriz.ttf', name='Calibri', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.05
2025-03-13 15:49:18,839 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BOD_R.TTF', name='Bodoni MT', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.335
2025-03-13 15:49:18,840 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\wingding.ttf', name='Wingdings', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.335
2025-03-13 15:49:18,840 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BRADHITC.TTF', name='Bradley Hand ITC', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.335
2025-03-13 15:49:18,840 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\framd.ttf', name='Franklin Gothic Medium', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.335
2025-03-13 15:49:18,840 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\DUBAI-MEDIUM.TTF', name='Dubai', style='normal', variant='normal', weight=500, stretch='normal', size='scalable')) = 10.24
2025-03-13 15:49:18,840 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\trebucbi.ttf', name='Trebuchet MS', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.05
2025-03-13 15:49:18,840 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\cambriab.ttf', name='Cambria', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.05
2025-03-13 15:49:18,841 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\palai.ttf', name='Palatino Linotype', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.335
2025-03-13 15:49:18,841 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\times.ttf', name='Times New Roman', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.335
2025-03-13 15:49:18,841 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\constanz.ttf', name='Constantia', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.05
2025-03-13 15:49:18,841 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\corbel.ttf', name='Corbel', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.335
2025-03-13 15:49:18,841 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\gadugi.ttf', name='Gadugi', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.335
2025-03-13 15:49:18,841 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LBRITE.TTF', name='Lucida Bright', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.335
2025-03-13 15:49:18,841 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GOUDYSTO.TTF', name='Goudy Stout', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.335
2025-03-13 15:49:18,842 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\verdanab.ttf', name='Verdana', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 3.6863636363636365
2025-03-13 15:49:18,842 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GOTHICB.TTF', name='Century Gothic', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.05
2025-03-13 15:49:18,842 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\NIAGENG.TTF', name='Niagara Engraved', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.335
2025-03-13 15:49:18,842 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\segoeuib.ttf', name='Segoe UI', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.05
2025-03-13 15:49:18,842 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\seguihis.ttf', name='Segoe UI Historic', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.335
2025-03-13 15:49:18,842 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\msyhl.ttc', name='Microsoft YaHei', style='normal', variant='normal', weight=290, stretch='normal', size='scalable')) = 10.4395
2025-03-13 15:49:18,842 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ROCKB.TTF', name='Rockwell', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.05
2025-03-13 15:49:18,843 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\PERTIBD.TTF', name='Perpetua Titling MT', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.05
2025-03-13 15:49:18,843 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\comic.ttf', name='Comic Sans MS', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.335
2025-03-13 15:49:18,843 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\OCRAEXT.TTF', name='OCR A Extended', style='normal', variant='normal', weight=400, stretch='expanded', size='scalable')) = 10.535
2025-03-13 15:49:18,843 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\TCBI____.TTF', name='Tw Cen MT', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.05
2025-03-13 15:49:18,843 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\IMPRISHA.TTF', name='Imprint MT Shadow', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.335
2025-03-13 15:49:18,843 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\MOD20.TTF', name='Modern No. 20', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.335
2025-03-13 15:49:18,844 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GILB____.TTF', name='Gill Sans MT', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.05
2025-03-13 15:49:18,844 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LTYPE.TTF', name='Lucida Sans Typewriter', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.335
2025-03-13 15:49:18,844 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BRLNSDB.TTF', name='Berlin Sans FB Demi', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.05
2025-03-13 15:49:18,844 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\STENCIL.TTF', name='Stencil', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.335
2025-03-13 15:49:18,844 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\msyhbd.ttc', name='Microsoft YaHei', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.05
2025-03-13 15:49:18,844 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\SimsunExtG.ttf', name='SimSun-ExtG', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.335
2025-03-13 15:49:18,844 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LeelUIsl.ttf', name='Leelawadee UI', style='normal', variant='normal', weight=350, stretch='normal', size='scalable')) = 10.3825
2025-03-13 15:49:18,845 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\OUTLOOK.TTF', name='MS Outlook', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.335
2025-03-13 15:49:18,845 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BOD_CB.TTF', name='Bodoni MT', style='normal', variant='normal', weight=700, stretch='condensed', size='scalable')) = 10.25
2025-03-13 15:49:18,845 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\mmrtextb.ttf', name='Myanmar Text', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.05
2025-03-13 15:49:18,845 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GOTHICI.TTF', name='Century Gothic', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.335
2025-03-13 15:49:18,845 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\SegoeIcons.ttf', name='Segoe Fluent Icons', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.335
2025-03-13 15:49:18,845 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ALGER.TTF', name='Algerian', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.335
2025-03-13 15:49:18,846 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BOOKOSBI.TTF', name='Bookman Old Style', style='italic', variant='normal', weight=600, stretch='normal', size='scalable')) = 11.145
2025-03-13 15:49:18,846 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BSSYM7.TTF', name='Bookshelf Symbol 7', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.335
2025-03-13 15:49:18,846 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\tahomabd.ttf', name='Tahoma', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.05
2025-03-13 15:49:18,846 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\msyi.ttf', name='Microsoft Yi Baiti', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.335
2025-03-13 15:49:18,846 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\CURLZ___.TTF', name='Curlz MT', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.335
2025-03-13 15:49:18,846 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\RAVIE.TTF', name='Ravie', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.335
2025-03-13 15:49:18,847 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\simsunb.ttf', name='SimSun-ExtB', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.335
2025-03-13 15:49:18,847 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BELLB.TTF', name='Bell MT', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.05
2025-03-13 15:49:18,847 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\PERTILI.TTF', name='Perpetua Titling MT', style='normal', variant='normal', weight=300, stretch='normal', size='scalable')) = 10.43
2025-03-13 15:49:18,847 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\seguili.ttf', name='Segoe UI', style='italic', variant='normal', weight=300, stretch='normal', size='scalable')) = 11.43
2025-03-13 15:49:18,847 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\CALISTB.TTF', name='Calisto MT', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.05
2025-03-13 15:49:18,847 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ITCKRIST.TTF', name='Kristen ITC', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.335
2025-03-13 15:49:18,847 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ANTQUABI.TTF', name='Book Antiqua', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.05
2025-03-13 15:49:18,848 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\PERB____.TTF', name='Perpetua', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.05
2025-03-13 15:49:18,848 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ROCC____.TTF', name='Rockwell Condensed', style='normal', variant='normal', weight=400, stretch='condensed', size='scalable')) = 10.535
2025-03-13 15:49:18,848 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GILBI___.TTF', name='Gill Sans MT', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.05
2025-03-13 15:49:18,848 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\MSUIGHUB.TTF', name='Microsoft Uighur', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.05
2025-03-13 15:49:18,848 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\segmdl2.ttf', name='Segoe MDL2 Assets', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.335
2025-03-13 15:49:18,848 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ARIALNI.TTF', name='Arial', style='italic', variant='normal', weight=400, stretch='condensed', size='scalable')) = 7.8986363636363635
2025-03-13 15:49:18,849 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\bahnschrift.ttf', name='Bahnschrift', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.335
2025-03-13 15:49:18,849 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\TCM_____.TTF', name='Tw Cen MT', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.335
2025-03-13 15:49:18,849 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\REFSPCL.TTF', name='MS Reference Specialty', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.335
2025-03-13 15:49:18,849 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\FRAHV.TTF', name='Franklin Gothic Heavy', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.335
2025-03-13 15:49:18,849 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Candaraz.ttf', name='Candara', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.05
2025-03-13 15:49:18,849 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\georgia.ttf', name='Georgia', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.335
2025-03-13 15:49:18,849 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\MATURASC.TTF', name='Matura MT Script Capitals', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.335
2025-03-13 15:49:18,850 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GIGI.TTF', name='Gigi', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.335
2025-03-13 15:49:18,850 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\CALIFI.TTF', name='Californian FB', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.335
2025-03-13 15:49:18,850 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\SegUIVar.ttf', name='Segoe UI Variable', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.335
2025-03-13 15:49:18,850 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\FRABK.TTF', name='Franklin Gothic Book', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.335
2025-03-13 15:49:18,850 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\couri.ttf', name='Courier New', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.335
2025-03-13 15:49:18,850 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BOOKOSI.TTF', name='Bookman Old Style', style='italic', variant='normal', weight=300, stretch='normal', size='scalable')) = 11.43
2025-03-13 15:49:18,851 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\verdanai.ttf', name='Verdana', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 4.971363636363637
2025-03-13 15:49:18,851 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\calibril.ttf', name='Calibri', style='normal', variant='normal', weight=300, stretch='normal', size='scalable')) = 10.43
2025-03-13 15:49:18,851 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\FREESCPT.TTF', name='Freestyle Script', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.335
2025-03-13 15:49:18,851 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BOD_I.TTF', name='Bodoni MT', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.335
2025-03-13 15:49:18,851 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\msjhbd.ttc', name='Microsoft JhengHei', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.05
2025-03-13 15:49:18,851 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\COOPBL.TTF', name='Cooper Black', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.335
2025-03-13 15:49:18,851 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\TCCM____.TTF', name='Tw Cen MT Condensed', style='normal', variant='normal', weight=400, stretch='condensed', size='scalable')) = 10.535
2025-03-13 15:49:18,852 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\AGENCYB.TTF', name='Agency FB', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.05
2025-03-13 15:49:18,852 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LSANSI.TTF', name='Lucida Sans', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.335
2025-03-13 15:49:18,852 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\NIAGSOL.TTF', name='Niagara Solid', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.335
2025-03-13 15:49:18,853 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LTYPEB.TTF', name='Lucida Sans Typewriter', style='normal', variant='normal', weight=600, stretch='normal', size='scalable')) = 10.145
2025-03-13 15:49:18,853 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GLECB.TTF', name='Gloucester MT Extra Condensed', style='normal', variant='normal', weight=400, stretch='condensed', size='scalable')) = 10.535
2025-03-13 15:49:18,853 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\webdings.ttf', name='Webdings', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.335
2025-03-13 15:49:18,853 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\msjh.ttc', name='Microsoft JhengHei', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.335
2025-03-13 15:49:18,853 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\HTOWERTI.TTF', name='High Tower Text', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.335
2025-03-13 15:49:18,854 - matplotlib.font_manager - DEBUG - findfont: Matching sans\-serif:style=normal:variant=normal:weight=bold:stretch=normal:size=9.0 to DejaVu Sans ('C:\\Users\\msameerakram\\AppData\\Local\\anaconda3\\Lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\DejaVuSans-Bold.ttf') with score of 0.050000.
2025-03-13 15:49:19,089 - PIL.PngImagePlugin - DEBUG - STREAM b'IHDR' 16 13
2025-03-13 15:49:19,089 - PIL.PngImagePlugin - DEBUG - STREAM b'tEXt' 41 57
2025-03-13 15:49:19,090 - PIL.PngImagePlugin - DEBUG - STREAM b'pHYs' 110 9
2025-03-13 15:49:19,090 - PIL.PngImagePlugin - DEBUG - STREAM b'IDAT' 131 65536
2025-03-13 15:49:19,610 - fpdf.fpdf - DEBUG - Page break on page 2 at y=274 for element of height 10 > 282
2025-03-13 15:49:19,931 - PIL.PngImagePlugin - DEBUG - STREAM b'IHDR' 16 13
2025-03-13 15:49:19,931 - PIL.PngImagePlugin - DEBUG - STREAM b'tEXt' 41 57
2025-03-13 15:49:19,932 - PIL.PngImagePlugin - DEBUG - STREAM b'pHYs' 110 9
2025-03-13 15:49:19,932 - PIL.PngImagePlugin - DEBUG - STREAM b'IDAT' 131 65536
2025-03-13 15:49:20,520 - fpdf.fpdf - DEBUG - Page break on page 4 at y=274 for element of height 10 > 282
2025-03-13 15:49:20,852 - PIL.PngImagePlugin - DEBUG - STREAM b'IHDR' 16 13
2025-03-13 15:49:20,853 - PIL.PngImagePlugin - DEBUG - STREAM b'tEXt' 41 57
2025-03-13 15:49:20,853 - PIL.PngImagePlugin - DEBUG - STREAM b'pHYs' 110 9
2025-03-13 15:49:20,853 - PIL.PngImagePlugin - DEBUG - STREAM b'IDAT' 131 65536
2025-03-13 15:49:21,386 - fpdf.fpdf - DEBUG - Page break on page 6 at y=274 for element of height 10 > 282
2025-03-13 15:49:21,685 - PIL.PngImagePlugin - DEBUG - STREAM b'IHDR' 16 13
2025-03-13 15:49:21,685 - PIL.PngImagePlugin - DEBUG - STREAM b'tEXt' 41 57
2025-03-13 15:49:21,686 - PIL.PngImagePlugin - DEBUG - STREAM b'pHYs' 110 9
2025-03-13 15:49:21,686 - PIL.PngImagePlugin - DEBUG - STREAM b'IDAT' 131 65536
2025-03-13 15:49:22,183 - fpdf.fpdf - DEBUG - Page break on page 8 at y=274 for element of height 10 > 282
2025-03-13 15:49:22,455 - PIL.PngImagePlugin - DEBUG - STREAM b'IHDR' 16 13
2025-03-13 15:49:22,455 - PIL.PngImagePlugin - DEBUG - STREAM b'tEXt' 41 57
2025-03-13 15:49:22,455 - PIL.PngImagePlugin - DEBUG - STREAM b'pHYs' 110 9
2025-03-13 15:49:22,455 - PIL.PngImagePlugin - DEBUG - STREAM b'IDAT' 131 65536
2025-03-13 15:49:22,974 - fpdf.fpdf - DEBUG - Page break on page 10 at y=274 for element of height 10 > 282
2025-03-13 15:49:23,262 - PIL.PngImagePlugin - DEBUG - STREAM b'IHDR' 16 13
2025-03-13 15:49:23,263 - PIL.PngImagePlugin - DEBUG - STREAM b'tEXt' 41 57
2025-03-13 15:49:23,263 - PIL.PngImagePlugin - DEBUG - STREAM b'pHYs' 110 9
2025-03-13 15:49:23,263 - PIL.PngImagePlugin - DEBUG - STREAM b'IDAT' 131 65536
2025-03-13 15:49:23,773 - fpdf.fpdf - DEBUG - Page break on page 12 at y=274 for element of height 10 > 282
2025-03-13 15:49:24,159 - PIL.PngImagePlugin - DEBUG - STREAM b'IHDR' 16 13
2025-03-13 15:49:24,159 - PIL.PngImagePlugin - DEBUG - STREAM b'tEXt' 41 57
2025-03-13 15:49:24,160 - PIL.PngImagePlugin - DEBUG - STREAM b'pHYs' 110 9
2025-03-13 15:49:24,160 - PIL.PngImagePlugin - DEBUG - STREAM b'IDAT' 131 65536
2025-03-13 15:49:24,741 - fpdf.fpdf - DEBUG - Page break on page 14 at y=274 for element of height 10 > 282
2025-03-13 15:49:25,020 - PIL.PngImagePlugin - DEBUG - STREAM b'IHDR' 16 13
2025-03-13 15:49:25,020 - PIL.PngImagePlugin - DEBUG - STREAM b'tEXt' 41 57
2025-03-13 15:49:25,020 - PIL.PngImagePlugin - DEBUG - STREAM b'pHYs' 110 9
2025-03-13 15:49:25,020 - PIL.PngImagePlugin - DEBUG - STREAM b'IDAT' 131 65536
2025-03-13 15:49:25,496 - fpdf.fpdf - DEBUG - Page break on page 16 at y=274 for element of height 10 > 282
2025-03-13 15:49:25,787 - PIL.PngImagePlugin - DEBUG - STREAM b'IHDR' 16 13
2025-03-13 15:49:25,787 - PIL.PngImagePlugin - DEBUG - STREAM b'tEXt' 41 57
2025-03-13 15:49:25,788 - PIL.PngImagePlugin - DEBUG - STREAM b'pHYs' 110 9
2025-03-13 15:49:25,788 - PIL.PngImagePlugin - DEBUG - STREAM b'IDAT' 131 65536
2025-03-13 15:49:26,321 - fpdf.fpdf - DEBUG - Page break on page 18 at y=274 for element of height 10 > 282
2025-03-13 15:49:26,616 - PIL.PngImagePlugin - DEBUG - STREAM b'IHDR' 16 13
2025-03-13 15:49:26,616 - PIL.PngImagePlugin - DEBUG - STREAM b'tEXt' 41 57
2025-03-13 15:49:26,617 - PIL.PngImagePlugin - DEBUG - STREAM b'pHYs' 110 9
2025-03-13 15:49:26,617 - PIL.PngImagePlugin - DEBUG - STREAM b'IDAT' 131 65536
2025-03-13 15:49:27,121 - fpdf.fpdf - DEBUG - Page break on page 20 at y=274 for element of height 10 > 282
2025-03-13 15:49:27,149 - pymongo.topology - DEBUG - {"topologyId": {"$oid": "67d2b80436e2980ea4233d92"}, "driverConnectionId": 1, "serverConnectionId": 13171, "serverHost": "3.144.134.141", "serverPort": 27017, "awaited": true, "durationMS": 10014.999999999418, "reply": "{\"isWritablePrimary\": true, \"topologyVersion\": {\"processId\": {\"$oid\": \"67b7e5814f77c1a87c56d054\"}}, \"maxBsonObjectSize\": 16777216, \"maxMessageSizeBytes\": 48000000, \"maxWriteBatchSize\": 100000, \"localTime\": {\"$date\": \"2025-03-13T10:49:27.183Z\"}, \"logicalSessionTimeoutMinutes\": 30, \"connectionId\": 13171, \"maxWireVersion\": 25, \"ok\": 1.0}", "message": "Server heartbeat succeeded"}
2025-03-13 15:49:27,150 - pymongo.topology - DEBUG - {"topologyId": {"$oid": "67d2b80436e2980ea4233d92"}, "driverConnectionId": 1, "serverConnectionId": 13171, "serverHost": "3.144.134.141", "serverPort": 27017, "awaited": true, "message": "Server heartbeat started"}
2025-03-13 15:49:27,428 - PIL.PngImagePlugin - DEBUG - STREAM b'IHDR' 16 13
2025-03-13 15:49:27,428 - PIL.PngImagePlugin - DEBUG - STREAM b'tEXt' 41 57
2025-03-13 15:49:27,428 - PIL.PngImagePlugin - DEBUG - STREAM b'pHYs' 110 9
2025-03-13 15:49:27,429 - PIL.PngImagePlugin - DEBUG - STREAM b'IDAT' 131 65536
2025-03-13 15:49:27,906 - fpdf.fpdf - DEBUG - Page break on page 22 at y=274 for element of height 10 > 282
2025-03-13 15:49:28,224 - PIL.PngImagePlugin - DEBUG - STREAM b'IHDR' 16 13
2025-03-13 15:49:28,224 - PIL.PngImagePlugin - DEBUG - STREAM b'tEXt' 41 57
2025-03-13 15:49:28,224 - PIL.PngImagePlugin - DEBUG - STREAM b'pHYs' 110 9
2025-03-13 15:49:28,225 - PIL.PngImagePlugin - DEBUG - STREAM b'IDAT' 131 65536
2025-03-13 15:49:28,713 - fpdf.fpdf - DEBUG - Page break on page 24 at y=274 for element of height 10 > 282
2025-03-13 15:49:28,983 - PIL.PngImagePlugin - DEBUG - STREAM b'IHDR' 16 13
2025-03-13 15:49:28,983 - PIL.PngImagePlugin - DEBUG - STREAM b'tEXt' 41 57
2025-03-13 15:49:28,983 - PIL.PngImagePlugin - DEBUG - STREAM b'pHYs' 110 9
2025-03-13 15:49:28,984 - PIL.PngImagePlugin - DEBUG - STREAM b'IDAT' 131 65536
2025-03-13 15:49:29,459 - fpdf.fpdf - DEBUG - Page break on page 26 at y=274 for element of height 10 > 282
2025-03-13 15:49:29,775 - PIL.PngImagePlugin - DEBUG - STREAM b'IHDR' 16 13
2025-03-13 15:49:29,775 - PIL.PngImagePlugin - DEBUG - STREAM b'tEXt' 41 57
2025-03-13 15:49:29,775 - PIL.PngImagePlugin - DEBUG - STREAM b'pHYs' 110 9
2025-03-13 15:49:29,776 - PIL.PngImagePlugin - DEBUG - STREAM b'IDAT' 131 65536
2025-03-13 15:49:30,292 - fpdf.fpdf - DEBUG - Page break on page 28 at y=274 for element of height 10 > 282
2025-03-13 15:49:30,599 - PIL.PngImagePlugin - DEBUG - STREAM b'IHDR' 16 13
2025-03-13 15:49:30,599 - PIL.PngImagePlugin - DEBUG - STREAM b'tEXt' 41 57
2025-03-13 15:49:30,599 - PIL.PngImagePlugin - DEBUG - STREAM b'pHYs' 110 9
2025-03-13 15:49:30,600 - PIL.PngImagePlugin - DEBUG - STREAM b'IDAT' 131 65536
2025-03-13 15:49:31,106 - fpdf.fpdf - DEBUG - Page break on page 30 at y=274 for element of height 10 > 282
2025-03-13 15:49:31,417 - PIL.PngImagePlugin - DEBUG - STREAM b'IHDR' 16 13
2025-03-13 15:49:31,418 - PIL.PngImagePlugin - DEBUG - STREAM b'tEXt' 41 57
2025-03-13 15:49:31,418 - PIL.PngImagePlugin - DEBUG - STREAM b'pHYs' 110 9
2025-03-13 15:49:31,418 - PIL.PngImagePlugin - DEBUG - STREAM b'IDAT' 131 65536
2025-03-13 15:49:31,933 - fpdf.fpdf - DEBUG - Page break on page 32 at y=274 for element of height 10 > 282
2025-03-13 15:49:32,235 - PIL.PngImagePlugin - DEBUG - STREAM b'IHDR' 16 13
2025-03-13 15:49:32,235 - PIL.PngImagePlugin - DEBUG - STREAM b'tEXt' 41 57
2025-03-13 15:49:32,235 - PIL.PngImagePlugin - DEBUG - STREAM b'pHYs' 110 9
2025-03-13 15:49:32,236 - PIL.PngImagePlugin - DEBUG - STREAM b'IDAT' 131 65536
2025-03-13 15:49:32,762 - fpdf.fpdf - DEBUG - Page break on page 34 at y=274 for element of height 10 > 282
2025-03-13 15:49:33,075 - PIL.PngImagePlugin - DEBUG - STREAM b'IHDR' 16 13
2025-03-13 15:49:33,075 - PIL.PngImagePlugin - DEBUG - STREAM b'tEXt' 41 57
2025-03-13 15:49:33,075 - PIL.PngImagePlugin - DEBUG - STREAM b'pHYs' 110 9
2025-03-13 15:49:33,075 - PIL.PngImagePlugin - DEBUG - STREAM b'IDAT' 131 65536
2025-03-13 15:49:33,588 - fpdf.fpdf - DEBUG - Page break on page 36 at y=274 for element of height 10 > 282
2025-03-13 15:49:33,879 - PIL.PngImagePlugin - DEBUG - STREAM b'IHDR' 16 13
2025-03-13 15:49:33,879 - PIL.PngImagePlugin - DEBUG - STREAM b'tEXt' 41 57
2025-03-13 15:49:33,880 - PIL.PngImagePlugin - DEBUG - STREAM b'pHYs' 110 9
2025-03-13 15:49:33,880 - PIL.PngImagePlugin - DEBUG - STREAM b'IDAT' 131 65536
2025-03-13 15:49:34,390 - fpdf.fpdf - DEBUG - Page break on page 38 at y=274 for element of height 10 > 282
2025-03-13 15:49:34,705 - PIL.PngImagePlugin - DEBUG - STREAM b'IHDR' 16 13
2025-03-13 15:49:34,705 - PIL.PngImagePlugin - DEBUG - STREAM b'tEXt' 41 57
2025-03-13 15:49:34,705 - PIL.PngImagePlugin - DEBUG - STREAM b'pHYs' 110 9
2025-03-13 15:49:34,705 - PIL.PngImagePlugin - DEBUG - STREAM b'IDAT' 131 65536
2025-03-13 15:49:35,248 - fpdf.fpdf - DEBUG - Page break on page 40 at y=274 for element of height 10 > 282
2025-03-13 15:49:35,567 - PIL.PngImagePlugin - DEBUG - STREAM b'IHDR' 16 13
2025-03-13 15:49:35,567 - PIL.PngImagePlugin - DEBUG - STREAM b'tEXt' 41 57
2025-03-13 15:49:35,567 - PIL.PngImagePlugin - DEBUG - STREAM b'pHYs' 110 9
2025-03-13 15:49:35,568 - PIL.PngImagePlugin - DEBUG - STREAM b'IDAT' 131 65536
2025-03-13 15:49:36,073 - fpdf.fpdf - DEBUG - Page break on page 42 at y=274 for element of height 10 > 282
2025-03-13 15:49:36,350 - PIL.PngImagePlugin - DEBUG - STREAM b'IHDR' 16 13
2025-03-13 15:49:36,351 - PIL.PngImagePlugin - DEBUG - STREAM b'tEXt' 41 57
2025-03-13 15:49:36,351 - PIL.PngImagePlugin - DEBUG - STREAM b'pHYs' 110 9
2025-03-13 15:49:36,351 - PIL.PngImagePlugin - DEBUG - STREAM b'IDAT' 131 65536
2025-03-13 15:49:36,878 - fpdf.fpdf - DEBUG - Page break on page 44 at y=274 for element of height 10 > 282
2025-03-13 15:49:37,158 - pymongo.topology - DEBUG - {"topologyId": {"$oid": "67d2b80436e2980ea4233d92"}, "driverConnectionId": 1, "serverConnectionId": 13171, "serverHost": "3.144.134.141", "serverPort": 27017, "awaited": true, "durationMS": 10000.0, "reply": "{\"isWritablePrimary\": true, \"topologyVersion\": {\"processId\": {\"$oid\": \"67b7e5814f77c1a87c56d054\"}}, \"maxBsonObjectSize\": 16777216, \"maxMessageSizeBytes\": 48000000, \"maxWriteBatchSize\": 100000, \"localTime\": {\"$date\": \"2025-03-13T10:49:37.192Z\"}, \"logicalSessionTimeoutMinutes\": 30, \"connectionId\": 13171, \"maxWireVersion\": 25, \"ok\": 1.0}", "message": "Server heartbeat succeeded"}
2025-03-13 15:49:37,159 - pymongo.topology - DEBUG - {"topologyId": {"$oid": "67d2b80436e2980ea4233d92"}, "driverConnectionId": 1, "serverConnectionId": 13171, "serverHost": "3.144.134.141", "serverPort": 27017, "awaited": true, "message": "Server heartbeat started"}
2025-03-13 15:49:37,169 - PIL.PngImagePlugin - DEBUG - STREAM b'IHDR' 16 13
2025-03-13 15:49:37,169 - PIL.PngImagePlugin - DEBUG - STREAM b'tEXt' 41 57
2025-03-13 15:49:37,169 - PIL.PngImagePlugin - DEBUG - STREAM b'pHYs' 110 9
2025-03-13 15:49:37,170 - PIL.PngImagePlugin - DEBUG - STREAM b'IDAT' 131 65536
2025-03-13 15:49:37,709 - fpdf.fpdf - DEBUG - Page break on page 46 at y=274 for element of height 10 > 282
2025-03-13 15:49:38,006 - PIL.PngImagePlugin - DEBUG - STREAM b'IHDR' 16 13
2025-03-13 15:49:38,006 - PIL.PngImagePlugin - DEBUG - STREAM b'tEXt' 41 57
2025-03-13 15:49:38,007 - PIL.PngImagePlugin - DEBUG - STREAM b'pHYs' 110 9
2025-03-13 15:49:38,007 - PIL.PngImagePlugin - DEBUG - STREAM b'IDAT' 131 65536
2025-03-13 15:49:38,509 - fpdf.fpdf - DEBUG - Page break on page 48 at y=274 for element of height 10 > 282
2025-03-13 15:49:38,820 - PIL.PngImagePlugin - DEBUG - STREAM b'IHDR' 16 13
2025-03-13 15:49:38,821 - PIL.PngImagePlugin - DEBUG - STREAM b'tEXt' 41 57
2025-03-13 15:49:38,821 - PIL.PngImagePlugin - DEBUG - STREAM b'pHYs' 110 9
2025-03-13 15:49:38,821 - PIL.PngImagePlugin - DEBUG - STREAM b'IDAT' 131 65536
2025-03-13 15:49:39,337 - fpdf.fpdf - DEBUG - Page break on page 50 at y=274 for element of height 10 > 282
2025-03-13 15:49:39,638 - PIL.PngImagePlugin - DEBUG - STREAM b'IHDR' 16 13
2025-03-13 15:49:39,638 - PIL.PngImagePlugin - DEBUG - STREAM b'tEXt' 41 57
2025-03-13 15:49:39,638 - PIL.PngImagePlugin - DEBUG - STREAM b'pHYs' 110 9
2025-03-13 15:49:39,638 - PIL.PngImagePlugin - DEBUG - STREAM b'IDAT' 131 65536
2025-03-13 15:49:40,161 - fpdf.fpdf - DEBUG - Page break on page 52 at y=274 for element of height 10 > 282
2025-03-13 15:49:40,501 - PIL.PngImagePlugin - DEBUG - STREAM b'IHDR' 16 13
2025-03-13 15:49:40,502 - PIL.PngImagePlugin - DEBUG - STREAM b'tEXt' 41 57
2025-03-13 15:49:40,502 - PIL.PngImagePlugin - DEBUG - STREAM b'pHYs' 110 9
2025-03-13 15:49:40,502 - PIL.PngImagePlugin - DEBUG - STREAM b'IDAT' 131 65536
2025-03-13 15:49:41,012 - fpdf.fpdf - DEBUG - Page break on page 54 at y=274 for element of height 10 > 282
2025-03-13 15:49:41,294 - PIL.PngImagePlugin - DEBUG - STREAM b'IHDR' 16 13
2025-03-13 15:49:41,294 - PIL.PngImagePlugin - DEBUG - STREAM b'tEXt' 41 57
2025-03-13 15:49:41,294 - PIL.PngImagePlugin - DEBUG - STREAM b'pHYs' 110 9
2025-03-13 15:49:41,294 - PIL.PngImagePlugin - DEBUG - STREAM b'IDAT' 131 65536
2025-03-13 15:49:41,785 - fpdf.fpdf - DEBUG - Page break on page 56 at y=274 for element of height 10 > 282
2025-03-13 15:49:42,059 - PIL.PngImagePlugin - DEBUG - STREAM b'IHDR' 16 13
2025-03-13 15:49:42,059 - PIL.PngImagePlugin - DEBUG - STREAM b'tEXt' 41 57
2025-03-13 15:49:42,059 - PIL.PngImagePlugin - DEBUG - STREAM b'pHYs' 110 9
2025-03-13 15:49:42,059 - PIL.PngImagePlugin - DEBUG - STREAM b'IDAT' 131 65536
2025-03-13 15:49:42,560 - fpdf.fpdf - DEBUG - Page break on page 58 at y=274 for element of height 10 > 282
2025-03-13 15:49:42,847 - PIL.PngImagePlugin - DEBUG - STREAM b'IHDR' 16 13
2025-03-13 15:49:42,847 - PIL.PngImagePlugin - DEBUG - STREAM b'tEXt' 41 57
2025-03-13 15:49:42,847 - PIL.PngImagePlugin - DEBUG - STREAM b'pHYs' 110 9
2025-03-13 15:49:42,847 - PIL.PngImagePlugin - DEBUG - STREAM b'IDAT' 131 65536
2025-03-13 15:49:43,390 - fpdf.fpdf - DEBUG - Page break on page 60 at y=274 for element of height 10 > 282
2025-03-13 15:49:43,725 - PIL.PngImagePlugin - DEBUG - STREAM b'IHDR' 16 13
2025-03-13 15:49:43,725 - PIL.PngImagePlugin - DEBUG - STREAM b'tEXt' 41 57
2025-03-13 15:49:43,725 - PIL.PngImagePlugin - DEBUG - STREAM b'pHYs' 110 9
2025-03-13 15:49:43,725 - PIL.PngImagePlugin - DEBUG - STREAM b'IDAT' 131 65536
2025-03-13 15:49:44,272 - fpdf.fpdf - DEBUG - Page break on page 62 at y=274 for element of height 10 > 282
2025-03-13 15:49:44,643 - PIL.PngImagePlugin - DEBUG - STREAM b'IHDR' 16 13
2025-03-13 15:49:44,644 - PIL.PngImagePlugin - DEBUG - STREAM b'tEXt' 41 57
2025-03-13 15:49:44,644 - PIL.PngImagePlugin - DEBUG - STREAM b'pHYs' 110 9
2025-03-13 15:49:44,644 - PIL.PngImagePlugin - DEBUG - STREAM b'IDAT' 131 65536
2025-03-13 15:49:45,156 - fpdf.fpdf - DEBUG - Page break on page 64 at y=274 for element of height 10 > 282
2025-03-13 15:49:45,459 - PIL.PngImagePlugin - DEBUG - STREAM b'IHDR' 16 13
2025-03-13 15:49:45,459 - PIL.PngImagePlugin - DEBUG - STREAM b'tEXt' 41 57
2025-03-13 15:49:45,460 - PIL.PngImagePlugin - DEBUG - STREAM b'pHYs' 110 9
2025-03-13 15:49:45,460 - PIL.PngImagePlugin - DEBUG - STREAM b'IDAT' 131 65536
2025-03-13 15:49:45,950 - fpdf.fpdf - DEBUG - Page break on page 66 at y=274 for element of height 10 > 282
2025-03-13 15:49:46,247 - PIL.PngImagePlugin - DEBUG - STREAM b'IHDR' 16 13
2025-03-13 15:49:46,247 - PIL.PngImagePlugin - DEBUG - STREAM b'tEXt' 41 57
2025-03-13 15:49:46,247 - PIL.PngImagePlugin - DEBUG - STREAM b'pHYs' 110 9
2025-03-13 15:49:46,248 - PIL.PngImagePlugin - DEBUG - STREAM b'IDAT' 131 65536
2025-03-13 15:49:46,761 - fpdf.fpdf - DEBUG - Page break on page 68 at y=274 for element of height 10 > 282
2025-03-13 15:49:47,054 - fpdf.fpdf - DEBUG - Page break on page 70 at y=274 for element of height 10 > 282
2025-03-13 15:49:47,167 - pymongo.topology - DEBUG - {"topologyId": {"$oid": "67d2b80436e2980ea4233d92"}, "driverConnectionId": 1, "serverConnectionId": 13171, "serverHost": "3.144.134.141", "serverPort": 27017, "awaited": true, "durationMS": 10016.00000000144, "reply": "{\"isWritablePrimary\": true, \"topologyVersion\": {\"processId\": {\"$oid\": \"67b7e5814f77c1a87c56d054\"}}, \"maxBsonObjectSize\": 16777216, \"maxMessageSizeBytes\": 48000000, \"maxWriteBatchSize\": 100000, \"localTime\": {\"$date\": \"2025-03-13T10:49:47.202Z\"}, \"logicalSessionTimeoutMinutes\": 30, \"connectionId\": 13171, \"maxWireVersion\": 25, \"ok\": 1.0}", "message": "Server heartbeat succeeded"}
2025-03-13 15:49:47,168 - pymongo.topology - DEBUG - {"topologyId": {"$oid": "67d2b80436e2980ea4233d92"}, "driverConnectionId": 1, "serverConnectionId": 13171, "serverHost": "3.144.134.141", "serverPort": 27017, "awaited": true, "message": "Server heartbeat started"}
2025-03-13 15:49:47,326 - PIL.PngImagePlugin - DEBUG - STREAM b'IHDR' 16 13
2025-03-13 15:49:47,327 - PIL.PngImagePlugin - DEBUG - STREAM b'tEXt' 41 57
2025-03-13 15:49:47,327 - PIL.PngImagePlugin - DEBUG - STREAM b'pHYs' 110 9
2025-03-13 15:49:47,327 - PIL.PngImagePlugin - DEBUG - STREAM b'IDAT' 131 65536
2025-03-13 15:49:47,823 - fpdf.fpdf - DEBUG - Page break on page 72 at y=274 for element of height 10 > 282
2025-03-13 15:49:48,099 - PIL.PngImagePlugin - DEBUG - STREAM b'IHDR' 16 13
2025-03-13 15:49:48,099 - PIL.PngImagePlugin - DEBUG - STREAM b'tEXt' 41 57
2025-03-13 15:49:48,099 - PIL.PngImagePlugin - DEBUG - STREAM b'pHYs' 110 9
2025-03-13 15:49:48,099 - PIL.PngImagePlugin - DEBUG - STREAM b'IDAT' 131 65536
2025-03-13 15:49:48,600 - fpdf.fpdf - DEBUG - Page break on page 74 at y=274 for element of height 10 > 282
2025-03-13 15:49:48,893 - PIL.PngImagePlugin - DEBUG - STREAM b'IHDR' 16 13
2025-03-13 15:49:48,894 - PIL.PngImagePlugin - DEBUG - STREAM b'tEXt' 41 57
2025-03-13 15:49:48,894 - PIL.PngImagePlugin - DEBUG - STREAM b'pHYs' 110 9
2025-03-13 15:49:48,894 - PIL.PngImagePlugin - DEBUG - STREAM b'IDAT' 131 65536
2025-03-13 15:49:49,411 - fpdf.fpdf - DEBUG - Page break on page 76 at y=274 for element of height 10 > 282
2025-03-13 15:49:49,710 - PIL.PngImagePlugin - DEBUG - STREAM b'IHDR' 16 13
2025-03-13 15:49:49,710 - PIL.PngImagePlugin - DEBUG - STREAM b'tEXt' 41 57
2025-03-13 15:49:49,710 - PIL.PngImagePlugin - DEBUG - STREAM b'pHYs' 110 9
2025-03-13 15:49:49,711 - PIL.PngImagePlugin - DEBUG - STREAM b'IDAT' 131 65536
2025-03-13 15:49:50,218 - fpdf.fpdf - DEBUG - Page break on page 78 at y=274 for element of height 10 > 282
2025-03-13 15:49:50,604 - PIL.PngImagePlugin - DEBUG - STREAM b'IHDR' 16 13
2025-03-13 15:49:50,604 - PIL.PngImagePlugin - DEBUG - STREAM b'tEXt' 41 57
2025-03-13 15:49:50,604 - PIL.PngImagePlugin - DEBUG - STREAM b'pHYs' 110 9
2025-03-13 15:49:50,605 - PIL.PngImagePlugin - DEBUG - STREAM b'IDAT' 131 65536
2025-03-13 15:49:51,081 - fpdf.fpdf - DEBUG - Page break on page 80 at y=274 for element of height 10 > 282
2025-03-13 15:49:51,385 - PIL.PngImagePlugin - DEBUG - STREAM b'IHDR' 16 13
2025-03-13 15:49:51,385 - PIL.PngImagePlugin - DEBUG - STREAM b'tEXt' 41 57
2025-03-13 15:49:51,385 - PIL.PngImagePlugin - DEBUG - STREAM b'pHYs' 110 9
2025-03-13 15:49:51,385 - PIL.PngImagePlugin - DEBUG - STREAM b'IDAT' 131 65536
2025-03-13 15:49:51,868 - fpdf.fpdf - DEBUG - Page break on page 82 at y=274 for element of height 10 > 282
2025-03-13 15:49:52,136 - PIL.PngImagePlugin - DEBUG - STREAM b'IHDR' 16 13
2025-03-13 15:49:52,136 - PIL.PngImagePlugin - DEBUG - STREAM b'tEXt' 41 57
2025-03-13 15:49:52,137 - PIL.PngImagePlugin - DEBUG - STREAM b'pHYs' 110 9
2025-03-13 15:49:52,137 - PIL.PngImagePlugin - DEBUG - STREAM b'IDAT' 131 65536
2025-03-13 15:49:52,678 - fpdf.fpdf - DEBUG - Page break on page 84 at y=274 for element of height 10 > 282
2025-03-13 15:49:52,996 - PIL.PngImagePlugin - DEBUG - STREAM b'IHDR' 16 13
2025-03-13 15:49:52,997 - PIL.PngImagePlugin - DEBUG - STREAM b'tEXt' 41 57
2025-03-13 15:49:52,997 - PIL.PngImagePlugin - DEBUG - STREAM b'pHYs' 110 9
2025-03-13 15:49:52,997 - PIL.PngImagePlugin - DEBUG - STREAM b'IDAT' 131 65536
2025-03-13 15:49:53,502 - fpdf.fpdf - DEBUG - Page break on page 86 at y=274 for element of height 10 > 282
2025-03-13 15:49:53,794 - PIL.PngImagePlugin - DEBUG - STREAM b'IHDR' 16 13
2025-03-13 15:49:53,794 - PIL.PngImagePlugin - DEBUG - STREAM b'tEXt' 41 57
2025-03-13 15:49:53,794 - PIL.PngImagePlugin - DEBUG - STREAM b'pHYs' 110 9
2025-03-13 15:49:53,794 - PIL.PngImagePlugin - DEBUG - STREAM b'IDAT' 131 65536
2025-03-13 15:49:54,262 - fpdf.fpdf - DEBUG - Page break on page 88 at y=274 for element of height 10 > 282
2025-03-13 15:49:54,549 - PIL.PngImagePlugin - DEBUG - STREAM b'IHDR' 16 13
2025-03-13 15:49:54,549 - PIL.PngImagePlugin - DEBUG - STREAM b'tEXt' 41 57
2025-03-13 15:49:54,549 - PIL.PngImagePlugin - DEBUG - STREAM b'pHYs' 110 9
2025-03-13 15:49:54,550 - PIL.PngImagePlugin - DEBUG - STREAM b'IDAT' 131 65536
2025-03-13 15:49:55,088 - fpdf.fpdf - DEBUG - Page break on page 90 at y=274 for element of height 10 > 282
2025-03-13 15:49:55,347 - fpdf.fpdf - DEBUG - Page break on page 92 at y=274 for element of height 10 > 282
2025-03-13 15:49:55,633 - PIL.PngImagePlugin - DEBUG - STREAM b'IHDR' 16 13
2025-03-13 15:49:55,633 - PIL.PngImagePlugin - DEBUG - STREAM b'tEXt' 41 57
2025-03-13 15:49:55,633 - PIL.PngImagePlugin - DEBUG - STREAM b'pHYs' 110 9
2025-03-13 15:49:55,634 - PIL.PngImagePlugin - DEBUG - STREAM b'IDAT' 131 65536
2025-03-13 15:49:56,159 - fpdf.fpdf - DEBUG - Page break on page 94 at y=274 for element of height 10 > 282
2025-03-13 15:49:56,439 - PIL.PngImagePlugin - DEBUG - STREAM b'IHDR' 16 13
2025-03-13 15:49:56,441 - PIL.PngImagePlugin - DEBUG - STREAM b'tEXt' 41 57
2025-03-13 15:49:56,441 - PIL.PngImagePlugin - DEBUG - STREAM b'pHYs' 110 9
2025-03-13 15:49:56,441 - PIL.PngImagePlugin - DEBUG - STREAM b'IDAT' 131 65536
2025-03-13 15:49:56,956 - fpdf.fpdf - DEBUG - Page break on page 96 at y=274 for element of height 10 > 282
2025-03-13 15:49:57,176 - pymongo.topology - DEBUG - {"topologyId": {"$oid": "67d2b80436e2980ea4233d92"}, "driverConnectionId": 1, "serverConnectionId": 13171, "serverHost": "3.144.134.141", "serverPort": 27017, "awaited": true, "durationMS": 10000.0, "reply": "{\"isWritablePrimary\": true, \"topologyVersion\": {\"processId\": {\"$oid\": \"67b7e5814f77c1a87c56d054\"}}, \"maxBsonObjectSize\": 16777216, \"maxMessageSizeBytes\": 48000000, \"maxWriteBatchSize\": 100000, \"localTime\": {\"$date\": \"2025-03-13T10:49:57.212Z\"}, \"logicalSessionTimeoutMinutes\": 30, \"connectionId\": 13171, \"maxWireVersion\": 25, \"ok\": 1.0}", "message": "Server heartbeat succeeded"}
2025-03-13 15:49:57,177 - pymongo.topology - DEBUG - {"topologyId": {"$oid": "67d2b80436e2980ea4233d92"}, "driverConnectionId": 1, "serverConnectionId": 13171, "serverHost": "3.144.134.141", "serverPort": 27017, "awaited": true, "message": "Server heartbeat started"}
2025-03-13 15:49:57,252 - PIL.PngImagePlugin - DEBUG - STREAM b'IHDR' 16 13
2025-03-13 15:49:57,252 - PIL.PngImagePlugin - DEBUG - STREAM b'tEXt' 41 57
2025-03-13 15:49:57,252 - PIL.PngImagePlugin - DEBUG - STREAM b'pHYs' 110 9
2025-03-13 15:49:57,252 - PIL.PngImagePlugin - DEBUG - STREAM b'IDAT' 131 65536
2025-03-13 15:49:57,788 - fpdf.fpdf - DEBUG - Page break on page 98 at y=274 for element of height 10 > 282
2025-03-13 15:49:58,098 - PIL.PngImagePlugin - DEBUG - STREAM b'IHDR' 16 13
2025-03-13 15:49:58,098 - PIL.PngImagePlugin - DEBUG - STREAM b'tEXt' 41 57
2025-03-13 15:49:58,099 - PIL.PngImagePlugin - DEBUG - STREAM b'pHYs' 110 9
2025-03-13 15:49:58,099 - PIL.PngImagePlugin - DEBUG - STREAM b'IDAT' 131 65536
2025-03-13 15:49:58,603 - fpdf.fpdf - DEBUG - Page break on page 100 at y=274 for element of height 10 > 282
2025-03-13 15:49:58,906 - PIL.PngImagePlugin - DEBUG - STREAM b'IHDR' 16 13
2025-03-13 15:49:58,906 - PIL.PngImagePlugin - DEBUG - STREAM b'tEXt' 41 57
2025-03-13 15:49:58,906 - PIL.PngImagePlugin - DEBUG - STREAM b'pHYs' 110 9
2025-03-13 15:49:58,907 - PIL.PngImagePlugin - DEBUG - STREAM b'IDAT' 131 65536
2025-03-13 15:49:59,413 - fpdf.fpdf - DEBUG - Page break on page 102 at y=274 for element of height 10 > 282
2025-03-13 15:49:59,742 - PIL.PngImagePlugin - DEBUG - STREAM b'IHDR' 16 13
2025-03-13 15:49:59,743 - PIL.PngImagePlugin - DEBUG - STREAM b'tEXt' 41 57
2025-03-13 15:49:59,743 - PIL.PngImagePlugin - DEBUG - STREAM b'pHYs' 110 9
2025-03-13 15:49:59,743 - PIL.PngImagePlugin - DEBUG - STREAM b'IDAT' 131 65536
2025-03-13 15:50:00,272 - fpdf.fpdf - DEBUG - Page break on page 104 at y=274 for element of height 10 > 282
2025-03-13 15:50:00,585 - PIL.PngImagePlugin - DEBUG - STREAM b'IHDR' 16 13
2025-03-13 15:50:00,586 - PIL.PngImagePlugin - DEBUG - STREAM b'tEXt' 41 57
2025-03-13 15:50:00,586 - PIL.PngImagePlugin - DEBUG - STREAM b'pHYs' 110 9
2025-03-13 15:50:00,586 - PIL.PngImagePlugin - DEBUG - STREAM b'IDAT' 131 65536
2025-03-13 15:50:01,166 - fpdf.fpdf - DEBUG - Page break on page 106 at y=274 for element of height 10 > 282
2025-03-13 15:50:01,480 - PIL.PngImagePlugin - DEBUG - STREAM b'IHDR' 16 13
2025-03-13 15:50:01,480 - PIL.PngImagePlugin - DEBUG - STREAM b'tEXt' 41 57
2025-03-13 15:50:01,480 - PIL.PngImagePlugin - DEBUG - STREAM b'pHYs' 110 9
2025-03-13 15:50:01,480 - PIL.PngImagePlugin - DEBUG - STREAM b'IDAT' 131 65536
2025-03-13 15:50:01,998 - fpdf.fpdf - DEBUG - Page break on page 108 at y=274 for element of height 10 > 282
2025-03-13 15:50:02,295 - PIL.PngImagePlugin - DEBUG - STREAM b'IHDR' 16 13
2025-03-13 15:50:02,295 - PIL.PngImagePlugin - DEBUG - STREAM b'tEXt' 41 57
2025-03-13 15:50:02,295 - PIL.PngImagePlugin - DEBUG - STREAM b'pHYs' 110 9
2025-03-13 15:50:02,296 - PIL.PngImagePlugin - DEBUG - STREAM b'IDAT' 131 65536
2025-03-13 15:50:02,792 - fpdf.fpdf - DEBUG - Page break on page 110 at y=274 for element of height 10 > 282
2025-03-13 15:50:03,086 - PIL.PngImagePlugin - DEBUG - STREAM b'IHDR' 16 13
2025-03-13 15:50:03,086 - PIL.PngImagePlugin - DEBUG - STREAM b'tEXt' 41 57
2025-03-13 15:50:03,087 - PIL.PngImagePlugin - DEBUG - STREAM b'pHYs' 110 9
2025-03-13 15:50:03,087 - PIL.PngImagePlugin - DEBUG - STREAM b'IDAT' 131 65536
2025-03-13 15:50:03,594 - fpdf.fpdf - DEBUG - Page break on page 112 at y=274 for element of height 10 > 282
2025-03-13 15:50:03,883 - PIL.PngImagePlugin - DEBUG - STREAM b'IHDR' 16 13
2025-03-13 15:50:03,883 - PIL.PngImagePlugin - DEBUG - STREAM b'tEXt' 41 57
2025-03-13 15:50:03,883 - PIL.PngImagePlugin - DEBUG - STREAM b'pHYs' 110 9
2025-03-13 15:50:03,883 - PIL.PngImagePlugin - DEBUG - STREAM b'IDAT' 131 65536
2025-03-13 15:50:04,387 - fpdf.fpdf - DEBUG - Page break on page 114 at y=274 for element of height 10 > 282
2025-03-13 15:50:04,713 - fpdf.fpdf - DEBUG - Page break on page 116 at y=274 for element of height 10 > 282
2025-03-13 15:50:05,042 - PIL.PngImagePlugin - DEBUG - STREAM b'IHDR' 16 13
2025-03-13 15:50:05,043 - PIL.PngImagePlugin - DEBUG - STREAM b'tEXt' 41 57
2025-03-13 15:50:05,043 - PIL.PngImagePlugin - DEBUG - STREAM b'pHYs' 110 9
2025-03-13 15:50:05,043 - PIL.PngImagePlugin - DEBUG - STREAM b'IDAT' 131 65536
2025-03-13 15:50:05,560 - fpdf.fpdf - DEBUG - Page break on page 118 at y=274 for element of height 10 > 282
2025-03-13 15:50:05,861 - PIL.PngImagePlugin - DEBUG - STREAM b'IHDR' 16 13
2025-03-13 15:50:05,862 - PIL.PngImagePlugin - DEBUG - STREAM b'tEXt' 41 57
2025-03-13 15:50:05,862 - PIL.PngImagePlugin - DEBUG - STREAM b'pHYs' 110 9
2025-03-13 15:50:05,862 - PIL.PngImagePlugin - DEBUG - STREAM b'IDAT' 131 65536
2025-03-13 15:50:06,406 - fpdf.fpdf - DEBUG - Page break on page 120 at y=274 for element of height 10 > 282
2025-03-13 15:50:06,755 - PIL.PngImagePlugin - DEBUG - STREAM b'IHDR' 16 13
2025-03-13 15:50:06,756 - PIL.PngImagePlugin - DEBUG - STREAM b'tEXt' 41 57
2025-03-13 15:50:06,756 - PIL.PngImagePlugin - DEBUG - STREAM b'pHYs' 110 9
2025-03-13 15:50:06,756 - PIL.PngImagePlugin - DEBUG - STREAM b'IDAT' 131 65536
2025-03-13 15:50:07,271 - fpdf.fpdf - DEBUG - Page break on page 122 at y=274 for element of height 10 > 282
2025-03-13 15:50:07,271 - pymongo.topology - DEBUG - {"topologyId": {"$oid": "67d2b80436e2980ea4233d92"}, "driverConnectionId": 1, "serverConnectionId": 13171, "serverHost": "3.144.134.141", "serverPort": 27017, "awaited": true, "durationMS": 10093.999999999141, "reply": "{\"isWritablePrimary\": true, \"topologyVersion\": {\"processId\": {\"$oid\": \"67b7e5814f77c1a87c56d054\"}}, \"maxBsonObjectSize\": 16777216, \"maxMessageSizeBytes\": 48000000, \"maxWriteBatchSize\": 100000, \"localTime\": {\"$date\": \"2025-03-13T10:50:07.221Z\"}, \"logicalSessionTimeoutMinutes\": 30, \"connectionId\": 13171, \"maxWireVersion\": 25, \"ok\": 1.0}", "message": "Server heartbeat succeeded"}
2025-03-13 15:50:07,274 - pymongo.topology - DEBUG - {"topologyId": {"$oid": "67d2b80436e2980ea4233d92"}, "driverConnectionId": 1, "serverConnectionId": 13171, "serverHost": "3.144.134.141", "serverPort": 27017, "awaited": true, "message": "Server heartbeat started"}
2025-03-13 15:50:07,569 - PIL.PngImagePlugin - DEBUG - STREAM b'IHDR' 16 13
2025-03-13 15:50:07,569 - PIL.PngImagePlugin - DEBUG - STREAM b'tEXt' 41 57
2025-03-13 15:50:07,569 - PIL.PngImagePlugin - DEBUG - STREAM b'pHYs' 110 9
2025-03-13 15:50:07,570 - PIL.PngImagePlugin - DEBUG - STREAM b'IDAT' 131 65536
2025-03-13 15:50:08,108 - fpdf.fpdf - DEBUG - Page break on page 124 at y=274 for element of height 10 > 282
2025-03-13 15:50:08,562 - PIL.PngImagePlugin - DEBUG - STREAM b'IHDR' 16 13
2025-03-13 15:50:08,563 - PIL.PngImagePlugin - DEBUG - STREAM b'tEXt' 41 57
2025-03-13 15:50:08,563 - PIL.PngImagePlugin - DEBUG - STREAM b'pHYs' 110 9
2025-03-13 15:50:08,563 - PIL.PngImagePlugin - DEBUG - STREAM b'IDAT' 131 65536
2025-03-13 15:56:28,090 - numexpr.utils - INFO - Note: NumExpr detected 12 cores but "NUMEXPR_MAX_THREADS" not set, so enforcing safe limit of 8.
2025-03-13 15:56:28,090 - numexpr.utils - INFO - NumExpr defaulting to 8 threads.
2025-03-13 15:56:29,289 - matplotlib - DEBUG - matplotlib data path: C:\Users\msameerakram\AppData\Local\anaconda3\Lib\site-packages\matplotlib\mpl-data
2025-03-13 15:56:29,294 - matplotlib - DEBUG - CONFIGDIR=C:\Users\msameerakram\.matplotlib
2025-03-13 15:56:29,296 - matplotlib - DEBUG - interactive is False
2025-03-13 15:56:29,296 - matplotlib - DEBUG - platform is win32
2025-03-13 15:56:29,353 - matplotlib - DEBUG - CACHEDIR=C:\Users\msameerakram\.matplotlib
2025-03-13 15:56:29,356 - matplotlib.font_manager - DEBUG - Using fontManager instance from C:\Users\msameerakram\.matplotlib\fontlist-v390.json
2025-03-13 15:56:31,736 - numexpr.utils - INFO - Note: NumExpr detected 12 cores but "NUMEXPR_MAX_THREADS" not set, so enforcing safe limit of 8.
2025-03-13 15:56:31,736 - numexpr.utils - INFO - NumExpr defaulting to 8 threads.
2025-03-13 15:56:32,901 - matplotlib - DEBUG - matplotlib data path: C:\Users\msameerakram\AppData\Local\anaconda3\Lib\site-packages\matplotlib\mpl-data
2025-03-13 15:56:32,907 - matplotlib - DEBUG - CONFIGDIR=C:\Users\msameerakram\.matplotlib
2025-03-13 15:56:32,909 - matplotlib - DEBUG - interactive is False
2025-03-13 15:56:32,909 - matplotlib - DEBUG - platform is win32
2025-03-13 15:56:32,967 - matplotlib - DEBUG - CACHEDIR=C:\Users\msameerakram\.matplotlib
2025-03-13 15:56:32,971 - matplotlib.font_manager - DEBUG - Using fontManager instance from C:\Users\msameerakram\.matplotlib\fontlist-v390.json
2025-03-13 15:56:34,217 - asyncio - DEBUG - Using selector: SelectSelector
2025-03-13 15:56:34,249 - pymongo.topology - DEBUG - {"topologyId": {"$oid": "67d2b9e29c0c5db6ac0f57ea"}, "message": "Starting topology monitoring"}
2025-03-13 15:56:34,249 - pymongo.topology - DEBUG - {"topologyId": {"$oid": "67d2b9e29c0c5db6ac0f57ea"}, "previousDescription": "<TopologyDescription id: 67d2b9e29c0c5db6ac0f57ea, topology_type: Unknown, servers: []>", "newDescription": "<TopologyDescription id: 67d2b9e29c0c5db6ac0f57ea, topology_type: Unknown, servers: [<ServerDescription ('3.144.134.141', 27017) server_type: Unknown, rtt: None>]>", "message": "Topology description changed"}
2025-03-13 15:56:34,250 - pymongo.topology - DEBUG - {"topologyId": {"$oid": "67d2b9e29c0c5db6ac0f57ea"}, "serverHost": "3.144.134.141", "serverPort": 27017, "message": "Starting server monitoring"}
2025-03-13 15:56:34,251 - pymongo.connection - DEBUG - {"clientId": {"$oid": "67d2b9e29c0c5db6ac0f57ea"}, "message": "Connection pool created", "serverHost": "3.144.134.141", "serverPort": 27017}
2025-03-13 15:56:34,252 - pymongo.serverSelection - DEBUG - {"message": "Server selection started", "selector": "Primary()", "operation": "ping", "topologyDescription": "<TopologyDescription id: 67d2b9e29c0c5db6ac0f57ea, topology_type: Unknown, servers: [<ServerDescription ('3.144.134.141', 27017) server_type: Unknown, rtt: None>]>", "clientId": {"$oid": "67d2b9e29c0c5db6ac0f57ea"}}
2025-03-13 15:56:34,253 - pymongo.serverSelection - DEBUG - {"message": "Waiting for suitable server to become available", "selector": "Primary()", "operation": "ping", "topologyDescription": "<TopologyDescription id: 67d2b9e29c0c5db6ac0f57ea, topology_type: Unknown, servers: [<ServerDescription ('3.144.134.141', 27017) server_type: Unknown, rtt: None>]>", "clientId": {"$oid": "67d2b9e29c0c5db6ac0f57ea"}, "remainingTimeMS": 30}
2025-03-13 15:56:34,512 - pymongo.topology - DEBUG - {"topologyId": {"$oid": "67d2b9e29c0c5db6ac0f57ea"}, "driverConnectionId": 1, "serverHost": "3.144.134.141", "serverPort": 27017, "awaited": false, "message": "Server heartbeat started"}
2025-03-13 15:56:34,757 - pymongo.topology - DEBUG - {"topologyId": {"$oid": "67d2b9e29c0c5db6ac0f57ea"}, "driverConnectionId": 1, "serverConnectionId": 13185, "serverHost": "3.144.134.141", "serverPort": 27017, "awaited": false, "durationMS": 250.0, "reply": "{\"helloOk\": true, \"ismaster\": true, \"topologyVersion\": {\"processId\": {\"$oid\": \"67b7e5814f77c1a87c56d054\"}}, \"maxBsonObjectSize\": 16777216, \"maxMessageSizeBytes\": 48000000, \"maxWriteBatchSize\": 100000, \"localTime\": {\"$date\": \"2025-03-13T10:56:34.794Z\"}, \"logicalSessionTimeoutMinutes\": 30, \"connectionId\": 13185, \"maxWireVersion\": 25, \"ok\": 1.0}", "message": "Server heartbeat succeeded"}
2025-03-13 15:56:34,757 - pymongo.connection - DEBUG - {"clientId": {"$oid": "67d2b9e29c0c5db6ac0f57ea"}, "message": "Connection pool ready", "serverHost": "3.144.134.141", "serverPort": 27017}
2025-03-13 15:56:34,757 - pymongo.topology - DEBUG - {"topologyId": {"$oid": "67d2b9e29c0c5db6ac0f57ea"}, "previousDescription": "<TopologyDescription id: 67d2b9e29c0c5db6ac0f57ea, topology_type: Unknown, servers: [<ServerDescription ('3.144.134.141', 27017) server_type: Unknown, rtt: None>]>", "newDescription": "<TopologyDescription id: 67d2b9e29c0c5db6ac0f57ea, topology_type: Single, servers: [<ServerDescription ('3.144.134.141', 27017) server_type: Standalone, rtt: 0.25>]>", "message": "Topology description changed"}
2025-03-13 15:56:34,758 - pymongo.serverSelection - DEBUG - {"message": "Server selection succeeded", "selector": "Primary()", "operation": "ping", "topologyDescription": "<TopologyDescription id: 67d2b9e29c0c5db6ac0f57ea, topology_type: Single, servers: [<ServerDescription ('3.144.134.141', 27017) server_type: Standalone, rtt: 0.25>]>", "clientId": {"$oid": "67d2b9e29c0c5db6ac0f57ea"}, "serverHost": "3.144.134.141", "serverPort": 27017}
2025-03-13 15:56:34,759 - pymongo.connection - DEBUG - {"clientId": {"$oid": "67d2b9e29c0c5db6ac0f57ea"}, "message": "Connection checkout started", "serverHost": "3.144.134.141", "serverPort": 27017}
2025-03-13 15:56:34,759 - pymongo.topology - DEBUG - {"topologyId": {"$oid": "67d2b9e29c0c5db6ac0f57ea"}, "driverConnectionId": 1, "serverConnectionId": 13185, "serverHost": "3.144.134.141", "serverPort": 27017, "awaited": true, "message": "Server heartbeat started"}
2025-03-13 15:56:34,760 - pymongo.connection - DEBUG - {"clientId": {"$oid": "67d2b9e29c0c5db6ac0f57ea"}, "message": "Connection created", "serverHost": "3.144.134.141", "serverPort": 27017, "driverConnectionId": 1}
2025-03-13 15:56:35,519 - pymongo.connection - DEBUG - {"clientId": {"$oid": "67d2b9e29c0c5db6ac0f57ea"}, "message": "Connection ready", "serverHost": "3.144.134.141", "serverPort": 27017, "driverConnectionId": 1, "durationMS": 0.5}
2025-03-13 15:56:35,519 - pymongo.connection - DEBUG - {"clientId": {"$oid": "67d2b9e29c0c5db6ac0f57ea"}, "message": "Connection checked out", "serverHost": "3.144.134.141", "serverPort": 27017, "driverConnectionId": 1, "durationMS": 0.75}
2025-03-13 15:56:35,519 - pymongo.command - DEBUG - {"clientId": {"$oid": "67d2b9e29c0c5db6ac0f57ea"}, "message": "Command started", "command": "{\"ping\": 1, \"lsid\": {\"id\": {\"$binary\": {\"base64\": \"f9X9xcnIQYKxQhxxOpFRUg==\", \"subType\": \"04\"}}}, \"$db\": \"opal_server\"}", "commandName": "ping", "databaseName": "opal_server", "requestId": 6334, "operationId": 6334, "driverConnectionId": 1, "serverConnectionId": 13187, "serverHost": "3.144.134.141", "serverPort": 27017}
2025-03-13 15:56:35,768 - pymongo.command - DEBUG - {"clientId": {"$oid": "67d2b9e29c0c5db6ac0f57ea"}, "message": "Command succeeded", "durationMS": 248.668, "reply": "{\"ok\": 1.0}", "commandName": "ping", "databaseName": "opal_server", "requestId": 6334, "operationId": 6334, "driverConnectionId": 1, "serverConnectionId": 13187, "serverHost": "3.144.134.141", "serverPort": 27017}
2025-03-13 15:56:35,768 - pymongo.connection - DEBUG - {"clientId": {"$oid": "67d2b9e29c0c5db6ac0f57ea"}, "message": "Connection checked in", "serverHost": "3.144.134.141", "serverPort": 27017, "driverConnectionId": 1}
2025-03-13 15:56:35,959 - app.services.predictive_analytics - INFO - Starting driver risk prediction for last 3 days
2025-03-13 15:56:35,960 - app.db.repositories.data_repository - INFO - Fetching driver risk data for past 3 days
2025-03-13 15:56:35,960 - app.db.repositories.data_repository - DEBUG - Executing pipeline: [{'$match': {'event_time': {'$gte': datetime.datetime(2025, 3, 10, 15, 56, 35, 960825)}}}, {'$group': {'_id': '$driver_uuid', 'name': {'$first': '$driver_name'}, 'violation_count': {'$sum': 1}, 'violation_types': {'$addToSet': '$violation_type'}, 'avg_severity': {'$avg': {'$switch': {'branches': [{'case': {'$eq': ['$severity', 'HIGH']}, 'then': 3}, {'case': {'$eq': ['$severity', 'MEDIUM']}, 'then': 2}], 'default': 1}}}, 'last_violation': {'$max': '$event_time'}, 'max_speed': {'$max': '$telemetry.speed'}, 'vehicle_license': {'$first': '$vehicle_license'}}}, {'$sort': {'violation_count': -1}}]
2025-03-13 15:56:35,961 - pymongo.serverSelection - DEBUG - {"message": "Server selection started", "selector": "Primary()", "operation": "aggregate", "topologyDescription": "<TopologyDescription id: 67d2b9e29c0c5db6ac0f57ea, topology_type: Single, servers: [<ServerDescription ('3.144.134.141', 27017) server_type: Standalone, rtt: 0.25>]>", "clientId": {"$oid": "67d2b9e29c0c5db6ac0f57ea"}}
2025-03-13 15:56:35,961 - pymongo.serverSelection - DEBUG - {"message": "Server selection succeeded", "selector": "Primary()", "operation": "aggregate", "topologyDescription": "<TopologyDescription id: 67d2b9e29c0c5db6ac0f57ea, topology_type: Single, servers: [<ServerDescription ('3.144.134.141', 27017) server_type: Standalone, rtt: 0.25>]>", "clientId": {"$oid": "67d2b9e29c0c5db6ac0f57ea"}, "serverHost": "3.144.134.141", "serverPort": 27017}
2025-03-13 15:56:35,962 - pymongo.connection - DEBUG - {"clientId": {"$oid": "67d2b9e29c0c5db6ac0f57ea"}, "message": "Connection checkout started", "serverHost": "3.144.134.141", "serverPort": 27017}
2025-03-13 15:56:35,963 - pymongo.connection - DEBUG - {"clientId": {"$oid": "67d2b9e29c0c5db6ac0f57ea"}, "message": "Connection checked out", "serverHost": "3.144.134.141", "serverPort": 27017, "driverConnectionId": 1, "durationMS": 0.0}
2025-03-13 15:56:35,963 - pymongo.command - DEBUG - {"clientId": {"$oid": "67d2b9e29c0c5db6ac0f57ea"}, "message": "Command started", "command": "{\"aggregate\": \"violations\", \"pipeline\": [{\"$match\": {\"event_time\": {\"$gte\": {\"$date\": \"2025-03-10T15:56:35.960Z\"}}}}, {\"$group\": {\"_id\": \"$driver_uuid\", \"name\": {\"$first\": \"$driver_name\"}, \"violation_count\": {\"$sum\": 1}, \"violation_types\": {\"$addToSet\": \"$violation_type\"}, \"avg_severity\": {\"$avg\": {\"$switch\": {\"branches\": [{\"case\": {\"$eq\": [\"$severity\", \"HIGH\"]}, \"then\": 3}, {\"case\": {\"$eq\": [\"$severity\", \"MEDIUM\"]}, \"then\": 2}], \"default\": 1}}}, \"last_violation\": {\"$max\": \"$event_time\"}, \"max_speed\": {\"$max\": \"$telemetry.speed\"}, \"vehicle_license\": {\"$first\": \"$vehicle_license\"}}}, {\"$sort\": {\"violation_count\": -1}}], \"lsid\": {\"id\": {\"$binary\": {\"base64\": \"f9X9xcnIQYKxQhxxOpFRUg==\", \"subType\": \"04\"}}}, \"$db\": \"opal_server\"}", "commandName": "aggregate", "databaseName": "opal_server", "requestId": 26500, "operationId": 26500, "driverConnectionId": 1, "serverConnectionId": 13187, "serverHost": "3.144.134.141", "serverPort": 27017}
2025-03-13 15:56:36,476 - pymongo.command - DEBUG - {"clientId": {"$oid": "67d2b9e29c0c5db6ac0f57ea"}, "message": "Command succeeded", "durationMS": 512.7040000000001, "reply": "{\"cursor\": {\"firstBatch\": [{\"_id\": \"unknown\", \"name\": \"Unknown\", \"violation_count\": 961, \"violation_types\": [\"SPEED_MEDIUM\", \"SPEED_LOW\", \"SPEED_HIGH\"], \"avg_severity\": 1.9573361082206036, \"last_violation\": {\"$date\": \"2025-03-13T08:14:23.140Z\"}, \"vehicle_license\": \"860665050647824\"}, {\"_id\": \"3dd80f61-5ed1-4038-b3a8-5d2e37759893\", \"name\": \"DALER SINGH\", \"violation_count\": 240, \"violation_types\": [\"SPEED_MEDIUM\", \"SPEED_LOW\"], \"avg_severity\": 1.5541666666666667, \"last_violation\": {\"$date\": \"2025-03-11T15:04:20.407Z\"}, \"vehicle_license\": \"1313YD\"}, {\"_id\": \"7463170a-de85-4c5d-a77b-b506d939aca1\", \"name\": \"GUL ZAMAN #94378054\", \"violation_count\": 237, \"violation_types\": [\"SPEED_MEDIUM\", \"SPEED_LOW\"], \"avg_severity\": 1.59915611814346, \"last_violation\": {\"$date\": \"2025-03-13T06:31:35.314Z\"}, \"vehicle_license\": \"1075MR\"}, {\"_id\": \"10009164\", \"name\": \"Unknown\", \"violation_count\": 211, \"violation_types\": [\"SPEED_MEDIUM\", \"SPEED_LOW\", \"SPEED_HIGH\"], \"avg_severity\": 1.7109004739336493, \"last_viol...", "commandName": "aggregate", "databaseName": "opal_server", "requestId": 26500, "operationId": 26500, "driverConnectionId": 1, "serverConnectionId": 13187, "serverHost": "3.144.134.141", "serverPort": 27017}
2025-03-13 15:56:36,478 - pymongo.connection - DEBUG - {"clientId": {"$oid": "67d2b9e29c0c5db6ac0f57ea"}, "message": "Connection checked in", "serverHost": "3.144.134.141", "serverPort": 27017, "driverConnectionId": 1}
2025-03-13 15:56:36,478 - pymongo.serverSelection - DEBUG - {"message": "Server selection started", "selector": "<function any_server_selector at 0x000001D325298720>", "operation": "getMore", "topologyDescription": "<TopologyDescription id: 67d2b9e29c0c5db6ac0f57ea, topology_type: Single, servers: [<ServerDescription ('3.144.134.141', 27017) server_type: Standalone, rtt: 0.25>]>", "clientId": {"$oid": "67d2b9e29c0c5db6ac0f57ea"}}
2025-03-13 15:56:36,479 - pymongo.serverSelection - DEBUG - {"message": "Server selection succeeded", "selector": "<function any_server_selector at 0x000001D325298720>", "operation": "getMore", "topologyDescription": "<TopologyDescription id: 67d2b9e29c0c5db6ac0f57ea, topology_type: Single, servers: [<ServerDescription ('3.144.134.141', 27017) server_type: Standalone, rtt: 0.25>]>", "clientId": {"$oid": "67d2b9e29c0c5db6ac0f57ea"}, "serverHost": "3.144.134.141", "serverPort": 27017}
2025-03-13 15:56:36,479 - pymongo.connection - DEBUG - {"clientId": {"$oid": "67d2b9e29c0c5db6ac0f57ea"}, "message": "Connection checkout started", "serverHost": "3.144.134.141", "serverPort": 27017}
2025-03-13 15:56:36,480 - pymongo.connection - DEBUG - {"clientId": {"$oid": "67d2b9e29c0c5db6ac0f57ea"}, "message": "Connection checked out", "serverHost": "3.144.134.141", "serverPort": 27017, "driverConnectionId": 1, "durationMS": 0.0}
2025-03-13 15:56:36,480 - pymongo.command - DEBUG - {"clientId": {"$oid": "67d2b9e29c0c5db6ac0f57ea"}, "message": "Command started", "command": "{\"getMore\": 3809641135841518962, \"collection\": \"violations\", \"lsid\": {\"id\": {\"$binary\": {\"base64\": \"f9X9xcnIQYKxQhxxOpFRUg==\", \"subType\": \"04\"}}}, \"$db\": \"opal_server\"}", "commandName": "getMore", "databaseName": "opal_server", "requestId": 19169, "operationId": 19169, "driverConnectionId": 1, "serverConnectionId": 13187, "serverHost": "3.144.134.141", "serverPort": 27017}
2025-03-13 15:56:36,729 - pymongo.command - DEBUG - {"clientId": {"$oid": "67d2b9e29c0c5db6ac0f57ea"}, "message": "Command succeeded", "durationMS": 249.014, "reply": "{\"cursor\": {\"nextBatch\": [{\"_id\": \"4596553\", \"name\": \"Unknown\", \"violation_count\": 1, \"violation_types\": [\"SPEED_HIGH\"], \"avg_severity\": 3.0, \"last_violation\": {\"$date\": \"2025-03-12T04:26:40.279Z\"}, \"vehicle_license\": \"860260057121187\"}, {\"_id\": \"4616917\", \"name\": \"Unknown\", \"violation_count\": 1, \"violation_types\": [\"SPEED_LOW\"], \"avg_severity\": 1.0, \"last_violation\": {\"$date\": \"2025-03-11T14:56:43.036Z\"}, \"vehicle_license\": \"860665050851988\"}], \"ns\": \"opal_server.violations\"}, \"ok\": 1.0}", "commandName": "getMore", "databaseName": "opal_server", "requestId": 19169, "operationId": 19169, "driverConnectionId": 1, "serverConnectionId": 13187, "serverHost": "3.144.134.141", "serverPort": 27017}
2025-03-13 15:56:36,729 - pymongo.connection - DEBUG - {"clientId": {"$oid": "67d2b9e29c0c5db6ac0f57ea"}, "message": "Connection checked in", "serverHost": "3.144.134.141", "serverPort": 27017, "driverConnectionId": 1}
2025-03-13 15:56:36,730 - app.db.repositories.data_repository - INFO - Retrieved stats for 103 drivers
2025-03-13 15:56:36,731 - app.services.predictive_analytics - INFO - Retrieved 103 driver records
2025-03-13 15:56:36,731 - app.services.predictive_analytics - INFO - Successfully processed 9 drivers
2025-03-13 15:56:45,006 - pymongo.topology - DEBUG - {"topologyId": {"$oid": "67d2b9e29c0c5db6ac0f57ea"}, "driverConnectionId": 1, "serverConnectionId": 13185, "serverHost": "3.144.134.141", "serverPort": 27017, "awaited": true, "durationMS": 10234.000000000378, "reply": "{\"isWritablePrimary\": true, \"topologyVersion\": {\"processId\": {\"$oid\": \"67b7e5814f77c1a87c56d054\"}}, \"maxBsonObjectSize\": 16777216, \"maxMessageSizeBytes\": 48000000, \"maxWriteBatchSize\": 100000, \"localTime\": {\"$date\": \"2025-03-13T10:56:45.044Z\"}, \"logicalSessionTimeoutMinutes\": 30, \"connectionId\": 13185, \"maxWireVersion\": 25, \"ok\": 1.0}", "message": "Server heartbeat succeeded"}
2025-03-13 15:56:45,007 - pymongo.topology - DEBUG - {"topologyId": {"$oid": "67d2b9e29c0c5db6ac0f57ea"}, "driverConnectionId": 1, "serverConnectionId": 13185, "serverHost": "3.144.134.141", "serverPort": 27017, "awaited": true, "message": "Server heartbeat started"}
2025-03-13 15:56:55,008 - pymongo.topology - DEBUG - {"topologyId": {"$oid": "67d2b9e29c0c5db6ac0f57ea"}, "driverConnectionId": 1, "serverConnectionId": 13185, "serverHost": "3.144.134.141", "serverPort": 27017, "awaited": true, "durationMS": 10000.0, "reply": "{\"isWritablePrimary\": true, \"topologyVersion\": {\"processId\": {\"$oid\": \"67b7e5814f77c1a87c56d054\"}}, \"maxBsonObjectSize\": 16777216, \"maxMessageSizeBytes\": 48000000, \"maxWriteBatchSize\": 100000, \"localTime\": {\"$date\": \"2025-03-13T10:56:55.045Z\"}, \"logicalSessionTimeoutMinutes\": 30, \"connectionId\": 13185, \"maxWireVersion\": 25, \"ok\": 1.0}", "message": "Server heartbeat succeeded"}
2025-03-13 15:56:55,008 - pymongo.topology - DEBUG - {"topologyId": {"$oid": "67d2b9e29c0c5db6ac0f57ea"}, "driverConnectionId": 1, "serverConnectionId": 13185, "serverHost": "3.144.134.141", "serverPort": 27017, "awaited": true, "message": "Server heartbeat started"}
2025-03-13 15:57:05,007 - pymongo.topology - DEBUG - {"topologyId": {"$oid": "67d2b9e29c0c5db6ac0f57ea"}, "driverConnectionId": 1, "serverConnectionId": 13185, "serverHost": "3.144.134.141", "serverPort": 27017, "awaited": true, "durationMS": 10000.0, "reply": "{\"isWritablePrimary\": true, \"topologyVersion\": {\"processId\": {\"$oid\": \"67b7e5814f77c1a87c56d054\"}}, \"maxBsonObjectSize\": 16777216, \"maxMessageSizeBytes\": 48000000, \"maxWriteBatchSize\": 100000, \"localTime\": {\"$date\": \"2025-03-13T10:57:05.045Z\"}, \"logicalSessionTimeoutMinutes\": 30, \"connectionId\": 13185, \"maxWireVersion\": 25, \"ok\": 1.0}", "message": "Server heartbeat succeeded"}
2025-03-13 15:57:05,008 - pymongo.topology - DEBUG - {"topologyId": {"$oid": "67d2b9e29c0c5db6ac0f57ea"}, "driverConnectionId": 1, "serverConnectionId": 13185, "serverHost": "3.144.134.141", "serverPort": 27017, "awaited": true, "message": "Server heartbeat started"}
2025-03-13 15:57:15,009 - pymongo.topology - DEBUG - {"topologyId": {"$oid": "67d2b9e29c0c5db6ac0f57ea"}, "driverConnectionId": 1, "serverConnectionId": 13185, "serverHost": "3.144.134.141", "serverPort": 27017, "awaited": true, "durationMS": 10000.0, "reply": "{\"isWritablePrimary\": true, \"topologyVersion\": {\"processId\": {\"$oid\": \"67b7e5814f77c1a87c56d054\"}}, \"maxBsonObjectSize\": 16777216, \"maxMessageSizeBytes\": 48000000, \"maxWriteBatchSize\": 100000, \"localTime\": {\"$date\": \"2025-03-13T10:57:15.047Z\"}, \"logicalSessionTimeoutMinutes\": 30, \"connectionId\": 13185, \"maxWireVersion\": 25, \"ok\": 1.0}", "message": "Server heartbeat succeeded"}
2025-03-13 15:57:15,010 - pymongo.topology - DEBUG - {"topologyId": {"$oid": "67d2b9e29c0c5db6ac0f57ea"}, "driverConnectionId": 1, "serverConnectionId": 13185, "serverHost": "3.144.134.141", "serverPort": 27017, "awaited": true, "message": "Server heartbeat started"}
2025-03-13 15:59:39,220 - numexpr.utils - INFO - Note: NumExpr detected 12 cores but "NUMEXPR_MAX_THREADS" not set, so enforcing safe limit of 8.
2025-03-13 15:59:39,220 - numexpr.utils - INFO - NumExpr defaulting to 8 threads.
2025-03-13 15:59:40,535 - matplotlib - DEBUG - matplotlib data path: C:\Users\msameerakram\AppData\Local\anaconda3\Lib\site-packages\matplotlib\mpl-data
2025-03-13 15:59:40,540 - matplotlib - DEBUG - CONFIGDIR=C:\Users\msameerakram\.matplotlib
2025-03-13 15:59:40,543 - matplotlib - DEBUG - interactive is False
2025-03-13 15:59:40,543 - matplotlib - DEBUG - platform is win32
2025-03-13 15:59:40,603 - matplotlib - DEBUG - CACHEDIR=C:\Users\msameerakram\.matplotlib
2025-03-13 15:59:40,608 - matplotlib.font_manager - DEBUG - Using fontManager instance from C:\Users\msameerakram\.matplotlib\fontlist-v390.json
2025-03-13 15:59:43,215 - numexpr.utils - INFO - Note: NumExpr detected 12 cores but "NUMEXPR_MAX_THREADS" not set, so enforcing safe limit of 8.
2025-03-13 15:59:43,215 - numexpr.utils - INFO - NumExpr defaulting to 8 threads.
2025-03-13 15:59:44,450 - matplotlib - DEBUG - matplotlib data path: C:\Users\msameerakram\AppData\Local\anaconda3\Lib\site-packages\matplotlib\mpl-data
2025-03-13 15:59:44,456 - matplotlib - DEBUG - CONFIGDIR=C:\Users\msameerakram\.matplotlib
2025-03-13 15:59:44,457 - matplotlib - DEBUG - interactive is False
2025-03-13 15:59:44,457 - matplotlib - DEBUG - platform is win32
2025-03-13 15:59:44,515 - matplotlib - DEBUG - CACHEDIR=C:\Users\msameerakram\.matplotlib
2025-03-13 15:59:44,519 - matplotlib.font_manager - DEBUG - Using fontManager instance from C:\Users\msameerakram\.matplotlib\fontlist-v390.json
2025-03-13 15:59:45,963 - asyncio - DEBUG - Using selector: SelectSelector
2025-03-13 15:59:45,999 - pymongo.topology - DEBUG - {"topologyId": {"$oid": "67d2baa1340f36047cab3031"}, "message": "Starting topology monitoring"}
2025-03-13 15:59:45,999 - pymongo.topology - DEBUG - {"topologyId": {"$oid": "67d2baa1340f36047cab3031"}, "previousDescription": "<TopologyDescription id: 67d2baa1340f36047cab3031, topology_type: Unknown, servers: []>", "newDescription": "<TopologyDescription id: 67d2baa1340f36047cab3031, topology_type: Unknown, servers: [<ServerDescription ('3.144.134.141', 27017) server_type: Unknown, rtt: None>]>", "message": "Topology description changed"}
2025-03-13 15:59:46,000 - pymongo.topology - DEBUG - {"topologyId": {"$oid": "67d2baa1340f36047cab3031"}, "serverHost": "3.144.134.141", "serverPort": 27017, "message": "Starting server monitoring"}
2025-03-13 15:59:46,002 - pymongo.connection - DEBUG - {"clientId": {"$oid": "67d2baa1340f36047cab3031"}, "message": "Connection pool created", "serverHost": "3.144.134.141", "serverPort": 27017}
2025-03-13 15:59:46,004 - pymongo.serverSelection - DEBUG - {"message": "Server selection started", "selector": "Primary()", "operation": "ping", "topologyDescription": "<TopologyDescription id: 67d2baa1340f36047cab3031, topology_type: Unknown, servers: [<ServerDescription ('3.144.134.141', 27017) server_type: Unknown, rtt: None>]>", "clientId": {"$oid": "67d2baa1340f36047cab3031"}}
2025-03-13 15:59:46,005 - pymongo.serverSelection - DEBUG - {"message": "Waiting for suitable server to become available", "selector": "Primary()", "operation": "ping", "topologyDescription": "<TopologyDescription id: 67d2baa1340f36047cab3031, topology_type: Unknown, servers: [<ServerDescription ('3.144.134.141', 27017) server_type: Unknown, rtt: None>]>", "clientId": {"$oid": "67d2baa1340f36047cab3031"}, "remainingTimeMS": 30}
2025-03-13 15:59:46,251 - pymongo.topology - DEBUG - {"topologyId": {"$oid": "67d2baa1340f36047cab3031"}, "driverConnectionId": 1, "serverHost": "3.144.134.141", "serverPort": 27017, "awaited": false, "message": "Server heartbeat started"}
2025-03-13 15:59:46,500 - pymongo.topology - DEBUG - {"topologyId": {"$oid": "67d2baa1340f36047cab3031"}, "driverConnectionId": 1, "serverConnectionId": 13188, "serverHost": "3.144.134.141", "serverPort": 27017, "awaited": false, "durationMS": 250.0, "reply": "{\"helloOk\": true, \"ismaster\": true, \"topologyVersion\": {\"processId\": {\"$oid\": \"67b7e5814f77c1a87c56d054\"}}, \"maxBsonObjectSize\": 16777216, \"maxMessageSizeBytes\": 48000000, \"maxWriteBatchSize\": 100000, \"localTime\": {\"$date\": \"2025-03-13T10:59:46.537Z\"}, \"logicalSessionTimeoutMinutes\": 30, \"connectionId\": 13188, \"maxWireVersion\": 25, \"ok\": 1.0}", "message": "Server heartbeat succeeded"}
2025-03-13 15:59:46,501 - pymongo.connection - DEBUG - {"clientId": {"$oid": "67d2baa1340f36047cab3031"}, "message": "Connection pool ready", "serverHost": "3.144.134.141", "serverPort": 27017}
2025-03-13 15:59:46,501 - pymongo.topology - DEBUG - {"topologyId": {"$oid": "67d2baa1340f36047cab3031"}, "previousDescription": "<TopologyDescription id: 67d2baa1340f36047cab3031, topology_type: Unknown, servers: [<ServerDescription ('3.144.134.141', 27017) server_type: Unknown, rtt: None>]>", "newDescription": "<TopologyDescription id: 67d2baa1340f36047cab3031, topology_type: Single, servers: [<ServerDescription ('3.144.134.141', 27017) server_type: Standalone, rtt: 0.25>]>", "message": "Topology description changed"}
2025-03-13 15:59:46,502 - pymongo.serverSelection - DEBUG - {"message": "Server selection succeeded", "selector": "Primary()", "operation": "ping", "topologyDescription": "<TopologyDescription id: 67d2baa1340f36047cab3031, topology_type: Single, servers: [<ServerDescription ('3.144.134.141', 27017) server_type: Standalone, rtt: 0.25>]>", "clientId": {"$oid": "67d2baa1340f36047cab3031"}, "serverHost": "3.144.134.141", "serverPort": 27017}
2025-03-13 15:59:46,503 - pymongo.connection - DEBUG - {"clientId": {"$oid": "67d2baa1340f36047cab3031"}, "message": "Connection checkout started", "serverHost": "3.144.134.141", "serverPort": 27017}
2025-03-13 15:59:46,503 - pymongo.topology - DEBUG - {"topologyId": {"$oid": "67d2baa1340f36047cab3031"}, "driverConnectionId": 1, "serverConnectionId": 13188, "serverHost": "3.144.134.141", "serverPort": 27017, "awaited": true, "message": "Server heartbeat started"}
2025-03-13 15:59:46,503 - pymongo.connection - DEBUG - {"clientId": {"$oid": "67d2baa1340f36047cab3031"}, "message": "Connection created", "serverHost": "3.144.134.141", "serverPort": 27017, "driverConnectionId": 1}
2025-03-13 15:59:47,263 - pymongo.connection - DEBUG - {"clientId": {"$oid": "67d2baa1340f36047cab3031"}, "message": "Connection ready", "serverHost": "3.144.134.141", "serverPort": 27017, "driverConnectionId": 1, "durationMS": 0.5159999999996217}
2025-03-13 15:59:47,264 - pymongo.connection - DEBUG - {"clientId": {"$oid": "67d2baa1340f36047cab3031"}, "message": "Connection checked out", "serverHost": "3.144.134.141", "serverPort": 27017, "driverConnectionId": 1, "durationMS": 0.7659999999996217}
2025-03-13 15:59:47,264 - pymongo.command - DEBUG - {"clientId": {"$oid": "67d2baa1340f36047cab3031"}, "message": "Command started", "command": "{\"ping\": 1, \"lsid\": {\"id\": {\"$binary\": {\"base64\": \"1yrFhqAZRDq8V5O3vhvSZw==\", \"subType\": \"04\"}}}, \"$db\": \"opal_server\"}", "commandName": "ping", "databaseName": "opal_server", "requestId": 6334, "operationId": 6334, "driverConnectionId": 1, "serverConnectionId": 13190, "serverHost": "3.144.134.141", "serverPort": 27017}
2025-03-13 15:59:47,513 - pymongo.command - DEBUG - {"clientId": {"$oid": "67d2baa1340f36047cab3031"}, "message": "Command succeeded", "durationMS": 248.587, "reply": "{\"ok\": 1.0}", "commandName": "ping", "databaseName": "opal_server", "requestId": 6334, "operationId": 6334, "driverConnectionId": 1, "serverConnectionId": 13190, "serverHost": "3.144.134.141", "serverPort": 27017}
2025-03-13 15:59:47,514 - pymongo.connection - DEBUG - {"clientId": {"$oid": "67d2baa1340f36047cab3031"}, "message": "Connection checked in", "serverHost": "3.144.134.141", "serverPort": 27017, "driverConnectionId": 1}
2025-03-13 15:59:51,980 - app.services.predictive_analytics - INFO - Starting driver risk prediction for last 3 days
2025-03-13 15:59:51,980 - app.db.repositories.data_repository - INFO - Fetching driver risk data for past 3 days
2025-03-13 15:59:51,980 - app.db.repositories.data_repository - DEBUG - Executing pipeline: [{'$match': {'event_time': {'$gte': datetime.datetime(2025, 3, 10, 15, 59, 51, 980983)}}}, {'$group': {'_id': '$driver_uuid', 'name': {'$first': '$driver_name'}, 'violation_count': {'$sum': 1}, 'violation_types': {'$addToSet': '$violation_type'}, 'avg_severity': {'$avg': {'$switch': {'branches': [{'case': {'$eq': ['$severity', 'HIGH']}, 'then': 3}, {'case': {'$eq': ['$severity', 'MEDIUM']}, 'then': 2}], 'default': 1}}}, 'last_violation': {'$max': '$event_time'}, 'max_speed': {'$max': '$telemetry.speed'}, 'vehicle_license': {'$first': '$vehicle_license'}}}, {'$sort': {'violation_count': -1}}]
2025-03-13 15:59:51,982 - pymongo.serverSelection - DEBUG - {"message": "Server selection started", "selector": "Primary()", "operation": "aggregate", "topologyDescription": "<TopologyDescription id: 67d2baa1340f36047cab3031, topology_type: Single, servers: [<ServerDescription ('3.144.134.141', 27017) server_type: Standalone, rtt: 0.25>]>", "clientId": {"$oid": "67d2baa1340f36047cab3031"}}
2025-03-13 15:59:51,982 - pymongo.serverSelection - DEBUG - {"message": "Server selection succeeded", "selector": "Primary()", "operation": "aggregate", "topologyDescription": "<TopologyDescription id: 67d2baa1340f36047cab3031, topology_type: Single, servers: [<ServerDescription ('3.144.134.141', 27017) server_type: Standalone, rtt: 0.25>]>", "clientId": {"$oid": "67d2baa1340f36047cab3031"}, "serverHost": "3.144.134.141", "serverPort": 27017}
2025-03-13 15:59:51,982 - pymongo.connection - DEBUG - {"clientId": {"$oid": "67d2baa1340f36047cab3031"}, "message": "Connection checkout started", "serverHost": "3.144.134.141", "serverPort": 27017}
2025-03-13 15:59:51,983 - pymongo.connection - DEBUG - {"clientId": {"$oid": "67d2baa1340f36047cab3031"}, "message": "Connection checked out", "serverHost": "3.144.134.141", "serverPort": 27017, "driverConnectionId": 1, "durationMS": 0.0}
2025-03-13 15:59:51,983 - pymongo.command - DEBUG - {"clientId": {"$oid": "67d2baa1340f36047cab3031"}, "message": "Command started", "command": "{\"aggregate\": \"violations\", \"pipeline\": [{\"$match\": {\"event_time\": {\"$gte\": {\"$date\": \"2025-03-10T15:59:51.980Z\"}}}}, {\"$group\": {\"_id\": \"$driver_uuid\", \"name\": {\"$first\": \"$driver_name\"}, \"violation_count\": {\"$sum\": 1}, \"violation_types\": {\"$addToSet\": \"$violation_type\"}, \"avg_severity\": {\"$avg\": {\"$switch\": {\"branches\": [{\"case\": {\"$eq\": [\"$severity\", \"HIGH\"]}, \"then\": 3}, {\"case\": {\"$eq\": [\"$severity\", \"MEDIUM\"]}, \"then\": 2}], \"default\": 1}}}, \"last_violation\": {\"$max\": \"$event_time\"}, \"max_speed\": {\"$max\": \"$telemetry.speed\"}, \"vehicle_license\": {\"$first\": \"$vehicle_license\"}}}, {\"$sort\": {\"violation_count\": -1}}], \"lsid\": {\"id\": {\"$binary\": {\"base64\": \"1yrFhqAZRDq8V5O3vhvSZw==\", \"subType\": \"04\"}}}, \"$db\": \"opal_server\"}", "commandName": "aggregate", "databaseName": "opal_server", "requestId": 26500, "operationId": 26500, "driverConnectionId": 1, "serverConnectionId": 13190, "serverHost": "3.144.134.141", "serverPort": 27017}
2025-03-13 15:59:52,495 - pymongo.command - DEBUG - {"clientId": {"$oid": "67d2baa1340f36047cab3031"}, "message": "Command succeeded", "durationMS": 511.89399999999995, "reply": "{\"cursor\": {\"firstBatch\": [{\"_id\": \"unknown\", \"name\": \"Unknown\", \"violation_count\": 960, \"violation_types\": [\"SPEED_MEDIUM\", \"SPEED_HIGH\", \"SPEED_LOW\"], \"avg_severity\": 1.9572916666666667, \"last_violation\": {\"$date\": \"2025-03-13T08:14:23.140Z\"}, \"vehicle_license\": \"860665050647824\"}, {\"_id\": \"3dd80f61-5ed1-4038-b3a8-5d2e37759893\", \"name\": \"DALER SINGH\", \"violation_count\": 239, \"violation_types\": [\"SPEED_MEDIUM\", \"SPEED_LOW\"], \"avg_severity\": 1.5523012552301256, \"last_violation\": {\"$date\": \"2025-03-11T15:04:20.407Z\"}, \"vehicle_license\": \"1313YD\"}, {\"_id\": \"7463170a-de85-4c5d-a77b-b506d939aca1\", \"name\": \"GUL ZAMAN #94378054\", \"violation_count\": 237, \"violation_types\": [\"SPEED_MEDIUM\", \"SPEED_LOW\"], \"avg_severity\": 1.59915611814346, \"last_violation\": {\"$date\": \"2025-03-13T06:31:35.314Z\"}, \"vehicle_license\": \"1075MR\"}, {\"_id\": \"10009164\", \"name\": \"Unknown\", \"violation_count\": 211, \"violation_types\": [\"SPEED_MEDIUM\", \"SPEED_HIGH\", \"SPEED_LOW\"], \"avg_severity\": 1.7109004739336493, \"last_viol...", "commandName": "aggregate", "databaseName": "opal_server", "requestId": 26500, "operationId": 26500, "driverConnectionId": 1, "serverConnectionId": 13190, "serverHost": "3.144.134.141", "serverPort": 27017}
2025-03-13 15:59:52,497 - pymongo.connection - DEBUG - {"clientId": {"$oid": "67d2baa1340f36047cab3031"}, "message": "Connection checked in", "serverHost": "3.144.134.141", "serverPort": 27017, "driverConnectionId": 1}
2025-03-13 15:59:52,498 - pymongo.serverSelection - DEBUG - {"message": "Server selection started", "selector": "<function any_server_selector at 0x0000013CFD308720>", "operation": "getMore", "topologyDescription": "<TopologyDescription id: 67d2baa1340f36047cab3031, topology_type: Single, servers: [<ServerDescription ('3.144.134.141', 27017) server_type: Standalone, rtt: 0.25>]>", "clientId": {"$oid": "67d2baa1340f36047cab3031"}}
2025-03-13 15:59:52,498 - pymongo.serverSelection - DEBUG - {"message": "Server selection succeeded", "selector": "<function any_server_selector at 0x0000013CFD308720>", "operation": "getMore", "topologyDescription": "<TopologyDescription id: 67d2baa1340f36047cab3031, topology_type: Single, servers: [<ServerDescription ('3.144.134.141', 27017) server_type: Standalone, rtt: 0.25>]>", "clientId": {"$oid": "67d2baa1340f36047cab3031"}, "serverHost": "3.144.134.141", "serverPort": 27017}
2025-03-13 15:59:52,498 - pymongo.connection - DEBUG - {"clientId": {"$oid": "67d2baa1340f36047cab3031"}, "message": "Connection checkout started", "serverHost": "3.144.134.141", "serverPort": 27017}
2025-03-13 15:59:52,499 - pymongo.connection - DEBUG - {"clientId": {"$oid": "67d2baa1340f36047cab3031"}, "message": "Connection checked out", "serverHost": "3.144.134.141", "serverPort": 27017, "driverConnectionId": 1, "durationMS": 0.0}
2025-03-13 15:59:52,499 - pymongo.command - DEBUG - {"clientId": {"$oid": "67d2baa1340f36047cab3031"}, "message": "Command started", "command": "{\"getMore\": 5022833127853734644, \"collection\": \"violations\", \"lsid\": {\"id\": {\"$binary\": {\"base64\": \"1yrFhqAZRDq8V5O3vhvSZw==\", \"subType\": \"04\"}}}, \"$db\": \"opal_server\"}", "commandName": "getMore", "databaseName": "opal_server", "requestId": 19169, "operationId": 19169, "driverConnectionId": 1, "serverConnectionId": 13190, "serverHost": "3.144.134.141", "serverPort": 27017}
2025-03-13 15:59:52,747 - pymongo.command - DEBUG - {"clientId": {"$oid": "67d2baa1340f36047cab3031"}, "message": "Command succeeded", "durationMS": 247.71699999999998, "reply": "{\"cursor\": {\"nextBatch\": [{\"_id\": \"13380099\", \"name\": \"Unknown\", \"violation_count\": 1, \"violation_types\": [\"SPEED_MEDIUM\"], \"avg_severity\": 2.0, \"last_violation\": {\"$date\": \"2025-03-13T05:42:56.753Z\"}, \"vehicle_license\": \"860260056943276\"}, {\"_id\": \"10162055\", \"name\": \"Unknown\", \"violation_count\": 1, \"violation_types\": [\"SPEED_HIGH\"], \"avg_severity\": 3.0, \"last_violation\": {\"$date\": \"2025-03-11T15:43:20.683Z\"}, \"vehicle_license\": \"860665050686715\"}], \"ns\": \"opal_server.violations\"}, \"ok\": 1.0}", "commandName": "getMore", "databaseName": "opal_server", "requestId": 19169, "operationId": 19169, "driverConnectionId": 1, "serverConnectionId": 13190, "serverHost": "3.144.134.141", "serverPort": 27017}
2025-03-13 15:59:52,748 - pymongo.connection - DEBUG - {"clientId": {"$oid": "67d2baa1340f36047cab3031"}, "message": "Connection checked in", "serverHost": "3.144.134.141", "serverPort": 27017, "driverConnectionId": 1}
2025-03-13 15:59:52,748 - app.db.repositories.data_repository - INFO - Retrieved stats for 103 drivers
2025-03-13 15:59:52,748 - app.services.predictive_analytics - INFO - Retrieved 103 driver records
2025-03-13 15:59:52,749 - app.services.predictive_analytics - INFO - Successfully processed 9 drivers
2025-03-13 15:59:56,760 - pymongo.topology - DEBUG - {"topologyId": {"$oid": "67d2baa1340f36047cab3031"}, "driverConnectionId": 1, "serverConnectionId": 13188, "serverHost": "3.144.134.141", "serverPort": 27017, "awaited": true, "durationMS": 10265.999999999622, "reply": "{\"isWritablePrimary\": true, \"topologyVersion\": {\"processId\": {\"$oid\": \"67b7e5814f77c1a87c56d054\"}}, \"maxBsonObjectSize\": 16777216, \"maxMessageSizeBytes\": 48000000, \"maxWriteBatchSize\": 100000, \"localTime\": {\"$date\": \"2025-03-13T10:59:56.797Z\"}, \"logicalSessionTimeoutMinutes\": 30, \"connectionId\": 13188, \"maxWireVersion\": 25, \"ok\": 1.0}", "message": "Server heartbeat succeeded"}
2025-03-13 15:59:56,760 - pymongo.topology - DEBUG - {"topologyId": {"$oid": "67d2baa1340f36047cab3031"}, "driverConnectionId": 1, "serverConnectionId": 13188, "serverHost": "3.144.134.141", "serverPort": 27017, "awaited": true, "message": "Server heartbeat started"}
2025-03-13 16:00:06,770 - pymongo.topology - DEBUG - {"topologyId": {"$oid": "67d2baa1340f36047cab3031"}, "driverConnectionId": 1, "serverConnectionId": 13188, "serverHost": "3.144.134.141", "serverPort": 27017, "awaited": true, "durationMS": 10000.0, "reply": "{\"isWritablePrimary\": true, \"topologyVersion\": {\"processId\": {\"$oid\": \"67b7e5814f77c1a87c56d054\"}}, \"maxBsonObjectSize\": 16777216, \"maxMessageSizeBytes\": 48000000, \"maxWriteBatchSize\": 100000, \"localTime\": {\"$date\": \"2025-03-13T11:00:06.807Z\"}, \"logicalSessionTimeoutMinutes\": 30, \"connectionId\": 13188, \"maxWireVersion\": 25, \"ok\": 1.0}", "message": "Server heartbeat succeeded"}
2025-03-13 16:00:06,770 - pymongo.topology - DEBUG - {"topologyId": {"$oid": "67d2baa1340f36047cab3031"}, "driverConnectionId": 1, "serverConnectionId": 13188, "serverHost": "3.144.134.141", "serverPort": 27017, "awaited": true, "message": "Server heartbeat started"}
2025-03-13 16:00:16,779 - pymongo.topology - DEBUG - {"topologyId": {"$oid": "67d2baa1340f36047cab3031"}, "driverConnectionId": 1, "serverConnectionId": 13188, "serverHost": "3.144.134.141", "serverPort": 27017, "awaited": true, "durationMS": 10014.999999999418, "reply": "{\"isWritablePrimary\": true, \"topologyVersion\": {\"processId\": {\"$oid\": \"67b7e5814f77c1a87c56d054\"}}, \"maxBsonObjectSize\": 16777216, \"maxMessageSizeBytes\": 48000000, \"maxWriteBatchSize\": 100000, \"localTime\": {\"$date\": \"2025-03-13T11:00:16.816Z\"}, \"logicalSessionTimeoutMinutes\": 30, \"connectionId\": 13188, \"maxWireVersion\": 25, \"ok\": 1.0}", "message": "Server heartbeat succeeded"}
2025-03-13 16:00:16,779 - pymongo.topology - DEBUG - {"topologyId": {"$oid": "67d2baa1340f36047cab3031"}, "driverConnectionId": 1, "serverConnectionId": 13188, "serverHost": "3.144.134.141", "serverPort": 27017, "awaited": true, "message": "Server heartbeat started"}
2025-03-13 16:00:26,782 - pymongo.topology - DEBUG - {"topologyId": {"$oid": "67d2baa1340f36047cab3031"}, "driverConnectionId": 1, "serverConnectionId": 13188, "serverHost": "3.144.134.141", "serverPort": 27017, "awaited": true, "durationMS": 10000.0, "reply": "{\"isWritablePrimary\": true, \"topologyVersion\": {\"processId\": {\"$oid\": \"67b7e5814f77c1a87c56d054\"}}, \"maxBsonObjectSize\": 16777216, \"maxMessageSizeBytes\": 48000000, \"maxWriteBatchSize\": 100000, \"localTime\": {\"$date\": \"2025-03-13T11:00:26.819Z\"}, \"logicalSessionTimeoutMinutes\": 30, \"connectionId\": 13188, \"maxWireVersion\": 25, \"ok\": 1.0}", "message": "Server heartbeat succeeded"}
2025-03-13 16:00:26,782 - pymongo.topology - DEBUG - {"topologyId": {"$oid": "67d2baa1340f36047cab3031"}, "driverConnectionId": 1, "serverConnectionId": 13188, "serverHost": "3.144.134.141", "serverPort": 27017, "awaited": true, "message": "Server heartbeat started"}
2025-03-13 16:00:36,784 - pymongo.topology - DEBUG - {"topologyId": {"$oid": "67d2baa1340f36047cab3031"}, "driverConnectionId": 1, "serverConnectionId": 13188, "serverHost": "3.144.134.141", "serverPort": 27017, "awaited": true, "durationMS": 10000.0, "reply": "{\"isWritablePrimary\": true, \"topologyVersion\": {\"processId\": {\"$oid\": \"67b7e5814f77c1a87c56d054\"}}, \"maxBsonObjectSize\": 16777216, \"maxMessageSizeBytes\": 48000000, \"maxWriteBatchSize\": 100000, \"localTime\": {\"$date\": \"2025-03-13T11:00:36.822Z\"}, \"logicalSessionTimeoutMinutes\": 30, \"connectionId\": 13188, \"maxWireVersion\": 25, \"ok\": 1.0}", "message": "Server heartbeat succeeded"}
2025-03-13 16:00:36,785 - pymongo.topology - DEBUG - {"topologyId": {"$oid": "67d2baa1340f36047cab3031"}, "driverConnectionId": 1, "serverConnectionId": 13188, "serverHost": "3.144.134.141", "serverPort": 27017, "awaited": true, "message": "Server heartbeat started"}
2025-03-13 16:00:46,787 - pymongo.topology - DEBUG - {"topologyId": {"$oid": "67d2baa1340f36047cab3031"}, "driverConnectionId": 1, "serverConnectionId": 13188, "serverHost": "3.144.134.141", "serverPort": 27017, "awaited": true, "durationMS": 10000.0, "reply": "{\"isWritablePrimary\": true, \"topologyVersion\": {\"processId\": {\"$oid\": \"67b7e5814f77c1a87c56d054\"}}, \"maxBsonObjectSize\": 16777216, \"maxMessageSizeBytes\": 48000000, \"maxWriteBatchSize\": 100000, \"localTime\": {\"$date\": \"2025-03-13T11:00:46.825Z\"}, \"logicalSessionTimeoutMinutes\": 30, \"connectionId\": 13188, \"maxWireVersion\": 25, \"ok\": 1.0}", "message": "Server heartbeat succeeded"}
2025-03-13 16:00:46,787 - pymongo.topology - DEBUG - {"topologyId": {"$oid": "67d2baa1340f36047cab3031"}, "driverConnectionId": 1, "serverConnectionId": 13188, "serverHost": "3.144.134.141", "serverPort": 27017, "awaited": true, "message": "Server heartbeat started"}
2025-03-13 16:00:56,795 - pymongo.topology - DEBUG - {"topologyId": {"$oid": "67d2baa1340f36047cab3031"}, "driverConnectionId": 1, "serverConnectionId": 13188, "serverHost": "3.144.134.141", "serverPort": 27017, "awaited": true, "durationMS": 10000.0, "reply": "{\"isWritablePrimary\": true, \"topologyVersion\": {\"processId\": {\"$oid\": \"67b7e5814f77c1a87c56d054\"}}, \"maxBsonObjectSize\": 16777216, \"maxMessageSizeBytes\": 48000000, \"maxWriteBatchSize\": 100000, \"localTime\": {\"$date\": \"2025-03-13T11:00:56.833Z\"}, \"logicalSessionTimeoutMinutes\": 30, \"connectionId\": 13188, \"maxWireVersion\": 25, \"ok\": 1.0}", "message": "Server heartbeat succeeded"}
2025-03-13 16:00:56,795 - pymongo.topology - DEBUG - {"topologyId": {"$oid": "67d2baa1340f36047cab3031"}, "driverConnectionId": 1, "serverConnectionId": 13188, "serverHost": "3.144.134.141", "serverPort": 27017, "awaited": true, "message": "Server heartbeat started"}
2025-03-13 16:01:06,805 - pymongo.topology - DEBUG - {"topologyId": {"$oid": "67d2baa1340f36047cab3031"}, "driverConnectionId": 1, "serverConnectionId": 13188, "serverHost": "3.144.134.141", "serverPort": 27017, "awaited": true, "durationMS": 10014.999999999418, "reply": "{\"isWritablePrimary\": true, \"topologyVersion\": {\"processId\": {\"$oid\": \"67b7e5814f77c1a87c56d054\"}}, \"maxBsonObjectSize\": 16777216, \"maxMessageSizeBytes\": 48000000, \"maxWriteBatchSize\": 100000, \"localTime\": {\"$date\": \"2025-03-13T11:01:06.843Z\"}, \"logicalSessionTimeoutMinutes\": 30, \"connectionId\": 13188, \"maxWireVersion\": 25, \"ok\": 1.0}", "message": "Server heartbeat succeeded"}
2025-03-13 16:01:06,805 - pymongo.topology - DEBUG - {"topologyId": {"$oid": "67d2baa1340f36047cab3031"}, "driverConnectionId": 1, "serverConnectionId": 13188, "serverHost": "3.144.134.141", "serverPort": 27017, "awaited": true, "message": "Server heartbeat started"}
2025-03-13 16:01:16,805 - pymongo.topology - DEBUG - {"topologyId": {"$oid": "67d2baa1340f36047cab3031"}, "driverConnectionId": 1, "serverConnectionId": 13188, "serverHost": "3.144.134.141", "serverPort": 27017, "awaited": true, "durationMS": 10000.0, "reply": "{\"isWritablePrimary\": true, \"topologyVersion\": {\"processId\": {\"$oid\": \"67b7e5814f77c1a87c56d054\"}}, \"maxBsonObjectSize\": 16777216, \"maxMessageSizeBytes\": 48000000, \"maxWriteBatchSize\": 100000, \"localTime\": {\"$date\": \"2025-03-13T11:01:16.844Z\"}, \"logicalSessionTimeoutMinutes\": 30, \"connectionId\": 13188, \"maxWireVersion\": 25, \"ok\": 1.0}", "message": "Server heartbeat succeeded"}
2025-03-13 16:01:16,807 - pymongo.topology - DEBUG - {"topologyId": {"$oid": "67d2baa1340f36047cab3031"}, "driverConnectionId": 1, "serverConnectionId": 13188, "serverHost": "3.144.134.141", "serverPort": 27017, "awaited": true, "message": "Server heartbeat started"}
2025-03-13 16:01:26,810 - pymongo.topology - DEBUG - {"topologyId": {"$oid": "67d2baa1340f36047cab3031"}, "driverConnectionId": 1, "serverConnectionId": 13188, "serverHost": "3.144.134.141", "serverPort": 27017, "awaited": true, "durationMS": 10000.0, "reply": "{\"isWritablePrimary\": true, \"topologyVersion\": {\"processId\": {\"$oid\": \"67b7e5814f77c1a87c56d054\"}}, \"maxBsonObjectSize\": 16777216, \"maxMessageSizeBytes\": 48000000, \"maxWriteBatchSize\": 100000, \"localTime\": {\"$date\": \"2025-03-13T11:01:26.849Z\"}, \"logicalSessionTimeoutMinutes\": 30, \"connectionId\": 13188, \"maxWireVersion\": 25, \"ok\": 1.0}", "message": "Server heartbeat succeeded"}
2025-03-13 16:01:26,810 - pymongo.topology - DEBUG - {"topologyId": {"$oid": "67d2baa1340f36047cab3031"}, "driverConnectionId": 1, "serverConnectionId": 13188, "serverHost": "3.144.134.141", "serverPort": 27017, "awaited": true, "message": "Server heartbeat started"}
2025-03-13 16:01:36,840 - pymongo.topology - DEBUG - {"topologyId": {"$oid": "67d2baa1340f36047cab3031"}, "driverConnectionId": 1, "serverConnectionId": 13188, "serverHost": "3.144.134.141", "serverPort": 27017, "awaited": true, "durationMS": 10031.999999999243, "reply": "{\"isWritablePrimary\": true, \"topologyVersion\": {\"processId\": {\"$oid\": \"67b7e5814f77c1a87c56d054\"}}, \"maxBsonObjectSize\": 16777216, \"maxMessageSizeBytes\": 48000000, \"maxWriteBatchSize\": 100000, \"localTime\": {\"$date\": \"2025-03-13T11:01:36.849Z\"}, \"logicalSessionTimeoutMinutes\": 30, \"connectionId\": 13188, \"maxWireVersion\": 25, \"ok\": 1.0}", "message": "Server heartbeat succeeded"}
2025-03-13 16:01:36,842 - pymongo.topology - DEBUG - {"topologyId": {"$oid": "67d2baa1340f36047cab3031"}, "driverConnectionId": 1, "serverConnectionId": 13188, "serverHost": "3.144.134.141", "serverPort": 27017, "awaited": true, "message": "Server heartbeat started"}
2025-03-13 16:01:46,819 - pymongo.topology - DEBUG - {"topologyId": {"$oid": "67d2baa1340f36047cab3031"}, "driverConnectionId": 1, "serverConnectionId": 13188, "serverHost": "3.144.134.141", "serverPort": 27017, "awaited": true, "durationMS": 9984.000000000378, "reply": "{\"isWritablePrimary\": true, \"topologyVersion\": {\"processId\": {\"$oid\": \"67b7e5814f77c1a87c56d054\"}}, \"maxBsonObjectSize\": 16777216, \"maxMessageSizeBytes\": 48000000, \"maxWriteBatchSize\": 100000, \"localTime\": {\"$date\": \"2025-03-13T11:01:46.851Z\"}, \"logicalSessionTimeoutMinutes\": 30, \"connectionId\": 13188, \"maxWireVersion\": 25, \"ok\": 1.0}", "message": "Server heartbeat succeeded"}
2025-03-13 16:01:46,828 - pymongo.topology - DEBUG - {"topologyId": {"$oid": "67d2baa1340f36047cab3031"}, "driverConnectionId": 1, "serverConnectionId": 13188, "serverHost": "3.144.134.141", "serverPort": 27017, "awaited": true, "message": "Server heartbeat started"}
2025-03-13 16:01:56,816 - pymongo.topology - DEBUG - {"topologyId": {"$oid": "67d2baa1340f36047cab3031"}, "driverConnectionId": 1, "serverConnectionId": 13188, "serverHost": "3.144.134.141", "serverPort": 27017, "awaited": true, "durationMS": 9984.000000000378, "reply": "{\"isWritablePrimary\": true, \"topologyVersion\": {\"processId\": {\"$oid\": \"67b7e5814f77c1a87c56d054\"}}, \"maxBsonObjectSize\": 16777216, \"maxMessageSizeBytes\": 48000000, \"maxWriteBatchSize\": 100000, \"localTime\": {\"$date\": \"2025-03-13T11:01:56.852Z\"}, \"logicalSessionTimeoutMinutes\": 30, \"connectionId\": 13188, \"maxWireVersion\": 25, \"ok\": 1.0}", "message": "Server heartbeat succeeded"}
2025-03-13 16:01:56,819 - pymongo.topology - DEBUG - {"topologyId": {"$oid": "67d2baa1340f36047cab3031"}, "driverConnectionId": 1, "serverConnectionId": 13188, "serverHost": "3.144.134.141", "serverPort": 27017, "awaited": true, "message": "Server heartbeat started"}
2025-03-13 16:02:06,819 - pymongo.topology - DEBUG - {"topologyId": {"$oid": "67d2baa1340f36047cab3031"}, "driverConnectionId": 1, "serverConnectionId": 13188, "serverHost": "3.144.134.141", "serverPort": 27017, "awaited": true, "durationMS": 9984.000000000378, "reply": "{\"isWritablePrimary\": true, \"topologyVersion\": {\"processId\": {\"$oid\": \"67b7e5814f77c1a87c56d054\"}}, \"maxBsonObjectSize\": 16777216, \"maxMessageSizeBytes\": 48000000, \"maxWriteBatchSize\": 100000, \"localTime\": {\"$date\": \"2025-03-13T11:02:06.857Z\"}, \"logicalSessionTimeoutMinutes\": 30, \"connectionId\": 13188, \"maxWireVersion\": 25, \"ok\": 1.0}", "message": "Server heartbeat succeeded"}
2025-03-13 16:02:06,820 - pymongo.topology - DEBUG - {"topologyId": {"$oid": "67d2baa1340f36047cab3031"}, "driverConnectionId": 1, "serverConnectionId": 13188, "serverHost": "3.144.134.141", "serverPort": 27017, "awaited": true, "message": "Server heartbeat started"}
2025-03-13 16:02:16,827 - pymongo.topology - DEBUG - {"topologyId": {"$oid": "67d2baa1340f36047cab3031"}, "driverConnectionId": 1, "serverConnectionId": 13188, "serverHost": "3.144.134.141", "serverPort": 27017, "awaited": true, "durationMS": 10000.0, "reply": "{\"isWritablePrimary\": true, \"topologyVersion\": {\"processId\": {\"$oid\": \"67b7e5814f77c1a87c56d054\"}}, \"maxBsonObjectSize\": 16777216, \"maxMessageSizeBytes\": 48000000, \"maxWriteBatchSize\": 100000, \"localTime\": {\"$date\": \"2025-03-13T11:02:16.865Z\"}, \"logicalSessionTimeoutMinutes\": 30, \"connectionId\": 13188, \"maxWireVersion\": 25, \"ok\": 1.0}", "message": "Server heartbeat succeeded"}
2025-03-13 16:02:16,829 - pymongo.topology - DEBUG - {"topologyId": {"$oid": "67d2baa1340f36047cab3031"}, "driverConnectionId": 1, "serverConnectionId": 13188, "serverHost": "3.144.134.141", "serverPort": 27017, "awaited": true, "message": "Server heartbeat started"}
2025-03-13 16:02:26,829 - pymongo.topology - DEBUG - {"topologyId": {"$oid": "67d2baa1340f36047cab3031"}, "driverConnectionId": 1, "serverConnectionId": 13188, "serverHost": "3.144.134.141", "serverPort": 27017, "awaited": true, "durationMS": 10000.0, "reply": "{\"isWritablePrimary\": true, \"topologyVersion\": {\"processId\": {\"$oid\": \"67b7e5814f77c1a87c56d054\"}}, \"maxBsonObjectSize\": 16777216, \"maxMessageSizeBytes\": 48000000, \"maxWriteBatchSize\": 100000, \"localTime\": {\"$date\": \"2025-03-13T11:02:26.869Z\"}, \"logicalSessionTimeoutMinutes\": 30, \"connectionId\": 13188, \"maxWireVersion\": 25, \"ok\": 1.0}", "message": "Server heartbeat succeeded"}
2025-03-13 16:02:26,829 - pymongo.topology - DEBUG - {"topologyId": {"$oid": "67d2baa1340f36047cab3031"}, "driverConnectionId": 1, "serverConnectionId": 13188, "serverHost": "3.144.134.141", "serverPort": 27017, "awaited": true, "message": "Server heartbeat started"}
2025-03-13 16:02:36,830 - pymongo.topology - DEBUG - {"topologyId": {"$oid": "67d2baa1340f36047cab3031"}, "driverConnectionId": 1, "serverConnectionId": 13188, "serverHost": "3.144.134.141", "serverPort": 27017, "awaited": true, "durationMS": 10000.0, "reply": "{\"isWritablePrimary\": true, \"topologyVersion\": {\"processId\": {\"$oid\": \"67b7e5814f77c1a87c56d054\"}}, \"maxBsonObjectSize\": 16777216, \"maxMessageSizeBytes\": 48000000, \"maxWriteBatchSize\": 100000, \"localTime\": {\"$date\": \"2025-03-13T11:02:36.869Z\"}, \"logicalSessionTimeoutMinutes\": 30, \"connectionId\": 13188, \"maxWireVersion\": 25, \"ok\": 1.0}", "message": "Server heartbeat succeeded"}
2025-03-13 16:02:36,830 - pymongo.topology - DEBUG - {"topologyId": {"$oid": "67d2baa1340f36047cab3031"}, "driverConnectionId": 1, "serverConnectionId": 13188, "serverHost": "3.144.134.141", "serverPort": 27017, "awaited": true, "message": "Server heartbeat started"}
2025-03-13 16:02:46,828 - pymongo.topology - DEBUG - {"topologyId": {"$oid": "67d2baa1340f36047cab3031"}, "driverConnectionId": 1, "serverConnectionId": 13188, "serverHost": "3.144.134.141", "serverPort": 27017, "awaited": true, "durationMS": 10000.0, "reply": "{\"isWritablePrimary\": true, \"topologyVersion\": {\"processId\": {\"$oid\": \"67b7e5814f77c1a87c56d054\"}}, \"maxBsonObjectSize\": 16777216, \"maxMessageSizeBytes\": 48000000, \"maxWriteBatchSize\": 100000, \"localTime\": {\"$date\": \"2025-03-13T11:02:46.869Z\"}, \"logicalSessionTimeoutMinutes\": 30, \"connectionId\": 13188, \"maxWireVersion\": 25, \"ok\": 1.0}", "message": "Server heartbeat succeeded"}
2025-03-13 16:02:46,829 - pymongo.topology - DEBUG - {"topologyId": {"$oid": "67d2baa1340f36047cab3031"}, "driverConnectionId": 1, "serverConnectionId": 13188, "serverHost": "3.144.134.141", "serverPort": 27017, "awaited": true, "message": "Server heartbeat started"}
2025-03-13 16:02:56,830 - pymongo.topology - DEBUG - {"topologyId": {"$oid": "67d2baa1340f36047cab3031"}, "driverConnectionId": 1, "serverConnectionId": 13188, "serverHost": "3.144.134.141", "serverPort": 27017, "awaited": true, "durationMS": 10000.0, "reply": "{\"isWritablePrimary\": true, \"topologyVersion\": {\"processId\": {\"$oid\": \"67b7e5814f77c1a87c56d054\"}}, \"maxBsonObjectSize\": 16777216, \"maxMessageSizeBytes\": 48000000, \"maxWriteBatchSize\": 100000, \"localTime\": {\"$date\": \"2025-03-13T11:02:56.871Z\"}, \"logicalSessionTimeoutMinutes\": 30, \"connectionId\": 13188, \"maxWireVersion\": 25, \"ok\": 1.0}", "message": "Server heartbeat succeeded"}
2025-03-13 16:02:56,831 - pymongo.topology - DEBUG - {"topologyId": {"$oid": "67d2baa1340f36047cab3031"}, "driverConnectionId": 1, "serverConnectionId": 13188, "serverHost": "3.144.134.141", "serverPort": 27017, "awaited": true, "message": "Server heartbeat started"}
2025-03-13 16:03:05,978 - numexpr.utils - INFO - Note: NumExpr detected 12 cores but "NUMEXPR_MAX_THREADS" not set, so enforcing safe limit of 8.
2025-03-13 16:03:05,979 - numexpr.utils - INFO - NumExpr defaulting to 8 threads.
2025-03-13 16:03:07,286 - matplotlib - DEBUG - matplotlib data path: C:\Users\msameerakram\AppData\Local\anaconda3\Lib\site-packages\matplotlib\mpl-data
2025-03-13 16:03:07,291 - matplotlib - DEBUG - CONFIGDIR=C:\Users\msameerakram\.matplotlib
2025-03-13 16:03:07,292 - matplotlib - DEBUG - interactive is False
2025-03-13 16:03:07,293 - matplotlib - DEBUG - platform is win32
2025-03-13 16:03:07,350 - matplotlib - DEBUG - CACHEDIR=C:\Users\msameerakram\.matplotlib
2025-03-13 16:03:07,354 - matplotlib.font_manager - DEBUG - Using fontManager instance from C:\Users\msameerakram\.matplotlib\fontlist-v390.json
2025-03-13 16:03:09,898 - numexpr.utils - INFO - Note: NumExpr detected 12 cores but "NUMEXPR_MAX_THREADS" not set, so enforcing safe limit of 8.
2025-03-13 16:03:09,898 - numexpr.utils - INFO - NumExpr defaulting to 8 threads.
2025-03-13 16:03:11,069 - matplotlib - DEBUG - matplotlib data path: C:\Users\msameerakram\AppData\Local\anaconda3\Lib\site-packages\matplotlib\mpl-data
2025-03-13 16:03:11,074 - matplotlib - DEBUG - CONFIGDIR=C:\Users\msameerakram\.matplotlib
2025-03-13 16:03:11,075 - matplotlib - DEBUG - interactive is False
2025-03-13 16:03:11,076 - matplotlib - DEBUG - platform is win32
2025-03-13 16:03:11,131 - matplotlib - DEBUG - CACHEDIR=C:\Users\msameerakram\.matplotlib
2025-03-13 16:03:11,135 - matplotlib.font_manager - DEBUG - Using fontManager instance from C:\Users\msameerakram\.matplotlib\fontlist-v390.json
2025-03-13 16:03:12,452 - asyncio - DEBUG - Using selector: SelectSelector
2025-03-13 16:03:12,487 - pymongo.topology - DEBUG - {"topologyId": {"$oid": "67d2bb7086638777c8b98a1a"}, "message": "Starting topology monitoring"}
2025-03-13 16:03:12,487 - pymongo.topology - DEBUG - {"topologyId": {"$oid": "67d2bb7086638777c8b98a1a"}, "previousDescription": "<TopologyDescription id: 67d2bb7086638777c8b98a1a, topology_type: Unknown, servers: []>", "newDescription": "<TopologyDescription id: 67d2bb7086638777c8b98a1a, topology_type: Unknown, servers: [<ServerDescription ('3.144.134.141', 27017) server_type: Unknown, rtt: None>]>", "message": "Topology description changed"}
2025-03-13 16:03:12,488 - pymongo.topology - DEBUG - {"topologyId": {"$oid": "67d2bb7086638777c8b98a1a"}, "serverHost": "3.144.134.141", "serverPort": 27017, "message": "Starting server monitoring"}
2025-03-13 16:03:12,490 - pymongo.connection - DEBUG - {"clientId": {"$oid": "67d2bb7086638777c8b98a1a"}, "message": "Connection pool created", "serverHost": "3.144.134.141", "serverPort": 27017}
2025-03-13 16:03:12,491 - pymongo.serverSelection - DEBUG - {"message": "Server selection started", "selector": "Primary()", "operation": "ping", "topologyDescription": "<TopologyDescription id: 67d2bb7086638777c8b98a1a, topology_type: Unknown, servers: [<ServerDescription ('3.144.134.141', 27017) server_type: Unknown, rtt: None>]>", "clientId": {"$oid": "67d2bb7086638777c8b98a1a"}}
2025-03-13 16:03:12,491 - pymongo.serverSelection - DEBUG - {"message": "Waiting for suitable server to become available", "selector": "Primary()", "operation": "ping", "topologyDescription": "<TopologyDescription id: 67d2bb7086638777c8b98a1a, topology_type: Unknown, servers: [<ServerDescription ('3.144.134.141', 27017) server_type: Unknown, rtt: None>]>", "clientId": {"$oid": "67d2bb7086638777c8b98a1a"}, "remainingTimeMS": 30}
2025-03-13 16:03:12,739 - pymongo.topology - DEBUG - {"topologyId": {"$oid": "67d2bb7086638777c8b98a1a"}, "driverConnectionId": 1, "serverHost": "3.144.134.141", "serverPort": 27017, "awaited": false, "message": "Server heartbeat started"}
2025-03-13 16:03:12,989 - pymongo.topology - DEBUG - {"topologyId": {"$oid": "67d2bb7086638777c8b98a1a"}, "driverConnectionId": 1, "serverConnectionId": 13191, "serverHost": "3.144.134.141", "serverPort": 27017, "awaited": false, "durationMS": 250.0, "reply": "{\"helloOk\": true, \"ismaster\": true, \"topologyVersion\": {\"processId\": {\"$oid\": \"67b7e5814f77c1a87c56d054\"}}, \"maxBsonObjectSize\": 16777216, \"maxMessageSizeBytes\": 48000000, \"maxWriteBatchSize\": 100000, \"localTime\": {\"$date\": \"2025-03-13T11:03:13.029Z\"}, \"logicalSessionTimeoutMinutes\": 30, \"connectionId\": 13191, \"maxWireVersion\": 25, \"ok\": 1.0}", "message": "Server heartbeat succeeded"}
2025-03-13 16:03:12,989 - pymongo.connection - DEBUG - {"clientId": {"$oid": "67d2bb7086638777c8b98a1a"}, "message": "Connection pool ready", "serverHost": "3.144.134.141", "serverPort": 27017}
2025-03-13 16:03:12,989 - pymongo.topology - DEBUG - {"topologyId": {"$oid": "67d2bb7086638777c8b98a1a"}, "previousDescription": "<TopologyDescription id: 67d2bb7086638777c8b98a1a, topology_type: Unknown, servers: [<ServerDescription ('3.144.134.141', 27017) server_type: Unknown, rtt: None>]>", "newDescription": "<TopologyDescription id: 67d2bb7086638777c8b98a1a, topology_type: Single, servers: [<ServerDescription ('3.144.134.141', 27017) server_type: Standalone, rtt: 0.25>]>", "message": "Topology description changed"}
2025-03-13 16:03:12,991 - pymongo.serverSelection - DEBUG - {"message": "Server selection succeeded", "selector": "Primary()", "operation": "ping", "topologyDescription": "<TopologyDescription id: 67d2bb7086638777c8b98a1a, topology_type: Single, servers: [<ServerDescription ('3.144.134.141', 27017) server_type: Standalone, rtt: 0.25>]>", "clientId": {"$oid": "67d2bb7086638777c8b98a1a"}, "serverHost": "3.144.134.141", "serverPort": 27017}
2025-03-13 16:03:12,992 - pymongo.connection - DEBUG - {"clientId": {"$oid": "67d2bb7086638777c8b98a1a"}, "message": "Connection checkout started", "serverHost": "3.144.134.141", "serverPort": 27017}
2025-03-13 16:03:12,992 - pymongo.topology - DEBUG - {"topologyId": {"$oid": "67d2bb7086638777c8b98a1a"}, "driverConnectionId": 1, "serverConnectionId": 13191, "serverHost": "3.144.134.141", "serverPort": 27017, "awaited": true, "message": "Server heartbeat started"}
2025-03-13 16:03:12,993 - pymongo.connection - DEBUG - {"clientId": {"$oid": "67d2bb7086638777c8b98a1a"}, "message": "Connection created", "serverHost": "3.144.134.141", "serverPort": 27017, "driverConnectionId": 1}
2025-03-13 16:03:13,735 - pymongo.connection - DEBUG - {"clientId": {"$oid": "67d2bb7086638777c8b98a1a"}, "message": "Connection ready", "serverHost": "3.144.134.141", "serverPort": 27017, "driverConnectionId": 1, "durationMS": 0.5}
2025-03-13 16:03:13,735 - pymongo.connection - DEBUG - {"clientId": {"$oid": "67d2bb7086638777c8b98a1a"}, "message": "Connection checked out", "serverHost": "3.144.134.141", "serverPort": 27017, "driverConnectionId": 1, "durationMS": 0.7340000000003783}
2025-03-13 16:03:13,735 - pymongo.command - DEBUG - {"clientId": {"$oid": "67d2bb7086638777c8b98a1a"}, "message": "Command started", "command": "{\"ping\": 1, \"lsid\": {\"id\": {\"$binary\": {\"base64\": \"Wykp/0EgQV+7dJVI1qQ0wA==\", \"subType\": \"04\"}}}, \"$db\": \"opal_server\"}", "commandName": "ping", "databaseName": "opal_server", "requestId": 6334, "operationId": 6334, "driverConnectionId": 1, "serverConnectionId": 13192, "serverHost": "3.144.134.141", "serverPort": 27017}
2025-03-13 16:03:13,979 - pymongo.command - DEBUG - {"clientId": {"$oid": "67d2bb7086638777c8b98a1a"}, "message": "Command succeeded", "durationMS": 244.392, "reply": "{\"ok\": 1.0}", "commandName": "ping", "databaseName": "opal_server", "requestId": 6334, "operationId": 6334, "driverConnectionId": 1, "serverConnectionId": 13192, "serverHost": "3.144.134.141", "serverPort": 27017}
2025-03-13 16:03:13,979 - pymongo.connection - DEBUG - {"clientId": {"$oid": "67d2bb7086638777c8b98a1a"}, "message": "Connection checked in", "serverHost": "3.144.134.141", "serverPort": 27017, "driverConnectionId": 1}
2025-03-13 16:03:15,319 - app.services.predictive_analytics - INFO - Starting driver risk prediction for last 3 days
2025-03-13 16:03:15,319 - app.db.repositories.data_repository - INFO - Fetching driver risk data for past 3 days
2025-03-13 16:03:15,319 - app.db.repositories.data_repository - DEBUG - Executing pipeline: [{'$match': {'event_time': {'$gte': datetime.datetime(2025, 3, 10, 16, 3, 15, 319773)}}}, {'$group': {'_id': '$driver_uuid', 'name': {'$first': '$driver_name'}, 'violation_count': {'$sum': 1}, 'violation_types': {'$addToSet': '$violation_type'}, 'avg_severity': {'$avg': {'$switch': {'branches': [{'case': {'$eq': ['$severity', 'HIGH']}, 'then': 3}, {'case': {'$eq': ['$severity', 'MEDIUM']}, 'then': 2}], 'default': 1}}}, 'last_violation': {'$max': '$event_time'}, 'max_speed': {'$max': '$telemetry.speed'}, 'vehicle_license': {'$first': '$vehicle_license'}}}, {'$sort': {'violation_count': -1}}]
2025-03-13 16:03:15,320 - pymongo.serverSelection - DEBUG - {"message": "Server selection started", "selector": "Primary()", "operation": "aggregate", "topologyDescription": "<TopologyDescription id: 67d2bb7086638777c8b98a1a, topology_type: Single, servers: [<ServerDescription ('3.144.134.141', 27017) server_type: Standalone, rtt: 0.25>]>", "clientId": {"$oid": "67d2bb7086638777c8b98a1a"}}
2025-03-13 16:03:15,321 - pymongo.serverSelection - DEBUG - {"message": "Server selection succeeded", "selector": "Primary()", "operation": "aggregate", "topologyDescription": "<TopologyDescription id: 67d2bb7086638777c8b98a1a, topology_type: Single, servers: [<ServerDescription ('3.144.134.141', 27017) server_type: Standalone, rtt: 0.25>]>", "clientId": {"$oid": "67d2bb7086638777c8b98a1a"}, "serverHost": "3.144.134.141", "serverPort": 27017}
2025-03-13 16:03:15,321 - pymongo.connection - DEBUG - {"clientId": {"$oid": "67d2bb7086638777c8b98a1a"}, "message": "Connection checkout started", "serverHost": "3.144.134.141", "serverPort": 27017}
2025-03-13 16:03:15,322 - pymongo.connection - DEBUG - {"clientId": {"$oid": "67d2bb7086638777c8b98a1a"}, "message": "Connection checked out", "serverHost": "3.144.134.141", "serverPort": 27017, "driverConnectionId": 1, "durationMS": 0.0}
2025-03-13 16:03:15,322 - pymongo.command - DEBUG - {"clientId": {"$oid": "67d2bb7086638777c8b98a1a"}, "message": "Command started", "command": "{\"aggregate\": \"violations\", \"pipeline\": [{\"$match\": {\"event_time\": {\"$gte\": {\"$date\": \"2025-03-10T16:03:15.319Z\"}}}}, {\"$group\": {\"_id\": \"$driver_uuid\", \"name\": {\"$first\": \"$driver_name\"}, \"violation_count\": {\"$sum\": 1}, \"violation_types\": {\"$addToSet\": \"$violation_type\"}, \"avg_severity\": {\"$avg\": {\"$switch\": {\"branches\": [{\"case\": {\"$eq\": [\"$severity\", \"HIGH\"]}, \"then\": 3}, {\"case\": {\"$eq\": [\"$severity\", \"MEDIUM\"]}, \"then\": 2}], \"default\": 1}}}, \"last_violation\": {\"$max\": \"$event_time\"}, \"max_speed\": {\"$max\": \"$telemetry.speed\"}, \"vehicle_license\": {\"$first\": \"$vehicle_license\"}}}, {\"$sort\": {\"violation_count\": -1}}], \"lsid\": {\"id\": {\"$binary\": {\"base64\": \"Wykp/0EgQV+7dJVI1qQ0wA==\", \"subType\": \"04\"}}}, \"$db\": \"opal_server\"}", "commandName": "aggregate", "databaseName": "opal_server", "requestId": 26500, "operationId": 26500, "driverConnectionId": 1, "serverConnectionId": 13192, "serverHost": "3.144.134.141", "serverPort": 27017}
2025-03-13 16:03:15,824 - pymongo.command - DEBUG - {"clientId": {"$oid": "67d2bb7086638777c8b98a1a"}, "message": "Command succeeded", "durationMS": 502.016, "reply": "{\"cursor\": {\"firstBatch\": [{\"_id\": \"unknown\", \"name\": \"Unknown\", \"violation_count\": 960, \"violation_types\": [\"SPEED_LOW\", \"SPEED_HIGH\", \"SPEED_MEDIUM\"], \"avg_severity\": 1.9572916666666667, \"last_violation\": {\"$date\": \"2025-03-13T08:14:23.140Z\"}, \"vehicle_license\": \"860665050647824\"}, {\"_id\": \"7463170a-de85-4c5d-a77b-b506d939aca1\", \"name\": \"GUL ZAMAN #94378054\", \"violation_count\": 237, \"violation_types\": [\"SPEED_LOW\", \"SPEED_MEDIUM\"], \"avg_severity\": 1.59915611814346, \"last_violation\": {\"$date\": \"2025-03-13T06:31:35.314Z\"}, \"vehicle_license\": \"1075MR\"}, {\"_id\": \"3dd80f61-5ed1-4038-b3a8-5d2e37759893\", \"name\": \"DALER SINGH\", \"violation_count\": 237, \"violation_types\": [\"SPEED_LOW\", \"SPEED_MEDIUM\"], \"avg_severity\": 1.5485232067510548, \"last_violation\": {\"$date\": \"2025-03-11T15:04:20.407Z\"}, \"vehicle_license\": \"1313YD\"}, {\"_id\": \"10009164\", \"name\": \"Unknown\", \"violation_count\": 211, \"violation_types\": [\"SPEED_LOW\", \"SPEED_HIGH\", \"SPEED_MEDIUM\"], \"avg_severity\": 1.7109004739336493, \"last_viol...", "commandName": "aggregate", "databaseName": "opal_server", "requestId": 26500, "operationId": 26500, "driverConnectionId": 1, "serverConnectionId": 13192, "serverHost": "3.144.134.141", "serverPort": 27017}
2025-03-13 16:03:15,825 - pymongo.connection - DEBUG - {"clientId": {"$oid": "67d2bb7086638777c8b98a1a"}, "message": "Connection checked in", "serverHost": "3.144.134.141", "serverPort": 27017, "driverConnectionId": 1}
2025-03-13 16:03:15,826 - pymongo.serverSelection - DEBUG - {"message": "Server selection started", "selector": "<function any_server_selector at 0x00000176A2808720>", "operation": "getMore", "topologyDescription": "<TopologyDescription id: 67d2bb7086638777c8b98a1a, topology_type: Single, servers: [<ServerDescription ('3.144.134.141', 27017) server_type: Standalone, rtt: 0.25>]>", "clientId": {"$oid": "67d2bb7086638777c8b98a1a"}}
2025-03-13 16:03:15,826 - pymongo.serverSelection - DEBUG - {"message": "Server selection succeeded", "selector": "<function any_server_selector at 0x00000176A2808720>", "operation": "getMore", "topologyDescription": "<TopologyDescription id: 67d2bb7086638777c8b98a1a, topology_type: Single, servers: [<ServerDescription ('3.144.134.141', 27017) server_type: Standalone, rtt: 0.25>]>", "clientId": {"$oid": "67d2bb7086638777c8b98a1a"}, "serverHost": "3.144.134.141", "serverPort": 27017}
2025-03-13 16:03:15,827 - pymongo.connection - DEBUG - {"clientId": {"$oid": "67d2bb7086638777c8b98a1a"}, "message": "Connection checkout started", "serverHost": "3.144.134.141", "serverPort": 27017}
2025-03-13 16:03:15,827 - pymongo.connection - DEBUG - {"clientId": {"$oid": "67d2bb7086638777c8b98a1a"}, "message": "Connection checked out", "serverHost": "3.144.134.141", "serverPort": 27017, "driverConnectionId": 1, "durationMS": 0.0}
2025-03-13 16:03:15,828 - pymongo.command - DEBUG - {"clientId": {"$oid": "67d2bb7086638777c8b98a1a"}, "message": "Command started", "command": "{\"getMore\": 1779645931935382068, \"collection\": \"violations\", \"lsid\": {\"id\": {\"$binary\": {\"base64\": \"Wykp/0EgQV+7dJVI1qQ0wA==\", \"subType\": \"04\"}}}, \"$db\": \"opal_server\"}", "commandName": "getMore", "databaseName": "opal_server", "requestId": 19169, "operationId": 19169, "driverConnectionId": 1, "serverConnectionId": 13192, "serverHost": "3.144.134.141", "serverPort": 27017}
2025-03-13 16:03:16,070 - pymongo.command - DEBUG - {"clientId": {"$oid": "67d2bb7086638777c8b98a1a"}, "message": "Command succeeded", "durationMS": 242.29, "reply": "{\"cursor\": {\"nextBatch\": [{\"_id\": \"4596553\", \"name\": \"Unknown\", \"violation_count\": 1, \"violation_types\": [\"SPEED_HIGH\"], \"avg_severity\": 3.0, \"last_violation\": {\"$date\": \"2025-03-12T04:26:40.279Z\"}, \"vehicle_license\": \"860260057121187\"}, {\"_id\": \"4616917\", \"name\": \"Unknown\", \"violation_count\": 1, \"violation_types\": [\"SPEED_LOW\"], \"avg_severity\": 1.0, \"last_violation\": {\"$date\": \"2025-03-11T14:56:43.036Z\"}, \"vehicle_license\": \"860665050851988\"}], \"ns\": \"opal_server.violations\"}, \"ok\": 1.0}", "commandName": "getMore", "databaseName": "opal_server", "requestId": 19169, "operationId": 19169, "driverConnectionId": 1, "serverConnectionId": 13192, "serverHost": "3.144.134.141", "serverPort": 27017}
2025-03-13 16:03:16,071 - pymongo.connection - DEBUG - {"clientId": {"$oid": "67d2bb7086638777c8b98a1a"}, "message": "Connection checked in", "serverHost": "3.144.134.141", "serverPort": 27017, "driverConnectionId": 1}
2025-03-13 16:03:16,072 - app.db.repositories.data_repository - INFO - Retrieved stats for 103 drivers
2025-03-13 16:03:16,073 - app.services.predictive_analytics - INFO - Retrieved 103 driver records
2025-03-13 16:03:16,073 - app.services.predictive_analytics - INFO - Successfully processed 9 drivers
2025-03-13 16:03:23,242 - pymongo.topology - DEBUG - {"topologyId": {"$oid": "67d2bb7086638777c8b98a1a"}, "driverConnectionId": 1, "serverConnectionId": 13191, "serverHost": "3.144.134.141", "serverPort": 27017, "awaited": true, "durationMS": 10250.0, "reply": "{\"isWritablePrimary\": true, \"topologyVersion\": {\"processId\": {\"$oid\": \"67b7e5814f77c1a87c56d054\"}}, \"maxBsonObjectSize\": 16777216, \"maxMessageSizeBytes\": 48000000, \"maxWriteBatchSize\": 100000, \"localTime\": {\"$date\": \"2025-03-13T11:03:23.282Z\"}, \"logicalSessionTimeoutMinutes\": 30, \"connectionId\": 13191, \"maxWireVersion\": 25, \"ok\": 1.0}", "message": "Server heartbeat succeeded"}
2025-03-13 16:03:23,243 - pymongo.topology - DEBUG - {"topologyId": {"$oid": "67d2bb7086638777c8b98a1a"}, "driverConnectionId": 1, "serverConnectionId": 13191, "serverHost": "3.144.134.141", "serverPort": 27017, "awaited": true, "message": "Server heartbeat started"}
2025-03-13 16:03:33,244 - pymongo.topology - DEBUG - {"topologyId": {"$oid": "67d2bb7086638777c8b98a1a"}, "driverConnectionId": 1, "serverConnectionId": 13191, "serverHost": "3.144.134.141", "serverPort": 27017, "awaited": true, "durationMS": 10000.0, "reply": "{\"isWritablePrimary\": true, \"topologyVersion\": {\"processId\": {\"$oid\": \"67b7e5814f77c1a87c56d054\"}}, \"maxBsonObjectSize\": 16777216, \"maxMessageSizeBytes\": 48000000, \"maxWriteBatchSize\": 100000, \"localTime\": {\"$date\": \"2025-03-13T11:03:33.284Z\"}, \"logicalSessionTimeoutMinutes\": 30, \"connectionId\": 13191, \"maxWireVersion\": 25, \"ok\": 1.0}", "message": "Server heartbeat succeeded"}
2025-03-13 16:03:33,244 - pymongo.topology - DEBUG - {"topologyId": {"$oid": "67d2bb7086638777c8b98a1a"}, "driverConnectionId": 1, "serverConnectionId": 13191, "serverHost": "3.144.134.141", "serverPort": 27017, "awaited": true, "message": "Server heartbeat started"}
2025-03-13 16:03:43,246 - pymongo.topology - DEBUG - {"topologyId": {"$oid": "67d2bb7086638777c8b98a1a"}, "driverConnectionId": 1, "serverConnectionId": 13191, "serverHost": "3.144.134.141", "serverPort": 27017, "awaited": true, "durationMS": 10000.0, "reply": "{\"isWritablePrimary\": true, \"topologyVersion\": {\"processId\": {\"$oid\": \"67b7e5814f77c1a87c56d054\"}}, \"maxBsonObjectSize\": 16777216, \"maxMessageSizeBytes\": 48000000, \"maxWriteBatchSize\": 100000, \"localTime\": {\"$date\": \"2025-03-13T11:03:43.286Z\"}, \"logicalSessionTimeoutMinutes\": 30, \"connectionId\": 13191, \"maxWireVersion\": 25, \"ok\": 1.0}", "message": "Server heartbeat succeeded"}
2025-03-13 16:03:43,246 - pymongo.topology - DEBUG - {"topologyId": {"$oid": "67d2bb7086638777c8b98a1a"}, "driverConnectionId": 1, "serverConnectionId": 13191, "serverHost": "3.144.134.141", "serverPort": 27017, "awaited": true, "message": "Server heartbeat started"}
2025-03-13 16:03:53,245 - pymongo.topology - DEBUG - {"topologyId": {"$oid": "67d2bb7086638777c8b98a1a"}, "driverConnectionId": 1, "serverConnectionId": 13191, "serverHost": "3.144.134.141", "serverPort": 27017, "awaited": true, "durationMS": 10000.0, "reply": "{\"isWritablePrimary\": true, \"topologyVersion\": {\"processId\": {\"$oid\": \"67b7e5814f77c1a87c56d054\"}}, \"maxBsonObjectSize\": 16777216, \"maxMessageSizeBytes\": 48000000, \"maxWriteBatchSize\": 100000, \"localTime\": {\"$date\": \"2025-03-13T11:03:53.286Z\"}, \"logicalSessionTimeoutMinutes\": 30, \"connectionId\": 13191, \"maxWireVersion\": 25, \"ok\": 1.0}", "message": "Server heartbeat succeeded"}
2025-03-13 16:03:53,246 - pymongo.topology - DEBUG - {"topologyId": {"$oid": "67d2bb7086638777c8b98a1a"}, "driverConnectionId": 1, "serverConnectionId": 13191, "serverHost": "3.144.134.141", "serverPort": 27017, "awaited": true, "message": "Server heartbeat started"}
2025-03-13 16:04:03,246 - pymongo.topology - DEBUG - {"topologyId": {"$oid": "67d2bb7086638777c8b98a1a"}, "driverConnectionId": 1, "serverConnectionId": 13191, "serverHost": "3.144.134.141", "serverPort": 27017, "awaited": true, "durationMS": 10000.0, "reply": "{\"isWritablePrimary\": true, \"topologyVersion\": {\"processId\": {\"$oid\": \"67b7e5814f77c1a87c56d054\"}}, \"maxBsonObjectSize\": 16777216, \"maxMessageSizeBytes\": 48000000, \"maxWriteBatchSize\": 100000, \"localTime\": {\"$date\": \"2025-03-13T11:04:03.287Z\"}, \"logicalSessionTimeoutMinutes\": 30, \"connectionId\": 13191, \"maxWireVersion\": 25, \"ok\": 1.0}", "message": "Server heartbeat succeeded"}
2025-03-13 16:04:03,246 - pymongo.topology - DEBUG - {"topologyId": {"$oid": "67d2bb7086638777c8b98a1a"}, "driverConnectionId": 1, "serverConnectionId": 13191, "serverHost": "3.144.134.141", "serverPort": 27017, "awaited": true, "message": "Server heartbeat started"}
2025-03-13 16:04:13,350 - pymongo.topology - DEBUG - {"topologyId": {"$oid": "67d2bb7086638777c8b98a1a"}, "driverConnectionId": 1, "serverConnectionId": 13191, "serverHost": "3.144.134.141", "serverPort": 27017, "awaited": true, "durationMS": 10109.000000000378, "reply": "{\"isWritablePrimary\": true, \"topologyVersion\": {\"processId\": {\"$oid\": \"67b7e5814f77c1a87c56d054\"}}, \"maxBsonObjectSize\": 16777216, \"maxMessageSizeBytes\": 48000000, \"maxWriteBatchSize\": 100000, \"localTime\": {\"$date\": \"2025-03-13T11:04:13.291Z\"}, \"logicalSessionTimeoutMinutes\": 30, \"connectionId\": 13191, \"maxWireVersion\": 25, \"ok\": 1.0}", "message": "Server heartbeat succeeded"}
2025-03-13 16:04:13,351 - pymongo.topology - DEBUG - {"topologyId": {"$oid": "67d2bb7086638777c8b98a1a"}, "driverConnectionId": 1, "serverConnectionId": 13191, "serverHost": "3.144.134.141", "serverPort": 27017, "awaited": true, "message": "Server heartbeat started"}
2025-03-13 16:04:23,259 - pymongo.topology - DEBUG - {"topologyId": {"$oid": "67d2bb7086638777c8b98a1a"}, "driverConnectionId": 1, "serverConnectionId": 13191, "serverHost": "3.144.134.141", "serverPort": 27017, "awaited": true, "durationMS": 9906.999999999243, "reply": "{\"isWritablePrimary\": true, \"topologyVersion\": {\"processId\": {\"$oid\": \"67b7e5814f77c1a87c56d054\"}}, \"maxBsonObjectSize\": 16777216, \"maxMessageSizeBytes\": 48000000, \"maxWriteBatchSize\": 100000, \"localTime\": {\"$date\": \"2025-03-13T11:04:23.300Z\"}, \"logicalSessionTimeoutMinutes\": 30, \"connectionId\": 13191, \"maxWireVersion\": 25, \"ok\": 1.0}", "message": "Server heartbeat succeeded"}
2025-03-13 16:04:23,260 - pymongo.topology - DEBUG - {"topologyId": {"$oid": "67d2bb7086638777c8b98a1a"}, "driverConnectionId": 1, "serverConnectionId": 13191, "serverHost": "3.144.134.141", "serverPort": 27017, "awaited": true, "message": "Server heartbeat started"}
2025-03-13 16:04:33,270 - pymongo.topology - DEBUG - {"topologyId": {"$oid": "67d2bb7086638777c8b98a1a"}, "driverConnectionId": 1, "serverConnectionId": 13191, "serverHost": "3.144.134.141", "serverPort": 27017, "awaited": true, "durationMS": 10000.0, "reply": "{\"isWritablePrimary\": true, \"topologyVersion\": {\"processId\": {\"$oid\": \"67b7e5814f77c1a87c56d054\"}}, \"maxBsonObjectSize\": 16777216, \"maxMessageSizeBytes\": 48000000, \"maxWriteBatchSize\": 100000, \"localTime\": {\"$date\": \"2025-03-13T11:04:33.310Z\"}, \"logicalSessionTimeoutMinutes\": 30, \"connectionId\": 13191, \"maxWireVersion\": 25, \"ok\": 1.0}", "message": "Server heartbeat succeeded"}
2025-03-13 16:04:33,270 - pymongo.topology - DEBUG - {"topologyId": {"$oid": "67d2bb7086638777c8b98a1a"}, "driverConnectionId": 1, "serverConnectionId": 13191, "serverHost": "3.144.134.141", "serverPort": 27017, "awaited": true, "message": "Server heartbeat started"}
2025-03-13 16:04:43,269 - pymongo.topology - DEBUG - {"topologyId": {"$oid": "67d2bb7086638777c8b98a1a"}, "driverConnectionId": 1, "serverConnectionId": 13191, "serverHost": "3.144.134.141", "serverPort": 27017, "awaited": true, "durationMS": 10000.0, "reply": "{\"isWritablePrimary\": true, \"topologyVersion\": {\"processId\": {\"$oid\": \"67b7e5814f77c1a87c56d054\"}}, \"maxBsonObjectSize\": 16777216, \"maxMessageSizeBytes\": 48000000, \"maxWriteBatchSize\": 100000, \"localTime\": {\"$date\": \"2025-03-13T11:04:43.310Z\"}, \"logicalSessionTimeoutMinutes\": 30, \"connectionId\": 13191, \"maxWireVersion\": 25, \"ok\": 1.0}", "message": "Server heartbeat succeeded"}
2025-03-13 16:04:43,269 - pymongo.topology - DEBUG - {"topologyId": {"$oid": "67d2bb7086638777c8b98a1a"}, "driverConnectionId": 1, "serverConnectionId": 13191, "serverHost": "3.144.134.141", "serverPort": 27017, "awaited": true, "message": "Server heartbeat started"}
2025-03-13 16:04:53,269 - pymongo.topology - DEBUG - {"topologyId": {"$oid": "67d2bb7086638777c8b98a1a"}, "driverConnectionId": 1, "serverConnectionId": 13191, "serverHost": "3.144.134.141", "serverPort": 27017, "awaited": true, "durationMS": 10000.0, "reply": "{\"isWritablePrimary\": true, \"topologyVersion\": {\"processId\": {\"$oid\": \"67b7e5814f77c1a87c56d054\"}}, \"maxBsonObjectSize\": 16777216, \"maxMessageSizeBytes\": 48000000, \"maxWriteBatchSize\": 100000, \"localTime\": {\"$date\": \"2025-03-13T11:04:53.311Z\"}, \"logicalSessionTimeoutMinutes\": 30, \"connectionId\": 13191, \"maxWireVersion\": 25, \"ok\": 1.0}", "message": "Server heartbeat succeeded"}
2025-03-13 16:04:53,270 - pymongo.topology - DEBUG - {"topologyId": {"$oid": "67d2bb7086638777c8b98a1a"}, "driverConnectionId": 1, "serverConnectionId": 13191, "serverHost": "3.144.134.141", "serverPort": 27017, "awaited": true, "message": "Server heartbeat started"}
2025-03-13 16:05:03,270 - pymongo.topology - DEBUG - {"topologyId": {"$oid": "67d2bb7086638777c8b98a1a"}, "driverConnectionId": 1, "serverConnectionId": 13191, "serverHost": "3.144.134.141", "serverPort": 27017, "awaited": true, "durationMS": 10000.0, "reply": "{\"isWritablePrimary\": true, \"topologyVersion\": {\"processId\": {\"$oid\": \"67b7e5814f77c1a87c56d054\"}}, \"maxBsonObjectSize\": 16777216, \"maxMessageSizeBytes\": 48000000, \"maxWriteBatchSize\": 100000, \"localTime\": {\"$date\": \"2025-03-13T11:05:03.312Z\"}, \"logicalSessionTimeoutMinutes\": 30, \"connectionId\": 13191, \"maxWireVersion\": 25, \"ok\": 1.0}", "message": "Server heartbeat succeeded"}
2025-03-13 16:05:03,271 - pymongo.topology - DEBUG - {"topologyId": {"$oid": "67d2bb7086638777c8b98a1a"}, "driverConnectionId": 1, "serverConnectionId": 13191, "serverHost": "3.144.134.141", "serverPort": 27017, "awaited": true, "message": "Server heartbeat started"}
2025-03-13 16:05:13,271 - pymongo.topology - DEBUG - {"topologyId": {"$oid": "67d2bb7086638777c8b98a1a"}, "driverConnectionId": 1, "serverConnectionId": 13191, "serverHost": "3.144.134.141", "serverPort": 27017, "awaited": true, "durationMS": 9985.000000000582, "reply": "{\"isWritablePrimary\": true, \"topologyVersion\": {\"processId\": {\"$oid\": \"67b7e5814f77c1a87c56d054\"}}, \"maxBsonObjectSize\": 16777216, \"maxMessageSizeBytes\": 48000000, \"maxWriteBatchSize\": 100000, \"localTime\": {\"$date\": \"2025-03-13T11:05:13.313Z\"}, \"logicalSessionTimeoutMinutes\": 30, \"connectionId\": 13191, \"maxWireVersion\": 25, \"ok\": 1.0}", "message": "Server heartbeat succeeded"}
2025-03-13 16:05:13,273 - pymongo.topology - DEBUG - {"topologyId": {"$oid": "67d2bb7086638777c8b98a1a"}, "driverConnectionId": 1, "serverConnectionId": 13191, "serverHost": "3.144.134.141", "serverPort": 27017, "awaited": true, "message": "Server heartbeat started"}
2025-03-13 16:05:23,273 - pymongo.topology - DEBUG - {"topologyId": {"$oid": "67d2bb7086638777c8b98a1a"}, "driverConnectionId": 1, "serverConnectionId": 13191, "serverHost": "3.144.134.141", "serverPort": 27017, "awaited": true, "durationMS": 10000.0, "reply": "{\"isWritablePrimary\": true, \"topologyVersion\": {\"processId\": {\"$oid\": \"67b7e5814f77c1a87c56d054\"}}, \"maxBsonObjectSize\": 16777216, \"maxMessageSizeBytes\": 48000000, \"maxWriteBatchSize\": 100000, \"localTime\": {\"$date\": \"2025-03-13T11:05:23.314Z\"}, \"logicalSessionTimeoutMinutes\": 30, \"connectionId\": 13191, \"maxWireVersion\": 25, \"ok\": 1.0}", "message": "Server heartbeat succeeded"}
2025-03-13 16:05:23,274 - pymongo.topology - DEBUG - {"topologyId": {"$oid": "67d2bb7086638777c8b98a1a"}, "driverConnectionId": 1, "serverConnectionId": 13191, "serverHost": "3.144.134.141", "serverPort": 27017, "awaited": true, "message": "Server heartbeat started"}
2025-03-13 16:05:33,273 - pymongo.topology - DEBUG - {"topologyId": {"$oid": "67d2bb7086638777c8b98a1a"}, "driverConnectionId": 1, "serverConnectionId": 13191, "serverHost": "3.144.134.141", "serverPort": 27017, "awaited": true, "durationMS": 10000.0, "reply": "{\"isWritablePrimary\": true, \"topologyVersion\": {\"processId\": {\"$oid\": \"67b7e5814f77c1a87c56d054\"}}, \"maxBsonObjectSize\": 16777216, \"maxMessageSizeBytes\": 48000000, \"maxWriteBatchSize\": 100000, \"localTime\": {\"$date\": \"2025-03-13T11:05:33.315Z\"}, \"logicalSessionTimeoutMinutes\": 30, \"connectionId\": 13191, \"maxWireVersion\": 25, \"ok\": 1.0}", "message": "Server heartbeat succeeded"}
2025-03-13 16:05:33,275 - pymongo.topology - DEBUG - {"topologyId": {"$oid": "67d2bb7086638777c8b98a1a"}, "driverConnectionId": 1, "serverConnectionId": 13191, "serverHost": "3.144.134.141", "serverPort": 27017, "awaited": true, "message": "Server heartbeat started"}
2025-03-13 16:05:43,274 - pymongo.topology - DEBUG - {"topologyId": {"$oid": "67d2bb7086638777c8b98a1a"}, "driverConnectionId": 1, "serverConnectionId": 13191, "serverHost": "3.144.134.141", "serverPort": 27017, "awaited": true, "durationMS": 10000.0, "reply": "{\"isWritablePrimary\": true, \"topologyVersion\": {\"processId\": {\"$oid\": \"67b7e5814f77c1a87c56d054\"}}, \"maxBsonObjectSize\": 16777216, \"maxMessageSizeBytes\": 48000000, \"maxWriteBatchSize\": 100000, \"localTime\": {\"$date\": \"2025-03-13T11:05:43.316Z\"}, \"logicalSessionTimeoutMinutes\": 30, \"connectionId\": 13191, \"maxWireVersion\": 25, \"ok\": 1.0}", "message": "Server heartbeat succeeded"}
2025-03-13 16:05:43,275 - pymongo.topology - DEBUG - {"topologyId": {"$oid": "67d2bb7086638777c8b98a1a"}, "driverConnectionId": 1, "serverConnectionId": 13191, "serverHost": "3.144.134.141", "serverPort": 27017, "awaited": true, "message": "Server heartbeat started"}
2025-03-13 16:05:53,285 - pymongo.topology - DEBUG - {"topologyId": {"$oid": "67d2bb7086638777c8b98a1a"}, "driverConnectionId": 1, "serverConnectionId": 13191, "serverHost": "3.144.134.141", "serverPort": 27017, "awaited": true, "durationMS": 10000.0, "reply": "{\"isWritablePrimary\": true, \"topologyVersion\": {\"processId\": {\"$oid\": \"67b7e5814f77c1a87c56d054\"}}, \"maxBsonObjectSize\": 16777216, \"maxMessageSizeBytes\": 48000000, \"maxWriteBatchSize\": 100000, \"localTime\": {\"$date\": \"2025-03-13T11:05:53.317Z\"}, \"logicalSessionTimeoutMinutes\": 30, \"connectionId\": 13191, \"maxWireVersion\": 25, \"ok\": 1.0}", "message": "Server heartbeat succeeded"}
2025-03-13 16:05:53,286 - pymongo.topology - DEBUG - {"topologyId": {"$oid": "67d2bb7086638777c8b98a1a"}, "driverConnectionId": 1, "serverConnectionId": 13191, "serverHost": "3.144.134.141", "serverPort": 27017, "awaited": true, "message": "Server heartbeat started"}
2025-03-13 16:06:03,275 - pymongo.topology - DEBUG - {"topologyId": {"$oid": "67d2bb7086638777c8b98a1a"}, "driverConnectionId": 1, "serverConnectionId": 13191, "serverHost": "3.144.134.141", "serverPort": 27017, "awaited": true, "durationMS": 10000.0, "reply": "{\"isWritablePrimary\": true, \"topologyVersion\": {\"processId\": {\"$oid\": \"67b7e5814f77c1a87c56d054\"}}, \"maxBsonObjectSize\": 16777216, \"maxMessageSizeBytes\": 48000000, \"maxWriteBatchSize\": 100000, \"localTime\": {\"$date\": \"2025-03-13T11:06:03.318Z\"}, \"logicalSessionTimeoutMinutes\": 30, \"connectionId\": 13191, \"maxWireVersion\": 25, \"ok\": 1.0}", "message": "Server heartbeat succeeded"}
2025-03-13 16:06:03,277 - pymongo.topology - DEBUG - {"topologyId": {"$oid": "67d2bb7086638777c8b98a1a"}, "driverConnectionId": 1, "serverConnectionId": 13191, "serverHost": "3.144.134.141", "serverPort": 27017, "awaited": true, "message": "Server heartbeat started"}
2025-03-13 16:06:13,282 - pymongo.topology - DEBUG - {"topologyId": {"$oid": "67d2bb7086638777c8b98a1a"}, "driverConnectionId": 1, "serverConnectionId": 13191, "serverHost": "3.144.134.141", "serverPort": 27017, "awaited": true, "durationMS": 10000.0, "reply": "{\"isWritablePrimary\": true, \"topologyVersion\": {\"processId\": {\"$oid\": \"67b7e5814f77c1a87c56d054\"}}, \"maxBsonObjectSize\": 16777216, \"maxMessageSizeBytes\": 48000000, \"maxWriteBatchSize\": 100000, \"localTime\": {\"$date\": \"2025-03-13T11:06:13.324Z\"}, \"logicalSessionTimeoutMinutes\": 30, \"connectionId\": 13191, \"maxWireVersion\": 25, \"ok\": 1.0}", "message": "Server heartbeat succeeded"}
2025-03-13 16:06:13,283 - pymongo.topology - DEBUG - {"topologyId": {"$oid": "67d2bb7086638777c8b98a1a"}, "driverConnectionId": 1, "serverConnectionId": 13191, "serverHost": "3.144.134.141", "serverPort": 27017, "awaited": true, "message": "Server heartbeat started"}
2025-03-13 16:06:23,282 - pymongo.topology - DEBUG - {"topologyId": {"$oid": "67d2bb7086638777c8b98a1a"}, "driverConnectionId": 1, "serverConnectionId": 13191, "serverHost": "3.144.134.141", "serverPort": 27017, "awaited": true, "durationMS": 10000.0, "reply": "{\"isWritablePrimary\": true, \"topologyVersion\": {\"processId\": {\"$oid\": \"67b7e5814f77c1a87c56d054\"}}, \"maxBsonObjectSize\": 16777216, \"maxMessageSizeBytes\": 48000000, \"maxWriteBatchSize\": 100000, \"localTime\": {\"$date\": \"2025-03-13T11:06:23.324Z\"}, \"logicalSessionTimeoutMinutes\": 30, \"connectionId\": 13191, \"maxWireVersion\": 25, \"ok\": 1.0}", "message": "Server heartbeat succeeded"}
2025-03-13 16:06:23,283 - pymongo.topology - DEBUG - {"topologyId": {"$oid": "67d2bb7086638777c8b98a1a"}, "driverConnectionId": 1, "serverConnectionId": 13191, "serverHost": "3.144.134.141", "serverPort": 27017, "awaited": true, "message": "Server heartbeat started"}
2025-03-13 16:06:33,283 - pymongo.topology - DEBUG - {"topologyId": {"$oid": "67d2bb7086638777c8b98a1a"}, "driverConnectionId": 1, "serverConnectionId": 13191, "serverHost": "3.144.134.141", "serverPort": 27017, "awaited": true, "durationMS": 10000.0, "reply": "{\"isWritablePrimary\": true, \"topologyVersion\": {\"processId\": {\"$oid\": \"67b7e5814f77c1a87c56d054\"}}, \"maxBsonObjectSize\": 16777216, \"maxMessageSizeBytes\": 48000000, \"maxWriteBatchSize\": 100000, \"localTime\": {\"$date\": \"2025-03-13T11:06:33.326Z\"}, \"logicalSessionTimeoutMinutes\": 30, \"connectionId\": 13191, \"maxWireVersion\": 25, \"ok\": 1.0}", "message": "Server heartbeat succeeded"}
2025-03-13 16:06:33,284 - pymongo.topology - DEBUG - {"topologyId": {"$oid": "67d2bb7086638777c8b98a1a"}, "driverConnectionId": 1, "serverConnectionId": 13191, "serverHost": "3.144.134.141", "serverPort": 27017, "awaited": true, "message": "Server heartbeat started"}
2025-03-13 16:06:43,284 - pymongo.topology - DEBUG - {"topologyId": {"$oid": "67d2bb7086638777c8b98a1a"}, "driverConnectionId": 1, "serverConnectionId": 13191, "serverHost": "3.144.134.141", "serverPort": 27017, "awaited": true, "durationMS": 10000.0, "reply": "{\"isWritablePrimary\": true, \"topologyVersion\": {\"processId\": {\"$oid\": \"67b7e5814f77c1a87c56d054\"}}, \"maxBsonObjectSize\": 16777216, \"maxMessageSizeBytes\": 48000000, \"maxWriteBatchSize\": 100000, \"localTime\": {\"$date\": \"2025-03-13T11:06:43.326Z\"}, \"logicalSessionTimeoutMinutes\": 30, \"connectionId\": 13191, \"maxWireVersion\": 25, \"ok\": 1.0}", "message": "Server heartbeat succeeded"}
2025-03-13 16:06:43,284 - pymongo.topology - DEBUG - {"topologyId": {"$oid": "67d2bb7086638777c8b98a1a"}, "driverConnectionId": 1, "serverConnectionId": 13191, "serverHost": "3.144.134.141", "serverPort": 27017, "awaited": true, "message": "Server heartbeat started"}
2025-03-13 16:06:53,284 - pymongo.topology - DEBUG - {"topologyId": {"$oid": "67d2bb7086638777c8b98a1a"}, "driverConnectionId": 1, "serverConnectionId": 13191, "serverHost": "3.144.134.141", "serverPort": 27017, "awaited": true, "durationMS": 10000.0, "reply": "{\"isWritablePrimary\": true, \"topologyVersion\": {\"processId\": {\"$oid\": \"67b7e5814f77c1a87c56d054\"}}, \"maxBsonObjectSize\": 16777216, \"maxMessageSizeBytes\": 48000000, \"maxWriteBatchSize\": 100000, \"localTime\": {\"$date\": \"2025-03-13T11:06:53.326Z\"}, \"logicalSessionTimeoutMinutes\": 30, \"connectionId\": 13191, \"maxWireVersion\": 25, \"ok\": 1.0}", "message": "Server heartbeat succeeded"}
2025-03-13 16:06:53,285 - pymongo.topology - DEBUG - {"topologyId": {"$oid": "67d2bb7086638777c8b98a1a"}, "driverConnectionId": 1, "serverConnectionId": 13191, "serverHost": "3.144.134.141", "serverPort": 27017, "awaited": true, "message": "Server heartbeat started"}
2025-03-13 16:08:19,769 - numexpr.utils - INFO - Note: NumExpr detected 12 cores but "NUMEXPR_MAX_THREADS" not set, so enforcing safe limit of 8.
2025-03-13 16:08:19,770 - numexpr.utils - INFO - NumExpr defaulting to 8 threads.
2025-03-13 16:08:20,957 - matplotlib - DEBUG - matplotlib data path: C:\Users\msameerakram\AppData\Local\anaconda3\Lib\site-packages\matplotlib\mpl-data
2025-03-13 16:08:20,963 - matplotlib - DEBUG - CONFIGDIR=C:\Users\msameerakram\.matplotlib
2025-03-13 16:08:20,964 - matplotlib - DEBUG - interactive is False
2025-03-13 16:08:20,964 - matplotlib - DEBUG - platform is win32
2025-03-13 16:08:21,020 - matplotlib - DEBUG - CACHEDIR=C:\Users\msameerakram\.matplotlib
2025-03-13 16:08:21,023 - matplotlib.font_manager - DEBUG - Using fontManager instance from C:\Users\msameerakram\.matplotlib\fontlist-v390.json
2025-03-13 16:08:23,347 - numexpr.utils - INFO - Note: NumExpr detected 12 cores but "NUMEXPR_MAX_THREADS" not set, so enforcing safe limit of 8.
2025-03-13 16:08:23,348 - numexpr.utils - INFO - NumExpr defaulting to 8 threads.
2025-03-13 16:08:24,526 - matplotlib - DEBUG - matplotlib data path: C:\Users\msameerakram\AppData\Local\anaconda3\Lib\site-packages\matplotlib\mpl-data
2025-03-13 16:08:24,535 - matplotlib - DEBUG - CONFIGDIR=C:\Users\msameerakram\.matplotlib
2025-03-13 16:08:24,538 - matplotlib - DEBUG - interactive is False
2025-03-13 16:08:24,538 - matplotlib - DEBUG - platform is win32
2025-03-13 16:08:24,604 - matplotlib - DEBUG - CACHEDIR=C:\Users\msameerakram\.matplotlib
2025-03-13 16:08:24,608 - matplotlib.font_manager - DEBUG - Using fontManager instance from C:\Users\msameerakram\.matplotlib\fontlist-v390.json
2025-03-13 16:08:25,857 - asyncio - DEBUG - Using selector: SelectSelector
2025-03-13 16:08:25,895 - pymongo.topology - DEBUG - {"topologyId": {"$oid": "67d2bca9f6cf3fab2fadc1b3"}, "message": "Starting topology monitoring"}
2025-03-13 16:08:25,895 - pymongo.topology - DEBUG - {"topologyId": {"$oid": "67d2bca9f6cf3fab2fadc1b3"}, "previousDescription": "<TopologyDescription id: 67d2bca9f6cf3fab2fadc1b3, topology_type: Unknown, servers: []>", "newDescription": "<TopologyDescription id: 67d2bca9f6cf3fab2fadc1b3, topology_type: Unknown, servers: [<ServerDescription ('3.144.134.141', 27017) server_type: Unknown, rtt: None>]>", "message": "Topology description changed"}
2025-03-13 16:08:25,895 - pymongo.topology - DEBUG - {"topologyId": {"$oid": "67d2bca9f6cf3fab2fadc1b3"}, "serverHost": "3.144.134.141", "serverPort": 27017, "message": "Starting server monitoring"}
2025-03-13 16:08:25,897 - pymongo.connection - DEBUG - {"clientId": {"$oid": "67d2bca9f6cf3fab2fadc1b3"}, "message": "Connection pool created", "serverHost": "3.144.134.141", "serverPort": 27017}
2025-03-13 16:08:25,898 - pymongo.serverSelection - DEBUG - {"message": "Server selection started", "selector": "Primary()", "operation": "ping", "topologyDescription": "<TopologyDescription id: 67d2bca9f6cf3fab2fadc1b3, topology_type: Unknown, servers: [<ServerDescription ('3.144.134.141', 27017) server_type: Unknown, rtt: None>]>", "clientId": {"$oid": "67d2bca9f6cf3fab2fadc1b3"}}
2025-03-13 16:08:25,899 - pymongo.serverSelection - DEBUG - {"message": "Waiting for suitable server to become available", "selector": "Primary()", "operation": "ping", "topologyDescription": "<TopologyDescription id: 67d2bca9f6cf3fab2fadc1b3, topology_type: Unknown, servers: [<ServerDescription ('3.144.134.141', 27017) server_type: Unknown, rtt: None>]>", "clientId": {"$oid": "67d2bca9f6cf3fab2fadc1b3"}, "remainingTimeMS": 30}
2025-03-13 16:08:26,244 - pymongo.topology - DEBUG - {"topologyId": {"$oid": "67d2bca9f6cf3fab2fadc1b3"}, "driverConnectionId": 1, "serverHost": "3.144.134.141", "serverPort": 27017, "awaited": false, "message": "Server heartbeat started"}
2025-03-13 16:08:26,567 - pymongo.topology - DEBUG - {"topologyId": {"$oid": "67d2bca9f6cf3fab2fadc1b3"}, "driverConnectionId": 1, "serverConnectionId": 13194, "serverHost": "3.144.134.141", "serverPort": 27017, "awaited": false, "durationMS": 311.99999999989814, "reply": "{\"helloOk\": true, \"ismaster\": true, \"topologyVersion\": {\"processId\": {\"$oid\": \"67b7e5814f77c1a87c56d054\"}}, \"maxBsonObjectSize\": 16777216, \"maxMessageSizeBytes\": 48000000, \"maxWriteBatchSize\": 100000, \"localTime\": {\"$date\": \"2025-03-13T11:08:26.532Z\"}, \"logicalSessionTimeoutMinutes\": 30, \"connectionId\": 13194, \"maxWireVersion\": 25, \"ok\": 1.0}", "message": "Server heartbeat succeeded"}
2025-03-13 16:08:26,567 - pymongo.connection - DEBUG - {"clientId": {"$oid": "67d2bca9f6cf3fab2fadc1b3"}, "message": "Connection pool ready", "serverHost": "3.144.134.141", "serverPort": 27017}
2025-03-13 16:08:26,567 - pymongo.topology - DEBUG - {"topologyId": {"$oid": "67d2bca9f6cf3fab2fadc1b3"}, "previousDescription": "<TopologyDescription id: 67d2bca9f6cf3fab2fadc1b3, topology_type: Unknown, servers: [<ServerDescription ('3.144.134.141', 27017) server_type: Unknown, rtt: None>]>", "newDescription": "<TopologyDescription id: 67d2bca9f6cf3fab2fadc1b3, topology_type: Single, servers: [<ServerDescription ('3.144.134.141', 27017) server_type: Standalone, rtt: 0.31199999999989814>]>", "message": "Topology description changed"}
2025-03-13 16:08:26,567 - pymongo.serverSelection - DEBUG - {"message": "Server selection succeeded", "selector": "Primary()", "operation": "ping", "topologyDescription": "<TopologyDescription id: 67d2bca9f6cf3fab2fadc1b3, topology_type: Single, servers: [<ServerDescription ('3.144.134.141', 27017) server_type: Standalone, rtt: 0.31199999999989814>]>", "clientId": {"$oid": "67d2bca9f6cf3fab2fadc1b3"}, "serverHost": "3.144.134.141", "serverPort": 27017}
2025-03-13 16:08:26,569 - pymongo.topology - DEBUG - {"topologyId": {"$oid": "67d2bca9f6cf3fab2fadc1b3"}, "driverConnectionId": 1, "serverConnectionId": 13194, "serverHost": "3.144.134.141", "serverPort": 27017, "awaited": true, "message": "Server heartbeat started"}
2025-03-13 16:08:26,569 - pymongo.connection - DEBUG - {"clientId": {"$oid": "67d2bca9f6cf3fab2fadc1b3"}, "message": "Connection checkout started", "serverHost": "3.144.134.141", "serverPort": 27017}
2025-03-13 16:08:26,570 - pymongo.connection - DEBUG - {"clientId": {"$oid": "67d2bca9f6cf3fab2fadc1b3"}, "message": "Connection created", "serverHost": "3.144.134.141", "serverPort": 27017, "driverConnectionId": 1}
2025-03-13 16:08:27,555 - pymongo.connection - DEBUG - {"clientId": {"$oid": "67d2bca9f6cf3fab2fadc1b3"}, "message": "Connection ready", "serverHost": "3.144.134.141", "serverPort": 27017, "driverConnectionId": 1, "durationMS": 0.6560000000008586}
2025-03-13 16:08:27,555 - pymongo.connection - DEBUG - {"clientId": {"$oid": "67d2bca9f6cf3fab2fadc1b3"}, "message": "Connection checked out", "serverHost": "3.144.134.141", "serverPort": 27017, "driverConnectionId": 1, "durationMS": 0.9840000000003783}
2025-03-13 16:08:27,556 - pymongo.command - DEBUG - {"clientId": {"$oid": "67d2bca9f6cf3fab2fadc1b3"}, "message": "Command started", "command": "{\"ping\": 1, \"lsid\": {\"id\": {\"$binary\": {\"base64\": \"l3RH2HUkRm6GexaZW/ug7A==\", \"subType\": \"04\"}}}, \"$db\": \"opal_server\"}", "commandName": "ping", "databaseName": "opal_server", "requestId": 6334, "operationId": 6334, "driverConnectionId": 1, "serverConnectionId": 13196, "serverHost": "3.144.134.141", "serverPort": 27017}
2025-03-13 16:08:27,897 - pymongo.command - DEBUG - {"clientId": {"$oid": "67d2bca9f6cf3fab2fadc1b3"}, "message": "Command succeeded", "durationMS": 341.10699999999997, "reply": "{\"ok\": 1.0}", "commandName": "ping", "databaseName": "opal_server", "requestId": 6334, "operationId": 6334, "driverConnectionId": 1, "serverConnectionId": 13196, "serverHost": "3.144.134.141", "serverPort": 27017}
2025-03-13 16:08:27,897 - pymongo.connection - DEBUG - {"clientId": {"$oid": "67d2bca9f6cf3fab2fadc1b3"}, "message": "Connection checked in", "serverHost": "3.144.134.141", "serverPort": 27017, "driverConnectionId": 1}
2025-03-13 16:08:36,890 - pymongo.topology - DEBUG - {"topologyId": {"$oid": "67d2bca9f6cf3fab2fadc1b3"}, "driverConnectionId": 1, "serverConnectionId": 13194, "serverHost": "3.144.134.141", "serverPort": 27017, "awaited": true, "durationMS": 10313.000000000102, "reply": "{\"isWritablePrimary\": true, \"topologyVersion\": {\"processId\": {\"$oid\": \"67b7e5814f77c1a87c56d054\"}}, \"maxBsonObjectSize\": 16777216, \"maxMessageSizeBytes\": 48000000, \"maxWriteBatchSize\": 100000, \"localTime\": {\"$date\": \"2025-03-13T11:08:36.857Z\"}, \"logicalSessionTimeoutMinutes\": 30, \"connectionId\": 13194, \"maxWireVersion\": 25, \"ok\": 1.0}", "message": "Server heartbeat succeeded"}
2025-03-13 16:08:36,891 - pymongo.topology - DEBUG - {"topologyId": {"$oid": "67d2bca9f6cf3fab2fadc1b3"}, "driverConnectionId": 1, "serverConnectionId": 13194, "serverHost": "3.144.134.141", "serverPort": 27017, "awaited": true, "message": "Server heartbeat started"}
2025-03-13 16:08:46,861 - pymongo.topology - DEBUG - {"topologyId": {"$oid": "67d2bca9f6cf3fab2fadc1b3"}, "driverConnectionId": 1, "serverConnectionId": 13194, "serverHost": "3.144.134.141", "serverPort": 27017, "awaited": true, "durationMS": 9968.000000000757, "reply": "{\"isWritablePrimary\": true, \"topologyVersion\": {\"processId\": {\"$oid\": \"67b7e5814f77c1a87c56d054\"}}, \"maxBsonObjectSize\": 16777216, \"maxMessageSizeBytes\": 48000000, \"maxWriteBatchSize\": 100000, \"localTime\": {\"$date\": \"2025-03-13T11:08:46.859Z\"}, \"logicalSessionTimeoutMinutes\": 30, \"connectionId\": 13194, \"maxWireVersion\": 25, \"ok\": 1.0}", "message": "Server heartbeat succeeded"}
2025-03-13 16:08:46,862 - pymongo.topology - DEBUG - {"topologyId": {"$oid": "67d2bca9f6cf3fab2fadc1b3"}, "driverConnectionId": 1, "serverConnectionId": 13194, "serverHost": "3.144.134.141", "serverPort": 27017, "awaited": true, "message": "Server heartbeat started"}
2025-03-13 16:08:56,818 - pymongo.topology - DEBUG - {"topologyId": {"$oid": "67d2bca9f6cf3fab2fadc1b3"}, "driverConnectionId": 1, "serverConnectionId": 13194, "serverHost": "3.144.134.141", "serverPort": 27017, "awaited": true, "durationMS": 9952.99999999952, "reply": "{\"isWritablePrimary\": true, \"topologyVersion\": {\"processId\": {\"$oid\": \"67b7e5814f77c1a87c56d054\"}}, \"maxBsonObjectSize\": 16777216, \"maxMessageSizeBytes\": 48000000, \"maxWriteBatchSize\": 100000, \"localTime\": {\"$date\": \"2025-03-13T11:08:56.860Z\"}, \"logicalSessionTimeoutMinutes\": 30, \"connectionId\": 13194, \"maxWireVersion\": 25, \"ok\": 1.0}", "message": "Server heartbeat succeeded"}
2025-03-13 16:08:56,819 - pymongo.topology - DEBUG - {"topologyId": {"$oid": "67d2bca9f6cf3fab2fadc1b3"}, "driverConnectionId": 1, "serverConnectionId": 13194, "serverHost": "3.144.134.141", "serverPort": 27017, "awaited": true, "message": "Server heartbeat started"}
2025-03-13 16:09:06,818 - pymongo.topology - DEBUG - {"topologyId": {"$oid": "67d2bca9f6cf3fab2fadc1b3"}, "driverConnectionId": 1, "serverConnectionId": 13194, "serverHost": "3.144.134.141", "serverPort": 27017, "awaited": true, "durationMS": 10000.0, "reply": "{\"isWritablePrimary\": true, \"topologyVersion\": {\"processId\": {\"$oid\": \"67b7e5814f77c1a87c56d054\"}}, \"maxBsonObjectSize\": 16777216, \"maxMessageSizeBytes\": 48000000, \"maxWriteBatchSize\": 100000, \"localTime\": {\"$date\": \"2025-03-13T11:09:06.861Z\"}, \"logicalSessionTimeoutMinutes\": 30, \"connectionId\": 13194, \"maxWireVersion\": 25, \"ok\": 1.0}", "message": "Server heartbeat succeeded"}
2025-03-13 16:09:06,819 - pymongo.topology - DEBUG - {"topologyId": {"$oid": "67d2bca9f6cf3fab2fadc1b3"}, "driverConnectionId": 1, "serverConnectionId": 13194, "serverHost": "3.144.134.141", "serverPort": 27017, "awaited": true, "message": "Server heartbeat started"}
2025-03-13 16:09:49,548 - numexpr.utils - INFO - Note: NumExpr detected 12 cores but "NUMEXPR_MAX_THREADS" not set, so enforcing safe limit of 8.
2025-03-13 16:09:49,548 - numexpr.utils - INFO - NumExpr defaulting to 8 threads.
2025-03-13 16:09:50,697 - matplotlib - DEBUG - matplotlib data path: C:\Users\msameerakram\AppData\Local\anaconda3\Lib\site-packages\matplotlib\mpl-data
2025-03-13 16:09:50,702 - matplotlib - DEBUG - CONFIGDIR=C:\Users\msameerakram\.matplotlib
2025-03-13 16:09:50,704 - matplotlib - DEBUG - interactive is False
2025-03-13 16:09:50,704 - matplotlib - DEBUG - platform is win32
2025-03-13 16:09:50,767 - matplotlib - DEBUG - CACHEDIR=C:\Users\msameerakram\.matplotlib
2025-03-13 16:09:50,770 - matplotlib.font_manager - DEBUG - Using fontManager instance from C:\Users\msameerakram\.matplotlib\fontlist-v390.json
2025-03-13 16:09:53,038 - numexpr.utils - INFO - Note: NumExpr detected 12 cores but "NUMEXPR_MAX_THREADS" not set, so enforcing safe limit of 8.
2025-03-13 16:09:53,038 - numexpr.utils - INFO - NumExpr defaulting to 8 threads.
2025-03-13 16:09:54,225 - matplotlib - DEBUG - matplotlib data path: C:\Users\msameerakram\AppData\Local\anaconda3\Lib\site-packages\matplotlib\mpl-data
2025-03-13 16:09:54,230 - matplotlib - DEBUG - CONFIGDIR=C:\Users\msameerakram\.matplotlib
2025-03-13 16:09:54,231 - matplotlib - DEBUG - interactive is False
2025-03-13 16:09:54,231 - matplotlib - DEBUG - platform is win32
2025-03-13 16:09:54,291 - matplotlib - DEBUG - CACHEDIR=C:\Users\msameerakram\.matplotlib
2025-03-13 16:09:54,295 - matplotlib.font_manager - DEBUG - Using fontManager instance from C:\Users\msameerakram\.matplotlib\fontlist-v390.json
2025-03-13 16:09:55,560 - asyncio - DEBUG - Using selector: SelectSelector
2025-03-13 16:09:55,597 - pymongo.topology - DEBUG - {"topologyId": {"$oid": "67d2bd03625677637c6a1ee0"}, "message": "Starting topology monitoring"}
2025-03-13 16:09:55,597 - pymongo.topology - DEBUG - {"topologyId": {"$oid": "67d2bd03625677637c6a1ee0"}, "previousDescription": "<TopologyDescription id: 67d2bd03625677637c6a1ee0, topology_type: Unknown, servers: []>", "newDescription": "<TopologyDescription id: 67d2bd03625677637c6a1ee0, topology_type: Unknown, servers: [<ServerDescription ('3.144.134.141', 27017) server_type: Unknown, rtt: None>]>", "message": "Topology description changed"}
2025-03-13 16:09:55,598 - pymongo.topology - DEBUG - {"topologyId": {"$oid": "67d2bd03625677637c6a1ee0"}, "serverHost": "3.144.134.141", "serverPort": 27017, "message": "Starting server monitoring"}
2025-03-13 16:09:55,599 - pymongo.connection - DEBUG - {"clientId": {"$oid": "67d2bd03625677637c6a1ee0"}, "message": "Connection pool created", "serverHost": "3.144.134.141", "serverPort": 27017}
2025-03-13 16:09:55,600 - pymongo.serverSelection - DEBUG - {"message": "Server selection started", "selector": "Primary()", "operation": "ping", "topologyDescription": "<TopologyDescription id: 67d2bd03625677637c6a1ee0, topology_type: Unknown, servers: [<ServerDescription ('3.144.134.141', 27017) server_type: Unknown, rtt: None>]>", "clientId": {"$oid": "67d2bd03625677637c6a1ee0"}}
2025-03-13 16:09:55,600 - pymongo.serverSelection - DEBUG - {"message": "Waiting for suitable server to become available", "selector": "Primary()", "operation": "ping", "topologyDescription": "<TopologyDescription id: 67d2bd03625677637c6a1ee0, topology_type: Unknown, servers: [<ServerDescription ('3.144.134.141', 27017) server_type: Unknown, rtt: None>]>", "clientId": {"$oid": "67d2bd03625677637c6a1ee0"}, "remainingTimeMS": 30}
2025-03-13 16:09:55,857 - pymongo.topology - DEBUG - {"topologyId": {"$oid": "67d2bd03625677637c6a1ee0"}, "driverConnectionId": 1, "serverHost": "3.144.134.141", "serverPort": 27017, "awaited": false, "message": "Server heartbeat started"}
2025-03-13 16:09:56,105 - pymongo.topology - DEBUG - {"topologyId": {"$oid": "67d2bd03625677637c6a1ee0"}, "driverConnectionId": 1, "serverConnectionId": 13197, "serverHost": "3.144.134.141", "serverPort": 27017, "awaited": false, "durationMS": 250.0, "reply": "{\"helloOk\": true, \"ismaster\": true, \"topologyVersion\": {\"processId\": {\"$oid\": \"67b7e5814f77c1a87c56d054\"}}, \"maxBsonObjectSize\": 16777216, \"maxMessageSizeBytes\": 48000000, \"maxWriteBatchSize\": 100000, \"localTime\": {\"$date\": \"2025-03-13T11:09:56.146Z\"}, \"logicalSessionTimeoutMinutes\": 30, \"connectionId\": 13197, \"maxWireVersion\": 25, \"ok\": 1.0}", "message": "Server heartbeat succeeded"}
2025-03-13 16:09:56,106 - pymongo.connection - DEBUG - {"clientId": {"$oid": "67d2bd03625677637c6a1ee0"}, "message": "Connection pool ready", "serverHost": "3.144.134.141", "serverPort": 27017}
2025-03-13 16:09:56,106 - pymongo.topology - DEBUG - {"topologyId": {"$oid": "67d2bd03625677637c6a1ee0"}, "previousDescription": "<TopologyDescription id: 67d2bd03625677637c6a1ee0, topology_type: Unknown, servers: [<ServerDescription ('3.144.134.141', 27017) server_type: Unknown, rtt: None>]>", "newDescription": "<TopologyDescription id: 67d2bd03625677637c6a1ee0, topology_type: Single, servers: [<ServerDescription ('3.144.134.141', 27017) server_type: Standalone, rtt: 0.25>]>", "message": "Topology description changed"}
2025-03-13 16:09:56,107 - pymongo.serverSelection - DEBUG - {"message": "Server selection succeeded", "selector": "Primary()", "operation": "ping", "topologyDescription": "<TopologyDescription id: 67d2bd03625677637c6a1ee0, topology_type: Single, servers: [<ServerDescription ('3.144.134.141', 27017) server_type: Standalone, rtt: 0.25>]>", "clientId": {"$oid": "67d2bd03625677637c6a1ee0"}, "serverHost": "3.144.134.141", "serverPort": 27017}
2025-03-13 16:09:56,108 - pymongo.topology - DEBUG - {"topologyId": {"$oid": "67d2bd03625677637c6a1ee0"}, "driverConnectionId": 1, "serverConnectionId": 13197, "serverHost": "3.144.134.141", "serverPort": 27017, "awaited": true, "message": "Server heartbeat started"}
2025-03-13 16:09:56,108 - pymongo.connection - DEBUG - {"clientId": {"$oid": "67d2bd03625677637c6a1ee0"}, "message": "Connection checkout started", "serverHost": "3.144.134.141", "serverPort": 27017}
2025-03-13 16:09:56,109 - pymongo.connection - DEBUG - {"clientId": {"$oid": "67d2bd03625677637c6a1ee0"}, "message": "Connection created", "serverHost": "3.144.134.141", "serverPort": 27017, "driverConnectionId": 1}
2025-03-13 16:09:56,890 - pymongo.connection - DEBUG - {"clientId": {"$oid": "67d2bd03625677637c6a1ee0"}, "message": "Connection ready", "serverHost": "3.144.134.141", "serverPort": 27017, "driverConnectionId": 1, "durationMS": 0.5}
2025-03-13 16:09:56,890 - pymongo.connection - DEBUG - {"clientId": {"$oid": "67d2bd03625677637c6a1ee0"}, "message": "Connection checked out", "serverHost": "3.144.134.141", "serverPort": 27017, "driverConnectionId": 1, "durationMS": 0.7819999999992433}
2025-03-13 16:09:56,891 - pymongo.command - DEBUG - {"clientId": {"$oid": "67d2bd03625677637c6a1ee0"}, "message": "Command started", "command": "{\"ping\": 1, \"lsid\": {\"id\": {\"$binary\": {\"base64\": \"/bRirYZNTuWAQqwCJpNrPg==\", \"subType\": \"04\"}}}, \"$db\": \"opal_server\"}", "commandName": "ping", "databaseName": "opal_server", "requestId": 6334, "operationId": 6334, "driverConnectionId": 1, "serverConnectionId": 13199, "serverHost": "3.144.134.141", "serverPort": 27017}
2025-03-13 16:09:57,138 - pymongo.command - DEBUG - {"clientId": {"$oid": "67d2bd03625677637c6a1ee0"}, "message": "Command succeeded", "durationMS": 246.758, "reply": "{\"ok\": 1.0}", "commandName": "ping", "databaseName": "opal_server", "requestId": 6334, "operationId": 6334, "driverConnectionId": 1, "serverConnectionId": 13199, "serverHost": "3.144.134.141", "serverPort": 27017}
2025-03-13 16:09:57,139 - pymongo.connection - DEBUG - {"clientId": {"$oid": "67d2bd03625677637c6a1ee0"}, "message": "Connection checked in", "serverHost": "3.144.134.141", "serverPort": 27017, "driverConnectionId": 1}
2025-03-13 16:10:03,361 - app.db.repositories.data_repository - INFO - Fetching driver risk data for past 90 days
2025-03-13 16:10:03,361 - app.db.repositories.data_repository - DEBUG - Executing pipeline: [{'$match': {'event_time': {'$gte': datetime.datetime(2024, 12, 13, 16, 10, 3, 361577)}}}, {'$group': {'_id': '$driver_uuid', 'name': {'$first': '$driver_name'}, 'violation_count': {'$sum': 1}, 'violation_types': {'$addToSet': '$violation_type'}, 'avg_severity': {'$avg': {'$switch': {'branches': [{'case': {'$eq': ['$severity', 'HIGH']}, 'then': 3}, {'case': {'$eq': ['$severity', 'MEDIUM']}, 'then': 2}], 'default': 1}}}, 'last_violation': {'$max': '$event_time'}, 'max_speed': {'$max': '$telemetry.speed'}, 'vehicle_license': {'$first': '$vehicle_license'}}}, {'$sort': {'violation_count': -1}}]
2025-03-13 16:10:03,362 - pymongo.serverSelection - DEBUG - {"message": "Server selection started", "selector": "Primary()", "operation": "aggregate", "topologyDescription": "<TopologyDescription id: 67d2bd03625677637c6a1ee0, topology_type: Single, servers: [<ServerDescription ('3.144.134.141', 27017) server_type: Standalone, rtt: 0.25>]>", "clientId": {"$oid": "67d2bd03625677637c6a1ee0"}}
2025-03-13 16:10:03,362 - pymongo.serverSelection - DEBUG - {"message": "Server selection succeeded", "selector": "Primary()", "operation": "aggregate", "topologyDescription": "<TopologyDescription id: 67d2bd03625677637c6a1ee0, topology_type: Single, servers: [<ServerDescription ('3.144.134.141', 27017) server_type: Standalone, rtt: 0.25>]>", "clientId": {"$oid": "67d2bd03625677637c6a1ee0"}, "serverHost": "3.144.134.141", "serverPort": 27017}
2025-03-13 16:10:03,362 - pymongo.connection - DEBUG - {"clientId": {"$oid": "67d2bd03625677637c6a1ee0"}, "message": "Connection checkout started", "serverHost": "3.144.134.141", "serverPort": 27017}
2025-03-13 16:10:03,364 - pymongo.connection - DEBUG - {"clientId": {"$oid": "67d2bd03625677637c6a1ee0"}, "message": "Connection checked out", "serverHost": "3.144.134.141", "serverPort": 27017, "driverConnectionId": 1, "durationMS": 0.0}
2025-03-13 16:10:03,364 - pymongo.command - DEBUG - {"clientId": {"$oid": "67d2bd03625677637c6a1ee0"}, "message": "Command started", "command": "{\"aggregate\": \"violations\", \"pipeline\": [{\"$match\": {\"event_time\": {\"$gte\": {\"$date\": \"2024-12-13T16:10:03.361Z\"}}}}, {\"$group\": {\"_id\": \"$driver_uuid\", \"name\": {\"$first\": \"$driver_name\"}, \"violation_count\": {\"$sum\": 1}, \"violation_types\": {\"$addToSet\": \"$violation_type\"}, \"avg_severity\": {\"$avg\": {\"$switch\": {\"branches\": [{\"case\": {\"$eq\": [\"$severity\", \"HIGH\"]}, \"then\": 3}, {\"case\": {\"$eq\": [\"$severity\", \"MEDIUM\"]}, \"then\": 2}], \"default\": 1}}}, \"last_violation\": {\"$max\": \"$event_time\"}, \"max_speed\": {\"$max\": \"$telemetry.speed\"}, \"vehicle_license\": {\"$first\": \"$vehicle_license\"}}}, {\"$sort\": {\"violation_count\": -1}}], \"lsid\": {\"id\": {\"$binary\": {\"base64\": \"/bRirYZNTuWAQqwCJpNrPg==\", \"subType\": \"04\"}}}, \"$db\": \"opal_server\"}", "commandName": "aggregate", "databaseName": "opal_server", "requestId": 26500, "operationId": 26500, "driverConnectionId": 1, "serverConnectionId": 13199, "serverHost": "3.144.134.141", "serverPort": 27017}
2025-03-13 16:10:03,882 - pymongo.command - DEBUG - {"clientId": {"$oid": "67d2bd03625677637c6a1ee0"}, "message": "Command succeeded", "durationMS": 518.0369999999999, "reply": "{\"cursor\": {\"firstBatch\": [{\"_id\": \"unknown\", \"name\": \"Unknown\", \"violation_count\": 2893, \"violation_types\": [\"SPEED_MEDIUM\", \"SPEED_LOW\", \"SPEED_HIGH\"], \"avg_severity\": 1.9122018665744902, \"last_violation\": {\"$date\": \"2025-03-13T11:10:00.042Z\"}, \"vehicle_license\": \"860665050633931\"}, {\"_id\": \"7463170a-de85-4c5d-a77b-b506d939aca1\", \"name\": \"GUL ZAMAN #94378054\", \"violation_count\": 1069, \"violation_types\": [\"SPEED_LOW\", \"SPEED_MEDIUM\"], \"avg_severity\": 1.6417212347988774, \"last_violation\": {\"$date\": \"2025-03-13T06:31:35.314Z\"}, \"vehicle_license\": \"1075MR\"}, {\"_id\": \"fb6b6c56-18fd-4602-aa8d-10d95f46f3d5\", \"name\": \"AMIR 95957295\", \"violation_count\": 912, \"violation_types\": [\"SPEED_MEDIUM\", \"SPEED_LOW\", \"SPEED_HIGH\"], \"avg_severity\": 1.6524122807017543, \"last_violation\": {\"$date\": \"2025-03-13T05:15:10.937Z\"}, \"vehicle_license\": \"394YM\"}, {\"_id\": \"10009164\", \"name\": \"Unknown\", \"violation_count\": 611, \"violation_types\": [\"SPEED_MEDIUM\", \"SPEED_LOW\", \"SPEED_HIGH\"], \"avg_severity\": 1.739770867...", "commandName": "aggregate", "databaseName": "opal_server", "requestId": 26500, "operationId": 26500, "driverConnectionId": 1, "serverConnectionId": 13199, "serverHost": "3.144.134.141", "serverPort": 27017}
2025-03-13 16:10:03,883 - pymongo.connection - DEBUG - {"clientId": {"$oid": "67d2bd03625677637c6a1ee0"}, "message": "Connection checked in", "serverHost": "3.144.134.141", "serverPort": 27017, "driverConnectionId": 1}
2025-03-13 16:10:03,884 - pymongo.serverSelection - DEBUG - {"message": "Server selection started", "selector": "<function any_server_selector at 0x000001D1535D87C0>", "operation": "getMore", "topologyDescription": "<TopologyDescription id: 67d2bd03625677637c6a1ee0, topology_type: Single, servers: [<ServerDescription ('3.144.134.141', 27017) server_type: Standalone, rtt: 0.25>]>", "clientId": {"$oid": "67d2bd03625677637c6a1ee0"}}
2025-03-13 16:10:03,885 - pymongo.serverSelection - DEBUG - {"message": "Server selection succeeded", "selector": "<function any_server_selector at 0x000001D1535D87C0>", "operation": "getMore", "topologyDescription": "<TopologyDescription id: 67d2bd03625677637c6a1ee0, topology_type: Single, servers: [<ServerDescription ('3.144.134.141', 27017) server_type: Standalone, rtt: 0.25>]>", "clientId": {"$oid": "67d2bd03625677637c6a1ee0"}, "serverHost": "3.144.134.141", "serverPort": 27017}
2025-03-13 16:10:03,885 - pymongo.connection - DEBUG - {"clientId": {"$oid": "67d2bd03625677637c6a1ee0"}, "message": "Connection checkout started", "serverHost": "3.144.134.141", "serverPort": 27017}
2025-03-13 16:10:03,885 - pymongo.connection - DEBUG - {"clientId": {"$oid": "67d2bd03625677637c6a1ee0"}, "message": "Connection checked out", "serverHost": "3.144.134.141", "serverPort": 27017, "driverConnectionId": 1, "durationMS": 0.0}
2025-03-13 16:10:03,886 - pymongo.command - DEBUG - {"clientId": {"$oid": "67d2bd03625677637c6a1ee0"}, "message": "Command started", "command": "{\"getMore\": 2354034919261553435, \"collection\": \"violations\", \"lsid\": {\"id\": {\"$binary\": {\"base64\": \"/bRirYZNTuWAQqwCJpNrPg==\", \"subType\": \"04\"}}}, \"$db\": \"opal_server\"}", "commandName": "getMore", "databaseName": "opal_server", "requestId": 19169, "operationId": 19169, "driverConnectionId": 1, "serverConnectionId": 13199, "serverHost": "3.144.134.141", "serverPort": 27017}
2025-03-13 16:10:04,134 - pymongo.command - DEBUG - {"clientId": {"$oid": "67d2bd03625677637c6a1ee0"}, "message": "Command succeeded", "durationMS": 248.225, "reply": "{\"cursor\": {\"nextBatch\": [{\"_id\": \"13399349\", \"name\": \"Unknown\", \"violation_count\": 11, \"violation_types\": [\"SPEED_LOW\", \"SPEED_MEDIUM\"], \"avg_severity\": 1.2727272727272727, \"last_violation\": {\"$date\": \"2025-03-07T06:55:24.389Z\"}, \"vehicle_license\": \"860260056943300\"}, {\"_id\": \"13399355\", \"name\": \"Unknown\", \"violation_count\": 11, \"violation_types\": [\"SPEED_LOW\", \"SPEED_MEDIUM\"], \"avg_severity\": 1.0909090909090908, \"last_violation\": {\"$date\": \"2025-03-13T05:03:54.504Z\"}, \"vehicle_license\": \"860665050637015\"}, {\"_id\": \"4560106\", \"name\": \"Unknown\", \"violation_count\": 10, \"violation_types\": [\"SPEED_LOW\", \"SPEED_HIGH\"], \"avg_severity\": 2.0, \"last_violation\": {\"$date\": \"2025-03-13T05:32:15.017Z\"}, \"vehicle_license\": \"860665050871762\"}, {\"_id\": \"13394592\", \"name\": \"Unknown\", \"violation_count\": 10, \"violation_types\": [\"SPEED_MEDIUM\", \"SPEED_LOW\", \"SPEED_HIGH\"], \"avg_severity\": 1.9, \"last_violation\": {\"$date\": \"2025-03-12T17:25:12.679Z\"}, \"vehicle_license\": \"860260056970154\"}, {\"_id\": \"12689381...", "commandName": "getMore", "databaseName": "opal_server", "requestId": 19169, "operationId": 19169, "driverConnectionId": 1, "serverConnectionId": 13199, "serverHost": "3.144.134.141", "serverPort": 27017}
2025-03-13 16:10:04,135 - pymongo.connection - DEBUG - {"clientId": {"$oid": "67d2bd03625677637c6a1ee0"}, "message": "Connection checked in", "serverHost": "3.144.134.141", "serverPort": 27017, "driverConnectionId": 1}
2025-03-13 16:10:04,136 - app.db.repositories.data_repository - INFO - Retrieved stats for 126 drivers
2025-03-13 16:10:04,136 - app.services.predictive_analytics - ERROR - Error processing driver unknown: name 'self' is not defined
2025-03-13 16:10:04,137 - app.services.predictive_analytics - ERROR - Error processing driver 7463170a-de85-4c5d-a77b-b506d939aca1: name 'self' is not defined
2025-03-13 16:10:04,137 - app.services.predictive_analytics - ERROR - Error processing driver fb6b6c56-18fd-4602-aa8d-10d95f46f3d5: name 'self' is not defined
2025-03-13 16:10:04,137 - app.services.predictive_analytics - ERROR - Error processing driver 10009164: name 'self' is not defined
2025-03-13 16:10:04,137 - app.services.predictive_analytics - ERROR - Error processing driver 3dd80f61-5ed1-4038-b3a8-5d2e37759893: name 'self' is not defined
2025-03-13 16:10:04,137 - app.services.predictive_analytics - ERROR - Error processing driver e604d5c5-e1a6-45c3-b619-73393f04097c: name 'self' is not defined
2025-03-13 16:10:04,137 - app.services.predictive_analytics - ERROR - Error processing driver ab007124-ab3c-4e74-9c14-2407e6e8975b: name 'self' is not defined
2025-03-13 16:10:04,138 - app.services.predictive_analytics - ERROR - Error processing driver 10008570: name 'self' is not defined
2025-03-13 16:10:04,138 - app.services.predictive_analytics - ERROR - Error processing driver 9928039: name 'self' is not defined
2025-03-13 16:10:04,138 - app.services.predictive_analytics - ERROR - Error processing driver f12904ca-437d-4e12-aab7-a22285c60468: name 'self' is not defined
2025-03-13 16:10:04,138 - app.services.predictive_analytics - ERROR - Error processing driver 10003423: name 'self' is not defined
2025-03-13 16:10:04,138 - app.services.predictive_analytics - ERROR - Error processing driver 10059296: name 'self' is not defined
2025-03-13 16:10:04,139 - app.services.predictive_analytics - ERROR - Error processing driver e889d91f-af57-48a5-a384-fdac719f7426: name 'self' is not defined
2025-03-13 16:10:04,139 - app.services.predictive_analytics - ERROR - Error processing driver 7471302: name 'self' is not defined
2025-03-13 16:10:04,139 - app.services.predictive_analytics - ERROR - Error processing driver 3394909: name 'self' is not defined
2025-03-13 16:10:04,139 - app.services.predictive_analytics - ERROR - Error processing driver 59158a1a-f5b1-4242-b9f0-ee99ca9fba12: name 'self' is not defined
2025-03-13 16:10:04,139 - app.services.predictive_analytics - ERROR - Error processing driver 10003241: name 'self' is not defined
2025-03-13 16:10:04,139 - app.services.predictive_analytics - ERROR - Error processing driver 12689366: name 'self' is not defined
2025-03-13 16:10:04,140 - app.services.predictive_analytics - ERROR - Error processing driver 3169805: name 'self' is not defined
2025-03-13 16:10:04,140 - app.services.predictive_analytics - ERROR - Error processing driver 12454992: name 'self' is not defined
2025-03-13 16:10:04,140 - app.services.predictive_analytics - ERROR - Error processing driver 6283463: name 'self' is not defined
2025-03-13 16:10:04,140 - app.services.predictive_analytics - ERROR - Error processing driver 9906894: name 'self' is not defined
2025-03-13 16:10:04,140 - app.services.predictive_analytics - ERROR - Error processing driver 4574031: name 'self' is not defined
2025-03-13 16:10:04,140 - app.services.predictive_analytics - ERROR - Error processing driver 10024125: name 'self' is not defined
2025-03-13 16:10:04,140 - app.services.predictive_analytics - ERROR - Error processing driver 7445245: name 'self' is not defined
2025-03-13 16:10:04,140 - app.services.predictive_analytics - ERROR - Error processing driver 2736896: name 'self' is not defined
2025-03-13 16:10:04,141 - app.services.predictive_analytics - ERROR - Error processing driver 3871197: name 'self' is not defined
2025-03-13 16:10:04,141 - app.services.predictive_analytics - ERROR - Error processing driver 10003181: name 'self' is not defined
2025-03-13 16:10:04,141 - app.services.predictive_analytics - ERROR - Error processing driver 6739719: name 'self' is not defined
2025-03-13 16:10:04,141 - app.services.predictive_analytics - ERROR - Error processing driver 3394970: name 'self' is not defined
2025-03-13 16:10:04,141 - app.services.predictive_analytics - ERROR - Error processing driver 13434780: name 'self' is not defined
2025-03-13 16:10:04,141 - app.services.predictive_analytics - ERROR - Error processing driver 13378634: name 'self' is not defined
2025-03-13 16:10:04,141 - app.services.predictive_analytics - ERROR - Error processing driver 12660341: name 'self' is not defined
2025-03-13 16:10:04,142 - app.services.predictive_analytics - ERROR - Error processing driver 10944837: name 'self' is not defined
2025-03-13 16:10:04,142 - app.services.predictive_analytics - ERROR - Error processing driver 9580037: name 'self' is not defined
2025-03-13 16:10:04,142 - app.services.predictive_analytics - ERROR - Error processing driver 4082833: name 'self' is not defined
2025-03-13 16:10:04,142 - app.services.predictive_analytics - ERROR - Error processing driver 2890185: name 'self' is not defined
2025-03-13 16:10:04,142 - app.services.predictive_analytics - ERROR - Error processing driver 3450681: name 'self' is not defined
2025-03-13 16:10:04,143 - app.services.predictive_analytics - ERROR - Error processing driver 12689380: name 'self' is not defined
2025-03-13 16:10:04,143 - app.services.predictive_analytics - ERROR - Error processing driver 12990571: name 'self' is not defined
2025-03-13 16:10:04,143 - app.services.predictive_analytics - ERROR - Error processing driver 4626720: name 'self' is not defined
2025-03-13 16:10:04,143 - app.services.predictive_analytics - ERROR - Error processing driver 4634857: name 'self' is not defined
2025-03-13 16:10:04,143 - app.services.predictive_analytics - ERROR - Error processing driver 12688193: name 'self' is not defined
2025-03-13 16:10:04,143 - app.services.predictive_analytics - ERROR - Error processing driver 3535546: name 'self' is not defined
2025-03-13 16:10:04,145 - app.services.predictive_analytics - ERROR - Error processing driver 12689363: name 'self' is not defined
2025-03-13 16:10:04,145 - app.services.predictive_analytics - ERROR - Error processing driver 6211481: name 'self' is not defined
2025-03-13 16:10:04,145 - app.services.predictive_analytics - ERROR - Error processing driver 3521899: name 'self' is not defined
2025-03-13 16:10:04,145 - app.services.predictive_analytics - ERROR - Error processing driver 9480756: name 'self' is not defined
2025-03-13 16:10:04,145 - app.services.predictive_analytics - ERROR - Error processing driver 6489124: name 'self' is not defined
2025-03-13 16:10:04,145 - app.services.predictive_analytics - ERROR - Error processing driver 13435553: name 'self' is not defined
2025-03-13 16:10:04,146 - app.services.predictive_analytics - ERROR - Error processing driver 7465620: name 'self' is not defined
2025-03-13 16:10:04,146 - app.services.predictive_analytics - ERROR - Error processing driver 4748880: name 'self' is not defined
2025-03-13 16:10:04,146 - app.services.predictive_analytics - ERROR - Error processing driver 3379452: name 'self' is not defined
2025-03-13 16:10:04,146 - app.services.predictive_analytics - ERROR - Error processing driver 11462831: name 'self' is not defined
2025-03-13 16:10:04,146 - app.services.predictive_analytics - ERROR - Error processing driver 3165973: name 'self' is not defined
2025-03-13 16:10:04,146 - app.services.predictive_analytics - ERROR - Error processing driver 3620277: name 'self' is not defined
2025-03-13 16:10:04,146 - app.services.predictive_analytics - ERROR - Error processing driver 12660346: name 'self' is not defined
2025-03-13 16:10:04,147 - app.services.predictive_analytics - ERROR - Error processing driver 6448094: name 'self' is not defined
2025-03-13 16:10:04,147 - app.services.predictive_analytics - ERROR - Error processing driver 3521914: name 'self' is not defined
2025-03-13 16:10:04,147 - app.services.predictive_analytics - ERROR - Error processing driver 10975821: name 'self' is not defined
2025-03-13 16:10:04,147 - app.services.predictive_analytics - ERROR - Error processing driver 5007978: name 'self' is not defined
2025-03-13 16:10:04,147 - app.services.predictive_analytics - ERROR - Error processing driver 13425227: name 'self' is not defined
2025-03-13 16:10:04,148 - app.services.predictive_analytics - ERROR - Error processing driver 3549223: name 'self' is not defined
2025-03-13 16:10:04,148 - app.services.predictive_analytics - ERROR - Error processing driver 7704973: name 'self' is not defined
2025-03-13 16:10:04,148 - app.services.predictive_analytics - ERROR - Error processing driver 3603687: name 'self' is not defined
2025-03-13 16:10:04,148 - app.services.predictive_analytics - ERROR - Error processing driver 10358628: name 'self' is not defined
2025-03-13 16:10:04,148 - app.services.predictive_analytics - ERROR - Error processing driver 7471351: name 'self' is not defined
2025-03-13 16:10:04,149 - app.services.predictive_analytics - ERROR - Error processing driver 3386022: name 'self' is not defined
2025-03-13 16:10:04,149 - app.services.predictive_analytics - ERROR - Error processing driver 3386077: name 'self' is not defined
2025-03-13 16:10:04,149 - app.services.predictive_analytics - ERROR - Error processing driver 6719417: name 'self' is not defined
2025-03-13 16:10:04,149 - app.services.predictive_analytics - ERROR - Error processing driver 13380096: name 'self' is not defined
2025-03-13 16:10:04,150 - app.services.predictive_analytics - ERROR - Error processing driver 3494638: name 'self' is not defined
2025-03-13 16:10:04,150 - app.services.predictive_analytics - ERROR - Error processing driver 12686407: name 'self' is not defined
2025-03-13 16:10:04,150 - app.services.predictive_analytics - ERROR - Error processing driver 4596553: name 'self' is not defined
2025-03-13 16:10:04,150 - app.services.predictive_analytics - ERROR - Error processing driver 6449862: name 'self' is not defined
2025-03-13 16:10:04,151 - app.services.predictive_analytics - ERROR - Error processing driver 4616917: name 'self' is not defined
2025-03-13 16:10:04,151 - app.services.predictive_analytics - ERROR - Error processing driver 12861265: name 'self' is not defined
2025-03-13 16:10:04,151 - app.services.predictive_analytics - ERROR - Error processing driver 12517467: name 'self' is not defined
2025-03-13 16:10:04,151 - app.services.predictive_analytics - ERROR - Error processing driver 3402604: name 'self' is not defined
2025-03-13 16:10:04,152 - app.services.predictive_analytics - ERROR - Error processing driver 3304180: name 'self' is not defined
2025-03-13 16:10:04,152 - app.services.predictive_analytics - ERROR - Error processing driver 1100985: name 'self' is not defined
2025-03-13 16:10:04,152 - app.services.predictive_analytics - ERROR - Error processing driver 13380780: name 'self' is not defined
2025-03-13 16:10:04,152 - app.services.predictive_analytics - ERROR - Error processing driver 3478830: name 'self' is not defined
2025-03-13 16:10:04,152 - app.services.predictive_analytics - ERROR - Error processing driver 5675671: name 'self' is not defined
2025-03-13 16:10:04,153 - app.services.predictive_analytics - ERROR - Error processing driver 13380099: name 'self' is not defined
2025-03-13 16:10:04,153 - app.services.predictive_analytics - ERROR - Error processing driver 4637003: name 'self' is not defined
2025-03-13 16:10:04,153 - app.services.predictive_analytics - ERROR - Error processing driver 974227: name 'self' is not defined
2025-03-13 16:10:04,153 - app.services.predictive_analytics - ERROR - Error processing driver 13380081: name 'self' is not defined
2025-03-13 16:10:04,153 - app.services.predictive_analytics - ERROR - Error processing driver 4561513: name 'self' is not defined
2025-03-13 16:10:04,154 - app.services.predictive_analytics - ERROR - Error processing driver 13408795: name 'self' is not defined
2025-03-13 16:10:04,154 - app.services.predictive_analytics - ERROR - Error processing driver 7432501: name 'self' is not defined
2025-03-13 16:10:04,154 - app.services.predictive_analytics - ERROR - Error processing driver 3497128: name 'self' is not defined
2025-03-13 16:10:04,154 - app.services.predictive_analytics - ERROR - Error processing driver 10980436: name 'self' is not defined
2025-03-13 16:10:04,154 - app.services.predictive_analytics - ERROR - Error processing driver 12854230: name 'self' is not defined
2025-03-13 16:10:04,154 - app.services.predictive_analytics - ERROR - Error processing driver 6477408: name 'self' is not defined
2025-03-13 16:10:04,154 - app.services.predictive_analytics - ERROR - Error processing driver 7520050: name 'self' is not defined
2025-03-13 16:10:04,154 - app.services.predictive_analytics - ERROR - Error processing driver 3393595: name 'self' is not defined
2025-03-13 16:10:04,154 - app.services.predictive_analytics - ERROR - Error processing driver 3613645: name 'self' is not defined
2025-03-13 16:10:04,155 - app.services.predictive_analytics - ERROR - Error processing driver 6482426: name 'self' is not defined
2025-03-13 16:10:04,155 - app.services.predictive_analytics - ERROR - Error processing driver 3171915: name 'self' is not defined
2025-03-13 16:10:04,155 - app.services.predictive_analytics - ERROR - Error processing driver 4573744: name 'self' is not defined
2025-03-13 16:10:04,156 - app.services.predictive_analytics - ERROR - Error processing driver 13399349: name 'self' is not defined
2025-03-13 16:10:04,156 - app.services.predictive_analytics - ERROR - Error processing driver 13399355: name 'self' is not defined
2025-03-13 16:10:04,156 - app.services.predictive_analytics - ERROR - Error processing driver 4560106: name 'self' is not defined
2025-03-13 16:10:04,156 - app.services.predictive_analytics - ERROR - Error processing driver 13394592: name 'self' is not defined
2025-03-13 16:10:04,156 - app.services.predictive_analytics - ERROR - Error processing driver 12689381: name 'self' is not defined
2025-03-13 16:10:04,156 - app.services.predictive_analytics - ERROR - Error processing driver 4596494: name 'self' is not defined
2025-03-13 16:10:04,157 - app.services.predictive_analytics - ERROR - Error processing driver 13457552: name 'self' is not defined
2025-03-13 16:10:04,157 - app.services.predictive_analytics - ERROR - Error processing driver 3379515: name 'self' is not defined
2025-03-13 16:10:04,157 - app.services.predictive_analytics - ERROR - Error processing driver 6448007: name 'self' is not defined
2025-03-13 16:10:04,157 - app.services.predictive_analytics - ERROR - Error processing driver 12923083: name 'self' is not defined
2025-03-13 16:10:04,157 - app.services.predictive_analytics - ERROR - Error processing driver 72143e6d-e901-4c44-9795-71e0eed8758a: name 'self' is not defined
2025-03-13 16:10:04,158 - app.services.predictive_analytics - ERROR - Error processing driver 13435562: name 'self' is not defined
2025-03-13 16:10:04,158 - app.services.predictive_analytics - ERROR - Error processing driver 5053086: name 'self' is not defined
2025-03-13 16:10:04,158 - app.services.predictive_analytics - ERROR - Error processing driver 6276791: name 'self' is not defined
2025-03-13 16:10:04,158 - app.services.predictive_analytics - ERROR - Error processing driver 13459498: name 'self' is not defined
2025-03-13 16:10:04,158 - app.services.predictive_analytics - ERROR - Error processing driver 12660345: name 'self' is not defined
2025-03-13 16:10:04,158 - app.services.predictive_analytics - ERROR - Error processing driver 10162045: name 'self' is not defined
2025-03-13 16:10:04,159 - app.services.predictive_analytics - ERROR - Error processing driver 4574038: name 'self' is not defined
2025-03-13 16:10:04,159 - app.services.predictive_analytics - ERROR - Error processing driver 3378559: name 'self' is not defined
2025-03-13 16:10:04,159 - app.services.predictive_analytics - ERROR - Error processing driver 1227148: name 'self' is not defined
2025-03-13 16:10:04,159 - app.services.predictive_analytics - ERROR - Error processing driver 13408919: name 'self' is not defined
2025-03-13 16:10:04,159 - app.services.predictive_analytics - ERROR - Error processing driver 10162055: name 'self' is not defined
2025-03-13 16:10:04,159 - app.services.predictive_analytics - ERROR - Error processing driver 6472773: name 'self' is not defined
2025-03-13 16:10:04,159 - app.services.predictive_analytics - ERROR - Error processing driver 7487641: name 'self' is not defined
2025-03-13 16:10:04,159 - app.services.predictive_analytics - ERROR - Error processing driver 4633837: name 'self' is not defined
2025-03-13 16:10:06,357 - pymongo.topology - DEBUG - {"topologyId": {"$oid": "67d2bd03625677637c6a1ee0"}, "driverConnectionId": 1, "serverConnectionId": 13197, "serverHost": "3.144.134.141", "serverPort": 27017, "awaited": true, "durationMS": 10250.0, "reply": "{\"isWritablePrimary\": true, \"topologyVersion\": {\"processId\": {\"$oid\": \"67b7e5814f77c1a87c56d054\"}}, \"maxBsonObjectSize\": 16777216, \"maxMessageSizeBytes\": 48000000, \"maxWriteBatchSize\": 100000, \"localTime\": {\"$date\": \"2025-03-13T11:10:06.398Z\"}, \"logicalSessionTimeoutMinutes\": 30, \"connectionId\": 13197, \"maxWireVersion\": 25, \"ok\": 1.0}", "message": "Server heartbeat succeeded"}
2025-03-13 16:10:06,357 - pymongo.topology - DEBUG - {"topologyId": {"$oid": "67d2bd03625677637c6a1ee0"}, "driverConnectionId": 1, "serverConnectionId": 13197, "serverHost": "3.144.134.141", "serverPort": 27017, "awaited": true, "message": "Server heartbeat started"}
2025-03-13 16:10:16,358 - pymongo.topology - DEBUG - {"topologyId": {"$oid": "67d2bd03625677637c6a1ee0"}, "driverConnectionId": 1, "serverConnectionId": 13197, "serverHost": "3.144.134.141", "serverPort": 27017, "awaited": true, "durationMS": 10000.0, "reply": "{\"isWritablePrimary\": true, \"topologyVersion\": {\"processId\": {\"$oid\": \"67b7e5814f77c1a87c56d054\"}}, \"maxBsonObjectSize\": 16777216, \"maxMessageSizeBytes\": 48000000, \"maxWriteBatchSize\": 100000, \"localTime\": {\"$date\": \"2025-03-13T11:10:16.401Z\"}, \"logicalSessionTimeoutMinutes\": 30, \"connectionId\": 13197, \"maxWireVersion\": 25, \"ok\": 1.0}", "message": "Server heartbeat succeeded"}
2025-03-13 16:10:16,359 - pymongo.topology - DEBUG - {"topologyId": {"$oid": "67d2bd03625677637c6a1ee0"}, "driverConnectionId": 1, "serverConnectionId": 13197, "serverHost": "3.144.134.141", "serverPort": 27017, "awaited": true, "message": "Server heartbeat started"}
2025-03-13 16:10:26,366 - pymongo.topology - DEBUG - {"topologyId": {"$oid": "67d2bd03625677637c6a1ee0"}, "driverConnectionId": 1, "serverConnectionId": 13197, "serverHost": "3.144.134.141", "serverPort": 27017, "awaited": true, "durationMS": 10015.999999999622, "reply": "{\"isWritablePrimary\": true, \"topologyVersion\": {\"processId\": {\"$oid\": \"67b7e5814f77c1a87c56d054\"}}, \"maxBsonObjectSize\": 16777216, \"maxMessageSizeBytes\": 48000000, \"maxWriteBatchSize\": 100000, \"localTime\": {\"$date\": \"2025-03-13T11:10:26.410Z\"}, \"logicalSessionTimeoutMinutes\": 30, \"connectionId\": 13197, \"maxWireVersion\": 25, \"ok\": 1.0}", "message": "Server heartbeat succeeded"}
2025-03-13 16:10:26,368 - pymongo.topology - DEBUG - {"topologyId": {"$oid": "67d2bd03625677637c6a1ee0"}, "driverConnectionId": 1, "serverConnectionId": 13197, "serverHost": "3.144.134.141", "serverPort": 27017, "awaited": true, "message": "Server heartbeat started"}
2025-03-13 16:14:55,745 - numexpr.utils - INFO - Note: NumExpr detected 12 cores but "NUMEXPR_MAX_THREADS" not set, so enforcing safe limit of 8.
2025-03-13 16:14:55,745 - numexpr.utils - INFO - NumExpr defaulting to 8 threads.
2025-03-13 16:14:58,590 - matplotlib - DEBUG - matplotlib data path: C:\Users\msameerakram\AppData\Local\anaconda3\Lib\site-packages\matplotlib\mpl-data
2025-03-13 16:14:58,596 - matplotlib - DEBUG - CONFIGDIR=C:\Users\msameerakram\.matplotlib
2025-03-13 16:14:58,597 - matplotlib - DEBUG - interactive is False
2025-03-13 16:14:58,597 - matplotlib - DEBUG - platform is win32
2025-03-13 16:14:58,664 - matplotlib - DEBUG - CACHEDIR=C:\Users\msameerakram\.matplotlib
2025-03-13 16:14:58,668 - matplotlib.font_manager - DEBUG - Using fontManager instance from C:\Users\msameerakram\.matplotlib\fontlist-v390.json
2025-03-13 16:15:01,588 - numexpr.utils - INFO - Note: NumExpr detected 12 cores but "NUMEXPR_MAX_THREADS" not set, so enforcing safe limit of 8.
2025-03-13 16:15:01,588 - numexpr.utils - INFO - NumExpr defaulting to 8 threads.
2025-03-13 16:15:02,939 - matplotlib - DEBUG - matplotlib data path: C:\Users\msameerakram\AppData\Local\anaconda3\Lib\site-packages\matplotlib\mpl-data
2025-03-13 16:15:02,948 - matplotlib - DEBUG - CONFIGDIR=C:\Users\msameerakram\.matplotlib
2025-03-13 16:15:02,951 - matplotlib - DEBUG - interactive is False
2025-03-13 16:15:02,951 - matplotlib - DEBUG - platform is win32
2025-03-13 16:15:03,016 - matplotlib - DEBUG - CACHEDIR=C:\Users\msameerakram\.matplotlib
2025-03-13 16:15:03,019 - matplotlib.font_manager - DEBUG - Using fontManager instance from C:\Users\msameerakram\.matplotlib\fontlist-v390.json
2025-03-13 16:15:04,531 - asyncio - DEBUG - Using selector: SelectSelector
2025-03-13 16:15:04,570 - pymongo.topology - DEBUG - {"topologyId": {"$oid": "67d2be386a3ec76c15ab437e"}, "message": "Starting topology monitoring"}
2025-03-13 16:15:04,570 - pymongo.topology - DEBUG - {"topologyId": {"$oid": "67d2be386a3ec76c15ab437e"}, "previousDescription": "<TopologyDescription id: 67d2be386a3ec76c15ab437e, topology_type: Unknown, servers: []>", "newDescription": "<TopologyDescription id: 67d2be386a3ec76c15ab437e, topology_type: Unknown, servers: [<ServerDescription ('3.144.134.141', 27017) server_type: Unknown, rtt: None>]>", "message": "Topology description changed"}
2025-03-13 16:15:04,570 - pymongo.topology - DEBUG - {"topologyId": {"$oid": "67d2be386a3ec76c15ab437e"}, "serverHost": "3.144.134.141", "serverPort": 27017, "message": "Starting server monitoring"}
2025-03-13 16:15:04,571 - pymongo.connection - DEBUG - {"clientId": {"$oid": "67d2be386a3ec76c15ab437e"}, "message": "Connection pool created", "serverHost": "3.144.134.141", "serverPort": 27017}
2025-03-13 16:15:04,572 - pymongo.serverSelection - DEBUG - {"message": "Server selection started", "selector": "Primary()", "operation": "ping", "topologyDescription": "<TopologyDescription id: 67d2be386a3ec76c15ab437e, topology_type: Unknown, servers: [<ServerDescription ('3.144.134.141', 27017) server_type: Unknown, rtt: None>]>", "clientId": {"$oid": "67d2be386a3ec76c15ab437e"}}
2025-03-13 16:15:04,572 - pymongo.serverSelection - DEBUG - {"message": "Waiting for suitable server to become available", "selector": "Primary()", "operation": "ping", "topologyDescription": "<TopologyDescription id: 67d2be386a3ec76c15ab437e, topology_type: Unknown, servers: [<ServerDescription ('3.144.134.141', 27017) server_type: Unknown, rtt: None>]>", "clientId": {"$oid": "67d2be386a3ec76c15ab437e"}, "remainingTimeMS": 30}
2025-03-13 16:15:04,885 - pymongo.topology - DEBUG - {"topologyId": {"$oid": "67d2be386a3ec76c15ab437e"}, "driverConnectionId": 1, "serverHost": "3.144.134.141", "serverPort": 27017, "awaited": false, "message": "Server heartbeat started"}
2025-03-13 16:15:05,212 - pymongo.topology - DEBUG - {"topologyId": {"$oid": "67d2be386a3ec76c15ab437e"}, "driverConnectionId": 1, "serverConnectionId": 13200, "serverHost": "3.144.134.141", "serverPort": 27017, "awaited": false, "durationMS": 327.9999999995198, "reply": "{\"helloOk\": true, \"ismaster\": true, \"topologyVersion\": {\"processId\": {\"$oid\": \"67b7e5814f77c1a87c56d054\"}}, \"maxBsonObjectSize\": 16777216, \"maxMessageSizeBytes\": 48000000, \"maxWriteBatchSize\": 100000, \"localTime\": {\"$date\": \"2025-03-13T11:15:05.182Z\"}, \"logicalSessionTimeoutMinutes\": 30, \"connectionId\": 13200, \"maxWireVersion\": 25, \"ok\": 1.0}", "message": "Server heartbeat succeeded"}
2025-03-13 16:15:05,212 - pymongo.connection - DEBUG - {"clientId": {"$oid": "67d2be386a3ec76c15ab437e"}, "message": "Connection pool ready", "serverHost": "3.144.134.141", "serverPort": 27017}
2025-03-13 16:15:05,214 - pymongo.topology - DEBUG - {"topologyId": {"$oid": "67d2be386a3ec76c15ab437e"}, "previousDescription": "<TopologyDescription id: 67d2be386a3ec76c15ab437e, topology_type: Unknown, servers: [<ServerDescription ('3.144.134.141', 27017) server_type: Unknown, rtt: None>]>", "newDescription": "<TopologyDescription id: 67d2be386a3ec76c15ab437e, topology_type: Single, servers: [<ServerDescription ('3.144.134.141', 27017) server_type: Standalone, rtt: 0.3279999999995198>]>", "message": "Topology description changed"}
2025-03-13 16:15:05,214 - pymongo.serverSelection - DEBUG - {"message": "Server selection succeeded", "selector": "Primary()", "operation": "ping", "topologyDescription": "<TopologyDescription id: 67d2be386a3ec76c15ab437e, topology_type: Single, servers: [<ServerDescription ('3.144.134.141', 27017) server_type: Standalone, rtt: 0.3279999999995198>]>", "clientId": {"$oid": "67d2be386a3ec76c15ab437e"}, "serverHost": "3.144.134.141", "serverPort": 27017}
2025-03-13 16:15:05,215 - pymongo.topology - DEBUG - {"topologyId": {"$oid": "67d2be386a3ec76c15ab437e"}, "driverConnectionId": 1, "serverConnectionId": 13200, "serverHost": "3.144.134.141", "serverPort": 27017, "awaited": true, "message": "Server heartbeat started"}
2025-03-13 16:15:05,216 - pymongo.connection - DEBUG - {"clientId": {"$oid": "67d2be386a3ec76c15ab437e"}, "message": "Connection checkout started", "serverHost": "3.144.134.141", "serverPort": 27017}
2025-03-13 16:15:05,216 - pymongo.connection - DEBUG - {"clientId": {"$oid": "67d2be386a3ec76c15ab437e"}, "message": "Connection created", "serverHost": "3.144.134.141", "serverPort": 27017, "driverConnectionId": 1}
2025-03-13 16:15:06,176 - pymongo.connection - DEBUG - {"clientId": {"$oid": "67d2be386a3ec76c15ab437e"}, "message": "Connection ready", "serverHost": "3.144.134.141", "serverPort": 27017, "driverConnectionId": 1, "durationMS": 0.625}
2025-03-13 16:15:06,177 - pymongo.connection - DEBUG - {"clientId": {"$oid": "67d2be386a3ec76c15ab437e"}, "message": "Connection checked out", "serverHost": "3.144.134.141", "serverPort": 27017, "driverConnectionId": 1, "durationMS": 0.9530000000013388}
2025-03-13 16:15:06,177 - pymongo.command - DEBUG - {"clientId": {"$oid": "67d2be386a3ec76c15ab437e"}, "message": "Command started", "command": "{\"ping\": 1, \"lsid\": {\"id\": {\"$binary\": {\"base64\": \"4kyfYA+oQWq8zTJyVOBxSA==\", \"subType\": \"04\"}}}, \"$db\": \"opal_server\"}", "commandName": "ping", "databaseName": "opal_server", "requestId": 6334, "operationId": 6334, "driverConnectionId": 1, "serverConnectionId": 13202, "serverHost": "3.144.134.141", "serverPort": 27017}
2025-03-13 16:15:06,424 - pymongo.command - DEBUG - {"clientId": {"$oid": "67d2be386a3ec76c15ab437e"}, "message": "Command succeeded", "durationMS": 247.15200000000002, "reply": "{\"ok\": 1.0}", "commandName": "ping", "databaseName": "opal_server", "requestId": 6334, "operationId": 6334, "driverConnectionId": 1, "serverConnectionId": 13202, "serverHost": "3.144.134.141", "serverPort": 27017}
2025-03-13 16:15:06,425 - pymongo.connection - DEBUG - {"clientId": {"$oid": "67d2be386a3ec76c15ab437e"}, "message": "Connection checked in", "serverHost": "3.144.134.141", "serverPort": 27017, "driverConnectionId": 1}
2025-03-13 16:15:15,538 - pymongo.topology - DEBUG - {"topologyId": {"$oid": "67d2be386a3ec76c15ab437e"}, "driverConnectionId": 1, "serverConnectionId": 13200, "serverHost": "3.144.134.141", "serverPort": 27017, "awaited": true, "durationMS": 10328.000000001339, "reply": "{\"isWritablePrimary\": true, \"topologyVersion\": {\"processId\": {\"$oid\": \"67b7e5814f77c1a87c56d054\"}}, \"maxBsonObjectSize\": 16777216, \"maxMessageSizeBytes\": 48000000, \"maxWriteBatchSize\": 100000, \"localTime\": {\"$date\": \"2025-03-13T11:15:15.510Z\"}, \"logicalSessionTimeoutMinutes\": 30, \"connectionId\": 13200, \"maxWireVersion\": 25, \"ok\": 1.0}", "message": "Server heartbeat succeeded"}
2025-03-13 16:15:15,539 - pymongo.topology - DEBUG - {"topologyId": {"$oid": "67d2be386a3ec76c15ab437e"}, "driverConnectionId": 1, "serverConnectionId": 13200, "serverHost": "3.144.134.141", "serverPort": 27017, "awaited": true, "message": "Server heartbeat started"}
2025-03-13 16:15:25,514 - pymongo.topology - DEBUG - {"topologyId": {"$oid": "67d2be386a3ec76c15ab437e"}, "driverConnectionId": 1, "serverConnectionId": 13200, "serverHost": "3.144.134.141", "serverPort": 27017, "awaited": true, "durationMS": 9968.999999999141, "reply": "{\"isWritablePrimary\": true, \"topologyVersion\": {\"processId\": {\"$oid\": \"67b7e5814f77c1a87c56d054\"}}, \"maxBsonObjectSize\": 16777216, \"maxMessageSizeBytes\": 48000000, \"maxWriteBatchSize\": 100000, \"localTime\": {\"$date\": \"2025-03-13T11:15:25.511Z\"}, \"logicalSessionTimeoutMinutes\": 30, \"connectionId\": 13200, \"maxWireVersion\": 25, \"ok\": 1.0}", "message": "Server heartbeat succeeded"}
2025-03-13 16:15:25,516 - pymongo.topology - DEBUG - {"topologyId": {"$oid": "67d2be386a3ec76c15ab437e"}, "driverConnectionId": 1, "serverConnectionId": 13200, "serverHost": "3.144.134.141", "serverPort": 27017, "awaited": true, "message": "Server heartbeat started"}
2025-03-13 16:15:35,521 - pymongo.topology - DEBUG - {"topologyId": {"$oid": "67d2be386a3ec76c15ab437e"}, "driverConnectionId": 1, "serverConnectionId": 13200, "serverHost": "3.144.134.141", "serverPort": 27017, "awaited": true, "durationMS": 10000.0, "reply": "{\"isWritablePrimary\": true, \"topologyVersion\": {\"processId\": {\"$oid\": \"67b7e5814f77c1a87c56d054\"}}, \"maxBsonObjectSize\": 16777216, \"maxMessageSizeBytes\": 48000000, \"maxWriteBatchSize\": 100000, \"localTime\": {\"$date\": \"2025-03-13T11:15:35.511Z\"}, \"logicalSessionTimeoutMinutes\": 30, \"connectionId\": 13200, \"maxWireVersion\": 25, \"ok\": 1.0}", "message": "Server heartbeat succeeded"}
2025-03-13 16:15:35,521 - pymongo.topology - DEBUG - {"topologyId": {"$oid": "67d2be386a3ec76c15ab437e"}, "driverConnectionId": 1, "serverConnectionId": 13200, "serverHost": "3.144.134.141", "serverPort": 27017, "awaited": true, "message": "Server heartbeat started"}
2025-03-13 16:15:45,542 - pymongo.topology - DEBUG - {"topologyId": {"$oid": "67d2be386a3ec76c15ab437e"}, "driverConnectionId": 1, "serverConnectionId": 13200, "serverHost": "3.144.134.141", "serverPort": 27017, "awaited": true, "durationMS": 10031.000000000859, "reply": "{\"isWritablePrimary\": true, \"topologyVersion\": {\"processId\": {\"$oid\": \"67b7e5814f77c1a87c56d054\"}}, \"maxBsonObjectSize\": 16777216, \"maxMessageSizeBytes\": 48000000, \"maxWriteBatchSize\": 100000, \"localTime\": {\"$date\": \"2025-03-13T11:15:45.514Z\"}, \"logicalSessionTimeoutMinutes\": 30, \"connectionId\": 13200, \"maxWireVersion\": 25, \"ok\": 1.0}", "message": "Server heartbeat succeeded"}
2025-03-13 16:15:45,543 - pymongo.topology - DEBUG - {"topologyId": {"$oid": "67d2be386a3ec76c15ab437e"}, "driverConnectionId": 1, "serverConnectionId": 13200, "serverHost": "3.144.134.141", "serverPort": 27017, "awaited": true, "message": "Server heartbeat started"}
2025-03-13 16:15:55,582 - pymongo.topology - DEBUG - {"topologyId": {"$oid": "67d2be386a3ec76c15ab437e"}, "driverConnectionId": 1, "serverConnectionId": 13200, "serverHost": "3.144.134.141", "serverPort": 27017, "awaited": true, "durationMS": 10030.99999999904, "reply": "{\"isWritablePrimary\": true, \"topologyVersion\": {\"processId\": {\"$oid\": \"67b7e5814f77c1a87c56d054\"}}, \"maxBsonObjectSize\": 16777216, \"maxMessageSizeBytes\": 48000000, \"maxWriteBatchSize\": 100000, \"localTime\": {\"$date\": \"2025-03-13T11:15:55.519Z\"}, \"logicalSessionTimeoutMinutes\": 30, \"connectionId\": 13200, \"maxWireVersion\": 25, \"ok\": 1.0}", "message": "Server heartbeat succeeded"}
2025-03-13 16:15:55,583 - pymongo.topology - DEBUG - {"topologyId": {"$oid": "67d2be386a3ec76c15ab437e"}, "driverConnectionId": 1, "serverConnectionId": 13200, "serverHost": "3.144.134.141", "serverPort": 27017, "awaited": true, "message": "Server heartbeat started"}
2025-03-13 16:15:56,419 - app.db.repositories.data_repository - INFO - Fetching driver risk data for past 2 days
2025-03-13 16:15:56,419 - app.db.repositories.data_repository - DEBUG - Executing pipeline: [{'$match': {'event_time': {'$gte': datetime.datetime(2025, 3, 11, 16, 15, 56, 419613)}}}, {'$group': {'_id': '$driver_uuid', 'name': {'$first': '$driver_name'}, 'violation_count': {'$sum': 1}, 'violation_types': {'$addToSet': '$violation_type'}, 'avg_severity': {'$avg': {'$switch': {'branches': [{'case': {'$eq': ['$severity', 'HIGH']}, 'then': 3}, {'case': {'$eq': ['$severity', 'MEDIUM']}, 'then': 2}], 'default': 1}}}, 'last_violation': {'$max': '$event_time'}, 'max_speed': {'$max': '$telemetry.speed'}, 'vehicle_license': {'$first': '$vehicle_license'}}}, {'$sort': {'violation_count': -1}}]
2025-03-13 16:15:56,420 - pymongo.serverSelection - DEBUG - {"message": "Server selection started", "selector": "Primary()", "operation": "aggregate", "topologyDescription": "<TopologyDescription id: 67d2be386a3ec76c15ab437e, topology_type: Single, servers: [<ServerDescription ('3.144.134.141', 27017) server_type: Standalone, rtt: 0.31467807999958697>]>", "clientId": {"$oid": "67d2be386a3ec76c15ab437e"}}
2025-03-13 16:15:56,421 - pymongo.serverSelection - DEBUG - {"message": "Server selection succeeded", "selector": "Primary()", "operation": "aggregate", "topologyDescription": "<TopologyDescription id: 67d2be386a3ec76c15ab437e, topology_type: Single, servers: [<ServerDescription ('3.144.134.141', 27017) server_type: Standalone, rtt: 0.31467807999958697>]>", "clientId": {"$oid": "67d2be386a3ec76c15ab437e"}, "serverHost": "3.144.134.141", "serverPort": 27017}
2025-03-13 16:15:56,422 - pymongo.connection - DEBUG - {"clientId": {"$oid": "67d2be386a3ec76c15ab437e"}, "message": "Connection checkout started", "serverHost": "3.144.134.141", "serverPort": 27017}
2025-03-13 16:15:56,422 - pymongo.connection - DEBUG - {"clientId": {"$oid": "67d2be386a3ec76c15ab437e"}, "message": "Connection checked out", "serverHost": "3.144.134.141", "serverPort": 27017, "driverConnectionId": 1, "durationMS": 0.0}
2025-03-13 16:15:56,422 - pymongo.command - DEBUG - {"clientId": {"$oid": "67d2be386a3ec76c15ab437e"}, "message": "Command started", "command": "{\"aggregate\": \"violations\", \"pipeline\": [{\"$match\": {\"event_time\": {\"$gte\": {\"$date\": \"2025-03-11T16:15:56.419Z\"}}}}, {\"$group\": {\"_id\": \"$driver_uuid\", \"name\": {\"$first\": \"$driver_name\"}, \"violation_count\": {\"$sum\": 1}, \"violation_types\": {\"$addToSet\": \"$violation_type\"}, \"avg_severity\": {\"$avg\": {\"$switch\": {\"branches\": [{\"case\": {\"$eq\": [\"$severity\", \"HIGH\"]}, \"then\": 3}, {\"case\": {\"$eq\": [\"$severity\", \"MEDIUM\"]}, \"then\": 2}], \"default\": 1}}}, \"last_violation\": {\"$max\": \"$event_time\"}, \"max_speed\": {\"$max\": \"$telemetry.speed\"}, \"vehicle_license\": {\"$first\": \"$vehicle_license\"}}}, {\"$sort\": {\"violation_count\": -1}}], \"lsid\": {\"id\": {\"$binary\": {\"base64\": \"4kyfYA+oQWq8zTJyVOBxSA==\", \"subType\": \"04\"}}}, \"$db\": \"opal_server\"}", "commandName": "aggregate", "databaseName": "opal_server", "requestId": 26500, "operationId": 26500, "driverConnectionId": 1, "serverConnectionId": 13202, "serverHost": "3.144.134.141", "serverPort": 27017}
2025-03-13 16:15:57,064 - pymongo.command - DEBUG - {"clientId": {"$oid": "67d2be386a3ec76c15ab437e"}, "message": "Command succeeded", "durationMS": 640.6500000000001, "reply": "{\"cursor\": {\"firstBatch\": [{\"_id\": \"unknown\", \"name\": \"Unknown\", \"violation_count\": 512, \"violation_types\": [\"SPEED_MEDIUM\", \"SPEED_LOW\", \"SPEED_HIGH\"], \"avg_severity\": 1.8984375, \"last_violation\": {\"$date\": \"2025-03-13T11:14:29.496Z\"}, \"vehicle_license\": \"1765HW\"}, {\"_id\": \"10003423\", \"name\": \"Unknown\", \"violation_count\": 149, \"violation_types\": [\"SPEED_MEDIUM\", \"SPEED_LOW\"], \"avg_severity\": 1.738255033557047, \"last_violation\": {\"$date\": \"2025-03-13T04:54:47.918Z\"}, \"vehicle_license\": \"860665050638518\"}, {\"_id\": \"7463170a-de85-4c5d-a77b-b506d939aca1\", \"name\": \"GUL ZAMAN #94378054\", \"violation_count\": 139, \"violation_types\": [\"SPEED_MEDIUM\", \"SPEED_LOW\"], \"avg_severity\": 1.6474820143884892, \"last_violation\": {\"$date\": \"2025-03-13T06:31:35.314Z\"}, \"vehicle_license\": \"1075MR\"}, {\"_id\": \"10009164\", \"name\": \"Unknown\", \"violation_count\": 126, \"violation_types\": [\"SPEED_MEDIUM\", \"SPEED_LOW\", \"SPEED_HIGH\"], \"avg_severity\": 1.7063492063492063, \"last_violation\": {\"$date\": \"2025-03-12T23:10:55.8...", "commandName": "aggregate", "databaseName": "opal_server", "requestId": 26500, "operationId": 26500, "driverConnectionId": 1, "serverConnectionId": 13202, "serverHost": "3.144.134.141", "serverPort": 27017}
2025-03-13 16:15:57,066 - pymongo.connection - DEBUG - {"clientId": {"$oid": "67d2be386a3ec76c15ab437e"}, "message": "Connection checked in", "serverHost": "3.144.134.141", "serverPort": 27017, "driverConnectionId": 1}
2025-03-13 16:15:57,067 - app.db.repositories.data_repository - INFO - Retrieved stats for 92 drivers
2025-03-13 16:15:57,067 - app.services.predictive_analytics - INFO - Retrieved 92 driver records
2025-03-13 16:15:57,068 - app.services.predictive_analytics - ERROR - Error processing driver 10003423: cannot access local variable 'daily_rate' where it is not associated with a value
2025-03-13 16:15:57,068 - app.services.predictive_analytics - ERROR - Error processing driver 7463170a-de85-4c5d-a77b-b506d939aca1: cannot access local variable 'daily_rate' where it is not associated with a value
2025-03-13 16:15:57,068 - app.services.predictive_analytics - ERROR - Error processing driver 10009164: cannot access local variable 'daily_rate' where it is not associated with a value
2025-03-13 16:15:57,068 - app.services.predictive_analytics - ERROR - Error processing driver ab007124-ab3c-4e74-9c14-2407e6e8975b: cannot access local variable 'daily_rate' where it is not associated with a value
2025-03-13 16:15:57,069 - app.services.predictive_analytics - ERROR - Error processing driver fb6b6c56-18fd-4602-aa8d-10d95f46f3d5: cannot access local variable 'daily_rate' where it is not associated with a value
2025-03-13 16:15:57,069 - app.services.predictive_analytics - ERROR - Error processing driver e604d5c5-e1a6-45c3-b619-73393f04097c: cannot access local variable 'daily_rate' where it is not associated with a value
2025-03-13 16:15:57,070 - app.services.predictive_analytics - ERROR - Error processing driver 59158a1a-f5b1-4242-b9f0-ee99ca9fba12: cannot access local variable 'daily_rate' where it is not associated with a value
2025-03-13 16:15:57,071 - app.services.predictive_analytics - ERROR - Error processing driver 10059296: cannot access local variable 'daily_rate' where it is not associated with a value
2025-03-13 16:15:57,071 - app.services.predictive_analytics - ERROR - Error processing driver 9928039: cannot access local variable 'daily_rate' where it is not associated with a value
2025-03-13 16:15:57,071 - app.services.predictive_analytics - ERROR - Error processing driver 10024125: cannot access local variable 'daily_rate' where it is not associated with a value
2025-03-13 16:15:57,071 - app.services.predictive_analytics - ERROR - Error processing driver 10008570: cannot access local variable 'daily_rate' where it is not associated with a value
2025-03-13 16:15:57,072 - app.services.predictive_analytics - ERROR - Error processing driver f12904ca-437d-4e12-aab7-a22285c60468: cannot access local variable 'daily_rate' where it is not associated with a value
2025-03-13 16:15:57,072 - app.services.predictive_analytics - ERROR - Error processing driver e889d91f-af57-48a5-a384-fdac719f7426: cannot access local variable 'daily_rate' where it is not associated with a value
2025-03-13 16:15:57,072 - app.services.predictive_analytics - ERROR - Error processing driver 3394970: cannot access local variable 'daily_rate' where it is not associated with a value
2025-03-13 16:15:57,072 - app.services.predictive_analytics - ERROR - Error processing driver 12689380: cannot access local variable 'daily_rate' where it is not associated with a value
2025-03-13 16:15:57,073 - app.services.predictive_analytics - ERROR - Error processing driver 6739719: cannot access local variable 'daily_rate' where it is not associated with a value
2025-03-13 16:15:57,073 - app.services.predictive_analytics - ERROR - Error processing driver 7471302: cannot access local variable 'daily_rate' where it is not associated with a value
2025-03-13 16:15:57,073 - app.services.predictive_analytics - ERROR - Error processing driver 3521914: cannot access local variable 'daily_rate' where it is not associated with a value
2025-03-13 16:15:57,073 - app.services.predictive_analytics - ERROR - Error processing driver 3169805: cannot access local variable 'daily_rate' where it is not associated with a value
2025-03-13 16:15:57,073 - app.services.predictive_analytics - ERROR - Error processing driver 3871197: cannot access local variable 'daily_rate' where it is not associated with a value
2025-03-13 16:15:57,074 - app.services.predictive_analytics - ERROR - Error processing driver 12990571: cannot access local variable 'daily_rate' where it is not associated with a value
2025-03-13 16:15:57,074 - app.services.predictive_analytics - ERROR - Error processing driver 12689366: cannot access local variable 'daily_rate' where it is not associated with a value
2025-03-13 16:15:57,074 - app.services.predictive_analytics - ERROR - Error processing driver 6283463: cannot access local variable 'daily_rate' where it is not associated with a value
2025-03-13 16:15:57,074 - app.services.predictive_analytics - ERROR - Error processing driver 13380096: cannot access local variable 'daily_rate' where it is not associated with a value
2025-03-13 16:15:57,075 - app.services.predictive_analytics - ERROR - Error processing driver 2736896: cannot access local variable 'daily_rate' where it is not associated with a value
2025-03-13 16:15:57,075 - app.services.predictive_analytics - ERROR - Error processing driver 4574031: cannot access local variable 'daily_rate' where it is not associated with a value
2025-03-13 16:15:57,075 - app.services.predictive_analytics - ERROR - Error processing driver 10003241: cannot access local variable 'daily_rate' where it is not associated with a value
2025-03-13 16:15:57,075 - app.services.predictive_analytics - ERROR - Error processing driver 5007978: cannot access local variable 'daily_rate' where it is not associated with a value
2025-03-13 16:15:57,075 - app.services.predictive_analytics - ERROR - Error processing driver 3379452: cannot access local variable 'daily_rate' where it is not associated with a value
2025-03-13 16:15:57,076 - app.services.predictive_analytics - ERROR - Error processing driver 10003181: cannot access local variable 'daily_rate' where it is not associated with a value
2025-03-13 16:15:57,076 - app.services.predictive_analytics - ERROR - Error processing driver 3394909: cannot access local variable 'daily_rate' where it is not associated with a value
2025-03-13 16:15:57,076 - app.services.predictive_analytics - ERROR - Error processing driver 3521899: cannot access local variable 'daily_rate' where it is not associated with a value
2025-03-13 16:15:57,076 - app.services.predictive_analytics - ERROR - Error processing driver 13434780: cannot access local variable 'daily_rate' where it is not associated with a value
2025-03-13 16:15:57,076 - app.services.predictive_analytics - ERROR - Error processing driver 7445245: cannot access local variable 'daily_rate' where it is not associated with a value
2025-03-13 16:15:57,077 - app.services.predictive_analytics - ERROR - Error processing driver 7432501: cannot access local variable 'daily_rate' where it is not associated with a value
2025-03-13 16:15:57,077 - app.services.predictive_analytics - ERROR - Error processing driver 3497128: cannot access local variable 'daily_rate' where it is not associated with a value
2025-03-13 16:15:57,077 - app.services.predictive_analytics - ERROR - Error processing driver 4634857: cannot access local variable 'daily_rate' where it is not associated with a value
2025-03-13 16:15:57,077 - app.services.predictive_analytics - ERROR - Error processing driver 10980436: cannot access local variable 'daily_rate' where it is not associated with a value
2025-03-13 16:15:57,077 - app.services.predictive_analytics - ERROR - Error processing driver 6489124: cannot access local variable 'daily_rate' where it is not associated with a value
2025-03-13 16:15:57,078 - app.services.predictive_analytics - ERROR - Error processing driver 13435553: cannot access local variable 'daily_rate' where it is not associated with a value
2025-03-13 16:15:57,078 - app.services.predictive_analytics - ERROR - Error processing driver 3535546: cannot access local variable 'daily_rate' where it is not associated with a value
2025-03-13 16:15:57,078 - app.services.predictive_analytics - ERROR - Error processing driver 6449862: cannot access local variable 'daily_rate' where it is not associated with a value
2025-03-13 16:15:57,079 - app.services.predictive_analytics - ERROR - Error processing driver 3386077: cannot access local variable 'daily_rate' where it is not associated with a value
2025-03-13 16:15:57,079 - app.services.predictive_analytics - ERROR - Error processing driver 9580037: cannot access local variable 'daily_rate' where it is not associated with a value
2025-03-13 16:15:57,079 - app.services.predictive_analytics - ERROR - Error processing driver 6448094: cannot access local variable 'daily_rate' where it is not associated with a value
2025-03-13 16:15:57,079 - app.services.predictive_analytics - ERROR - Error processing driver 7520050: cannot access local variable 'daily_rate' where it is not associated with a value
2025-03-13 16:15:57,079 - app.services.predictive_analytics - ERROR - Error processing driver 3165973: cannot access local variable 'daily_rate' where it is not associated with a value
2025-03-13 16:15:57,079 - app.services.predictive_analytics - ERROR - Error processing driver 12660341: cannot access local variable 'daily_rate' where it is not associated with a value
2025-03-13 16:15:57,080 - app.services.predictive_analytics - ERROR - Error processing driver 7465620: cannot access local variable 'daily_rate' where it is not associated with a value
2025-03-13 16:15:57,080 - app.services.predictive_analytics - ERROR - Error processing driver 12689363: cannot access local variable 'daily_rate' where it is not associated with a value
2025-03-13 16:15:57,080 - app.services.predictive_analytics - ERROR - Error processing driver 3386022: cannot access local variable 'daily_rate' where it is not associated with a value
2025-03-13 16:15:57,080 - app.services.predictive_analytics - ERROR - Error processing driver 7704973: cannot access local variable 'daily_rate' where it is not associated with a value
2025-03-13 16:15:57,080 - app.services.predictive_analytics - ERROR - Error processing driver 4637003: cannot access local variable 'daily_rate' where it is not associated with a value
2025-03-13 16:15:57,080 - app.services.predictive_analytics - ERROR - Error processing driver 5675671: cannot access local variable 'daily_rate' where it is not associated with a value
2025-03-13 16:15:57,081 - app.services.predictive_analytics - ERROR - Error processing driver 3478830: cannot access local variable 'daily_rate' where it is not associated with a value
2025-03-13 16:15:57,081 - app.services.predictive_analytics - ERROR - Error processing driver 13425227: cannot access local variable 'daily_rate' where it is not associated with a value
2025-03-13 16:15:57,081 - app.services.predictive_analytics - ERROR - Error processing driver 6448007: cannot access local variable 'daily_rate' where it is not associated with a value
2025-03-13 16:15:57,081 - app.services.predictive_analytics - ERROR - Error processing driver 4561513: cannot access local variable 'daily_rate' where it is not associated with a value
2025-03-13 16:15:57,081 - app.services.predictive_analytics - ERROR - Error processing driver 11462831: cannot access local variable 'daily_rate' where it is not associated with a value
2025-03-13 16:15:57,081 - app.services.predictive_analytics - ERROR - Error processing driver 3494638: cannot access local variable 'daily_rate' where it is not associated with a value
2025-03-13 16:15:57,082 - app.services.predictive_analytics - ERROR - Error processing driver 12688193: cannot access local variable 'daily_rate' where it is not associated with a value
2025-03-13 16:15:57,082 - app.services.predictive_analytics - ERROR - Error processing driver 3304180: cannot access local variable 'daily_rate' where it is not associated with a value
2025-03-13 16:15:57,082 - app.services.predictive_analytics - ERROR - Error processing driver 3603687: cannot access local variable 'daily_rate' where it is not associated with a value
2025-03-13 16:15:57,082 - app.services.predictive_analytics - ERROR - Error processing driver 72143e6d-e901-4c44-9795-71e0eed8758a: cannot access local variable 'daily_rate' where it is not associated with a value
2025-03-13 16:15:57,083 - app.services.predictive_analytics - ERROR - Error processing driver 3549223: cannot access local variable 'daily_rate' where it is not associated with a value
2025-03-13 16:15:57,083 - app.services.predictive_analytics - ERROR - Error processing driver 10944837: cannot access local variable 'daily_rate' where it is not associated with a value
2025-03-13 16:15:57,083 - app.services.predictive_analytics - ERROR - Error processing driver 3402604: cannot access local variable 'daily_rate' where it is not associated with a value
2025-03-13 16:15:57,083 - app.services.predictive_analytics - ERROR - Error processing driver 13457552: cannot access local variable 'daily_rate' where it is not associated with a value
2025-03-13 16:15:57,083 - app.services.predictive_analytics - ERROR - Error processing driver 5053086: cannot access local variable 'daily_rate' where it is not associated with a value
2025-03-13 16:15:57,084 - app.services.predictive_analytics - ERROR - Error processing driver 13399355: cannot access local variable 'daily_rate' where it is not associated with a value
2025-03-13 16:15:57,084 - app.services.predictive_analytics - ERROR - Error processing driver 3450681: cannot access local variable 'daily_rate' where it is not associated with a value
2025-03-13 16:15:57,084 - app.services.predictive_analytics - ERROR - Error processing driver 6719417: cannot access local variable 'daily_rate' where it is not associated with a value
2025-03-13 16:15:57,084 - app.services.predictive_analytics - ERROR - Error processing driver 7471351: cannot access local variable 'daily_rate' where it is not associated with a value
2025-03-13 16:15:57,084 - app.services.predictive_analytics - ERROR - Error processing driver 13380081: cannot access local variable 'daily_rate' where it is not associated with a value
2025-03-13 16:15:57,085 - app.services.predictive_analytics - ERROR - Error processing driver 4626720: cannot access local variable 'daily_rate' where it is not associated with a value
2025-03-13 16:15:57,085 - app.services.predictive_analytics - ERROR - Error processing driver 10975821: cannot access local variable 'daily_rate' where it is not associated with a value
2025-03-13 16:15:57,085 - app.services.predictive_analytics - ERROR - Error processing driver 12686407: cannot access local variable 'daily_rate' where it is not associated with a value
2025-03-13 16:15:57,085 - app.services.predictive_analytics - ERROR - Error processing driver 12454992: cannot access local variable 'daily_rate' where it is not associated with a value
2025-03-13 16:15:57,085 - app.services.predictive_analytics - ERROR - Error processing driver 4082833: cannot access local variable 'daily_rate' where it is not associated with a value
2025-03-13 16:15:57,085 - app.services.predictive_analytics - ERROR - Error processing driver 6211481: cannot access local variable 'daily_rate' where it is not associated with a value
2025-03-13 16:15:57,086 - app.services.predictive_analytics - ERROR - Error processing driver 12689381: cannot access local variable 'daily_rate' where it is not associated with a value
2025-03-13 16:15:57,086 - app.services.predictive_analytics - ERROR - Error processing driver 4560106: cannot access local variable 'daily_rate' where it is not associated with a value
2025-03-13 16:15:57,086 - app.services.predictive_analytics - ERROR - Error processing driver 6482426: cannot access local variable 'daily_rate' where it is not associated with a value
2025-03-13 16:15:57,086 - app.services.predictive_analytics - ERROR - Error processing driver 3613645: cannot access local variable 'daily_rate' where it is not associated with a value
2025-03-13 16:15:57,086 - app.services.predictive_analytics - ERROR - Error processing driver 13408919: cannot access local variable 'daily_rate' where it is not associated with a value
2025-03-13 16:15:57,086 - app.services.predictive_analytics - ERROR - Error processing driver 13394592: cannot access local variable 'daily_rate' where it is not associated with a value
2025-03-13 16:15:57,086 - app.services.predictive_analytics - ERROR - Error processing driver 4596553: cannot access local variable 'daily_rate' where it is not associated with a value
2025-03-13 16:15:57,087 - app.services.predictive_analytics - ERROR - Error processing driver 6477408: cannot access local variable 'daily_rate' where it is not associated with a value
2025-03-13 16:15:57,087 - app.services.predictive_analytics - ERROR - Error processing driver 12660346: cannot access local variable 'daily_rate' where it is not associated with a value
2025-03-13 16:15:57,087 - app.services.predictive_analytics - ERROR - Error processing driver 4573744: cannot access local variable 'daily_rate' where it is not associated with a value
2025-03-13 16:15:57,087 - app.services.predictive_analytics - ERROR - Error processing driver 13380099: cannot access local variable 'daily_rate' where it is not associated with a value
2025-03-13 16:16:00,971 - app.db.repositories.data_repository - INFO - Fetching driver risk data for past 1 days
2025-03-13 16:16:00,972 - app.db.repositories.data_repository - DEBUG - Executing pipeline: [{'$match': {'event_time': {'$gte': datetime.datetime(2025, 3, 12, 16, 16, 0, 972796)}}}, {'$group': {'_id': '$driver_uuid', 'name': {'$first': '$driver_name'}, 'violation_count': {'$sum': 1}, 'violation_types': {'$addToSet': '$violation_type'}, 'avg_severity': {'$avg': {'$switch': {'branches': [{'case': {'$eq': ['$severity', 'HIGH']}, 'then': 3}, {'case': {'$eq': ['$severity', 'MEDIUM']}, 'then': 2}], 'default': 1}}}, 'last_violation': {'$max': '$event_time'}, 'max_speed': {'$max': '$telemetry.speed'}, 'vehicle_license': {'$first': '$vehicle_license'}}}, {'$sort': {'violation_count': -1}}]
2025-03-13 16:16:00,973 - pymongo.serverSelection - DEBUG - {"message": "Server selection started", "selector": "Primary()", "operation": "aggregate", "topologyDescription": "<TopologyDescription id: 67d2be386a3ec76c15ab437e, topology_type: Single, servers: [<ServerDescription ('3.144.134.141', 27017) server_type: Standalone, rtt: 0.31467807999958697>]>", "clientId": {"$oid": "67d2be386a3ec76c15ab437e"}}
2025-03-13 16:16:00,973 - pymongo.serverSelection - DEBUG - {"message": "Server selection succeeded", "selector": "Primary()", "operation": "aggregate", "topologyDescription": "<TopologyDescription id: 67d2be386a3ec76c15ab437e, topology_type: Single, servers: [<ServerDescription ('3.144.134.141', 27017) server_type: Standalone, rtt: 0.31467807999958697>]>", "clientId": {"$oid": "67d2be386a3ec76c15ab437e"}, "serverHost": "3.144.134.141", "serverPort": 27017}
2025-03-13 16:16:00,974 - pymongo.connection - DEBUG - {"clientId": {"$oid": "67d2be386a3ec76c15ab437e"}, "message": "Connection checkout started", "serverHost": "3.144.134.141", "serverPort": 27017}
2025-03-13 16:16:00,974 - pymongo.connection - DEBUG - {"clientId": {"$oid": "67d2be386a3ec76c15ab437e"}, "message": "Connection checked out", "serverHost": "3.144.134.141", "serverPort": 27017, "driverConnectionId": 1, "durationMS": 0.0}
2025-03-13 16:16:00,975 - pymongo.command - DEBUG - {"clientId": {"$oid": "67d2be386a3ec76c15ab437e"}, "message": "Command started", "command": "{\"aggregate\": \"violations\", \"pipeline\": [{\"$match\": {\"event_time\": {\"$gte\": {\"$date\": \"2025-03-12T16:16:00.972Z\"}}}}, {\"$group\": {\"_id\": \"$driver_uuid\", \"name\": {\"$first\": \"$driver_name\"}, \"violation_count\": {\"$sum\": 1}, \"violation_types\": {\"$addToSet\": \"$violation_type\"}, \"avg_severity\": {\"$avg\": {\"$switch\": {\"branches\": [{\"case\": {\"$eq\": [\"$severity\", \"HIGH\"]}, \"then\": 3}, {\"case\": {\"$eq\": [\"$severity\", \"MEDIUM\"]}, \"then\": 2}], \"default\": 1}}}, \"last_violation\": {\"$max\": \"$event_time\"}, \"max_speed\": {\"$max\": \"$telemetry.speed\"}, \"vehicle_license\": {\"$first\": \"$vehicle_license\"}}}, {\"$sort\": {\"violation_count\": -1}}], \"lsid\": {\"id\": {\"$binary\": {\"base64\": \"4kyfYA+oQWq8zTJyVOBxSA==\", \"subType\": \"04\"}}}, \"$db\": \"opal_server\"}", "commandName": "aggregate", "databaseName": "opal_server", "requestId": 19169, "operationId": 19169, "driverConnectionId": 1, "serverConnectionId": 13202, "serverHost": "3.144.134.141", "serverPort": 27017}
2025-03-13 16:16:01,695 - pymongo.command - DEBUG - {"clientId": {"$oid": "67d2be386a3ec76c15ab437e"}, "message": "Command succeeded", "durationMS": 720.4549999999999, "reply": "{\"cursor\": {\"firstBatch\": [{\"_id\": \"unknown\", \"name\": \"Unknown\", \"violation_count\": 179, \"violation_types\": [\"SPEED_MEDIUM\", \"SPEED_LOW\", \"SPEED_HIGH\"], \"avg_severity\": 1.9832402234636872, \"last_violation\": {\"$date\": \"2025-03-13T11:14:29.496Z\"}, \"vehicle_license\": \"860665050647824\"}, {\"_id\": \"10003423\", \"name\": \"Unknown\", \"violation_count\": 63, \"violation_types\": [\"SPEED_LOW\", \"SPEED_MEDIUM\"], \"avg_severity\": 1.7142857142857142, \"last_violation\": {\"$date\": \"2025-03-13T04:54:47.918Z\"}, \"vehicle_license\": \"860665050638518\"}, {\"_id\": \"e604d5c5-e1a6-45c3-b619-73393f04097c\", \"name\": \"Rajanaeem Khan # NEW\", \"violation_count\": 63, \"violation_types\": [\"SPEED_LOW\", \"SPEED_MEDIUM\"], \"avg_severity\": 1.7301587301587302, \"last_violation\": {\"$date\": \"2025-03-13T11:12:35.639Z\"}, \"vehicle_license\": \"6024MR\"}, {\"_id\": \"fb6b6c56-18fd-4602-aa8d-10d95f46f3d5\", \"name\": \"AMIR 95957295\", \"violation_count\": 55, \"violation_types\": [\"SPEED_LOW\", \"SPEED_MEDIUM\"], \"avg_severity\": 1.7454545454545454, \"last_violati...", "commandName": "aggregate", "databaseName": "opal_server", "requestId": 19169, "operationId": 19169, "driverConnectionId": 1, "serverConnectionId": 13202, "serverHost": "3.144.134.141", "serverPort": 27017}
2025-03-13 16:16:01,696 - pymongo.connection - DEBUG - {"clientId": {"$oid": "67d2be386a3ec76c15ab437e"}, "message": "Connection checked in", "serverHost": "3.144.134.141", "serverPort": 27017, "driverConnectionId": 1}
2025-03-13 16:16:01,697 - app.db.repositories.data_repository - INFO - Retrieved stats for 72 drivers
2025-03-13 16:16:01,697 - app.services.predictive_analytics - INFO - Retrieved 72 driver records
2025-03-13 16:16:01,697 - app.services.predictive_analytics - ERROR - Error processing driver 10003423: cannot access local variable 'daily_rate' where it is not associated with a value
2025-03-13 16:16:01,697 - app.services.predictive_analytics - ERROR - Error processing driver e604d5c5-e1a6-45c3-b619-73393f04097c: cannot access local variable 'daily_rate' where it is not associated with a value
2025-03-13 16:16:01,697 - app.services.predictive_analytics - ERROR - Error processing driver fb6b6c56-18fd-4602-aa8d-10d95f46f3d5: cannot access local variable 'daily_rate' where it is not associated with a value
2025-03-13 16:16:01,698 - app.services.predictive_analytics - ERROR - Error processing driver 10009164: cannot access local variable 'daily_rate' where it is not associated with a value
2025-03-13 16:16:01,698 - app.services.predictive_analytics - ERROR - Error processing driver 9928039: cannot access local variable 'daily_rate' where it is not associated with a value
2025-03-13 16:16:01,698 - app.services.predictive_analytics - ERROR - Error processing driver ab007124-ab3c-4e74-9c14-2407e6e8975b: cannot access local variable 'daily_rate' where it is not associated with a value
2025-03-13 16:16:01,698 - app.services.predictive_analytics - ERROR - Error processing driver 7463170a-de85-4c5d-a77b-b506d939aca1: cannot access local variable 'daily_rate' where it is not associated with a value
2025-03-13 16:16:01,698 - app.services.predictive_analytics - ERROR - Error processing driver f12904ca-437d-4e12-aab7-a22285c60468: cannot access local variable 'daily_rate' where it is not associated with a value
2025-03-13 16:16:01,699 - app.services.predictive_analytics - ERROR - Error processing driver 10059296: cannot access local variable 'daily_rate' where it is not associated with a value
2025-03-13 16:16:01,699 - app.services.predictive_analytics - ERROR - Error processing driver e889d91f-af57-48a5-a384-fdac719f7426: cannot access local variable 'daily_rate' where it is not associated with a value
2025-03-13 16:16:01,699 - app.services.predictive_analytics - ERROR - Error processing driver 10003241: cannot access local variable 'daily_rate' where it is not associated with a value
2025-03-13 16:16:01,699 - app.services.predictive_analytics - ERROR - Error processing driver 10008570: cannot access local variable 'daily_rate' where it is not associated with a value
2025-03-13 16:16:01,699 - app.services.predictive_analytics - ERROR - Error processing driver 6739719: cannot access local variable 'daily_rate' where it is not associated with a value
2025-03-13 16:16:01,699 - app.services.predictive_analytics - ERROR - Error processing driver 13380096: cannot access local variable 'daily_rate' where it is not associated with a value
2025-03-13 16:16:01,699 - app.services.predictive_analytics - ERROR - Error processing driver 7471302: cannot access local variable 'daily_rate' where it is not associated with a value
2025-03-13 16:16:01,700 - app.services.predictive_analytics - ERROR - Error processing driver 13434780: cannot access local variable 'daily_rate' where it is not associated with a value
2025-03-13 16:16:01,700 - app.services.predictive_analytics - ERROR - Error processing driver 3497128: cannot access local variable 'daily_rate' where it is not associated with a value
2025-03-13 16:16:01,700 - app.services.predictive_analytics - ERROR - Error processing driver 3169805: cannot access local variable 'daily_rate' where it is not associated with a value
2025-03-13 16:16:01,700 - app.services.predictive_analytics - ERROR - Error processing driver 7432501: cannot access local variable 'daily_rate' where it is not associated with a value
2025-03-13 16:16:01,700 - app.services.predictive_analytics - ERROR - Error processing driver 3871197: cannot access local variable 'daily_rate' where it is not associated with a value
2025-03-13 16:16:01,701 - app.services.predictive_analytics - ERROR - Error processing driver 10003181: cannot access local variable 'daily_rate' where it is not associated with a value
2025-03-13 16:16:01,701 - app.services.predictive_analytics - ERROR - Error processing driver 3379452: cannot access local variable 'daily_rate' where it is not associated with a value
2025-03-13 16:16:01,701 - app.services.predictive_analytics - ERROR - Error processing driver 12689380: cannot access local variable 'daily_rate' where it is not associated with a value
2025-03-13 16:16:01,701 - app.services.predictive_analytics - ERROR - Error processing driver 2736896: cannot access local variable 'daily_rate' where it is not associated with a value
2025-03-13 16:16:01,702 - app.services.predictive_analytics - ERROR - Error processing driver 6448094: cannot access local variable 'daily_rate' where it is not associated with a value
2025-03-13 16:16:01,702 - app.services.predictive_analytics - ERROR - Error processing driver 12689366: cannot access local variable 'daily_rate' where it is not associated with a value
2025-03-13 16:16:01,702 - app.services.predictive_analytics - ERROR - Error processing driver 3521899: cannot access local variable 'daily_rate' where it is not associated with a value
2025-03-13 16:16:01,702 - app.services.predictive_analytics - ERROR - Error processing driver 3386022: cannot access local variable 'daily_rate' where it is not associated with a value
2025-03-13 16:16:01,702 - app.services.predictive_analytics - ERROR - Error processing driver 12990571: cannot access local variable 'daily_rate' where it is not associated with a value
2025-03-13 16:16:01,703 - app.services.predictive_analytics - ERROR - Error processing driver 10024125: cannot access local variable 'daily_rate' where it is not associated with a value
2025-03-13 16:16:01,703 - app.services.predictive_analytics - ERROR - Error processing driver 3535546: cannot access local variable 'daily_rate' where it is not associated with a value
2025-03-13 16:16:01,703 - app.services.predictive_analytics - ERROR - Error processing driver 7445245: cannot access local variable 'daily_rate' where it is not associated with a value
2025-03-13 16:16:01,703 - app.services.predictive_analytics - ERROR - Error processing driver 12660341: cannot access local variable 'daily_rate' where it is not associated with a value
2025-03-13 16:16:01,703 - app.services.predictive_analytics - ERROR - Error processing driver 6283463: cannot access local variable 'daily_rate' where it is not associated with a value
2025-03-13 16:16:01,703 - app.services.predictive_analytics - ERROR - Error processing driver 10980436: cannot access local variable 'daily_rate' where it is not associated with a value
2025-03-13 16:16:01,704 - app.services.predictive_analytics - ERROR - Error processing driver 5675671: cannot access local variable 'daily_rate' where it is not associated with a value
2025-03-13 16:16:01,704 - app.services.predictive_analytics - ERROR - Error processing driver 3386077: cannot access local variable 'daily_rate' where it is not associated with a value
2025-03-13 16:16:01,704 - app.services.predictive_analytics - ERROR - Error processing driver 12688193: cannot access local variable 'daily_rate' where it is not associated with a value
2025-03-13 16:16:01,704 - app.services.predictive_analytics - ERROR - Error processing driver 9580037: cannot access local variable 'daily_rate' where it is not associated with a value
2025-03-13 16:16:01,704 - app.services.predictive_analytics - ERROR - Error processing driver 6489124: cannot access local variable 'daily_rate' where it is not associated with a value
2025-03-13 16:16:01,704 - app.services.predictive_analytics - ERROR - Error processing driver 3394970: cannot access local variable 'daily_rate' where it is not associated with a value
2025-03-13 16:16:01,705 - app.services.predictive_analytics - ERROR - Error processing driver 3402604: cannot access local variable 'daily_rate' where it is not associated with a value
2025-03-13 16:16:01,705 - app.services.predictive_analytics - ERROR - Error processing driver 11462831: cannot access local variable 'daily_rate' where it is not associated with a value
2025-03-13 16:16:01,705 - app.services.predictive_analytics - ERROR - Error processing driver 12689363: cannot access local variable 'daily_rate' where it is not associated with a value
2025-03-13 16:16:01,705 - app.services.predictive_analytics - ERROR - Error processing driver 3494638: cannot access local variable 'daily_rate' where it is not associated with a value
2025-03-13 16:16:01,705 - app.services.predictive_analytics - ERROR - Error processing driver 7704973: cannot access local variable 'daily_rate' where it is not associated with a value
2025-03-13 16:16:01,705 - app.services.predictive_analytics - ERROR - Error processing driver 3603687: cannot access local variable 'daily_rate' where it is not associated with a value
2025-03-13 16:16:01,706 - app.services.predictive_analytics - ERROR - Error processing driver 3304180: cannot access local variable 'daily_rate' where it is not associated with a value
2025-03-13 16:16:01,706 - app.services.predictive_analytics - ERROR - Error processing driver 3165973: cannot access local variable 'daily_rate' where it is not associated with a value
2025-03-13 16:16:01,706 - app.services.predictive_analytics - ERROR - Error processing driver 3549223: cannot access local variable 'daily_rate' where it is not associated with a value
2025-03-13 16:16:01,706 - app.services.predictive_analytics - ERROR - Error processing driver 6449862: cannot access local variable 'daily_rate' where it is not associated with a value
2025-03-13 16:16:01,706 - app.services.predictive_analytics - ERROR - Error processing driver 13399355: cannot access local variable 'daily_rate' where it is not associated with a value
2025-03-13 16:16:01,707 - app.services.predictive_analytics - ERROR - Error processing driver 3478830: cannot access local variable 'daily_rate' where it is not associated with a value
2025-03-13 16:16:01,707 - app.services.predictive_analytics - ERROR - Error processing driver 5053086: cannot access local variable 'daily_rate' where it is not associated with a value
2025-03-13 16:16:01,707 - app.services.predictive_analytics - ERROR - Error processing driver 12689381: cannot access local variable 'daily_rate' where it is not associated with a value
2025-03-13 16:16:01,707 - app.services.predictive_analytics - ERROR - Error processing driver 13425227: cannot access local variable 'daily_rate' where it is not associated with a value
2025-03-13 16:16:01,708 - app.services.predictive_analytics - ERROR - Error processing driver 10975821: cannot access local variable 'daily_rate' where it is not associated with a value
2025-03-13 16:16:01,708 - app.services.predictive_analytics - ERROR - Error processing driver 3394909: cannot access local variable 'daily_rate' where it is not associated with a value
2025-03-13 16:16:01,709 - app.services.predictive_analytics - ERROR - Error processing driver 4560106: cannot access local variable 'daily_rate' where it is not associated with a value
2025-03-13 16:16:01,709 - app.services.predictive_analytics - ERROR - Error processing driver 10944837: cannot access local variable 'daily_rate' where it is not associated with a value
2025-03-13 16:16:01,709 - app.services.predictive_analytics - ERROR - Error processing driver 5007978: cannot access local variable 'daily_rate' where it is not associated with a value
2025-03-13 16:16:01,710 - app.services.predictive_analytics - ERROR - Error processing driver 3450681: cannot access local variable 'daily_rate' where it is not associated with a value
2025-03-13 16:16:01,710 - app.services.predictive_analytics - ERROR - Error processing driver 13394592: cannot access local variable 'daily_rate' where it is not associated with a value
2025-03-13 16:16:01,710 - app.services.predictive_analytics - ERROR - Error processing driver 6477408: cannot access local variable 'daily_rate' where it is not associated with a value
2025-03-13 16:16:01,710 - app.services.predictive_analytics - ERROR - Error processing driver 13380081: cannot access local variable 'daily_rate' where it is not associated with a value
2025-03-13 16:16:01,710 - app.services.predictive_analytics - ERROR - Error processing driver 6719417: cannot access local variable 'daily_rate' where it is not associated with a value
2025-03-13 16:16:01,711 - app.services.predictive_analytics - ERROR - Error processing driver 12686407: cannot access local variable 'daily_rate' where it is not associated with a value
2025-03-13 16:16:01,711 - app.services.predictive_analytics - ERROR - Error processing driver 13435553: cannot access local variable 'daily_rate' where it is not associated with a value
2025-03-13 16:16:01,711 - app.services.predictive_analytics - ERROR - Error processing driver 4637003: cannot access local variable 'daily_rate' where it is not associated with a value
2025-03-13 16:16:01,711 - app.services.predictive_analytics - ERROR - Error processing driver 13380099: cannot access local variable 'daily_rate' where it is not associated with a value
2025-03-13 16:16:01,711 - app.services.predictive_analytics - ERROR - Error processing driver 3613645: cannot access local variable 'daily_rate' where it is not associated with a value
2025-03-13 16:16:05,102 - app.db.repositories.data_repository - INFO - Fetching driver risk data for past 3 days
2025-03-13 16:16:05,103 - app.db.repositories.data_repository - DEBUG - Executing pipeline: [{'$match': {'event_time': {'$gte': datetime.datetime(2025, 3, 10, 16, 16, 5, 103184)}}}, {'$group': {'_id': '$driver_uuid', 'name': {'$first': '$driver_name'}, 'violation_count': {'$sum': 1}, 'violation_types': {'$addToSet': '$violation_type'}, 'avg_severity': {'$avg': {'$switch': {'branches': [{'case': {'$eq': ['$severity', 'HIGH']}, 'then': 3}, {'case': {'$eq': ['$severity', 'MEDIUM']}, 'then': 2}], 'default': 1}}}, 'last_violation': {'$max': '$event_time'}, 'max_speed': {'$max': '$telemetry.speed'}, 'vehicle_license': {'$first': '$vehicle_license'}}}, {'$sort': {'violation_count': -1}}]
2025-03-13 16:16:05,103 - pymongo.serverSelection - DEBUG - {"message": "Server selection started", "selector": "Primary()", "operation": "aggregate", "topologyDescription": "<TopologyDescription id: 67d2be386a3ec76c15ab437e, topology_type: Single, servers: [<ServerDescription ('3.144.134.141', 27017) server_type: Standalone, rtt: 0.31467807999958697>]>", "clientId": {"$oid": "67d2be386a3ec76c15ab437e"}}
2025-03-13 16:16:05,104 - pymongo.serverSelection - DEBUG - {"message": "Server selection succeeded", "selector": "Primary()", "operation": "aggregate", "topologyDescription": "<TopologyDescription id: 67d2be386a3ec76c15ab437e, topology_type: Single, servers: [<ServerDescription ('3.144.134.141', 27017) server_type: Standalone, rtt: 0.31467807999958697>]>", "clientId": {"$oid": "67d2be386a3ec76c15ab437e"}, "serverHost": "3.144.134.141", "serverPort": 27017}
2025-03-13 16:16:05,104 - pymongo.connection - DEBUG - {"clientId": {"$oid": "67d2be386a3ec76c15ab437e"}, "message": "Connection checkout started", "serverHost": "3.144.134.141", "serverPort": 27017}
2025-03-13 16:16:05,105 - pymongo.connection - DEBUG - {"clientId": {"$oid": "67d2be386a3ec76c15ab437e"}, "message": "Connection checked out", "serverHost": "3.144.134.141", "serverPort": 27017, "driverConnectionId": 1, "durationMS": 0.0}
2025-03-13 16:16:05,105 - pymongo.command - DEBUG - {"clientId": {"$oid": "67d2be386a3ec76c15ab437e"}, "message": "Command started", "command": "{\"aggregate\": \"violations\", \"pipeline\": [{\"$match\": {\"event_time\": {\"$gte\": {\"$date\": \"2025-03-10T16:16:05.103Z\"}}}}, {\"$group\": {\"_id\": \"$driver_uuid\", \"name\": {\"$first\": \"$driver_name\"}, \"violation_count\": {\"$sum\": 1}, \"violation_types\": {\"$addToSet\": \"$violation_type\"}, \"avg_severity\": {\"$avg\": {\"$switch\": {\"branches\": [{\"case\": {\"$eq\": [\"$severity\", \"HIGH\"]}, \"then\": 3}, {\"case\": {\"$eq\": [\"$severity\", \"MEDIUM\"]}, \"then\": 2}], \"default\": 1}}}, \"last_violation\": {\"$max\": \"$event_time\"}, \"max_speed\": {\"$max\": \"$telemetry.speed\"}, \"vehicle_license\": {\"$first\": \"$vehicle_license\"}}}, {\"$sort\": {\"violation_count\": -1}}], \"lsid\": {\"id\": {\"$binary\": {\"base64\": \"4kyfYA+oQWq8zTJyVOBxSA==\", \"subType\": \"04\"}}}, \"$db\": \"opal_server\"}", "commandName": "aggregate", "databaseName": "opal_server", "requestId": 15724, "operationId": 15724, "driverConnectionId": 1, "serverConnectionId": 13202, "serverHost": "3.144.134.141", "serverPort": 27017}
2025-03-13 16:16:05,583 - pymongo.topology - DEBUG - {"topologyId": {"$oid": "67d2be386a3ec76c15ab437e"}, "driverConnectionId": 1, "serverConnectionId": 13200, "serverHost": "3.144.134.141", "serverPort": 27017, "awaited": true, "durationMS": 10000.0, "reply": "{\"isWritablePrimary\": true, \"topologyVersion\": {\"processId\": {\"$oid\": \"67b7e5814f77c1a87c56d054\"}}, \"maxBsonObjectSize\": 16777216, \"maxMessageSizeBytes\": 48000000, \"maxWriteBatchSize\": 100000, \"localTime\": {\"$date\": \"2025-03-13T11:16:05.529Z\"}, \"logicalSessionTimeoutMinutes\": 30, \"connectionId\": 13200, \"maxWireVersion\": 25, \"ok\": 1.0}", "message": "Server heartbeat succeeded"}
2025-03-13 16:16:05,584 - pymongo.topology - DEBUG - {"topologyId": {"$oid": "67d2be386a3ec76c15ab437e"}, "driverConnectionId": 1, "serverConnectionId": 13200, "serverHost": "3.144.134.141", "serverPort": 27017, "awaited": true, "message": "Server heartbeat started"}
2025-03-13 16:16:05,767 - pymongo.command - DEBUG - {"clientId": {"$oid": "67d2be386a3ec76c15ab437e"}, "message": "Command succeeded", "durationMS": 662.215, "reply": "{\"cursor\": {\"firstBatch\": [{\"_id\": \"unknown\", \"name\": \"Unknown\", \"violation_count\": 962, \"violation_types\": [\"SPEED_MEDIUM\", \"SPEED_LOW\", \"SPEED_HIGH\"], \"avg_severity\": 1.9553014553014554, \"last_violation\": {\"$date\": \"2025-03-13T11:14:29.496Z\"}, \"vehicle_license\": \"860260057075813\"}, {\"_id\": \"7463170a-de85-4c5d-a77b-b506d939aca1\", \"name\": \"GUL ZAMAN #94378054\", \"violation_count\": 237, \"violation_types\": [\"SPEED_MEDIUM\", \"SPEED_LOW\"], \"avg_severity\": 1.59915611814346, \"last_violation\": {\"$date\": \"2025-03-13T06:31:35.314Z\"}, \"vehicle_license\": \"1075MR\"}, {\"_id\": \"3dd80f61-5ed1-4038-b3a8-5d2e37759893\", \"name\": \"DALER SINGH\", \"violation_count\": 231, \"violation_types\": [\"SPEED_MEDIUM\", \"SPEED_LOW\"], \"avg_severity\": 1.5411255411255411, \"last_violation\": {\"$date\": \"2025-03-11T15:04:20.407Z\"}, \"vehicle_license\": \"1313YD\"}, {\"_id\": \"10009164\", \"name\": \"Unknown\", \"violation_count\": 210, \"violation_types\": [\"SPEED_MEDIUM\", \"SPEED_LOW\", \"SPEED_HIGH\"], \"avg_severity\": 1.7142857142857142, \"last_viol...", "commandName": "aggregate", "databaseName": "opal_server", "requestId": 15724, "operationId": 15724, "driverConnectionId": 1, "serverConnectionId": 13202, "serverHost": "3.144.134.141", "serverPort": 27017}
2025-03-13 16:16:05,767 - pymongo.connection - DEBUG - {"clientId": {"$oid": "67d2be386a3ec76c15ab437e"}, "message": "Connection checked in", "serverHost": "3.144.134.141", "serverPort": 27017, "driverConnectionId": 1}
2025-03-13 16:16:05,768 - pymongo.serverSelection - DEBUG - {"message": "Server selection started", "selector": "<function any_server_selector at 0x0000024CD1D48720>", "operation": "getMore", "topologyDescription": "<TopologyDescription id: 67d2be386a3ec76c15ab437e, topology_type: Single, servers: [<ServerDescription ('3.144.134.141', 27017) server_type: Standalone, rtt: 0.3235424639997453>]>", "clientId": {"$oid": "67d2be386a3ec76c15ab437e"}}
2025-03-13 16:16:05,769 - pymongo.serverSelection - DEBUG - {"message": "Server selection succeeded", "selector": "<function any_server_selector at 0x0000024CD1D48720>", "operation": "getMore", "topologyDescription": "<TopologyDescription id: 67d2be386a3ec76c15ab437e, topology_type: Single, servers: [<ServerDescription ('3.144.134.141', 27017) server_type: Standalone, rtt: 0.3235424639997453>]>", "clientId": {"$oid": "67d2be386a3ec76c15ab437e"}, "serverHost": "3.144.134.141", "serverPort": 27017}
2025-03-13 16:16:05,770 - pymongo.connection - DEBUG - {"clientId": {"$oid": "67d2be386a3ec76c15ab437e"}, "message": "Connection checkout started", "serverHost": "3.144.134.141", "serverPort": 27017}
2025-03-13 16:16:05,770 - pymongo.connection - DEBUG - {"clientId": {"$oid": "67d2be386a3ec76c15ab437e"}, "message": "Connection checked out", "serverHost": "3.144.134.141", "serverPort": 27017, "driverConnectionId": 1, "durationMS": 0.0}
2025-03-13 16:16:05,771 - pymongo.command - DEBUG - {"clientId": {"$oid": "67d2be386a3ec76c15ab437e"}, "message": "Command started", "command": "{\"getMore\": 2064440058107322511, \"collection\": \"violations\", \"lsid\": {\"id\": {\"$binary\": {\"base64\": \"4kyfYA+oQWq8zTJyVOBxSA==\", \"subType\": \"04\"}}}, \"$db\": \"opal_server\"}", "commandName": "getMore", "databaseName": "opal_server", "requestId": 11478, "operationId": 11478, "driverConnectionId": 1, "serverConnectionId": 13202, "serverHost": "3.144.134.141", "serverPort": 27017}
2025-03-13 16:16:06,091 - pymongo.command - DEBUG - {"clientId": {"$oid": "67d2be386a3ec76c15ab437e"}, "message": "Command succeeded", "durationMS": 319.903, "reply": "{\"cursor\": {\"nextBatch\": [{\"_id\": \"13380099\", \"name\": \"Unknown\", \"violation_count\": 1, \"violation_types\": [\"SPEED_MEDIUM\"], \"avg_severity\": 2.0, \"last_violation\": {\"$date\": \"2025-03-13T05:42:56.753Z\"}, \"vehicle_license\": \"860260056943276\"}, {\"_id\": \"10162055\", \"name\": \"Unknown\", \"violation_count\": 1, \"violation_types\": [\"SPEED_HIGH\"], \"avg_severity\": 3.0, \"last_violation\": {\"$date\": \"2025-03-11T15:43:20.683Z\"}, \"vehicle_license\": \"860665050686715\"}], \"ns\": \"opal_server.violations\"}, \"ok\": 1.0}", "commandName": "getMore", "databaseName": "opal_server", "requestId": 11478, "operationId": 11478, "driverConnectionId": 1, "serverConnectionId": 13202, "serverHost": "3.144.134.141", "serverPort": 27017}
2025-03-13 16:16:06,092 - pymongo.connection - DEBUG - {"clientId": {"$oid": "67d2be386a3ec76c15ab437e"}, "message": "Connection checked in", "serverHost": "3.144.134.141", "serverPort": 27017, "driverConnectionId": 1}
2025-03-13 16:16:06,093 - app.db.repositories.data_repository - INFO - Retrieved stats for 103 drivers
2025-03-13 16:16:06,093 - app.services.predictive_analytics - INFO - Retrieved 103 driver records
2025-03-13 16:16:06,093 - app.services.predictive_analytics - ERROR - Error processing driver 7463170a-de85-4c5d-a77b-b506d939aca1: cannot access local variable 'daily_rate' where it is not associated with a value
2025-03-13 16:16:06,093 - app.services.predictive_analytics - ERROR - Error processing driver 3dd80f61-5ed1-4038-b3a8-5d2e37759893: cannot access local variable 'daily_rate' where it is not associated with a value
2025-03-13 16:16:06,093 - app.services.predictive_analytics - ERROR - Error processing driver 10009164: cannot access local variable 'daily_rate' where it is not associated with a value
2025-03-13 16:16:06,094 - app.services.predictive_analytics - ERROR - Error processing driver 10003423: cannot access local variable 'daily_rate' where it is not associated with a value
2025-03-13 16:16:06,094 - app.services.predictive_analytics - ERROR - Error processing driver ab007124-ab3c-4e74-9c14-2407e6e8975b: cannot access local variable 'daily_rate' where it is not associated with a value
2025-03-13 16:16:06,094 - app.services.predictive_analytics - ERROR - Error processing driver fb6b6c56-18fd-4602-aa8d-10d95f46f3d5: cannot access local variable 'daily_rate' where it is not associated with a value
2025-03-13 16:16:06,094 - app.services.predictive_analytics - ERROR - Error processing driver 10024125: cannot access local variable 'daily_rate' where it is not associated with a value
2025-03-13 16:16:06,094 - app.services.predictive_analytics - ERROR - Error processing driver 9928039: cannot access local variable 'daily_rate' where it is not associated with a value
2025-03-13 16:16:06,094 - app.services.predictive_analytics - ERROR - Error processing driver e604d5c5-e1a6-45c3-b619-73393f04097c: cannot access local variable 'daily_rate' where it is not associated with a value
2025-03-13 16:16:06,094 - app.services.predictive_analytics - ERROR - Error processing driver 59158a1a-f5b1-4242-b9f0-ee99ca9fba12: cannot access local variable 'daily_rate' where it is not associated with a value
2025-03-13 16:16:06,096 - app.services.predictive_analytics - ERROR - Error processing driver 7471302: cannot access local variable 'daily_rate' where it is not associated with a value
2025-03-13 16:16:06,096 - app.services.predictive_analytics - ERROR - Error processing driver 10008570: cannot access local variable 'daily_rate' where it is not associated with a value
2025-03-13 16:16:06,096 - app.services.predictive_analytics - ERROR - Error processing driver 10059296: cannot access local variable 'daily_rate' where it is not associated with a value
2025-03-13 16:16:06,096 - app.services.predictive_analytics - ERROR - Error processing driver 12990571: cannot access local variable 'daily_rate' where it is not associated with a value
2025-03-13 16:16:06,097 - app.services.predictive_analytics - ERROR - Error processing driver 3394970: cannot access local variable 'daily_rate' where it is not associated with a value
2025-03-13 16:16:06,097 - app.services.predictive_analytics - ERROR - Error processing driver 12689380: cannot access local variable 'daily_rate' where it is not associated with a value
2025-03-13 16:16:06,097 - app.services.predictive_analytics - ERROR - Error processing driver e889d91f-af57-48a5-a384-fdac719f7426: cannot access local variable 'daily_rate' where it is not associated with a value
2025-03-13 16:16:06,097 - app.services.predictive_analytics - ERROR - Error processing driver 10003181: cannot access local variable 'daily_rate' where it is not associated with a value
2025-03-13 16:16:06,097 - app.services.predictive_analytics - ERROR - Error processing driver 3871197: cannot access local variable 'daily_rate' where it is not associated with a value
2025-03-13 16:16:06,098 - app.services.predictive_analytics - ERROR - Error processing driver 6739719: cannot access local variable 'daily_rate' where it is not associated with a value
2025-03-13 16:16:06,098 - app.services.predictive_analytics - ERROR - Error processing driver f12904ca-437d-4e12-aab7-a22285c60468: cannot access local variable 'daily_rate' where it is not associated with a value
2025-03-13 16:16:06,098 - app.services.predictive_analytics - ERROR - Error processing driver 10003241: cannot access local variable 'daily_rate' where it is not associated with a value
2025-03-13 16:16:06,098 - app.services.predictive_analytics - ERROR - Error processing driver 3169805: cannot access local variable 'daily_rate' where it is not associated with a value
2025-03-13 16:16:06,098 - app.services.predictive_analytics - ERROR - Error processing driver 12689366: cannot access local variable 'daily_rate' where it is not associated with a value
2025-03-13 16:16:06,099 - app.services.predictive_analytics - ERROR - Error processing driver 3521914: cannot access local variable 'daily_rate' where it is not associated with a value
2025-03-13 16:16:06,099 - app.services.predictive_analytics - ERROR - Error processing driver 3521899: cannot access local variable 'daily_rate' where it is not associated with a value
2025-03-13 16:16:06,099 - app.services.predictive_analytics - ERROR - Error processing driver 2736896: cannot access local variable 'daily_rate' where it is not associated with a value
2025-03-13 16:16:06,099 - app.services.predictive_analytics - ERROR - Error processing driver 3394909: cannot access local variable 'daily_rate' where it is not associated with a value
2025-03-13 16:16:06,099 - app.services.predictive_analytics - ERROR - Error processing driver 5007978: cannot access local variable 'daily_rate' where it is not associated with a value
2025-03-13 16:16:06,100 - app.services.predictive_analytics - ERROR - Error processing driver 6489124: cannot access local variable 'daily_rate' where it is not associated with a value
2025-03-13 16:16:06,100 - app.services.predictive_analytics - ERROR - Error processing driver 6283463: cannot access local variable 'daily_rate' where it is not associated with a value
2025-03-13 16:16:06,100 - app.services.predictive_analytics - ERROR - Error processing driver 13380096: cannot access local variable 'daily_rate' where it is not associated with a value
2025-03-13 16:16:06,100 - app.services.predictive_analytics - ERROR - Error processing driver 4574031: cannot access local variable 'daily_rate' where it is not associated with a value
2025-03-13 16:16:06,100 - app.services.predictive_analytics - ERROR - Error processing driver 7445245: cannot access local variable 'daily_rate' where it is not associated with a value
2025-03-13 16:16:06,101 - app.services.predictive_analytics - ERROR - Error processing driver 3535546: cannot access local variable 'daily_rate' where it is not associated with a value
2025-03-13 16:16:06,101 - app.services.predictive_analytics - ERROR - Error processing driver 3379452: cannot access local variable 'daily_rate' where it is not associated with a value
2025-03-13 16:16:06,101 - app.services.predictive_analytics - ERROR - Error processing driver 4748880: cannot access local variable 'daily_rate' where it is not associated with a value
2025-03-13 16:16:06,101 - app.services.predictive_analytics - ERROR - Error processing driver 12689363: cannot access local variable 'daily_rate' where it is not associated with a value
2025-03-13 16:16:06,101 - app.services.predictive_analytics - ERROR - Error processing driver 13378634: cannot access local variable 'daily_rate' where it is not associated with a value
2025-03-13 16:16:06,101 - app.services.predictive_analytics - ERROR - Error processing driver 13435553: cannot access local variable 'daily_rate' where it is not associated with a value
2025-03-13 16:16:06,102 - app.services.predictive_analytics - ERROR - Error processing driver 13434780: cannot access local variable 'daily_rate' where it is not associated with a value
2025-03-13 16:16:06,102 - app.services.predictive_analytics - ERROR - Error processing driver 9580037: cannot access local variable 'daily_rate' where it is not associated with a value
2025-03-13 16:16:06,102 - app.services.predictive_analytics - ERROR - Error processing driver 4634857: cannot access local variable 'daily_rate' where it is not associated with a value
2025-03-13 16:16:06,102 - app.services.predictive_analytics - ERROR - Error processing driver 3497128: cannot access local variable 'daily_rate' where it is not associated with a value
2025-03-13 16:16:06,102 - app.services.predictive_analytics - ERROR - Error processing driver 3165973: cannot access local variable 'daily_rate' where it is not associated with a value
2025-03-13 16:16:06,103 - app.services.predictive_analytics - ERROR - Error processing driver 7432501: cannot access local variable 'daily_rate' where it is not associated with a value
2025-03-13 16:16:06,103 - app.services.predictive_analytics - ERROR - Error processing driver 10980436: cannot access local variable 'daily_rate' where it is not associated with a value
2025-03-13 16:16:06,103 - app.services.predictive_analytics - ERROR - Error processing driver 6449862: cannot access local variable 'daily_rate' where it is not associated with a value
2025-03-13 16:16:06,103 - app.services.predictive_analytics - ERROR - Error processing driver 13425227: cannot access local variable 'daily_rate' where it is not associated with a value
2025-03-13 16:16:06,103 - app.services.predictive_analytics - ERROR - Error processing driver 12660346: cannot access local variable 'daily_rate' where it is not associated with a value
2025-03-13 16:16:06,104 - app.services.predictive_analytics - ERROR - Error processing driver 3494638: cannot access local variable 'daily_rate' where it is not associated with a value
2025-03-13 16:16:06,104 - app.services.predictive_analytics - ERROR - Error processing driver 7704973: cannot access local variable 'daily_rate' where it is not associated with a value
2025-03-13 16:16:06,104 - app.services.predictive_analytics - ERROR - Error processing driver 3549223: cannot access local variable 'daily_rate' where it is not associated with a value
2025-03-13 16:16:06,104 - app.services.predictive_analytics - ERROR - Error processing driver 4637003: cannot access local variable 'daily_rate' where it is not associated with a value
2025-03-13 16:16:06,104 - app.services.predictive_analytics - ERROR - Error processing driver 6448094: cannot access local variable 'daily_rate' where it is not associated with a value
2025-03-13 16:16:06,104 - app.services.predictive_analytics - ERROR - Error processing driver 3386077: cannot access local variable 'daily_rate' where it is not associated with a value
2025-03-13 16:16:06,105 - app.services.predictive_analytics - ERROR - Error processing driver 12660341: cannot access local variable 'daily_rate' where it is not associated with a value
2025-03-13 16:16:06,105 - app.services.predictive_analytics - ERROR - Error processing driver 7520050: cannot access local variable 'daily_rate' where it is not associated with a value
2025-03-13 16:16:06,105 - app.services.predictive_analytics - ERROR - Error processing driver 11462831: cannot access local variable 'daily_rate' where it is not associated with a value
2025-03-13 16:16:06,105 - app.services.predictive_analytics - ERROR - Error processing driver 7465620: cannot access local variable 'daily_rate' where it is not associated with a value
2025-03-13 16:16:06,105 - app.services.predictive_analytics - ERROR - Error processing driver 3478830: cannot access local variable 'daily_rate' where it is not associated with a value
2025-03-13 16:16:06,105 - app.services.predictive_analytics - ERROR - Error processing driver 10944837: cannot access local variable 'daily_rate' where it is not associated with a value
2025-03-13 16:16:06,106 - app.services.predictive_analytics - ERROR - Error processing driver 4626720: cannot access local variable 'daily_rate' where it is not associated with a value
2025-03-13 16:16:06,106 - app.services.predictive_analytics - ERROR - Error processing driver 3386022: cannot access local variable 'daily_rate' where it is not associated with a value
2025-03-13 16:16:06,106 - app.services.predictive_analytics - ERROR - Error processing driver 5675671: cannot access local variable 'daily_rate' where it is not associated with a value
2025-03-13 16:16:06,106 - app.services.predictive_analytics - ERROR - Error processing driver 6211481: cannot access local variable 'daily_rate' where it is not associated with a value
2025-03-13 16:16:06,106 - app.services.predictive_analytics - ERROR - Error processing driver 3603687: cannot access local variable 'daily_rate' where it is not associated with a value
2025-03-13 16:16:06,106 - app.services.predictive_analytics - ERROR - Error processing driver 4561513: cannot access local variable 'daily_rate' where it is not associated with a value
2025-03-13 16:16:06,107 - app.services.predictive_analytics - ERROR - Error processing driver 3304180: cannot access local variable 'daily_rate' where it is not associated with a value
2025-03-13 16:16:06,107 - app.services.predictive_analytics - ERROR - Error processing driver 13399355: cannot access local variable 'daily_rate' where it is not associated with a value
2025-03-13 16:16:06,107 - app.services.predictive_analytics - ERROR - Error processing driver 6448007: cannot access local variable 'daily_rate' where it is not associated with a value
2025-03-13 16:16:06,107 - app.services.predictive_analytics - ERROR - Error processing driver 3450681: cannot access local variable 'daily_rate' where it is not associated with a value
2025-03-13 16:16:06,107 - app.services.predictive_analytics - ERROR - Error processing driver 12688193: cannot access local variable 'daily_rate' where it is not associated with a value
2025-03-13 16:16:06,107 - app.services.predictive_analytics - ERROR - Error processing driver 3402604: cannot access local variable 'daily_rate' where it is not associated with a value
2025-03-13 16:16:06,107 - app.services.predictive_analytics - ERROR - Error processing driver 72143e6d-e901-4c44-9795-71e0eed8758a: cannot access local variable 'daily_rate' where it is not associated with a value
2025-03-13 16:16:06,108 - app.services.predictive_analytics - ERROR - Error processing driver 13380081: cannot access local variable 'daily_rate' where it is not associated with a value
2025-03-13 16:16:06,108 - app.services.predictive_analytics - ERROR - Error processing driver 13457552: cannot access local variable 'daily_rate' where it is not associated with a value
2025-03-13 16:16:06,108 - app.services.predictive_analytics - ERROR - Error processing driver 6719417: cannot access local variable 'daily_rate' where it is not associated with a value
2025-03-13 16:16:06,108 - app.services.predictive_analytics - ERROR - Error processing driver 5053086: cannot access local variable 'daily_rate' where it is not associated with a value
2025-03-13 16:16:06,109 - app.services.predictive_analytics - ERROR - Error processing driver 13394592: cannot access local variable 'daily_rate' where it is not associated with a value
2025-03-13 16:16:06,109 - app.services.predictive_analytics - ERROR - Error processing driver 3613645: cannot access local variable 'daily_rate' where it is not associated with a value
2025-03-13 16:16:06,109 - app.services.predictive_analytics - ERROR - Error processing driver 12686407: cannot access local variable 'daily_rate' where it is not associated with a value
2025-03-13 16:16:06,109 - app.services.predictive_analytics - ERROR - Error processing driver 7471351: cannot access local variable 'daily_rate' where it is not associated with a value
2025-03-13 16:16:06,110 - app.services.predictive_analytics - ERROR - Error processing driver 10975821: cannot access local variable 'daily_rate' where it is not associated with a value
2025-03-13 16:16:06,110 - app.services.predictive_analytics - ERROR - Error processing driver 1227148: cannot access local variable 'daily_rate' where it is not associated with a value
2025-03-13 16:16:06,110 - app.services.predictive_analytics - ERROR - Error processing driver 12454992: cannot access local variable 'daily_rate' where it is not associated with a value
2025-03-13 16:16:06,110 - app.services.predictive_analytics - ERROR - Error processing driver 13408919: cannot access local variable 'daily_rate' where it is not associated with a value
2025-03-13 16:16:06,111 - app.services.predictive_analytics - ERROR - Error processing driver 12689381: cannot access local variable 'daily_rate' where it is not associated with a value
2025-03-13 16:16:06,111 - app.services.predictive_analytics - ERROR - Error processing driver 6477408: cannot access local variable 'daily_rate' where it is not associated with a value
2025-03-13 16:16:06,111 - app.services.predictive_analytics - ERROR - Error processing driver 4082833: cannot access local variable 'daily_rate' where it is not associated with a value
2025-03-13 16:16:06,111 - app.services.predictive_analytics - ERROR - Error processing driver 6482426: cannot access local variable 'daily_rate' where it is not associated with a value
2025-03-13 16:16:06,112 - app.services.predictive_analytics - ERROR - Error processing driver 4560106: cannot access local variable 'daily_rate' where it is not associated with a value
2025-03-13 16:16:06,112 - app.services.predictive_analytics - ERROR - Error processing driver 4573744: cannot access local variable 'daily_rate' where it is not associated with a value
2025-03-13 16:16:06,112 - app.services.predictive_analytics - ERROR - Error processing driver 12923083: cannot access local variable 'daily_rate' where it is not associated with a value
2025-03-13 16:16:06,112 - app.services.predictive_analytics - ERROR - Error processing driver 12854230: cannot access local variable 'daily_rate' where it is not associated with a value
2025-03-13 16:16:06,112 - app.services.predictive_analytics - ERROR - Error processing driver 9480756: cannot access local variable 'daily_rate' where it is not associated with a value
2025-03-13 16:16:06,112 - app.services.predictive_analytics - ERROR - Error processing driver 4616917: cannot access local variable 'daily_rate' where it is not associated with a value
2025-03-13 16:16:06,113 - app.services.predictive_analytics - ERROR - Error processing driver 974227: cannot access local variable 'daily_rate' where it is not associated with a value
2025-03-13 16:16:06,113 - app.services.predictive_analytics - ERROR - Error processing driver 4596553: cannot access local variable 'daily_rate' where it is not associated with a value
2025-03-13 16:16:06,113 - app.services.predictive_analytics - ERROR - Error processing driver 12861265: cannot access local variable 'daily_rate' where it is not associated with a value
2025-03-13 16:16:06,113 - app.services.predictive_analytics - ERROR - Error processing driver 13380099: cannot access local variable 'daily_rate' where it is not associated with a value
2025-03-13 16:16:06,113 - app.services.predictive_analytics - ERROR - Error processing driver 10162055: cannot access local variable 'daily_rate' where it is not associated with a value
2025-03-13 16:16:19,630 - numexpr.utils - INFO - Note: NumExpr detected 12 cores but "NUMEXPR_MAX_THREADS" not set, so enforcing safe limit of 8.
2025-03-13 16:16:19,630 - numexpr.utils - INFO - NumExpr defaulting to 8 threads.
2025-03-13 16:16:21,227 - matplotlib - DEBUG - matplotlib data path: C:\Users\msameerakram\AppData\Local\anaconda3\Lib\site-packages\matplotlib\mpl-data
2025-03-13 16:16:21,233 - matplotlib - DEBUG - CONFIGDIR=C:\Users\msameerakram\.matplotlib
2025-03-13 16:16:21,235 - matplotlib - DEBUG - interactive is False
2025-03-13 16:16:21,236 - matplotlib - DEBUG - platform is win32
2025-03-13 16:16:21,302 - matplotlib - DEBUG - CACHEDIR=C:\Users\msameerakram\.matplotlib
2025-03-13 16:16:21,307 - matplotlib.font_manager - DEBUG - Using fontManager instance from C:\Users\msameerakram\.matplotlib\fontlist-v390.json
2025-03-13 16:16:24,164 - numexpr.utils - INFO - Note: NumExpr detected 12 cores but "NUMEXPR_MAX_THREADS" not set, so enforcing safe limit of 8.
2025-03-13 16:16:24,164 - numexpr.utils - INFO - NumExpr defaulting to 8 threads.
2025-03-13 16:16:25,574 - matplotlib - DEBUG - matplotlib data path: C:\Users\msameerakram\AppData\Local\anaconda3\Lib\site-packages\matplotlib\mpl-data
2025-03-13 16:16:25,581 - matplotlib - DEBUG - CONFIGDIR=C:\Users\msameerakram\.matplotlib
2025-03-13 16:16:25,583 - matplotlib - DEBUG - interactive is False
2025-03-13 16:16:25,583 - matplotlib - DEBUG - platform is win32
2025-03-13 16:16:25,653 - matplotlib - DEBUG - CACHEDIR=C:\Users\msameerakram\.matplotlib
2025-03-13 16:16:25,656 - matplotlib.font_manager - DEBUG - Using fontManager instance from C:\Users\msameerakram\.matplotlib\fontlist-v390.json
2025-03-13 16:16:27,164 - asyncio - DEBUG - Using selector: SelectSelector
2025-03-13 16:16:27,208 - pymongo.topology - DEBUG - {"topologyId": {"$oid": "67d2be8bb430d15c64d990e4"}, "message": "Starting topology monitoring"}
2025-03-13 16:16:27,208 - pymongo.topology - DEBUG - {"topologyId": {"$oid": "67d2be8bb430d15c64d990e4"}, "previousDescription": "<TopologyDescription id: 67d2be8bb430d15c64d990e4, topology_type: Unknown, servers: []>", "newDescription": "<TopologyDescription id: 67d2be8bb430d15c64d990e4, topology_type: Unknown, servers: [<ServerDescription ('3.144.134.141', 27017) server_type: Unknown, rtt: None>]>", "message": "Topology description changed"}
2025-03-13 16:16:27,208 - pymongo.topology - DEBUG - {"topologyId": {"$oid": "67d2be8bb430d15c64d990e4"}, "serverHost": "3.144.134.141", "serverPort": 27017, "message": "Starting server monitoring"}
2025-03-13 16:16:27,210 - pymongo.connection - DEBUG - {"clientId": {"$oid": "67d2be8bb430d15c64d990e4"}, "message": "Connection pool created", "serverHost": "3.144.134.141", "serverPort": 27017}
2025-03-13 16:16:27,211 - pymongo.serverSelection - DEBUG - {"message": "Server selection started", "selector": "Primary()", "operation": "ping", "topologyDescription": "<TopologyDescription id: 67d2be8bb430d15c64d990e4, topology_type: Unknown, servers: [<ServerDescription ('3.144.134.141', 27017) server_type: Unknown, rtt: None>]>", "clientId": {"$oid": "67d2be8bb430d15c64d990e4"}}
2025-03-13 16:16:27,212 - pymongo.serverSelection - DEBUG - {"message": "Waiting for suitable server to become available", "selector": "Primary()", "operation": "ping", "topologyDescription": "<TopologyDescription id: 67d2be8bb430d15c64d990e4, topology_type: Unknown, servers: [<ServerDescription ('3.144.134.141', 27017) server_type: Unknown, rtt: None>]>", "clientId": {"$oid": "67d2be8bb430d15c64d990e4"}, "remainingTimeMS": 30}
2025-03-13 16:16:27,530 - pymongo.topology - DEBUG - {"topologyId": {"$oid": "67d2be8bb430d15c64d990e4"}, "driverConnectionId": 1, "serverHost": "3.144.134.141", "serverPort": 27017, "awaited": false, "message": "Server heartbeat started"}
2025-03-13 16:16:27,853 - pymongo.topology - DEBUG - {"topologyId": {"$oid": "67d2be8bb430d15c64d990e4"}, "driverConnectionId": 1, "serverConnectionId": 13203, "serverHost": "3.144.134.141", "serverPort": 27017, "awaited": false, "durationMS": 328.0000000013388, "reply": "{\"helloOk\": true, \"ismaster\": true, \"topologyVersion\": {\"processId\": {\"$oid\": \"67b7e5814f77c1a87c56d054\"}}, \"maxBsonObjectSize\": 16777216, \"maxMessageSizeBytes\": 48000000, \"maxWriteBatchSize\": 100000, \"localTime\": {\"$date\": \"2025-03-13T11:16:27.824Z\"}, \"logicalSessionTimeoutMinutes\": 30, \"connectionId\": 13203, \"maxWireVersion\": 25, \"ok\": 1.0}", "message": "Server heartbeat succeeded"}
2025-03-13 16:16:27,854 - pymongo.connection - DEBUG - {"clientId": {"$oid": "67d2be8bb430d15c64d990e4"}, "message": "Connection pool ready", "serverHost": "3.144.134.141", "serverPort": 27017}
2025-03-13 16:16:27,854 - pymongo.topology - DEBUG - {"topologyId": {"$oid": "67d2be8bb430d15c64d990e4"}, "previousDescription": "<TopologyDescription id: 67d2be8bb430d15c64d990e4, topology_type: Unknown, servers: [<ServerDescription ('3.144.134.141', 27017) server_type: Unknown, rtt: None>]>", "newDescription": "<TopologyDescription id: 67d2be8bb430d15c64d990e4, topology_type: Single, servers: [<ServerDescription ('3.144.134.141', 27017) server_type: Standalone, rtt: 0.3280000000013388>]>", "message": "Topology description changed"}
2025-03-13 16:16:27,855 - pymongo.serverSelection - DEBUG - {"message": "Server selection succeeded", "selector": "Primary()", "operation": "ping", "topologyDescription": "<TopologyDescription id: 67d2be8bb430d15c64d990e4, topology_type: Single, servers: [<ServerDescription ('3.144.134.141', 27017) server_type: Standalone, rtt: 0.3280000000013388>]>", "clientId": {"$oid": "67d2be8bb430d15c64d990e4"}, "serverHost": "3.144.134.141", "serverPort": 27017}
2025-03-13 16:16:27,855 - pymongo.topology - DEBUG - {"topologyId": {"$oid": "67d2be8bb430d15c64d990e4"}, "driverConnectionId": 1, "serverConnectionId": 13203, "serverHost": "3.144.134.141", "serverPort": 27017, "awaited": true, "message": "Server heartbeat started"}
2025-03-13 16:16:27,857 - pymongo.connection - DEBUG - {"clientId": {"$oid": "67d2be8bb430d15c64d990e4"}, "message": "Connection checkout started", "serverHost": "3.144.134.141", "serverPort": 27017}
2025-03-13 16:16:27,857 - pymongo.connection - DEBUG - {"clientId": {"$oid": "67d2be8bb430d15c64d990e4"}, "message": "Connection created", "serverHost": "3.144.134.141", "serverPort": 27017, "driverConnectionId": 1}
2025-03-13 16:16:28,840 - pymongo.connection - DEBUG - {"clientId": {"$oid": "67d2be8bb430d15c64d990e4"}, "message": "Connection ready", "serverHost": "3.144.134.141", "serverPort": 27017, "driverConnectionId": 1, "durationMS": 0.6569999999992433}
2025-03-13 16:16:28,840 - pymongo.connection - DEBUG - {"clientId": {"$oid": "67d2be8bb430d15c64d990e4"}, "message": "Connection checked out", "serverHost": "3.144.134.141", "serverPort": 27017, "driverConnectionId": 1, "durationMS": 0.9849999999987631}
2025-03-13 16:16:28,841 - pymongo.command - DEBUG - {"clientId": {"$oid": "67d2be8bb430d15c64d990e4"}, "message": "Command started", "command": "{\"ping\": 1, \"lsid\": {\"id\": {\"$binary\": {\"base64\": \"9fz6dgusQxK6YqRzD0a9kg==\", \"subType\": \"04\"}}}, \"$db\": \"opal_server\"}", "commandName": "ping", "databaseName": "opal_server", "requestId": 6334, "operationId": 6334, "driverConnectionId": 1, "serverConnectionId": 13205, "serverHost": "3.144.134.141", "serverPort": 27017}
2025-03-13 16:16:29,158 - pymongo.command - DEBUG - {"clientId": {"$oid": "67d2be8bb430d15c64d990e4"}, "message": "Command succeeded", "durationMS": 316.864, "reply": "{\"ok\": 1.0}", "commandName": "ping", "databaseName": "opal_server", "requestId": 6334, "operationId": 6334, "driverConnectionId": 1, "serverConnectionId": 13205, "serverHost": "3.144.134.141", "serverPort": 27017}
2025-03-13 16:16:29,158 - pymongo.connection - DEBUG - {"clientId": {"$oid": "67d2be8bb430d15c64d990e4"}, "message": "Connection checked in", "serverHost": "3.144.134.141", "serverPort": 27017, "driverConnectionId": 1}
2025-03-13 16:16:37,159 - app.services.predictive_analytics - INFO - Starting driver risk prediction for last 3 days
2025-03-13 16:16:37,159 - app.db.repositories.data_repository - INFO - Fetching driver risk data for past 3 days
2025-03-13 16:16:37,160 - app.db.repositories.data_repository - DEBUG - Executing pipeline: [{'$match': {'event_time': {'$gte': datetime.datetime(2025, 3, 10, 16, 16, 37, 160472)}}}, {'$group': {'_id': '$driver_uuid', 'name': {'$first': '$driver_name'}, 'violation_count': {'$sum': 1}, 'violation_types': {'$addToSet': '$violation_type'}, 'avg_severity': {'$avg': {'$switch': {'branches': [{'case': {'$eq': ['$severity', 'HIGH']}, 'then': 3}, {'case': {'$eq': ['$severity', 'MEDIUM']}, 'then': 2}], 'default': 1}}}, 'last_violation': {'$max': '$event_time'}, 'max_speed': {'$max': '$telemetry.speed'}, 'vehicle_license': {'$first': '$vehicle_license'}}}, {'$sort': {'violation_count': -1}}]
2025-03-13 16:16:37,160 - pymongo.serverSelection - DEBUG - {"message": "Server selection started", "selector": "Primary()", "operation": "aggregate", "topologyDescription": "<TopologyDescription id: 67d2be8bb430d15c64d990e4, topology_type: Single, servers: [<ServerDescription ('3.144.134.141', 27017) server_type: Standalone, rtt: 0.3280000000013388>]>", "clientId": {"$oid": "67d2be8bb430d15c64d990e4"}}
2025-03-13 16:16:37,161 - pymongo.serverSelection - DEBUG - {"message": "Server selection succeeded", "selector": "Primary()", "operation": "aggregate", "topologyDescription": "<TopologyDescription id: 67d2be8bb430d15c64d990e4, topology_type: Single, servers: [<ServerDescription ('3.144.134.141', 27017) server_type: Standalone, rtt: 0.3280000000013388>]>", "clientId": {"$oid": "67d2be8bb430d15c64d990e4"}, "serverHost": "3.144.134.141", "serverPort": 27017}
2025-03-13 16:16:37,161 - pymongo.connection - DEBUG - {"clientId": {"$oid": "67d2be8bb430d15c64d990e4"}, "message": "Connection checkout started", "serverHost": "3.144.134.141", "serverPort": 27017}
2025-03-13 16:16:37,161 - pymongo.connection - DEBUG - {"clientId": {"$oid": "67d2be8bb430d15c64d990e4"}, "message": "Connection checked out", "serverHost": "3.144.134.141", "serverPort": 27017, "driverConnectionId": 1, "durationMS": 0.0}
2025-03-13 16:16:37,162 - pymongo.command - DEBUG - {"clientId": {"$oid": "67d2be8bb430d15c64d990e4"}, "message": "Command started", "command": "{\"aggregate\": \"violations\", \"pipeline\": [{\"$match\": {\"event_time\": {\"$gte\": {\"$date\": \"2025-03-10T16:16:37.160Z\"}}}}, {\"$group\": {\"_id\": \"$driver_uuid\", \"name\": {\"$first\": \"$driver_name\"}, \"violation_count\": {\"$sum\": 1}, \"violation_types\": {\"$addToSet\": \"$violation_type\"}, \"avg_severity\": {\"$avg\": {\"$switch\": {\"branches\": [{\"case\": {\"$eq\": [\"$severity\", \"HIGH\"]}, \"then\": 3}, {\"case\": {\"$eq\": [\"$severity\", \"MEDIUM\"]}, \"then\": 2}], \"default\": 1}}}, \"last_violation\": {\"$max\": \"$event_time\"}, \"max_speed\": {\"$max\": \"$telemetry.speed\"}, \"vehicle_license\": {\"$first\": \"$vehicle_license\"}}}, {\"$sort\": {\"violation_count\": -1}}], \"lsid\": {\"id\": {\"$binary\": {\"base64\": \"9fz6dgusQxK6YqRzD0a9kg==\", \"subType\": \"04\"}}}, \"$db\": \"opal_server\"}", "commandName": "aggregate", "databaseName": "opal_server", "requestId": 26500, "operationId": 26500, "driverConnectionId": 1, "serverConnectionId": 13205, "serverHost": "3.144.134.141", "serverPort": 27017}
2025-03-13 16:16:37,849 - pymongo.command - DEBUG - {"clientId": {"$oid": "67d2be8bb430d15c64d990e4"}, "message": "Command succeeded", "durationMS": 686.748, "reply": "{\"cursor\": {\"firstBatch\": [{\"_id\": \"unknown\", \"name\": \"Unknown\", \"violation_count\": 962, \"violation_types\": [\"SPEED_MEDIUM\", \"SPEED_LOW\", \"SPEED_HIGH\"], \"avg_severity\": 1.9553014553014554, \"last_violation\": {\"$date\": \"2025-03-13T11:14:29.496Z\"}, \"vehicle_license\": \"860260057075813\"}, {\"_id\": \"7463170a-de85-4c5d-a77b-b506d939aca1\", \"name\": \"GUL ZAMAN #94378054\", \"violation_count\": 237, \"violation_types\": [\"SPEED_LOW\", \"SPEED_MEDIUM\"], \"avg_severity\": 1.59915611814346, \"last_violation\": {\"$date\": \"2025-03-13T06:31:35.314Z\"}, \"vehicle_license\": \"1075MR\"}, {\"_id\": \"3dd80f61-5ed1-4038-b3a8-5d2e37759893\", \"name\": \"DALER SINGH\", \"violation_count\": 231, \"violation_types\": [\"SPEED_LOW\", \"SPEED_MEDIUM\"], \"avg_severity\": 1.5411255411255411, \"last_violation\": {\"$date\": \"2025-03-11T15:04:20.407Z\"}, \"vehicle_license\": \"1313YD\"}, {\"_id\": \"10009164\", \"name\": \"Unknown\", \"violation_count\": 210, \"violation_types\": [\"SPEED_MEDIUM\", \"SPEED_LOW\", \"SPEED_HIGH\"], \"avg_severity\": 1.7142857142857142, \"last_viol...", "commandName": "aggregate", "databaseName": "opal_server", "requestId": 26500, "operationId": 26500, "driverConnectionId": 1, "serverConnectionId": 13205, "serverHost": "3.144.134.141", "serverPort": 27017}
2025-03-13 16:16:37,852 - pymongo.connection - DEBUG - {"clientId": {"$oid": "67d2be8bb430d15c64d990e4"}, "message": "Connection checked in", "serverHost": "3.144.134.141", "serverPort": 27017, "driverConnectionId": 1}
2025-03-13 16:16:37,854 - pymongo.serverSelection - DEBUG - {"message": "Server selection started", "selector": "<function any_server_selector at 0x0000015B69038720>", "operation": "getMore", "topologyDescription": "<TopologyDescription id: 67d2be8bb430d15c64d990e4, topology_type: Single, servers: [<ServerDescription ('3.144.134.141', 27017) server_type: Standalone, rtt: 0.3280000000013388>]>", "clientId": {"$oid": "67d2be8bb430d15c64d990e4"}}
2025-03-13 16:16:37,855 - pymongo.serverSelection - DEBUG - {"message": "Server selection succeeded", "selector": "<function any_server_selector at 0x0000015B69038720>", "operation": "getMore", "topologyDescription": "<TopologyDescription id: 67d2be8bb430d15c64d990e4, topology_type: Single, servers: [<ServerDescription ('3.144.134.141', 27017) server_type: Standalone, rtt: 0.3280000000013388>]>", "clientId": {"$oid": "67d2be8bb430d15c64d990e4"}, "serverHost": "3.144.134.141", "serverPort": 27017}
2025-03-13 16:16:37,855 - pymongo.connection - DEBUG - {"clientId": {"$oid": "67d2be8bb430d15c64d990e4"}, "message": "Connection checkout started", "serverHost": "3.144.134.141", "serverPort": 27017}
2025-03-13 16:16:37,856 - pymongo.connection - DEBUG - {"clientId": {"$oid": "67d2be8bb430d15c64d990e4"}, "message": "Connection checked out", "serverHost": "3.144.134.141", "serverPort": 27017, "driverConnectionId": 1, "durationMS": 0.0}
2025-03-13 16:16:37,856 - pymongo.command - DEBUG - {"clientId": {"$oid": "67d2be8bb430d15c64d990e4"}, "message": "Command started", "command": "{\"getMore\": 400107657548240890, \"collection\": \"violations\", \"lsid\": {\"id\": {\"$binary\": {\"base64\": \"9fz6dgusQxK6YqRzD0a9kg==\", \"subType\": \"04\"}}}, \"$db\": \"opal_server\"}", "commandName": "getMore", "databaseName": "opal_server", "requestId": 19169, "operationId": 19169, "driverConnectionId": 1, "serverConnectionId": 13205, "serverHost": "3.144.134.141", "serverPort": 27017}
2025-03-13 16:16:38,187 - pymongo.topology - DEBUG - {"topologyId": {"$oid": "67d2be8bb430d15c64d990e4"}, "driverConnectionId": 1, "serverConnectionId": 13203, "serverHost": "3.144.134.141", "serverPort": 27017, "awaited": true, "durationMS": 10327.99999999952, "reply": "{\"isWritablePrimary\": true, \"topologyVersion\": {\"processId\": {\"$oid\": \"67b7e5814f77c1a87c56d054\"}}, \"maxBsonObjectSize\": 16777216, \"maxMessageSizeBytes\": 48000000, \"maxWriteBatchSize\": 100000, \"localTime\": {\"$date\": \"2025-03-13T11:16:38.151Z\"}, \"logicalSessionTimeoutMinutes\": 30, \"connectionId\": 13203, \"maxWireVersion\": 25, \"ok\": 1.0}", "message": "Server heartbeat succeeded"}
2025-03-13 16:16:38,188 - pymongo.command - DEBUG - {"clientId": {"$oid": "67d2be8bb430d15c64d990e4"}, "message": "Command succeeded", "durationMS": 331.893, "reply": "{\"cursor\": {\"nextBatch\": [{\"_id\": \"13380099\", \"name\": \"Unknown\", \"violation_count\": 1, \"violation_types\": [\"SPEED_MEDIUM\"], \"avg_severity\": 2.0, \"last_violation\": {\"$date\": \"2025-03-13T05:42:56.753Z\"}, \"vehicle_license\": \"860260056943276\"}, {\"_id\": \"10162055\", \"name\": \"Unknown\", \"violation_count\": 1, \"violation_types\": [\"SPEED_HIGH\"], \"avg_severity\": 3.0, \"last_violation\": {\"$date\": \"2025-03-11T15:43:20.683Z\"}, \"vehicle_license\": \"860665050686715\"}], \"ns\": \"opal_server.violations\"}, \"ok\": 1.0}", "commandName": "getMore", "databaseName": "opal_server", "requestId": 19169, "operationId": 19169, "driverConnectionId": 1, "serverConnectionId": 13205, "serverHost": "3.144.134.141", "serverPort": 27017}
2025-03-13 16:16:38,188 - pymongo.topology - DEBUG - {"topologyId": {"$oid": "67d2be8bb430d15c64d990e4"}, "driverConnectionId": 1, "serverConnectionId": 13203, "serverHost": "3.144.134.141", "serverPort": 27017, "awaited": true, "message": "Server heartbeat started"}
2025-03-13 16:16:38,189 - pymongo.connection - DEBUG - {"clientId": {"$oid": "67d2be8bb430d15c64d990e4"}, "message": "Connection checked in", "serverHost": "3.144.134.141", "serverPort": 27017, "driverConnectionId": 1}
2025-03-13 16:16:38,189 - app.db.repositories.data_repository - INFO - Retrieved stats for 103 drivers
2025-03-13 16:16:38,190 - app.services.predictive_analytics - INFO - Retrieved 103 driver records
2025-03-13 16:16:38,190 - app.services.predictive_analytics - INFO - Successfully processed 9 drivers
2025-03-13 16:16:48,184 - pymongo.topology - DEBUG - {"topologyId": {"$oid": "67d2be8bb430d15c64d990e4"}, "driverConnectionId": 1, "serverConnectionId": 13203, "serverHost": "3.144.134.141", "serverPort": 27017, "awaited": true, "durationMS": 10000.0, "reply": "{\"isWritablePrimary\": true, \"topologyVersion\": {\"processId\": {\"$oid\": \"67b7e5814f77c1a87c56d054\"}}, \"maxBsonObjectSize\": 16777216, \"maxMessageSizeBytes\": 48000000, \"maxWriteBatchSize\": 100000, \"localTime\": {\"$date\": \"2025-03-13T11:16:48.153Z\"}, \"logicalSessionTimeoutMinutes\": 30, \"connectionId\": 13203, \"maxWireVersion\": 25, \"ok\": 1.0}", "message": "Server heartbeat succeeded"}
2025-03-13 16:16:48,185 - pymongo.topology - DEBUG - {"topologyId": {"$oid": "67d2be8bb430d15c64d990e4"}, "driverConnectionId": 1, "serverConnectionId": 13203, "serverHost": "3.144.134.141", "serverPort": 27017, "awaited": true, "message": "Server heartbeat started"}
2025-03-13 16:16:58,182 - pymongo.topology - DEBUG - {"topologyId": {"$oid": "67d2be8bb430d15c64d990e4"}, "driverConnectionId": 1, "serverConnectionId": 13203, "serverHost": "3.144.134.141", "serverPort": 27017, "awaited": true, "durationMS": 10000.0, "reply": "{\"isWritablePrimary\": true, \"topologyVersion\": {\"processId\": {\"$oid\": \"67b7e5814f77c1a87c56d054\"}}, \"maxBsonObjectSize\": 16777216, \"maxMessageSizeBytes\": 48000000, \"maxWriteBatchSize\": 100000, \"localTime\": {\"$date\": \"2025-03-13T11:16:58.154Z\"}, \"logicalSessionTimeoutMinutes\": 30, \"connectionId\": 13203, \"maxWireVersion\": 25, \"ok\": 1.0}", "message": "Server heartbeat succeeded"}
2025-03-13 16:16:58,183 - pymongo.topology - DEBUG - {"topologyId": {"$oid": "67d2be8bb430d15c64d990e4"}, "driverConnectionId": 1, "serverConnectionId": 13203, "serverHost": "3.144.134.141", "serverPort": 27017, "awaited": true, "message": "Server heartbeat started"}
2025-03-13 16:17:08,223 - pymongo.topology - DEBUG - {"topologyId": {"$oid": "67d2be8bb430d15c64d990e4"}, "driverConnectionId": 1, "serverConnectionId": 13203, "serverHost": "3.144.134.141", "serverPort": 27017, "awaited": true, "durationMS": 10031.999999999243, "reply": "{\"isWritablePrimary\": true, \"topologyVersion\": {\"processId\": {\"$oid\": \"67b7e5814f77c1a87c56d054\"}}, \"maxBsonObjectSize\": 16777216, \"maxMessageSizeBytes\": 48000000, \"maxWriteBatchSize\": 100000, \"localTime\": {\"$date\": \"2025-03-13T11:17:08.160Z\"}, \"logicalSessionTimeoutMinutes\": 30, \"connectionId\": 13203, \"maxWireVersion\": 25, \"ok\": 1.0}", "message": "Server heartbeat succeeded"}
2025-03-13 16:17:08,223 - pymongo.topology - DEBUG - {"topologyId": {"$oid": "67d2be8bb430d15c64d990e4"}, "driverConnectionId": 1, "serverConnectionId": 13203, "serverHost": "3.144.134.141", "serverPort": 27017, "awaited": true, "message": "Server heartbeat started"}
2025-03-13 16:17:18,186 - pymongo.topology - DEBUG - {"topologyId": {"$oid": "67d2be8bb430d15c64d990e4"}, "driverConnectionId": 1, "serverConnectionId": 13203, "serverHost": "3.144.134.141", "serverPort": 27017, "awaited": true, "durationMS": 9968.000000000757, "reply": "{\"isWritablePrimary\": true, \"topologyVersion\": {\"processId\": {\"$oid\": \"67b7e5814f77c1a87c56d054\"}}, \"maxBsonObjectSize\": 16777216, \"maxMessageSizeBytes\": 48000000, \"maxWriteBatchSize\": 100000, \"localTime\": {\"$date\": \"2025-03-13T11:17:18.161Z\"}, \"logicalSessionTimeoutMinutes\": 30, \"connectionId\": 13203, \"maxWireVersion\": 25, \"ok\": 1.0}", "message": "Server heartbeat succeeded"}
2025-03-13 16:17:18,187 - pymongo.topology - DEBUG - {"topologyId": {"$oid": "67d2be8bb430d15c64d990e4"}, "driverConnectionId": 1, "serverConnectionId": 13203, "serverHost": "3.144.134.141", "serverPort": 27017, "awaited": true, "message": "Server heartbeat started"}
2025-03-13 16:17:28,165 - pymongo.topology - DEBUG - {"topologyId": {"$oid": "67d2be8bb430d15c64d990e4"}, "driverConnectionId": 1, "serverConnectionId": 13203, "serverHost": "3.144.134.141", "serverPort": 27017, "awaited": true, "durationMS": 9985.000000000582, "reply": "{\"isWritablePrimary\": true, \"topologyVersion\": {\"processId\": {\"$oid\": \"67b7e5814f77c1a87c56d054\"}}, \"maxBsonObjectSize\": 16777216, \"maxMessageSizeBytes\": 48000000, \"maxWriteBatchSize\": 100000, \"localTime\": {\"$date\": \"2025-03-13T11:17:28.169Z\"}, \"logicalSessionTimeoutMinutes\": 30, \"connectionId\": 13203, \"maxWireVersion\": 25, \"ok\": 1.0}", "message": "Server heartbeat succeeded"}
2025-03-13 16:17:28,166 - pymongo.topology - DEBUG - {"topologyId": {"$oid": "67d2be8bb430d15c64d990e4"}, "driverConnectionId": 1, "serverConnectionId": 13203, "serverHost": "3.144.134.141", "serverPort": 27017, "awaited": true, "message": "Server heartbeat started"}
2025-03-13 16:17:38,166 - pymongo.topology - DEBUG - {"topologyId": {"$oid": "67d2be8bb430d15c64d990e4"}, "driverConnectionId": 1, "serverConnectionId": 13203, "serverHost": "3.144.134.141", "serverPort": 27017, "awaited": true, "durationMS": 10000.0, "reply": "{\"isWritablePrimary\": true, \"topologyVersion\": {\"processId\": {\"$oid\": \"67b7e5814f77c1a87c56d054\"}}, \"maxBsonObjectSize\": 16777216, \"maxMessageSizeBytes\": 48000000, \"maxWriteBatchSize\": 100000, \"localTime\": {\"$date\": \"2025-03-13T11:17:38.171Z\"}, \"logicalSessionTimeoutMinutes\": 30, \"connectionId\": 13203, \"maxWireVersion\": 25, \"ok\": 1.0}", "message": "Server heartbeat succeeded"}
2025-03-13 16:17:38,167 - pymongo.topology - DEBUG - {"topologyId": {"$oid": "67d2be8bb430d15c64d990e4"}, "driverConnectionId": 1, "serverConnectionId": 13203, "serverHost": "3.144.134.141", "serverPort": 27017, "awaited": true, "message": "Server heartbeat started"}
2025-03-13 16:17:48,216 - pymongo.topology - DEBUG - {"topologyId": {"$oid": "67d2be8bb430d15c64d990e4"}, "driverConnectionId": 1, "serverConnectionId": 13203, "serverHost": "3.144.134.141", "serverPort": 27017, "awaited": true, "durationMS": 10046.999999998661, "reply": "{\"isWritablePrimary\": true, \"topologyVersion\": {\"processId\": {\"$oid\": \"67b7e5814f77c1a87c56d054\"}}, \"maxBsonObjectSize\": 16777216, \"maxMessageSizeBytes\": 48000000, \"maxWriteBatchSize\": 100000, \"localTime\": {\"$date\": \"2025-03-13T11:17:48.171Z\"}, \"logicalSessionTimeoutMinutes\": 30, \"connectionId\": 13203, \"maxWireVersion\": 25, \"ok\": 1.0}", "message": "Server heartbeat succeeded"}
2025-03-13 16:17:48,216 - pymongo.topology - DEBUG - {"topologyId": {"$oid": "67d2be8bb430d15c64d990e4"}, "driverConnectionId": 1, "serverConnectionId": 13203, "serverHost": "3.144.134.141", "serverPort": 27017, "awaited": true, "message": "Server heartbeat started"}
2025-03-13 16:17:58,242 - pymongo.topology - DEBUG - {"topologyId": {"$oid": "67d2be8bb430d15c64d990e4"}, "driverConnectionId": 1, "serverConnectionId": 13203, "serverHost": "3.144.134.141", "serverPort": 27017, "awaited": true, "durationMS": 10031.000000000859, "reply": "{\"isWritablePrimary\": true, \"topologyVersion\": {\"processId\": {\"$oid\": \"67b7e5814f77c1a87c56d054\"}}, \"maxBsonObjectSize\": 16777216, \"maxMessageSizeBytes\": 48000000, \"maxWriteBatchSize\": 100000, \"localTime\": {\"$date\": \"2025-03-13T11:17:58.181Z\"}, \"logicalSessionTimeoutMinutes\": 30, \"connectionId\": 13203, \"maxWireVersion\": 25, \"ok\": 1.0}", "message": "Server heartbeat succeeded"}
2025-03-13 16:17:58,242 - pymongo.topology - DEBUG - {"topologyId": {"$oid": "67d2be8bb430d15c64d990e4"}, "driverConnectionId": 1, "serverConnectionId": 13203, "serverHost": "3.144.134.141", "serverPort": 27017, "awaited": true, "message": "Server heartbeat started"}
2025-03-13 16:18:08,214 - pymongo.topology - DEBUG - {"topologyId": {"$oid": "67d2be8bb430d15c64d990e4"}, "driverConnectionId": 1, "serverConnectionId": 13203, "serverHost": "3.144.134.141", "serverPort": 27017, "awaited": true, "durationMS": 9968.999999999141, "reply": "{\"isWritablePrimary\": true, \"topologyVersion\": {\"processId\": {\"$oid\": \"67b7e5814f77c1a87c56d054\"}}, \"maxBsonObjectSize\": 16777216, \"maxMessageSizeBytes\": 48000000, \"maxWriteBatchSize\": 100000, \"localTime\": {\"$date\": \"2025-03-13T11:18:08.182Z\"}, \"logicalSessionTimeoutMinutes\": 30, \"connectionId\": 13203, \"maxWireVersion\": 25, \"ok\": 1.0}", "message": "Server heartbeat succeeded"}
2025-03-13 16:18:08,215 - pymongo.topology - DEBUG - {"topologyId": {"$oid": "67d2be8bb430d15c64d990e4"}, "driverConnectionId": 1, "serverConnectionId": 13203, "serverHost": "3.144.134.141", "serverPort": 27017, "awaited": true, "message": "Server heartbeat started"}
2025-03-13 16:18:18,197 - pymongo.topology - DEBUG - {"topologyId": {"$oid": "67d2be8bb430d15c64d990e4"}, "driverConnectionId": 1, "serverConnectionId": 13203, "serverHost": "3.144.134.141", "serverPort": 27017, "awaited": true, "durationMS": 9984.000000000378, "reply": "{\"isWritablePrimary\": true, \"topologyVersion\": {\"processId\": {\"$oid\": \"67b7e5814f77c1a87c56d054\"}}, \"maxBsonObjectSize\": 16777216, \"maxMessageSizeBytes\": 48000000, \"maxWriteBatchSize\": 100000, \"localTime\": {\"$date\": \"2025-03-13T11:18:18.182Z\"}, \"logicalSessionTimeoutMinutes\": 30, \"connectionId\": 13203, \"maxWireVersion\": 25, \"ok\": 1.0}", "message": "Server heartbeat succeeded"}
2025-03-13 16:18:18,197 - pymongo.topology - DEBUG - {"topologyId": {"$oid": "67d2be8bb430d15c64d990e4"}, "driverConnectionId": 1, "serverConnectionId": 13203, "serverHost": "3.144.134.141", "serverPort": 27017, "awaited": true, "message": "Server heartbeat started"}
2025-03-13 16:18:28,213 - pymongo.topology - DEBUG - {"topologyId": {"$oid": "67d2be8bb430d15c64d990e4"}, "driverConnectionId": 1, "serverConnectionId": 13203, "serverHost": "3.144.134.141", "serverPort": 27017, "awaited": true, "durationMS": 10015.999999999622, "reply": "{\"isWritablePrimary\": true, \"topologyVersion\": {\"processId\": {\"$oid\": \"67b7e5814f77c1a87c56d054\"}}, \"maxBsonObjectSize\": 16777216, \"maxMessageSizeBytes\": 48000000, \"maxWriteBatchSize\": 100000, \"localTime\": {\"$date\": \"2025-03-13T11:18:28.183Z\"}, \"logicalSessionTimeoutMinutes\": 30, \"connectionId\": 13203, \"maxWireVersion\": 25, \"ok\": 1.0}", "message": "Server heartbeat succeeded"}
2025-03-13 16:18:28,213 - pymongo.topology - DEBUG - {"topologyId": {"$oid": "67d2be8bb430d15c64d990e4"}, "driverConnectionId": 1, "serverConnectionId": 13203, "serverHost": "3.144.134.141", "serverPort": 27017, "awaited": true, "message": "Server heartbeat started"}
2025-03-13 16:18:38,251 - pymongo.topology - DEBUG - {"topologyId": {"$oid": "67d2be8bb430d15c64d990e4"}, "driverConnectionId": 1, "serverConnectionId": 13203, "serverHost": "3.144.134.141", "serverPort": 27017, "awaited": true, "durationMS": 10031.000000000859, "reply": "{\"isWritablePrimary\": true, \"topologyVersion\": {\"processId\": {\"$oid\": \"67b7e5814f77c1a87c56d054\"}}, \"maxBsonObjectSize\": 16777216, \"maxMessageSizeBytes\": 48000000, \"maxWriteBatchSize\": 100000, \"localTime\": {\"$date\": \"2025-03-13T11:18:38.185Z\"}, \"logicalSessionTimeoutMinutes\": 30, \"connectionId\": 13203, \"maxWireVersion\": 25, \"ok\": 1.0}", "message": "Server heartbeat succeeded"}
2025-03-13 16:18:38,251 - pymongo.topology - DEBUG - {"topologyId": {"$oid": "67d2be8bb430d15c64d990e4"}, "driverConnectionId": 1, "serverConnectionId": 13203, "serverHost": "3.144.134.141", "serverPort": 27017, "awaited": true, "message": "Server heartbeat started"}
2025-03-13 16:18:48,204 - pymongo.topology - DEBUG - {"topologyId": {"$oid": "67d2be8bb430d15c64d990e4"}, "driverConnectionId": 1, "serverConnectionId": 13203, "serverHost": "3.144.134.141", "serverPort": 27017, "awaited": true, "durationMS": 9952.99999999952, "reply": "{\"isWritablePrimary\": true, \"topologyVersion\": {\"processId\": {\"$oid\": \"67b7e5814f77c1a87c56d054\"}}, \"maxBsonObjectSize\": 16777216, \"maxMessageSizeBytes\": 48000000, \"maxWriteBatchSize\": 100000, \"localTime\": {\"$date\": \"2025-03-13T11:18:48.186Z\"}, \"logicalSessionTimeoutMinutes\": 30, \"connectionId\": 13203, \"maxWireVersion\": 25, \"ok\": 1.0}", "message": "Server heartbeat succeeded"}
2025-03-13 16:18:48,205 - pymongo.topology - DEBUG - {"topologyId": {"$oid": "67d2be8bb430d15c64d990e4"}, "driverConnectionId": 1, "serverConnectionId": 13203, "serverHost": "3.144.134.141", "serverPort": 27017, "awaited": true, "message": "Server heartbeat started"}
2025-03-13 16:18:58,228 - pymongo.topology - DEBUG - {"topologyId": {"$oid": "67d2be8bb430d15c64d990e4"}, "driverConnectionId": 1, "serverConnectionId": 13203, "serverHost": "3.144.134.141", "serverPort": 27017, "awaited": true, "durationMS": 10031.000000000859, "reply": "{\"isWritablePrimary\": true, \"topologyVersion\": {\"processId\": {\"$oid\": \"67b7e5814f77c1a87c56d054\"}}, \"maxBsonObjectSize\": 16777216, \"maxMessageSizeBytes\": 48000000, \"maxWriteBatchSize\": 100000, \"localTime\": {\"$date\": \"2025-03-13T11:18:58.187Z\"}, \"logicalSessionTimeoutMinutes\": 30, \"connectionId\": 13203, \"maxWireVersion\": 25, \"ok\": 1.0}", "message": "Server heartbeat succeeded"}
2025-03-13 16:18:58,228 - pymongo.topology - DEBUG - {"topologyId": {"$oid": "67d2be8bb430d15c64d990e4"}, "driverConnectionId": 1, "serverConnectionId": 13203, "serverHost": "3.144.134.141", "serverPort": 27017, "awaited": true, "message": "Server heartbeat started"}
2025-03-13 16:19:08,189 - pymongo.topology - DEBUG - {"topologyId": {"$oid": "67d2be8bb430d15c64d990e4"}, "driverConnectionId": 1, "serverConnectionId": 13203, "serverHost": "3.144.134.141", "serverPort": 27017, "awaited": true, "durationMS": 9952.99999999952, "reply": "{\"isWritablePrimary\": true, \"topologyVersion\": {\"processId\": {\"$oid\": \"67b7e5814f77c1a87c56d054\"}}, \"maxBsonObjectSize\": 16777216, \"maxMessageSizeBytes\": 48000000, \"maxWriteBatchSize\": 100000, \"localTime\": {\"$date\": \"2025-03-13T11:19:08.193Z\"}, \"logicalSessionTimeoutMinutes\": 30, \"connectionId\": 13203, \"maxWireVersion\": 25, \"ok\": 1.0}", "message": "Server heartbeat succeeded"}
2025-03-13 16:19:08,190 - pymongo.topology - DEBUG - {"topologyId": {"$oid": "67d2be8bb430d15c64d990e4"}, "driverConnectionId": 1, "serverConnectionId": 13203, "serverHost": "3.144.134.141", "serverPort": 27017, "awaited": true, "message": "Server heartbeat started"}
2025-03-13 16:19:18,215 - pymongo.topology - DEBUG - {"topologyId": {"$oid": "67d2be8bb430d15c64d990e4"}, "driverConnectionId": 1, "serverConnectionId": 13203, "serverHost": "3.144.134.141", "serverPort": 27017, "awaited": true, "durationMS": 10031.999999999243, "reply": "{\"isWritablePrimary\": true, \"topologyVersion\": {\"processId\": {\"$oid\": \"67b7e5814f77c1a87c56d054\"}}, \"maxBsonObjectSize\": 16777216, \"maxMessageSizeBytes\": 48000000, \"maxWriteBatchSize\": 100000, \"localTime\": {\"$date\": \"2025-03-13T11:19:18.203Z\"}, \"logicalSessionTimeoutMinutes\": 30, \"connectionId\": 13203, \"maxWireVersion\": 25, \"ok\": 1.0}", "message": "Server heartbeat succeeded"}
2025-03-13 16:19:18,216 - pymongo.topology - DEBUG - {"topologyId": {"$oid": "67d2be8bb430d15c64d990e4"}, "driverConnectionId": 1, "serverConnectionId": 13203, "serverHost": "3.144.134.141", "serverPort": 27017, "awaited": true, "message": "Server heartbeat started"}
2025-03-13 16:19:28,224 - pymongo.topology - DEBUG - {"topologyId": {"$oid": "67d2be8bb430d15c64d990e4"}, "driverConnectionId": 1, "serverConnectionId": 13203, "serverHost": "3.144.134.141", "serverPort": 27017, "awaited": true, "durationMS": 10000.0, "reply": "{\"isWritablePrimary\": true, \"topologyVersion\": {\"processId\": {\"$oid\": \"67b7e5814f77c1a87c56d054\"}}, \"maxBsonObjectSize\": 16777216, \"maxMessageSizeBytes\": 48000000, \"maxWriteBatchSize\": 100000, \"localTime\": {\"$date\": \"2025-03-13T11:19:28.213Z\"}, \"logicalSessionTimeoutMinutes\": 30, \"connectionId\": 13203, \"maxWireVersion\": 25, \"ok\": 1.0}", "message": "Server heartbeat succeeded"}
2025-03-13 16:19:28,225 - pymongo.topology - DEBUG - {"topologyId": {"$oid": "67d2be8bb430d15c64d990e4"}, "driverConnectionId": 1, "serverConnectionId": 13203, "serverHost": "3.144.134.141", "serverPort": 27017, "awaited": true, "message": "Server heartbeat started"}
2025-03-13 16:19:38,269 - pymongo.topology - DEBUG - {"topologyId": {"$oid": "67d2be8bb430d15c64d990e4"}, "driverConnectionId": 1, "serverConnectionId": 13203, "serverHost": "3.144.134.141", "serverPort": 27017, "awaited": true, "durationMS": 10031.999999999243, "reply": "{\"isWritablePrimary\": true, \"topologyVersion\": {\"processId\": {\"$oid\": \"67b7e5814f77c1a87c56d054\"}}, \"maxBsonObjectSize\": 16777216, \"maxMessageSizeBytes\": 48000000, \"maxWriteBatchSize\": 100000, \"localTime\": {\"$date\": \"2025-03-13T11:19:38.217Z\"}, \"logicalSessionTimeoutMinutes\": 30, \"connectionId\": 13203, \"maxWireVersion\": 25, \"ok\": 1.0}", "message": "Server heartbeat succeeded"}
2025-03-13 16:19:38,271 - pymongo.topology - DEBUG - {"topologyId": {"$oid": "67d2be8bb430d15c64d990e4"}, "driverConnectionId": 1, "serverConnectionId": 13203, "serverHost": "3.144.134.141", "serverPort": 27017, "awaited": true, "message": "Server heartbeat started"}
2025-03-13 16:20:21,822 - numexpr.utils - INFO - Note: NumExpr detected 12 cores but "NUMEXPR_MAX_THREADS" not set, so enforcing safe limit of 8.
2025-03-13 16:20:21,822 - numexpr.utils - INFO - NumExpr defaulting to 8 threads.
2025-03-13 16:20:23,230 - matplotlib - DEBUG - matplotlib data path: C:\Users\msameerakram\AppData\Local\anaconda3\Lib\site-packages\matplotlib\mpl-data
2025-03-13 16:20:23,235 - matplotlib - DEBUG - CONFIGDIR=C:\Users\msameerakram\.matplotlib
2025-03-13 16:20:23,237 - matplotlib - DEBUG - interactive is False
2025-03-13 16:20:23,237 - matplotlib - DEBUG - platform is win32
2025-03-13 16:20:23,297 - matplotlib - DEBUG - CACHEDIR=C:\Users\msameerakram\.matplotlib
2025-03-13 16:20:23,300 - matplotlib.font_manager - DEBUG - Using fontManager instance from C:\Users\msameerakram\.matplotlib\fontlist-v390.json
2025-03-13 16:20:26,004 - numexpr.utils - INFO - Note: NumExpr detected 12 cores but "NUMEXPR_MAX_THREADS" not set, so enforcing safe limit of 8.
2025-03-13 16:20:26,005 - numexpr.utils - INFO - NumExpr defaulting to 8 threads.
2025-03-13 16:20:27,445 - matplotlib - DEBUG - matplotlib data path: C:\Users\msameerakram\AppData\Local\anaconda3\Lib\site-packages\matplotlib\mpl-data
2025-03-13 16:20:27,451 - matplotlib - DEBUG - CONFIGDIR=C:\Users\msameerakram\.matplotlib
2025-03-13 16:20:27,453 - matplotlib - DEBUG - interactive is False
2025-03-13 16:20:27,453 - matplotlib - DEBUG - platform is win32
2025-03-13 16:20:27,520 - matplotlib - DEBUG - CACHEDIR=C:\Users\msameerakram\.matplotlib
2025-03-13 16:20:27,524 - matplotlib.font_manager - DEBUG - Using fontManager instance from C:\Users\msameerakram\.matplotlib\fontlist-v390.json
2025-03-13 16:20:29,077 - asyncio - DEBUG - Using selector: SelectSelector
2025-03-13 16:20:29,120 - pymongo.topology - DEBUG - {"topologyId": {"$oid": "67d2bf7d3a10f8d19a9b448d"}, "message": "Starting topology monitoring"}
2025-03-13 16:20:29,120 - pymongo.topology - DEBUG - {"topologyId": {"$oid": "67d2bf7d3a10f8d19a9b448d"}, "previousDescription": "<TopologyDescription id: 67d2bf7d3a10f8d19a9b448d, topology_type: Unknown, servers: []>", "newDescription": "<TopologyDescription id: 67d2bf7d3a10f8d19a9b448d, topology_type: Unknown, servers: [<ServerDescription ('3.144.134.141', 27017) server_type: Unknown, rtt: None>]>", "message": "Topology description changed"}
2025-03-13 16:20:29,120 - pymongo.topology - DEBUG - {"topologyId": {"$oid": "67d2bf7d3a10f8d19a9b448d"}, "serverHost": "3.144.134.141", "serverPort": 27017, "message": "Starting server monitoring"}
2025-03-13 16:20:29,122 - pymongo.connection - DEBUG - {"clientId": {"$oid": "67d2bf7d3a10f8d19a9b448d"}, "message": "Connection pool created", "serverHost": "3.144.134.141", "serverPort": 27017}
2025-03-13 16:20:29,123 - pymongo.serverSelection - DEBUG - {"message": "Server selection started", "selector": "Primary()", "operation": "ping", "topologyDescription": "<TopologyDescription id: 67d2bf7d3a10f8d19a9b448d, topology_type: Unknown, servers: [<ServerDescription ('3.144.134.141', 27017) server_type: Unknown, rtt: None>]>", "clientId": {"$oid": "67d2bf7d3a10f8d19a9b448d"}}
2025-03-13 16:20:29,123 - pymongo.serverSelection - DEBUG - {"message": "Waiting for suitable server to become available", "selector": "Primary()", "operation": "ping", "topologyDescription": "<TopologyDescription id: 67d2bf7d3a10f8d19a9b448d, topology_type: Unknown, servers: [<ServerDescription ('3.144.134.141', 27017) server_type: Unknown, rtt: None>]>", "clientId": {"$oid": "67d2bf7d3a10f8d19a9b448d"}, "remainingTimeMS": 30}
2025-03-13 16:20:29,474 - pymongo.topology - DEBUG - {"topologyId": {"$oid": "67d2bf7d3a10f8d19a9b448d"}, "driverConnectionId": 1, "serverHost": "3.144.134.141", "serverPort": 27017, "awaited": false, "message": "Server heartbeat started"}
2025-03-13 16:20:29,839 - pymongo.topology - DEBUG - {"topologyId": {"$oid": "67d2bf7d3a10f8d19a9b448d"}, "driverConnectionId": 1, "serverConnectionId": 13206, "serverHost": "3.144.134.141", "serverPort": 27017, "awaited": false, "durationMS": 375.0, "reply": "{\"helloOk\": true, \"ismaster\": true, \"topologyVersion\": {\"processId\": {\"$oid\": \"67b7e5814f77c1a87c56d054\"}}, \"maxBsonObjectSize\": 16777216, \"maxMessageSizeBytes\": 48000000, \"maxWriteBatchSize\": 100000, \"localTime\": {\"$date\": \"2025-03-13T11:20:29.771Z\"}, \"logicalSessionTimeoutMinutes\": 30, \"connectionId\": 13206, \"maxWireVersion\": 25, \"ok\": 1.0}", "message": "Server heartbeat succeeded"}
2025-03-13 16:20:29,840 - pymongo.connection - DEBUG - {"clientId": {"$oid": "67d2bf7d3a10f8d19a9b448d"}, "message": "Connection pool ready", "serverHost": "3.144.134.141", "serverPort": 27017}
2025-03-13 16:20:29,840 - pymongo.topology - DEBUG - {"topologyId": {"$oid": "67d2bf7d3a10f8d19a9b448d"}, "previousDescription": "<TopologyDescription id: 67d2bf7d3a10f8d19a9b448d, topology_type: Unknown, servers: [<ServerDescription ('3.144.134.141', 27017) server_type: Unknown, rtt: None>]>", "newDescription": "<TopologyDescription id: 67d2bf7d3a10f8d19a9b448d, topology_type: Single, servers: [<ServerDescription ('3.144.134.141', 27017) server_type: Standalone, rtt: 0.375>]>", "message": "Topology description changed"}
2025-03-13 16:20:29,841 - pymongo.serverSelection - DEBUG - {"message": "Server selection succeeded", "selector": "Primary()", "operation": "ping", "topologyDescription": "<TopologyDescription id: 67d2bf7d3a10f8d19a9b448d, topology_type: Single, servers: [<ServerDescription ('3.144.134.141', 27017) server_type: Standalone, rtt: 0.375>]>", "clientId": {"$oid": "67d2bf7d3a10f8d19a9b448d"}, "serverHost": "3.144.134.141", "serverPort": 27017}
2025-03-13 16:20:29,842 - pymongo.connection - DEBUG - {"clientId": {"$oid": "67d2bf7d3a10f8d19a9b448d"}, "message": "Connection checkout started", "serverHost": "3.144.134.141", "serverPort": 27017}
2025-03-13 16:20:29,842 - pymongo.topology - DEBUG - {"topologyId": {"$oid": "67d2bf7d3a10f8d19a9b448d"}, "driverConnectionId": 1, "serverConnectionId": 13206, "serverHost": "3.144.134.141", "serverPort": 27017, "awaited": true, "message": "Server heartbeat started"}
2025-03-13 16:20:29,843 - pymongo.connection - DEBUG - {"clientId": {"$oid": "67d2bf7d3a10f8d19a9b448d"}, "message": "Connection created", "serverHost": "3.144.134.141", "serverPort": 27017, "driverConnectionId": 1}
2025-03-13 16:20:30,940 - pymongo.connection - DEBUG - {"clientId": {"$oid": "67d2bf7d3a10f8d19a9b448d"}, "message": "Connection ready", "serverHost": "3.144.134.141", "serverPort": 27017, "driverConnectionId": 1, "durationMS": 0.7340000000003783}
2025-03-13 16:20:30,940 - pymongo.connection - DEBUG - {"clientId": {"$oid": "67d2bf7d3a10f8d19a9b448d"}, "message": "Connection checked out", "serverHost": "3.144.134.141", "serverPort": 27017, "driverConnectionId": 1, "durationMS": 1.0930000000007567}
2025-03-13 16:20:30,941 - pymongo.command - DEBUG - {"clientId": {"$oid": "67d2bf7d3a10f8d19a9b448d"}, "message": "Command started", "command": "{\"ping\": 1, \"lsid\": {\"id\": {\"$binary\": {\"base64\": \"AcxbYQ7tThWzZ4PwvS532g==\", \"subType\": \"04\"}}}, \"$db\": \"opal_server\"}", "commandName": "ping", "databaseName": "opal_server", "requestId": 6334, "operationId": 6334, "driverConnectionId": 1, "serverConnectionId": 13208, "serverHost": "3.144.134.141", "serverPort": 27017}
2025-03-13 16:20:31,236 - pymongo.command - DEBUG - {"clientId": {"$oid": "67d2bf7d3a10f8d19a9b448d"}, "message": "Command succeeded", "durationMS": 295.548, "reply": "{\"ok\": 1.0}", "commandName": "ping", "databaseName": "opal_server", "requestId": 6334, "operationId": 6334, "driverConnectionId": 1, "serverConnectionId": 13208, "serverHost": "3.144.134.141", "serverPort": 27017}
2025-03-13 16:20:31,238 - pymongo.connection - DEBUG - {"clientId": {"$oid": "67d2bf7d3a10f8d19a9b448d"}, "message": "Connection checked in", "serverHost": "3.144.134.141", "serverPort": 27017, "driverConnectionId": 1}
2025-03-13 16:20:34,053 - app.db.repositories.data_repository - INFO - Fetching driver risk data for past 3 days
2025-03-13 16:20:34,054 - app.db.repositories.data_repository - DEBUG - Executing pipeline: [{'$match': {'event_time': {'$gte': datetime.datetime(2025, 3, 10, 16, 20, 34, 53112)}}}, {'$group': {'_id': '$driver_uuid', 'name': {'$first': '$driver_name'}, 'violation_count': {'$sum': 1}, 'violation_types': {'$addToSet': '$violation_type'}, 'avg_severity': {'$avg': {'$switch': {'branches': [{'case': {'$eq': ['$severity', 'HIGH']}, 'then': 3}, {'case': {'$eq': ['$severity', 'MEDIUM']}, 'then': 2}], 'default': 1}}}, 'last_violation': {'$max': '$event_time'}, 'max_speed': {'$max': '$telemetry.speed'}, 'vehicle_license': {'$first': '$vehicle_license'}}}, {'$sort': {'violation_count': -1}}]
2025-03-13 16:20:34,054 - pymongo.serverSelection - DEBUG - {"message": "Server selection started", "selector": "Primary()", "operation": "aggregate", "topologyDescription": "<TopologyDescription id: 67d2bf7d3a10f8d19a9b448d, topology_type: Single, servers: [<ServerDescription ('3.144.134.141', 27017) server_type: Standalone, rtt: 0.375>]>", "clientId": {"$oid": "67d2bf7d3a10f8d19a9b448d"}}
2025-03-13 16:20:34,055 - pymongo.serverSelection - DEBUG - {"message": "Server selection succeeded", "selector": "Primary()", "operation": "aggregate", "topologyDescription": "<TopologyDescription id: 67d2bf7d3a10f8d19a9b448d, topology_type: Single, servers: [<ServerDescription ('3.144.134.141', 27017) server_type: Standalone, rtt: 0.375>]>", "clientId": {"$oid": "67d2bf7d3a10f8d19a9b448d"}, "serverHost": "3.144.134.141", "serverPort": 27017}
2025-03-13 16:20:34,056 - pymongo.connection - DEBUG - {"clientId": {"$oid": "67d2bf7d3a10f8d19a9b448d"}, "message": "Connection checkout started", "serverHost": "3.144.134.141", "serverPort": 27017}
2025-03-13 16:20:34,057 - pymongo.connection - DEBUG - {"clientId": {"$oid": "67d2bf7d3a10f8d19a9b448d"}, "message": "Connection checked out", "serverHost": "3.144.134.141", "serverPort": 27017, "driverConnectionId": 1, "durationMS": 0.0}
2025-03-13 16:20:34,058 - pymongo.command - DEBUG - {"clientId": {"$oid": "67d2bf7d3a10f8d19a9b448d"}, "message": "Command started", "command": "{\"aggregate\": \"violations\", \"pipeline\": [{\"$match\": {\"event_time\": {\"$gte\": {\"$date\": \"2025-03-10T16:20:34.053Z\"}}}}, {\"$group\": {\"_id\": \"$driver_uuid\", \"name\": {\"$first\": \"$driver_name\"}, \"violation_count\": {\"$sum\": 1}, \"violation_types\": {\"$addToSet\": \"$violation_type\"}, \"avg_severity\": {\"$avg\": {\"$switch\": {\"branches\": [{\"case\": {\"$eq\": [\"$severity\", \"HIGH\"]}, \"then\": 3}, {\"case\": {\"$eq\": [\"$severity\", \"MEDIUM\"]}, \"then\": 2}], \"default\": 1}}}, \"last_violation\": {\"$max\": \"$event_time\"}, \"max_speed\": {\"$max\": \"$telemetry.speed\"}, \"vehicle_license\": {\"$first\": \"$vehicle_license\"}}}, {\"$sort\": {\"violation_count\": -1}}], \"lsid\": {\"id\": {\"$binary\": {\"base64\": \"AcxbYQ7tThWzZ4PwvS532g==\", \"subType\": \"04\"}}}, \"$db\": \"opal_server\"}", "commandName": "aggregate", "databaseName": "opal_server", "requestId": 26500, "operationId": 26500, "driverConnectionId": 1, "serverConnectionId": 13208, "serverHost": "3.144.134.141", "serverPort": 27017}
2025-03-13 16:20:36,778 - pymongo.command - DEBUG - {"clientId": {"$oid": "67d2bf7d3a10f8d19a9b448d"}, "message": "Command succeeded", "durationMS": 2720.746, "reply": "{\"cursor\": {\"firstBatch\": [{\"_id\": \"unknown\", \"name\": \"Unknown\", \"violation_count\": 962, \"violation_types\": [\"SPEED_MEDIUM\", \"SPEED_LOW\", \"SPEED_HIGH\"], \"avg_severity\": 1.9553014553014554, \"last_violation\": {\"$date\": \"2025-03-13T11:14:29.496Z\"}, \"vehicle_license\": \"860260057075813\"}, {\"_id\": \"7463170a-de85-4c5d-a77b-b506d939aca1\", \"name\": \"GUL ZAMAN #94378054\", \"violation_count\": 237, \"violation_types\": [\"SPEED_MEDIUM\", \"SPEED_LOW\"], \"avg_severity\": 1.59915611814346, \"last_violation\": {\"$date\": \"2025-03-13T06:31:35.314Z\"}, \"vehicle_license\": \"1075MR\"}, {\"_id\": \"3dd80f61-5ed1-4038-b3a8-5d2e37759893\", \"name\": \"DALER SINGH\", \"violation_count\": 229, \"violation_types\": [\"SPEED_MEDIUM\", \"SPEED_LOW\"], \"avg_severity\": 1.537117903930131, \"last_violation\": {\"$date\": \"2025-03-11T15:04:20.407Z\"}, \"vehicle_license\": \"1313YD\"}, {\"_id\": \"10009164\", \"name\": \"Unknown\", \"violation_count\": 210, \"violation_types\": [\"SPEED_LOW\", \"SPEED_HIGH\", \"SPEED_MEDIUM\"], \"avg_severity\": 1.7142857142857142, \"last_viola...", "commandName": "aggregate", "databaseName": "opal_server", "requestId": 26500, "operationId": 26500, "driverConnectionId": 1, "serverConnectionId": 13208, "serverHost": "3.144.134.141", "serverPort": 27017}
2025-03-13 16:20:36,781 - pymongo.connection - DEBUG - {"clientId": {"$oid": "67d2bf7d3a10f8d19a9b448d"}, "message": "Connection checked in", "serverHost": "3.144.134.141", "serverPort": 27017, "driverConnectionId": 1}
2025-03-13 16:20:36,783 - pymongo.serverSelection - DEBUG - {"message": "Server selection started", "selector": "<function any_server_selector at 0x0000016A88F08720>", "operation": "getMore", "topologyDescription": "<TopologyDescription id: 67d2bf7d3a10f8d19a9b448d, topology_type: Single, servers: [<ServerDescription ('3.144.134.141', 27017) server_type: Standalone, rtt: 0.375>]>", "clientId": {"$oid": "67d2bf7d3a10f8d19a9b448d"}}
2025-03-13 16:20:36,784 - pymongo.serverSelection - DEBUG - {"message": "Server selection succeeded", "selector": "<function any_server_selector at 0x0000016A88F08720>", "operation": "getMore", "topologyDescription": "<TopologyDescription id: 67d2bf7d3a10f8d19a9b448d, topology_type: Single, servers: [<ServerDescription ('3.144.134.141', 27017) server_type: Standalone, rtt: 0.375>]>", "clientId": {"$oid": "67d2bf7d3a10f8d19a9b448d"}, "serverHost": "3.144.134.141", "serverPort": 27017}
2025-03-13 16:20:36,784 - pymongo.connection - DEBUG - {"clientId": {"$oid": "67d2bf7d3a10f8d19a9b448d"}, "message": "Connection checkout started", "serverHost": "3.144.134.141", "serverPort": 27017}
2025-03-13 16:20:36,785 - pymongo.connection - DEBUG - {"clientId": {"$oid": "67d2bf7d3a10f8d19a9b448d"}, "message": "Connection checked out", "serverHost": "3.144.134.141", "serverPort": 27017, "driverConnectionId": 1, "durationMS": 0.0}
2025-03-13 16:20:36,785 - pymongo.command - DEBUG - {"clientId": {"$oid": "67d2bf7d3a10f8d19a9b448d"}, "message": "Command started", "command": "{\"getMore\": 6841486042356501878, \"collection\": \"violations\", \"lsid\": {\"id\": {\"$binary\": {\"base64\": \"AcxbYQ7tThWzZ4PwvS532g==\", \"subType\": \"04\"}}}, \"$db\": \"opal_server\"}", "commandName": "getMore", "databaseName": "opal_server", "requestId": 19169, "operationId": 19169, "driverConnectionId": 1, "serverConnectionId": 13208, "serverHost": "3.144.134.141", "serverPort": 27017}
2025-03-13 16:20:37,099 - pymongo.command - DEBUG - {"clientId": {"$oid": "67d2bf7d3a10f8d19a9b448d"}, "message": "Command succeeded", "durationMS": 313.452, "reply": "{\"cursor\": {\"nextBatch\": [{\"_id\": \"4616917\", \"name\": \"Unknown\", \"violation_count\": 1, \"violation_types\": [\"SPEED_LOW\"], \"avg_severity\": 1.0, \"last_violation\": {\"$date\": \"2025-03-11T14:56:43.036Z\"}, \"vehicle_license\": \"860665050851988\"}, {\"_id\": \"9480756\", \"name\": \"Unknown\", \"violation_count\": 1, \"violation_types\": [\"SPEED_LOW\"], \"avg_severity\": 1.0, \"last_violation\": {\"$date\": \"2025-03-10T17:44:46.133Z\"}, \"vehicle_license\": \"860260057090853\"}], \"ns\": \"opal_server.violations\"}, \"ok\": 1.0}", "commandName": "getMore", "databaseName": "opal_server", "requestId": 19169, "operationId": 19169, "driverConnectionId": 1, "serverConnectionId": 13208, "serverHost": "3.144.134.141", "serverPort": 27017}
2025-03-13 16:20:37,100 - pymongo.connection - DEBUG - {"clientId": {"$oid": "67d2bf7d3a10f8d19a9b448d"}, "message": "Connection checked in", "serverHost": "3.144.134.141", "serverPort": 27017, "driverConnectionId": 1}
2025-03-13 16:20:37,100 - app.db.repositories.data_repository - INFO - Retrieved stats for 103 drivers
2025-03-13 16:20:40,212 - pymongo.topology - DEBUG - {"topologyId": {"$oid": "67d2bf7d3a10f8d19a9b448d"}, "driverConnectionId": 1, "serverConnectionId": 13206, "serverHost": "3.144.134.141", "serverPort": 27017, "awaited": true, "durationMS": 10375.0, "reply": "{\"isWritablePrimary\": true, \"topologyVersion\": {\"processId\": {\"$oid\": \"67b7e5814f77c1a87c56d054\"}}, \"maxBsonObjectSize\": 16777216, \"maxMessageSizeBytes\": 48000000, \"maxWriteBatchSize\": 100000, \"localTime\": {\"$date\": \"2025-03-13T11:20:40.151Z\"}, \"logicalSessionTimeoutMinutes\": 30, \"connectionId\": 13206, \"maxWireVersion\": 25, \"ok\": 1.0}", "message": "Server heartbeat succeeded"}
2025-03-13 16:20:40,212 - pymongo.topology - DEBUG - {"topologyId": {"$oid": "67d2bf7d3a10f8d19a9b448d"}, "driverConnectionId": 1, "serverConnectionId": 13206, "serverHost": "3.144.134.141", "serverPort": 27017, "awaited": true, "message": "Server heartbeat started"}
2025-03-13 16:20:41,376 - app.db.repositories.data_repository - INFO - Fetching driver risk data for past 3 days
2025-03-13 16:20:41,376 - app.db.repositories.data_repository - DEBUG - Executing pipeline: [{'$match': {'event_time': {'$gte': datetime.datetime(2025, 3, 10, 16, 20, 41, 376952)}}}, {'$group': {'_id': '$driver_uuid', 'name': {'$first': '$driver_name'}, 'violation_count': {'$sum': 1}, 'violation_types': {'$addToSet': '$violation_type'}, 'avg_severity': {'$avg': {'$switch': {'branches': [{'case': {'$eq': ['$severity', 'HIGH']}, 'then': 3}, {'case': {'$eq': ['$severity', 'MEDIUM']}, 'then': 2}], 'default': 1}}}, 'last_violation': {'$max': '$event_time'}, 'max_speed': {'$max': '$telemetry.speed'}, 'vehicle_license': {'$first': '$vehicle_license'}}}, {'$sort': {'violation_count': -1}}]
2025-03-13 16:20:41,376 - pymongo.serverSelection - DEBUG - {"message": "Server selection started", "selector": "Primary()", "operation": "aggregate", "topologyDescription": "<TopologyDescription id: 67d2bf7d3a10f8d19a9b448d, topology_type: Single, servers: [<ServerDescription ('3.144.134.141', 27017) server_type: Standalone, rtt: 0.37180000000007574>]>", "clientId": {"$oid": "67d2bf7d3a10f8d19a9b448d"}}
2025-03-13 16:20:41,378 - pymongo.serverSelection - DEBUG - {"message": "Server selection succeeded", "selector": "Primary()", "operation": "aggregate", "topologyDescription": "<TopologyDescription id: 67d2bf7d3a10f8d19a9b448d, topology_type: Single, servers: [<ServerDescription ('3.144.134.141', 27017) server_type: Standalone, rtt: 0.37180000000007574>]>", "clientId": {"$oid": "67d2bf7d3a10f8d19a9b448d"}, "serverHost": "3.144.134.141", "serverPort": 27017}
2025-03-13 16:20:41,379 - pymongo.connection - DEBUG - {"clientId": {"$oid": "67d2bf7d3a10f8d19a9b448d"}, "message": "Connection checkout started", "serverHost": "3.144.134.141", "serverPort": 27017}
2025-03-13 16:20:41,379 - pymongo.connection - DEBUG - {"clientId": {"$oid": "67d2bf7d3a10f8d19a9b448d"}, "message": "Connection checked out", "serverHost": "3.144.134.141", "serverPort": 27017, "driverConnectionId": 1, "durationMS": 0.0}
2025-03-13 16:20:41,380 - pymongo.command - DEBUG - {"clientId": {"$oid": "67d2bf7d3a10f8d19a9b448d"}, "message": "Command started", "command": "{\"aggregate\": \"violations\", \"pipeline\": [{\"$match\": {\"event_time\": {\"$gte\": {\"$date\": \"2025-03-10T16:20:41.376Z\"}}}}, {\"$group\": {\"_id\": \"$driver_uuid\", \"name\": {\"$first\": \"$driver_name\"}, \"violation_count\": {\"$sum\": 1}, \"violation_types\": {\"$addToSet\": \"$violation_type\"}, \"avg_severity\": {\"$avg\": {\"$switch\": {\"branches\": [{\"case\": {\"$eq\": [\"$severity\", \"HIGH\"]}, \"then\": 3}, {\"case\": {\"$eq\": [\"$severity\", \"MEDIUM\"]}, \"then\": 2}], \"default\": 1}}}, \"last_violation\": {\"$max\": \"$event_time\"}, \"max_speed\": {\"$max\": \"$telemetry.speed\"}, \"vehicle_license\": {\"$first\": \"$vehicle_license\"}}}, {\"$sort\": {\"violation_count\": -1}}], \"lsid\": {\"id\": {\"$binary\": {\"base64\": \"AcxbYQ7tThWzZ4PwvS532g==\", \"subType\": \"04\"}}}, \"$db\": \"opal_server\"}", "commandName": "aggregate", "databaseName": "opal_server", "requestId": 15724, "operationId": 15724, "driverConnectionId": 1, "serverConnectionId": 13208, "serverHost": "3.144.134.141", "serverPort": 27017}
2025-03-13 16:20:42,612 - pymongo.command - DEBUG - {"clientId": {"$oid": "67d2bf7d3a10f8d19a9b448d"}, "message": "Command succeeded", "durationMS": 1232.515, "reply": "{\"cursor\": {\"firstBatch\": [{\"_id\": \"unknown\", \"name\": \"Unknown\", \"violation_count\": 962, \"violation_types\": [\"SPEED_MEDIUM\", \"SPEED_LOW\", \"SPEED_HIGH\"], \"avg_severity\": 1.9553014553014554, \"last_violation\": {\"$date\": \"2025-03-13T11:14:29.496Z\"}, \"vehicle_license\": \"860260057075813\"}, {\"_id\": \"7463170a-de85-4c5d-a77b-b506d939aca1\", \"name\": \"GUL ZAMAN #94378054\", \"violation_count\": 237, \"violation_types\": [\"SPEED_MEDIUM\", \"SPEED_LOW\"], \"avg_severity\": 1.59915611814346, \"last_violation\": {\"$date\": \"2025-03-13T06:31:35.314Z\"}, \"vehicle_license\": \"1075MR\"}, {\"_id\": \"3dd80f61-5ed1-4038-b3a8-5d2e37759893\", \"name\": \"DALER SINGH\", \"violation_count\": 229, \"violation_types\": [\"SPEED_MEDIUM\", \"SPEED_LOW\"], \"avg_severity\": 1.537117903930131, \"last_violation\": {\"$date\": \"2025-03-11T15:04:20.407Z\"}, \"vehicle_license\": \"1313YD\"}, {\"_id\": \"10009164\", \"name\": \"Unknown\", \"violation_count\": 210, \"violation_types\": [\"SPEED_LOW\", \"SPEED_HIGH\", \"SPEED_MEDIUM\"], \"avg_severity\": 1.7142857142857142, \"last_viola...", "commandName": "aggregate", "databaseName": "opal_server", "requestId": 15724, "operationId": 15724, "driverConnectionId": 1, "serverConnectionId": 13208, "serverHost": "3.144.134.141", "serverPort": 27017}
2025-03-13 16:20:42,612 - pymongo.connection - DEBUG - {"clientId": {"$oid": "67d2bf7d3a10f8d19a9b448d"}, "message": "Connection checked in", "serverHost": "3.144.134.141", "serverPort": 27017, "driverConnectionId": 1}
2025-03-13 16:20:42,614 - pymongo.serverSelection - DEBUG - {"message": "Server selection started", "selector": "<function any_server_selector at 0x0000016A88F08720>", "operation": "getMore", "topologyDescription": "<TopologyDescription id: 67d2bf7d3a10f8d19a9b448d, topology_type: Single, servers: [<ServerDescription ('3.144.134.141', 27017) server_type: Standalone, rtt: 0.37180000000007574>]>", "clientId": {"$oid": "67d2bf7d3a10f8d19a9b448d"}}
2025-03-13 16:20:42,615 - pymongo.serverSelection - DEBUG - {"message": "Server selection succeeded", "selector": "<function any_server_selector at 0x0000016A88F08720>", "operation": "getMore", "topologyDescription": "<TopologyDescription id: 67d2bf7d3a10f8d19a9b448d, topology_type: Single, servers: [<ServerDescription ('3.144.134.141', 27017) server_type: Standalone, rtt: 0.37180000000007574>]>", "clientId": {"$oid": "67d2bf7d3a10f8d19a9b448d"}, "serverHost": "3.144.134.141", "serverPort": 27017}
2025-03-13 16:20:42,615 - pymongo.connection - DEBUG - {"clientId": {"$oid": "67d2bf7d3a10f8d19a9b448d"}, "message": "Connection checkout started", "serverHost": "3.144.134.141", "serverPort": 27017}
2025-03-13 16:20:42,616 - pymongo.connection - DEBUG - {"clientId": {"$oid": "67d2bf7d3a10f8d19a9b448d"}, "message": "Connection checked out", "serverHost": "3.144.134.141", "serverPort": 27017, "driverConnectionId": 1, "durationMS": 0.01599999999962165}
2025-03-13 16:20:42,616 - pymongo.command - DEBUG - {"clientId": {"$oid": "67d2bf7d3a10f8d19a9b448d"}, "message": "Command started", "command": "{\"getMore\": 6580101154952304652, \"collection\": \"violations\", \"lsid\": {\"id\": {\"$binary\": {\"base64\": \"AcxbYQ7tThWzZ4PwvS532g==\", \"subType\": \"04\"}}}, \"$db\": \"opal_server\"}", "commandName": "getMore", "databaseName": "opal_server", "requestId": 11478, "operationId": 11478, "driverConnectionId": 1, "serverConnectionId": 13208, "serverHost": "3.144.134.141", "serverPort": 27017}
2025-03-13 16:20:42,905 - pymongo.command - DEBUG - {"clientId": {"$oid": "67d2bf7d3a10f8d19a9b448d"}, "message": "Command succeeded", "durationMS": 289.346, "reply": "{\"cursor\": {\"nextBatch\": [{\"_id\": \"4616917\", \"name\": \"Unknown\", \"violation_count\": 1, \"violation_types\": [\"SPEED_LOW\"], \"avg_severity\": 1.0, \"last_violation\": {\"$date\": \"2025-03-11T14:56:43.036Z\"}, \"vehicle_license\": \"860665050851988\"}, {\"_id\": \"9480756\", \"name\": \"Unknown\", \"violation_count\": 1, \"violation_types\": [\"SPEED_LOW\"], \"avg_severity\": 1.0, \"last_violation\": {\"$date\": \"2025-03-10T17:44:46.133Z\"}, \"vehicle_license\": \"860260057090853\"}], \"ns\": \"opal_server.violations\"}, \"ok\": 1.0}", "commandName": "getMore", "databaseName": "opal_server", "requestId": 11478, "operationId": 11478, "driverConnectionId": 1, "serverConnectionId": 13208, "serverHost": "3.144.134.141", "serverPort": 27017}
2025-03-13 16:20:42,906 - pymongo.connection - DEBUG - {"clientId": {"$oid": "67d2bf7d3a10f8d19a9b448d"}, "message": "Connection checked in", "serverHost": "3.144.134.141", "serverPort": 27017, "driverConnectionId": 1}
2025-03-13 16:20:42,908 - app.db.repositories.data_repository - INFO - Retrieved stats for 103 drivers
2025-03-13 16:20:50,200 - pymongo.topology - DEBUG - {"topologyId": {"$oid": "67d2bf7d3a10f8d19a9b448d"}, "driverConnectionId": 1, "serverConnectionId": 13206, "serverHost": "3.144.134.141", "serverPort": 27017, "awaited": true, "durationMS": 9984.000000000378, "reply": "{\"isWritablePrimary\": true, \"topologyVersion\": {\"processId\": {\"$oid\": \"67b7e5814f77c1a87c56d054\"}}, \"maxBsonObjectSize\": 16777216, \"maxMessageSizeBytes\": 48000000, \"maxWriteBatchSize\": 100000, \"localTime\": {\"$date\": \"2025-03-13T11:20:50.151Z\"}, \"logicalSessionTimeoutMinutes\": 30, \"connectionId\": 13206, \"maxWireVersion\": 25, \"ok\": 1.0}", "message": "Server heartbeat succeeded"}
2025-03-13 16:20:50,201 - pymongo.topology - DEBUG - {"topologyId": {"$oid": "67d2bf7d3a10f8d19a9b448d"}, "driverConnectionId": 1, "serverConnectionId": 13206, "serverHost": "3.144.134.141", "serverPort": 27017, "awaited": true, "message": "Server heartbeat started"}
2025-03-13 16:21:01,151 - pymongo.topology - DEBUG - {"topologyId": {"$oid": "67d2bf7d3a10f8d19a9b448d"}, "driverConnectionId": 1, "serverConnectionId": 13206, "serverHost": "3.144.134.141", "serverPort": 27017, "awaited": true, "durationMS": 10952.99999999952, "reply": "{\"isWritablePrimary\": true, \"topologyVersion\": {\"processId\": {\"$oid\": \"67b7e5814f77c1a87c56d054\"}}, \"maxBsonObjectSize\": 16777216, \"maxMessageSizeBytes\": 48000000, \"maxWriteBatchSize\": 100000, \"localTime\": {\"$date\": \"2025-03-13T11:21:00.151Z\"}, \"logicalSessionTimeoutMinutes\": 30, \"connectionId\": 13206, \"maxWireVersion\": 25, \"ok\": 1.0}", "message": "Server heartbeat succeeded"}
2025-03-13 16:21:01,152 - pymongo.topology - DEBUG - {"topologyId": {"$oid": "67d2bf7d3a10f8d19a9b448d"}, "driverConnectionId": 1, "serverConnectionId": 13206, "serverHost": "3.144.134.141", "serverPort": 27017, "awaited": true, "message": "Server heartbeat started"}
2025-03-13 16:21:10,179 - pymongo.topology - DEBUG - {"topologyId": {"$oid": "67d2bf7d3a10f8d19a9b448d"}, "driverConnectionId": 1, "serverConnectionId": 13206, "serverHost": "3.144.134.141", "serverPort": 27017, "awaited": true, "durationMS": 9031.000000000859, "reply": "{\"isWritablePrimary\": true, \"topologyVersion\": {\"processId\": {\"$oid\": \"67b7e5814f77c1a87c56d054\"}}, \"maxBsonObjectSize\": 16777216, \"maxMessageSizeBytes\": 48000000, \"maxWriteBatchSize\": 100000, \"localTime\": {\"$date\": \"2025-03-13T11:21:10.151Z\"}, \"logicalSessionTimeoutMinutes\": 30, \"connectionId\": 13206, \"maxWireVersion\": 25, \"ok\": 1.0}", "message": "Server heartbeat succeeded"}
2025-03-13 16:21:10,180 - pymongo.topology - DEBUG - {"topologyId": {"$oid": "67d2bf7d3a10f8d19a9b448d"}, "driverConnectionId": 1, "serverConnectionId": 13206, "serverHost": "3.144.134.141", "serverPort": 27017, "awaited": true, "message": "Server heartbeat started"}
2025-03-13 16:21:20,156 - pymongo.topology - DEBUG - {"topologyId": {"$oid": "67d2bf7d3a10f8d19a9b448d"}, "driverConnectionId": 1, "serverConnectionId": 13206, "serverHost": "3.144.134.141", "serverPort": 27017, "awaited": true, "durationMS": 9968.999999999141, "reply": "{\"isWritablePrimary\": true, \"topologyVersion\": {\"processId\": {\"$oid\": \"67b7e5814f77c1a87c56d054\"}}, \"maxBsonObjectSize\": 16777216, \"maxMessageSizeBytes\": 48000000, \"maxWriteBatchSize\": 100000, \"localTime\": {\"$date\": \"2025-03-13T11:21:20.151Z\"}, \"logicalSessionTimeoutMinutes\": 30, \"connectionId\": 13206, \"maxWireVersion\": 25, \"ok\": 1.0}", "message": "Server heartbeat succeeded"}
2025-03-13 16:21:20,156 - pymongo.topology - DEBUG - {"topologyId": {"$oid": "67d2bf7d3a10f8d19a9b448d"}, "driverConnectionId": 1, "serverConnectionId": 13206, "serverHost": "3.144.134.141", "serverPort": 27017, "awaited": true, "message": "Server heartbeat started"}
2025-03-13 16:21:30,159 - pymongo.topology - DEBUG - {"topologyId": {"$oid": "67d2bf7d3a10f8d19a9b448d"}, "driverConnectionId": 1, "serverConnectionId": 13206, "serverHost": "3.144.134.141", "serverPort": 27017, "awaited": true, "durationMS": 10000.0, "reply": "{\"isWritablePrimary\": true, \"topologyVersion\": {\"processId\": {\"$oid\": \"67b7e5814f77c1a87c56d054\"}}, \"maxBsonObjectSize\": 16777216, \"maxMessageSizeBytes\": 48000000, \"maxWriteBatchSize\": 100000, \"localTime\": {\"$date\": \"2025-03-13T11:21:30.153Z\"}, \"logicalSessionTimeoutMinutes\": 30, \"connectionId\": 13206, \"maxWireVersion\": 25, \"ok\": 1.0}", "message": "Server heartbeat succeeded"}
2025-03-13 16:21:30,160 - pymongo.topology - DEBUG - {"topologyId": {"$oid": "67d2bf7d3a10f8d19a9b448d"}, "driverConnectionId": 1, "serverConnectionId": 13206, "serverHost": "3.144.134.141", "serverPort": 27017, "awaited": true, "message": "Server heartbeat started"}
2025-03-13 16:21:40,186 - pymongo.topology - DEBUG - {"topologyId": {"$oid": "67d2bf7d3a10f8d19a9b448d"}, "driverConnectionId": 1, "serverConnectionId": 13206, "serverHost": "3.144.134.141", "serverPort": 27017, "awaited": true, "durationMS": 10031.000000000859, "reply": "{\"isWritablePrimary\": true, \"topologyVersion\": {\"processId\": {\"$oid\": \"67b7e5814f77c1a87c56d054\"}}, \"maxBsonObjectSize\": 16777216, \"maxMessageSizeBytes\": 48000000, \"maxWriteBatchSize\": 100000, \"localTime\": {\"$date\": \"2025-03-13T11:21:40.162Z\"}, \"logicalSessionTimeoutMinutes\": 30, \"connectionId\": 13206, \"maxWireVersion\": 25, \"ok\": 1.0}", "message": "Server heartbeat succeeded"}
2025-03-13 16:21:40,186 - pymongo.topology - DEBUG - {"topologyId": {"$oid": "67d2bf7d3a10f8d19a9b448d"}, "driverConnectionId": 1, "serverConnectionId": 13206, "serverHost": "3.144.134.141", "serverPort": 27017, "awaited": true, "message": "Server heartbeat started"}
2025-03-13 16:21:50,190 - pymongo.topology - DEBUG - {"topologyId": {"$oid": "67d2bf7d3a10f8d19a9b448d"}, "driverConnectionId": 1, "serverConnectionId": 13206, "serverHost": "3.144.134.141", "serverPort": 27017, "awaited": true, "durationMS": 10000.0, "reply": "{\"isWritablePrimary\": true, \"topologyVersion\": {\"processId\": {\"$oid\": \"67b7e5814f77c1a87c56d054\"}}, \"maxBsonObjectSize\": 16777216, \"maxMessageSizeBytes\": 48000000, \"maxWriteBatchSize\": 100000, \"localTime\": {\"$date\": \"2025-03-13T11:21:50.163Z\"}, \"logicalSessionTimeoutMinutes\": 30, \"connectionId\": 13206, \"maxWireVersion\": 25, \"ok\": 1.0}", "message": "Server heartbeat succeeded"}
2025-03-13 16:21:50,190 - pymongo.topology - DEBUG - {"topologyId": {"$oid": "67d2bf7d3a10f8d19a9b448d"}, "driverConnectionId": 1, "serverConnectionId": 13206, "serverHost": "3.144.134.141", "serverPort": 27017, "awaited": true, "message": "Server heartbeat started"}
2025-03-13 16:22:00,175 - pymongo.topology - DEBUG - {"topologyId": {"$oid": "67d2bf7d3a10f8d19a9b448d"}, "driverConnectionId": 1, "serverConnectionId": 13206, "serverHost": "3.144.134.141", "serverPort": 27017, "awaited": true, "durationMS": 9985.000000000582, "reply": "{\"isWritablePrimary\": true, \"topologyVersion\": {\"processId\": {\"$oid\": \"67b7e5814f77c1a87c56d054\"}}, \"maxBsonObjectSize\": 16777216, \"maxMessageSizeBytes\": 48000000, \"maxWriteBatchSize\": 100000, \"localTime\": {\"$date\": \"2025-03-13T11:22:00.164Z\"}, \"logicalSessionTimeoutMinutes\": 30, \"connectionId\": 13206, \"maxWireVersion\": 25, \"ok\": 1.0}", "message": "Server heartbeat succeeded"}
2025-03-13 16:22:00,176 - pymongo.topology - DEBUG - {"topologyId": {"$oid": "67d2bf7d3a10f8d19a9b448d"}, "driverConnectionId": 1, "serverConnectionId": 13206, "serverHost": "3.144.134.141", "serverPort": 27017, "awaited": true, "message": "Server heartbeat started"}
2025-03-13 16:22:10,178 - pymongo.topology - DEBUG - {"topologyId": {"$oid": "67d2bf7d3a10f8d19a9b448d"}, "driverConnectionId": 1, "serverConnectionId": 13206, "serverHost": "3.144.134.141", "serverPort": 27017, "awaited": true, "durationMS": 9999.999999998181, "reply": "{\"isWritablePrimary\": true, \"topologyVersion\": {\"processId\": {\"$oid\": \"67b7e5814f77c1a87c56d054\"}}, \"maxBsonObjectSize\": 16777216, \"maxMessageSizeBytes\": 48000000, \"maxWriteBatchSize\": 100000, \"localTime\": {\"$date\": \"2025-03-13T11:22:10.165Z\"}, \"logicalSessionTimeoutMinutes\": 30, \"connectionId\": 13206, \"maxWireVersion\": 25, \"ok\": 1.0}", "message": "Server heartbeat succeeded"}
2025-03-13 16:22:10,179 - pymongo.topology - DEBUG - {"topologyId": {"$oid": "67d2bf7d3a10f8d19a9b448d"}, "driverConnectionId": 1, "serverConnectionId": 13206, "serverHost": "3.144.134.141", "serverPort": 27017, "awaited": true, "message": "Server heartbeat started"}
2025-03-13 16:22:18,445 - numexpr.utils - INFO - Note: NumExpr detected 12 cores but "NUMEXPR_MAX_THREADS" not set, so enforcing safe limit of 8.
2025-03-13 16:22:18,447 - numexpr.utils - INFO - NumExpr defaulting to 8 threads.
2025-03-13 16:22:19,965 - matplotlib - DEBUG - matplotlib data path: C:\Users\msameerakram\AppData\Local\anaconda3\Lib\site-packages\matplotlib\mpl-data
2025-03-13 16:22:19,970 - matplotlib - DEBUG - CONFIGDIR=C:\Users\msameerakram\.matplotlib
2025-03-13 16:22:19,972 - matplotlib - DEBUG - interactive is False
2025-03-13 16:22:19,972 - matplotlib - DEBUG - platform is win32
2025-03-13 16:22:20,058 - matplotlib - DEBUG - CACHEDIR=C:\Users\msameerakram\.matplotlib
2025-03-13 16:22:20,063 - matplotlib.font_manager - DEBUG - Using fontManager instance from C:\Users\msameerakram\.matplotlib\fontlist-v390.json
2025-03-13 16:22:23,111 - numexpr.utils - INFO - Note: NumExpr detected 12 cores but "NUMEXPR_MAX_THREADS" not set, so enforcing safe limit of 8.
2025-03-13 16:22:23,112 - numexpr.utils - INFO - NumExpr defaulting to 8 threads.
2025-03-13 16:22:24,544 - matplotlib - DEBUG - matplotlib data path: C:\Users\msameerakram\AppData\Local\anaconda3\Lib\site-packages\matplotlib\mpl-data
2025-03-13 16:22:24,550 - matplotlib - DEBUG - CONFIGDIR=C:\Users\msameerakram\.matplotlib
2025-03-13 16:22:24,552 - matplotlib - DEBUG - interactive is False
2025-03-13 16:22:24,552 - matplotlib - DEBUG - platform is win32
2025-03-13 16:22:24,615 - matplotlib - DEBUG - CACHEDIR=C:\Users\msameerakram\.matplotlib
2025-03-13 16:22:24,617 - matplotlib.font_manager - DEBUG - Using fontManager instance from C:\Users\msameerakram\.matplotlib\fontlist-v390.json
2025-03-13 16:22:26,218 - asyncio - DEBUG - Using selector: SelectSelector
2025-03-13 16:22:26,262 - pymongo.topology - DEBUG - {"topologyId": {"$oid": "67d2bff27ee56953d0fccd38"}, "message": "Starting topology monitoring"}
2025-03-13 16:22:26,263 - pymongo.topology - DEBUG - {"topologyId": {"$oid": "67d2bff27ee56953d0fccd38"}, "previousDescription": "<TopologyDescription id: 67d2bff27ee56953d0fccd38, topology_type: Unknown, servers: []>", "newDescription": "<TopologyDescription id: 67d2bff27ee56953d0fccd38, topology_type: Unknown, servers: [<ServerDescription ('3.144.134.141', 27017) server_type: Unknown, rtt: None>]>", "message": "Topology description changed"}
2025-03-13 16:22:26,263 - pymongo.topology - DEBUG - {"topologyId": {"$oid": "67d2bff27ee56953d0fccd38"}, "serverHost": "3.144.134.141", "serverPort": 27017, "message": "Starting server monitoring"}
2025-03-13 16:22:26,264 - pymongo.connection - DEBUG - {"clientId": {"$oid": "67d2bff27ee56953d0fccd38"}, "message": "Connection pool created", "serverHost": "3.144.134.141", "serverPort": 27017}
2025-03-13 16:22:26,265 - pymongo.serverSelection - DEBUG - {"message": "Server selection started", "selector": "Primary()", "operation": "ping", "topologyDescription": "<TopologyDescription id: 67d2bff27ee56953d0fccd38, topology_type: Unknown, servers: [<ServerDescription ('3.144.134.141', 27017) server_type: Unknown, rtt: None>]>", "clientId": {"$oid": "67d2bff27ee56953d0fccd38"}}
2025-03-13 16:22:26,266 - pymongo.serverSelection - DEBUG - {"message": "Waiting for suitable server to become available", "selector": "Primary()", "operation": "ping", "topologyDescription": "<TopologyDescription id: 67d2bff27ee56953d0fccd38, topology_type: Unknown, servers: [<ServerDescription ('3.144.134.141', 27017) server_type: Unknown, rtt: None>]>", "clientId": {"$oid": "67d2bff27ee56953d0fccd38"}, "remainingTimeMS": 30}
2025-03-13 16:22:26,582 - pymongo.topology - DEBUG - {"topologyId": {"$oid": "67d2bff27ee56953d0fccd38"}, "driverConnectionId": 1, "serverHost": "3.144.134.141", "serverPort": 27017, "awaited": false, "message": "Server heartbeat started"}
2025-03-13 16:22:26,885 - pymongo.topology - DEBUG - {"topologyId": {"$oid": "67d2bff27ee56953d0fccd38"}, "driverConnectionId": 1, "serverConnectionId": 13209, "serverHost": "3.144.134.141", "serverPort": 27017, "awaited": false, "durationMS": 312.9999999982829, "reply": "{\"helloOk\": true, \"ismaster\": true, \"topologyVersion\": {\"processId\": {\"$oid\": \"67b7e5814f77c1a87c56d054\"}}, \"maxBsonObjectSize\": 16777216, \"maxMessageSizeBytes\": 48000000, \"maxWriteBatchSize\": 100000, \"localTime\": {\"$date\": \"2025-03-13T11:22:26.880Z\"}, \"logicalSessionTimeoutMinutes\": 30, \"connectionId\": 13209, \"maxWireVersion\": 25, \"ok\": 1.0}", "message": "Server heartbeat succeeded"}
2025-03-13 16:22:26,885 - pymongo.connection - DEBUG - {"clientId": {"$oid": "67d2bff27ee56953d0fccd38"}, "message": "Connection pool ready", "serverHost": "3.144.134.141", "serverPort": 27017}
2025-03-13 16:22:26,886 - pymongo.topology - DEBUG - {"topologyId": {"$oid": "67d2bff27ee56953d0fccd38"}, "previousDescription": "<TopologyDescription id: 67d2bff27ee56953d0fccd38, topology_type: Unknown, servers: [<ServerDescription ('3.144.134.141', 27017) server_type: Unknown, rtt: None>]>", "newDescription": "<TopologyDescription id: 67d2bff27ee56953d0fccd38, topology_type: Single, servers: [<ServerDescription ('3.144.134.141', 27017) server_type: Standalone, rtt: 0.3129999999982829>]>", "message": "Topology description changed"}
2025-03-13 16:22:26,886 - pymongo.serverSelection - DEBUG - {"message": "Server selection succeeded", "selector": "Primary()", "operation": "ping", "topologyDescription": "<TopologyDescription id: 67d2bff27ee56953d0fccd38, topology_type: Single, servers: [<ServerDescription ('3.144.134.141', 27017) server_type: Standalone, rtt: 0.3129999999982829>]>", "clientId": {"$oid": "67d2bff27ee56953d0fccd38"}, "serverHost": "3.144.134.141", "serverPort": 27017}
2025-03-13 16:22:26,887 - pymongo.topology - DEBUG - {"topologyId": {"$oid": "67d2bff27ee56953d0fccd38"}, "driverConnectionId": 1, "serverConnectionId": 13209, "serverHost": "3.144.134.141", "serverPort": 27017, "awaited": true, "message": "Server heartbeat started"}
2025-03-13 16:22:26,887 - pymongo.connection - DEBUG - {"clientId": {"$oid": "67d2bff27ee56953d0fccd38"}, "message": "Connection checkout started", "serverHost": "3.144.134.141", "serverPort": 27017}
2025-03-13 16:22:26,888 - pymongo.connection - DEBUG - {"clientId": {"$oid": "67d2bff27ee56953d0fccd38"}, "message": "Connection created", "serverHost": "3.144.134.141", "serverPort": 27017, "driverConnectionId": 1}
2025-03-13 16:22:27,821 - pymongo.connection - DEBUG - {"clientId": {"$oid": "67d2bff27ee56953d0fccd38"}, "message": "Connection ready", "serverHost": "3.144.134.141", "serverPort": 27017, "driverConnectionId": 1, "durationMS": 0.625}
2025-03-13 16:22:27,822 - pymongo.connection - DEBUG - {"clientId": {"$oid": "67d2bff27ee56953d0fccd38"}, "message": "Connection checked out", "serverHost": "3.144.134.141", "serverPort": 27017, "driverConnectionId": 1, "durationMS": 0.9370000000017171}
2025-03-13 16:22:27,822 - pymongo.command - DEBUG - {"clientId": {"$oid": "67d2bff27ee56953d0fccd38"}, "message": "Command started", "command": "{\"ping\": 1, \"lsid\": {\"id\": {\"$binary\": {\"base64\": \"8Fu2TU9SRAecmdHa3HUj+w==\", \"subType\": \"04\"}}}, \"$db\": \"opal_server\"}", "commandName": "ping", "databaseName": "opal_server", "requestId": 6334, "operationId": 6334, "driverConnectionId": 1, "serverConnectionId": 13211, "serverHost": "3.144.134.141", "serverPort": 27017}
2025-03-13 16:22:28,131 - pymongo.command - DEBUG - {"clientId": {"$oid": "67d2bff27ee56953d0fccd38"}, "message": "Command succeeded", "durationMS": 309.433, "reply": "{\"ok\": 1.0}", "commandName": "ping", "databaseName": "opal_server", "requestId": 6334, "operationId": 6334, "driverConnectionId": 1, "serverConnectionId": 13211, "serverHost": "3.144.134.141", "serverPort": 27017}
2025-03-13 16:22:28,132 - pymongo.connection - DEBUG - {"clientId": {"$oid": "67d2bff27ee56953d0fccd38"}, "message": "Connection checked in", "serverHost": "3.144.134.141", "serverPort": 27017, "driverConnectionId": 1}
2025-03-13 16:22:33,976 - app.db.repositories.data_repository - INFO - Fetching driver risk data for past 3 days
2025-03-13 16:22:33,977 - app.db.repositories.data_repository - DEBUG - Executing pipeline: [{'$match': {'event_time': {'$gte': datetime.datetime(2025, 3, 10, 16, 22, 33, 977863)}}}, {'$group': {'_id': '$driver_uuid', 'name': {'$first': '$driver_name'}, 'violation_count': {'$sum': 1}, 'violation_types': {'$addToSet': '$violation_type'}, 'avg_severity': {'$avg': {'$switch': {'branches': [{'case': {'$eq': ['$severity', 'HIGH']}, 'then': 3}, {'case': {'$eq': ['$severity', 'MEDIUM']}, 'then': 2}], 'default': 1}}}, 'last_violation': {'$max': '$event_time'}, 'max_speed': {'$max': '$telemetry.speed'}, 'vehicle_license': {'$first': '$vehicle_license'}}}, {'$sort': {'violation_count': -1}}]
2025-03-13 16:22:33,978 - pymongo.serverSelection - DEBUG - {"message": "Server selection started", "selector": "Primary()", "operation": "aggregate", "topologyDescription": "<TopologyDescription id: 67d2bff27ee56953d0fccd38, topology_type: Single, servers: [<ServerDescription ('3.144.134.141', 27017) server_type: Standalone, rtt: 0.3129999999982829>]>", "clientId": {"$oid": "67d2bff27ee56953d0fccd38"}}
2025-03-13 16:22:33,979 - pymongo.serverSelection - DEBUG - {"message": "Server selection succeeded", "selector": "Primary()", "operation": "aggregate", "topologyDescription": "<TopologyDescription id: 67d2bff27ee56953d0fccd38, topology_type: Single, servers: [<ServerDescription ('3.144.134.141', 27017) server_type: Standalone, rtt: 0.3129999999982829>]>", "clientId": {"$oid": "67d2bff27ee56953d0fccd38"}, "serverHost": "3.144.134.141", "serverPort": 27017}
2025-03-13 16:22:33,979 - pymongo.connection - DEBUG - {"clientId": {"$oid": "67d2bff27ee56953d0fccd38"}, "message": "Connection checkout started", "serverHost": "3.144.134.141", "serverPort": 27017}
2025-03-13 16:22:33,979 - pymongo.connection - DEBUG - {"clientId": {"$oid": "67d2bff27ee56953d0fccd38"}, "message": "Connection checked out", "serverHost": "3.144.134.141", "serverPort": 27017, "driverConnectionId": 1, "durationMS": 0.0}
2025-03-13 16:22:33,980 - pymongo.command - DEBUG - {"clientId": {"$oid": "67d2bff27ee56953d0fccd38"}, "message": "Command started", "command": "{\"aggregate\": \"violations\", \"pipeline\": [{\"$match\": {\"event_time\": {\"$gte\": {\"$date\": \"2025-03-10T16:22:33.977Z\"}}}}, {\"$group\": {\"_id\": \"$driver_uuid\", \"name\": {\"$first\": \"$driver_name\"}, \"violation_count\": {\"$sum\": 1}, \"violation_types\": {\"$addToSet\": \"$violation_type\"}, \"avg_severity\": {\"$avg\": {\"$switch\": {\"branches\": [{\"case\": {\"$eq\": [\"$severity\", \"HIGH\"]}, \"then\": 3}, {\"case\": {\"$eq\": [\"$severity\", \"MEDIUM\"]}, \"then\": 2}], \"default\": 1}}}, \"last_violation\": {\"$max\": \"$event_time\"}, \"max_speed\": {\"$max\": \"$telemetry.speed\"}, \"vehicle_license\": {\"$first\": \"$vehicle_license\"}}}, {\"$sort\": {\"violation_count\": -1}}], \"lsid\": {\"id\": {\"$binary\": {\"base64\": \"8Fu2TU9SRAecmdHa3HUj+w==\", \"subType\": \"04\"}}}, \"$db\": \"opal_server\"}", "commandName": "aggregate", "databaseName": "opal_server", "requestId": 26500, "operationId": 26500, "driverConnectionId": 1, "serverConnectionId": 13211, "serverHost": "3.144.134.141", "serverPort": 27017}
2025-03-13 16:22:34,582 - pymongo.command - DEBUG - {"clientId": {"$oid": "67d2bff27ee56953d0fccd38"}, "message": "Command succeeded", "durationMS": 601.782, "reply": "{\"cursor\": {\"firstBatch\": [{\"_id\": \"unknown\", \"name\": \"Unknown\", \"violation_count\": 961, \"violation_types\": [\"SPEED_MEDIUM\", \"SPEED_LOW\", \"SPEED_HIGH\"], \"avg_severity\": 1.95525494276795, \"last_violation\": {\"$date\": \"2025-03-13T11:14:29.496Z\"}, \"vehicle_license\": \"860260056948960\"}, {\"_id\": \"7463170a-de85-4c5d-a77b-b506d939aca1\", \"name\": \"GUL ZAMAN #94378054\", \"violation_count\": 237, \"violation_types\": [\"SPEED_MEDIUM\", \"SPEED_LOW\"], \"avg_severity\": 1.59915611814346, \"last_violation\": {\"$date\": \"2025-03-13T06:31:35.314Z\"}, \"vehicle_license\": \"1075MR\"}, {\"_id\": \"3dd80f61-5ed1-4038-b3a8-5d2e37759893\", \"name\": \"DALER SINGH\", \"violation_count\": 228, \"violation_types\": [\"SPEED_MEDIUM\", \"SPEED_LOW\"], \"avg_severity\": 1.5394736842105263, \"last_violation\": {\"$date\": \"2025-03-11T15:04:20.407Z\"}, \"vehicle_license\": \"1313YD\"}, {\"_id\": \"10009164\", \"name\": \"Unknown\", \"violation_count\": 209, \"violation_types\": [\"SPEED_MEDIUM\", \"SPEED_LOW\", \"SPEED_HIGH\"], \"avg_severity\": 1.7129186602870814, \"last_violat...", "commandName": "aggregate", "databaseName": "opal_server", "requestId": 26500, "operationId": 26500, "driverConnectionId": 1, "serverConnectionId": 13211, "serverHost": "3.144.134.141", "serverPort": 27017}
2025-03-13 16:22:34,585 - pymongo.connection - DEBUG - {"clientId": {"$oid": "67d2bff27ee56953d0fccd38"}, "message": "Connection checked in", "serverHost": "3.144.134.141", "serverPort": 27017, "driverConnectionId": 1}
2025-03-13 16:22:34,586 - pymongo.serverSelection - DEBUG - {"message": "Server selection started", "selector": "<function any_server_selector at 0x000001FE015C8720>", "operation": "getMore", "topologyDescription": "<TopologyDescription id: 67d2bff27ee56953d0fccd38, topology_type: Single, servers: [<ServerDescription ('3.144.134.141', 27017) server_type: Standalone, rtt: 0.3129999999982829>]>", "clientId": {"$oid": "67d2bff27ee56953d0fccd38"}}
2025-03-13 16:22:34,586 - pymongo.serverSelection - DEBUG - {"message": "Server selection succeeded", "selector": "<function any_server_selector at 0x000001FE015C8720>", "operation": "getMore", "topologyDescription": "<TopologyDescription id: 67d2bff27ee56953d0fccd38, topology_type: Single, servers: [<ServerDescription ('3.144.134.141', 27017) server_type: Standalone, rtt: 0.3129999999982829>]>", "clientId": {"$oid": "67d2bff27ee56953d0fccd38"}, "serverHost": "3.144.134.141", "serverPort": 27017}
2025-03-13 16:22:34,587 - pymongo.connection - DEBUG - {"clientId": {"$oid": "67d2bff27ee56953d0fccd38"}, "message": "Connection checkout started", "serverHost": "3.144.134.141", "serverPort": 27017}
2025-03-13 16:22:34,587 - pymongo.connection - DEBUG - {"clientId": {"$oid": "67d2bff27ee56953d0fccd38"}, "message": "Connection checked out", "serverHost": "3.144.134.141", "serverPort": 27017, "driverConnectionId": 1, "durationMS": 0.0}
2025-03-13 16:22:34,588 - pymongo.command - DEBUG - {"clientId": {"$oid": "67d2bff27ee56953d0fccd38"}, "message": "Command started", "command": "{\"getMore\": 1798574527080932373, \"collection\": \"violations\", \"lsid\": {\"id\": {\"$binary\": {\"base64\": \"8Fu2TU9SRAecmdHa3HUj+w==\", \"subType\": \"04\"}}}, \"$db\": \"opal_server\"}", "commandName": "getMore", "databaseName": "opal_server", "requestId": 19169, "operationId": 19169, "driverConnectionId": 1, "serverConnectionId": 13211, "serverHost": "3.144.134.141", "serverPort": 27017}
2025-03-13 16:22:34,902 - pymongo.command - DEBUG - {"clientId": {"$oid": "67d2bff27ee56953d0fccd38"}, "message": "Command succeeded", "durationMS": 314.15999999999997, "reply": "{\"cursor\": {\"nextBatch\": [{\"_id\": \"4616917\", \"name\": \"Unknown\", \"violation_count\": 1, \"violation_types\": [\"SPEED_LOW\"], \"avg_severity\": 1.0, \"last_violation\": {\"$date\": \"2025-03-11T14:56:43.036Z\"}, \"vehicle_license\": \"860665050851988\"}, {\"_id\": \"9480756\", \"name\": \"Unknown\", \"violation_count\": 1, \"violation_types\": [\"SPEED_LOW\"], \"avg_severity\": 1.0, \"last_violation\": {\"$date\": \"2025-03-10T17:44:46.133Z\"}, \"vehicle_license\": \"860260057090853\"}], \"ns\": \"opal_server.violations\"}, \"ok\": 1.0}", "commandName": "getMore", "databaseName": "opal_server", "requestId": 19169, "operationId": 19169, "driverConnectionId": 1, "serverConnectionId": 13211, "serverHost": "3.144.134.141", "serverPort": 27017}
2025-03-13 16:22:34,903 - pymongo.connection - DEBUG - {"clientId": {"$oid": "67d2bff27ee56953d0fccd38"}, "message": "Connection checked in", "serverHost": "3.144.134.141", "serverPort": 27017, "driverConnectionId": 1}
2025-03-13 16:22:34,903 - app.db.repositories.data_repository - INFO - Retrieved stats for 103 drivers
2025-03-13 16:22:37,191 - pymongo.topology - DEBUG - {"topologyId": {"$oid": "67d2bff27ee56953d0fccd38"}, "driverConnectionId": 1, "serverConnectionId": 13209, "serverHost": "3.144.134.141", "serverPort": 27017, "awaited": true, "durationMS": 10295.999999998457, "reply": "{\"isWritablePrimary\": true, \"topologyVersion\": {\"processId\": {\"$oid\": \"67b7e5814f77c1a87c56d054\"}}, \"maxBsonObjectSize\": 16777216, \"maxMessageSizeBytes\": 48000000, \"maxWriteBatchSize\": 100000, \"localTime\": {\"$date\": \"2025-03-13T11:22:37.184Z\"}, \"logicalSessionTimeoutMinutes\": 30, \"connectionId\": 13209, \"maxWireVersion\": 25, \"ok\": 1.0}", "message": "Server heartbeat succeeded"}
2025-03-13 16:22:37,192 - pymongo.topology - DEBUG - {"topologyId": {"$oid": "67d2bff27ee56953d0fccd38"}, "driverConnectionId": 1, "serverConnectionId": 13209, "serverHost": "3.144.134.141", "serverPort": 27017, "awaited": true, "message": "Server heartbeat started"}
2025-03-13 16:22:47,218 - pymongo.topology - DEBUG - {"topologyId": {"$oid": "67d2bff27ee56953d0fccd38"}, "driverConnectionId": 1, "serverConnectionId": 13209, "serverHost": "3.144.134.141", "serverPort": 27017, "awaited": true, "durationMS": 10032.000000002881, "reply": "{\"isWritablePrimary\": true, \"topologyVersion\": {\"processId\": {\"$oid\": \"67b7e5814f77c1a87c56d054\"}}, \"maxBsonObjectSize\": 16777216, \"maxMessageSizeBytes\": 48000000, \"maxWriteBatchSize\": 100000, \"localTime\": {\"$date\": \"2025-03-13T11:22:47.186Z\"}, \"logicalSessionTimeoutMinutes\": 30, \"connectionId\": 13209, \"maxWireVersion\": 25, \"ok\": 1.0}", "message": "Server heartbeat succeeded"}
2025-03-13 16:22:47,220 - pymongo.topology - DEBUG - {"topologyId": {"$oid": "67d2bff27ee56953d0fccd38"}, "driverConnectionId": 1, "serverConnectionId": 13209, "serverHost": "3.144.134.141", "serverPort": 27017, "awaited": true, "message": "Server heartbeat started"}
2025-03-13 16:22:56,794 - numexpr.utils - INFO - Note: NumExpr detected 12 cores but "NUMEXPR_MAX_THREADS" not set, so enforcing safe limit of 8.
2025-03-13 16:22:56,794 - numexpr.utils - INFO - NumExpr defaulting to 8 threads.
2025-03-13 16:22:58,235 - matplotlib - DEBUG - matplotlib data path: C:\Users\msameerakram\AppData\Local\anaconda3\Lib\site-packages\matplotlib\mpl-data
2025-03-13 16:22:58,242 - matplotlib - DEBUG - CONFIGDIR=C:\Users\msameerakram\.matplotlib
2025-03-13 16:22:58,244 - matplotlib - DEBUG - interactive is False
2025-03-13 16:22:58,244 - matplotlib - DEBUG - platform is win32
2025-03-13 16:22:58,317 - matplotlib - DEBUG - CACHEDIR=C:\Users\msameerakram\.matplotlib
2025-03-13 16:22:58,323 - matplotlib.font_manager - DEBUG - Using fontManager instance from C:\Users\msameerakram\.matplotlib\fontlist-v390.json
2025-03-13 16:23:01,526 - numexpr.utils - INFO - Note: NumExpr detected 12 cores but "NUMEXPR_MAX_THREADS" not set, so enforcing safe limit of 8.
2025-03-13 16:23:01,527 - numexpr.utils - INFO - NumExpr defaulting to 8 threads.
2025-03-13 16:23:03,076 - matplotlib - DEBUG - matplotlib data path: C:\Users\msameerakram\AppData\Local\anaconda3\Lib\site-packages\matplotlib\mpl-data
2025-03-13 16:23:03,082 - matplotlib - DEBUG - CONFIGDIR=C:\Users\msameerakram\.matplotlib
2025-03-13 16:23:03,085 - matplotlib - DEBUG - interactive is False
2025-03-13 16:23:03,085 - matplotlib - DEBUG - platform is win32
2025-03-13 16:23:03,160 - matplotlib - DEBUG - CACHEDIR=C:\Users\msameerakram\.matplotlib
2025-03-13 16:23:03,164 - matplotlib.font_manager - DEBUG - Using fontManager instance from C:\Users\msameerakram\.matplotlib\fontlist-v390.json
2025-03-13 16:23:04,924 - asyncio - DEBUG - Using selector: SelectSelector
2025-03-13 16:23:04,971 - pymongo.topology - DEBUG - {"topologyId": {"$oid": "67d2c018160c488b4b2a4842"}, "message": "Starting topology monitoring"}
2025-03-13 16:23:04,971 - pymongo.topology - DEBUG - {"topologyId": {"$oid": "67d2c018160c488b4b2a4842"}, "previousDescription": "<TopologyDescription id: 67d2c018160c488b4b2a4842, topology_type: Unknown, servers: []>", "newDescription": "<TopologyDescription id: 67d2c018160c488b4b2a4842, topology_type: Unknown, servers: [<ServerDescription ('3.144.134.141', 27017) server_type: Unknown, rtt: None>]>", "message": "Topology description changed"}
2025-03-13 16:23:04,972 - pymongo.topology - DEBUG - {"topologyId": {"$oid": "67d2c018160c488b4b2a4842"}, "serverHost": "3.144.134.141", "serverPort": 27017, "message": "Starting server monitoring"}
2025-03-13 16:23:04,975 - pymongo.connection - DEBUG - {"clientId": {"$oid": "67d2c018160c488b4b2a4842"}, "message": "Connection pool created", "serverHost": "3.144.134.141", "serverPort": 27017}
2025-03-13 16:23:04,977 - pymongo.serverSelection - DEBUG - {"message": "Server selection started", "selector": "Primary()", "operation": "ping", "topologyDescription": "<TopologyDescription id: 67d2c018160c488b4b2a4842, topology_type: Unknown, servers: [<ServerDescription ('3.144.134.141', 27017) server_type: Unknown, rtt: None>]>", "clientId": {"$oid": "67d2c018160c488b4b2a4842"}}
2025-03-13 16:23:04,977 - pymongo.serverSelection - DEBUG - {"message": "Waiting for suitable server to become available", "selector": "Primary()", "operation": "ping", "topologyDescription": "<TopologyDescription id: 67d2c018160c488b4b2a4842, topology_type: Unknown, servers: [<ServerDescription ('3.144.134.141', 27017) server_type: Unknown, rtt: None>]>", "clientId": {"$oid": "67d2c018160c488b4b2a4842"}, "remainingTimeMS": 30}
2025-03-13 16:23:05,238 - pymongo.topology - DEBUG - {"topologyId": {"$oid": "67d2c018160c488b4b2a4842"}, "driverConnectionId": 1, "serverHost": "3.144.134.141", "serverPort": 27017, "awaited": false, "message": "Server heartbeat started"}
2025-03-13 16:23:05,527 - pymongo.topology - DEBUG - {"topologyId": {"$oid": "67d2c018160c488b4b2a4842"}, "driverConnectionId": 1, "serverConnectionId": 13212, "serverHost": "3.144.134.141", "serverPort": 27017, "awaited": false, "durationMS": 296.9999999986612, "reply": "{\"helloOk\": true, \"ismaster\": true, \"topologyVersion\": {\"processId\": {\"$oid\": \"67b7e5814f77c1a87c56d054\"}}, \"maxBsonObjectSize\": 16777216, \"maxMessageSizeBytes\": 48000000, \"maxWriteBatchSize\": 100000, \"localTime\": {\"$date\": \"2025-03-13T11:23:05.537Z\"}, \"logicalSessionTimeoutMinutes\": 30, \"connectionId\": 13212, \"maxWireVersion\": 25, \"ok\": 1.0}", "message": "Server heartbeat succeeded"}
2025-03-13 16:23:05,528 - pymongo.connection - DEBUG - {"clientId": {"$oid": "67d2c018160c488b4b2a4842"}, "message": "Connection pool ready", "serverHost": "3.144.134.141", "serverPort": 27017}
2025-03-13 16:23:05,528 - pymongo.topology - DEBUG - {"topologyId": {"$oid": "67d2c018160c488b4b2a4842"}, "previousDescription": "<TopologyDescription id: 67d2c018160c488b4b2a4842, topology_type: Unknown, servers: [<ServerDescription ('3.144.134.141', 27017) server_type: Unknown, rtt: None>]>", "newDescription": "<TopologyDescription id: 67d2c018160c488b4b2a4842, topology_type: Single, servers: [<ServerDescription ('3.144.134.141', 27017) server_type: Standalone, rtt: 0.2969999999986612>]>", "message": "Topology description changed"}
2025-03-13 16:23:05,529 - pymongo.serverSelection - DEBUG - {"message": "Server selection succeeded", "selector": "Primary()", "operation": "ping", "topologyDescription": "<TopologyDescription id: 67d2c018160c488b4b2a4842, topology_type: Single, servers: [<ServerDescription ('3.144.134.141', 27017) server_type: Standalone, rtt: 0.2969999999986612>]>", "clientId": {"$oid": "67d2c018160c488b4b2a4842"}, "serverHost": "3.144.134.141", "serverPort": 27017}
2025-03-13 16:23:05,530 - pymongo.topology - DEBUG - {"topologyId": {"$oid": "67d2c018160c488b4b2a4842"}, "driverConnectionId": 1, "serverConnectionId": 13212, "serverHost": "3.144.134.141", "serverPort": 27017, "awaited": true, "message": "Server heartbeat started"}
2025-03-13 16:23:05,531 - pymongo.connection - DEBUG - {"clientId": {"$oid": "67d2c018160c488b4b2a4842"}, "message": "Connection checkout started", "serverHost": "3.144.134.141", "serverPort": 27017}
2025-03-13 16:23:05,532 - pymongo.connection - DEBUG - {"clientId": {"$oid": "67d2c018160c488b4b2a4842"}, "message": "Connection created", "serverHost": "3.144.134.141", "serverPort": 27017, "driverConnectionId": 1}
2025-03-13 16:23:06,489 - pymongo.connection - DEBUG - {"clientId": {"$oid": "67d2c018160c488b4b2a4842"}, "message": "Connection ready", "serverHost": "3.144.134.141", "serverPort": 27017, "driverConnectionId": 1, "durationMS": 0.5930000000007567}
2025-03-13 16:23:06,490 - pymongo.connection - DEBUG - {"clientId": {"$oid": "67d2c018160c488b4b2a4842"}, "message": "Connection checked out", "serverHost": "3.144.134.141", "serverPort": 27017, "driverConnectionId": 1, "durationMS": 0.9530000000013388}
2025-03-13 16:23:06,490 - pymongo.command - DEBUG - {"clientId": {"$oid": "67d2c018160c488b4b2a4842"}, "message": "Command started", "command": "{\"ping\": 1, \"lsid\": {\"id\": {\"$binary\": {\"base64\": \"B/Kg5EnsSW+HgGg7AJoHww==\", \"subType\": \"04\"}}}, \"$db\": \"opal_server\"}", "commandName": "ping", "databaseName": "opal_server", "requestId": 6334, "operationId": 6334, "driverConnectionId": 1, "serverConnectionId": 13213, "serverHost": "3.144.134.141", "serverPort": 27017}
2025-03-13 16:23:06,804 - pymongo.command - DEBUG - {"clientId": {"$oid": "67d2c018160c488b4b2a4842"}, "message": "Command succeeded", "durationMS": 313.103, "reply": "{\"ok\": 1.0}", "commandName": "ping", "databaseName": "opal_server", "requestId": 6334, "operationId": 6334, "driverConnectionId": 1, "serverConnectionId": 13213, "serverHost": "3.144.134.141", "serverPort": 27017}
2025-03-13 16:23:06,805 - pymongo.connection - DEBUG - {"clientId": {"$oid": "67d2c018160c488b4b2a4842"}, "message": "Connection checked in", "serverHost": "3.144.134.141", "serverPort": 27017, "driverConnectionId": 1}
2025-03-13 16:23:06,841 - app.db.repositories.data_repository - INFO - Fetching driver risk data for past 3 days
2025-03-13 16:23:06,841 - app.db.repositories.data_repository - DEBUG - Executing pipeline: [{'$match': {'event_time': {'$gte': datetime.datetime(2025, 3, 10, 16, 23, 6, 841725)}}}, {'$group': {'_id': '$driver_uuid', 'name': {'$first': '$driver_name'}, 'violation_count': {'$sum': 1}, 'violation_types': {'$addToSet': '$violation_type'}, 'avg_severity': {'$avg': {'$switch': {'branches': [{'case': {'$eq': ['$severity', 'HIGH']}, 'then': 3}, {'case': {'$eq': ['$severity', 'MEDIUM']}, 'then': 2}], 'default': 1}}}, 'last_violation': {'$max': '$event_time'}, 'max_speed': {'$max': '$telemetry.speed'}, 'vehicle_license': {'$first': '$vehicle_license'}}}, {'$sort': {'violation_count': -1}}]
2025-03-13 16:23:06,842 - pymongo.serverSelection - DEBUG - {"message": "Server selection started", "selector": "Primary()", "operation": "aggregate", "topologyDescription": "<TopologyDescription id: 67d2c018160c488b4b2a4842, topology_type: Single, servers: [<ServerDescription ('3.144.134.141', 27017) server_type: Standalone, rtt: 0.2969999999986612>]>", "clientId": {"$oid": "67d2c018160c488b4b2a4842"}}
2025-03-13 16:23:06,843 - pymongo.serverSelection - DEBUG - {"message": "Server selection succeeded", "selector": "Primary()", "operation": "aggregate", "topologyDescription": "<TopologyDescription id: 67d2c018160c488b4b2a4842, topology_type: Single, servers: [<ServerDescription ('3.144.134.141', 27017) server_type: Standalone, rtt: 0.2969999999986612>]>", "clientId": {"$oid": "67d2c018160c488b4b2a4842"}, "serverHost": "3.144.134.141", "serverPort": 27017}
2025-03-13 16:23:06,843 - pymongo.connection - DEBUG - {"clientId": {"$oid": "67d2c018160c488b4b2a4842"}, "message": "Connection checkout started", "serverHost": "3.144.134.141", "serverPort": 27017}
2025-03-13 16:23:06,844 - pymongo.connection - DEBUG - {"clientId": {"$oid": "67d2c018160c488b4b2a4842"}, "message": "Connection checked out", "serverHost": "3.144.134.141", "serverPort": 27017, "driverConnectionId": 1, "durationMS": 0.0}
2025-03-13 16:23:06,844 - pymongo.command - DEBUG - {"clientId": {"$oid": "67d2c018160c488b4b2a4842"}, "message": "Command started", "command": "{\"aggregate\": \"violations\", \"pipeline\": [{\"$match\": {\"event_time\": {\"$gte\": {\"$date\": \"2025-03-10T16:23:06.841Z\"}}}}, {\"$group\": {\"_id\": \"$driver_uuid\", \"name\": {\"$first\": \"$driver_name\"}, \"violation_count\": {\"$sum\": 1}, \"violation_types\": {\"$addToSet\": \"$violation_type\"}, \"avg_severity\": {\"$avg\": {\"$switch\": {\"branches\": [{\"case\": {\"$eq\": [\"$severity\", \"HIGH\"]}, \"then\": 3}, {\"case\": {\"$eq\": [\"$severity\", \"MEDIUM\"]}, \"then\": 2}], \"default\": 1}}}, \"last_violation\": {\"$max\": \"$event_time\"}, \"max_speed\": {\"$max\": \"$telemetry.speed\"}, \"vehicle_license\": {\"$first\": \"$vehicle_license\"}}}, {\"$sort\": {\"violation_count\": -1}}], \"lsid\": {\"id\": {\"$binary\": {\"base64\": \"B/Kg5EnsSW+HgGg7AJoHww==\", \"subType\": \"04\"}}}, \"$db\": \"opal_server\"}", "commandName": "aggregate", "databaseName": "opal_server", "requestId": 26500, "operationId": 26500, "driverConnectionId": 1, "serverConnectionId": 13213, "serverHost": "3.144.134.141", "serverPort": 27017}
2025-03-13 16:23:07,487 - pymongo.command - DEBUG - {"clientId": {"$oid": "67d2c018160c488b4b2a4842"}, "message": "Command succeeded", "durationMS": 643.0740000000001, "reply": "{\"cursor\": {\"firstBatch\": [{\"_id\": \"unknown\", \"name\": \"Unknown\", \"violation_count\": 961, \"violation_types\": [\"SPEED_MEDIUM\", \"SPEED_LOW\", \"SPEED_HIGH\"], \"avg_severity\": 1.95525494276795, \"last_violation\": {\"$date\": \"2025-03-13T11:14:29.496Z\"}, \"vehicle_license\": \"860260056948960\"}, {\"_id\": \"7463170a-de85-4c5d-a77b-b506d939aca1\", \"name\": \"GUL ZAMAN #94378054\", \"violation_count\": 237, \"violation_types\": [\"SPEED_MEDIUM\", \"SPEED_LOW\"], \"avg_severity\": 1.59915611814346, \"last_violation\": {\"$date\": \"2025-03-13T06:31:35.314Z\"}, \"vehicle_license\": \"1075MR\"}, {\"_id\": \"3dd80f61-5ed1-4038-b3a8-5d2e37759893\", \"name\": \"DALER SINGH\", \"violation_count\": 228, \"violation_types\": [\"SPEED_MEDIUM\", \"SPEED_LOW\"], \"avg_severity\": 1.5394736842105263, \"last_violation\": {\"$date\": \"2025-03-11T15:04:20.407Z\"}, \"vehicle_license\": \"1313YD\"}, {\"_id\": \"10009164\", \"name\": \"Unknown\", \"violation_count\": 209, \"violation_types\": [\"SPEED_LOW\", \"SPEED_HIGH\", \"SPEED_MEDIUM\"], \"avg_severity\": 1.7129186602870814, \"last_violat...", "commandName": "aggregate", "databaseName": "opal_server", "requestId": 26500, "operationId": 26500, "driverConnectionId": 1, "serverConnectionId": 13213, "serverHost": "3.144.134.141", "serverPort": 27017}
2025-03-13 16:23:07,489 - pymongo.connection - DEBUG - {"clientId": {"$oid": "67d2c018160c488b4b2a4842"}, "message": "Connection checked in", "serverHost": "3.144.134.141", "serverPort": 27017, "driverConnectionId": 1}
2025-03-13 16:23:07,490 - pymongo.serverSelection - DEBUG - {"message": "Server selection started", "selector": "<function any_server_selector at 0x00000235701A8720>", "operation": "getMore", "topologyDescription": "<TopologyDescription id: 67d2c018160c488b4b2a4842, topology_type: Single, servers: [<ServerDescription ('3.144.134.141', 27017) server_type: Standalone, rtt: 0.2969999999986612>]>", "clientId": {"$oid": "67d2c018160c488b4b2a4842"}}
2025-03-13 16:23:07,490 - pymongo.serverSelection - DEBUG - {"message": "Server selection succeeded", "selector": "<function any_server_selector at 0x00000235701A8720>", "operation": "getMore", "topologyDescription": "<TopologyDescription id: 67d2c018160c488b4b2a4842, topology_type: Single, servers: [<ServerDescription ('3.144.134.141', 27017) server_type: Standalone, rtt: 0.2969999999986612>]>", "clientId": {"$oid": "67d2c018160c488b4b2a4842"}, "serverHost": "3.144.134.141", "serverPort": 27017}
2025-03-13 16:23:07,490 - pymongo.connection - DEBUG - {"clientId": {"$oid": "67d2c018160c488b4b2a4842"}, "message": "Connection checkout started", "serverHost": "3.144.134.141", "serverPort": 27017}
2025-03-13 16:23:07,491 - pymongo.connection - DEBUG - {"clientId": {"$oid": "67d2c018160c488b4b2a4842"}, "message": "Connection checked out", "serverHost": "3.144.134.141", "serverPort": 27017, "driverConnectionId": 1, "durationMS": 0.01599999999962165}
2025-03-13 16:23:07,491 - pymongo.command - DEBUG - {"clientId": {"$oid": "67d2c018160c488b4b2a4842"}, "message": "Command started", "command": "{\"getMore\": 2162710192488921285, \"collection\": \"violations\", \"lsid\": {\"id\": {\"$binary\": {\"base64\": \"B/Kg5EnsSW+HgGg7AJoHww==\", \"subType\": \"04\"}}}, \"$db\": \"opal_server\"}", "commandName": "getMore", "databaseName": "opal_server", "requestId": 19169, "operationId": 19169, "driverConnectionId": 1, "serverConnectionId": 13213, "serverHost": "3.144.134.141", "serverPort": 27017}
2025-03-13 16:23:07,799 - pymongo.command - DEBUG - {"clientId": {"$oid": "67d2c018160c488b4b2a4842"}, "message": "Command succeeded", "durationMS": 307.955, "reply": "{\"cursor\": {\"nextBatch\": [{\"_id\": \"4616917\", \"name\": \"Unknown\", \"violation_count\": 1, \"violation_types\": [\"SPEED_LOW\"], \"avg_severity\": 1.0, \"last_violation\": {\"$date\": \"2025-03-11T14:56:43.036Z\"}, \"vehicle_license\": \"860665050851988\"}, {\"_id\": \"9480756\", \"name\": \"Unknown\", \"violation_count\": 1, \"violation_types\": [\"SPEED_LOW\"], \"avg_severity\": 1.0, \"last_violation\": {\"$date\": \"2025-03-10T17:44:46.133Z\"}, \"vehicle_license\": \"860260057090853\"}], \"ns\": \"opal_server.violations\"}, \"ok\": 1.0}", "commandName": "getMore", "databaseName": "opal_server", "requestId": 19169, "operationId": 19169, "driverConnectionId": 1, "serverConnectionId": 13213, "serverHost": "3.144.134.141", "serverPort": 27017}
2025-03-13 16:23:07,800 - pymongo.connection - DEBUG - {"clientId": {"$oid": "67d2c018160c488b4b2a4842"}, "message": "Connection checked in", "serverHost": "3.144.134.141", "serverPort": 27017, "driverConnectionId": 1}
2025-03-13 16:23:07,801 - app.db.repositories.data_repository - INFO - Retrieved stats for 103 drivers
2025-03-13 16:23:39,316 - numexpr.utils - INFO - Note: NumExpr detected 12 cores but "NUMEXPR_MAX_THREADS" not set, so enforcing safe limit of 8.
2025-03-13 16:23:39,317 - numexpr.utils - INFO - NumExpr defaulting to 8 threads.
2025-03-13 16:23:40,786 - matplotlib - DEBUG - matplotlib data path: C:\Users\msameerakram\AppData\Local\anaconda3\Lib\site-packages\matplotlib\mpl-data
2025-03-13 16:23:40,793 - matplotlib - DEBUG - CONFIGDIR=C:\Users\msameerakram\.matplotlib
2025-03-13 16:23:40,796 - matplotlib - DEBUG - interactive is False
2025-03-13 16:23:40,797 - matplotlib - DEBUG - platform is win32
2025-03-13 16:23:40,866 - matplotlib - DEBUG - CACHEDIR=C:\Users\msameerakram\.matplotlib
2025-03-13 16:23:40,870 - matplotlib.font_manager - DEBUG - Using fontManager instance from C:\Users\msameerakram\.matplotlib\fontlist-v390.json
2025-03-13 16:23:43,603 - numexpr.utils - INFO - Note: NumExpr detected 12 cores but "NUMEXPR_MAX_THREADS" not set, so enforcing safe limit of 8.
2025-03-13 16:23:43,604 - numexpr.utils - INFO - NumExpr defaulting to 8 threads.
2025-03-13 16:23:44,988 - matplotlib - DEBUG - matplotlib data path: C:\Users\msameerakram\AppData\Local\anaconda3\Lib\site-packages\matplotlib\mpl-data
2025-03-13 16:23:44,993 - matplotlib - DEBUG - CONFIGDIR=C:\Users\msameerakram\.matplotlib
2025-03-13 16:23:44,994 - matplotlib - DEBUG - interactive is False
2025-03-13 16:23:44,995 - matplotlib - DEBUG - platform is win32
2025-03-13 16:23:45,058 - matplotlib - DEBUG - CACHEDIR=C:\Users\msameerakram\.matplotlib
2025-03-13 16:23:45,062 - matplotlib.font_manager - DEBUG - Using fontManager instance from C:\Users\msameerakram\.matplotlib\fontlist-v390.json
2025-03-13 16:23:46,624 - asyncio - DEBUG - Using selector: SelectSelector
2025-03-13 16:23:46,669 - pymongo.topology - DEBUG - {"topologyId": {"$oid": "67d2c042aaac9805d606d8fb"}, "message": "Starting topology monitoring"}
2025-03-13 16:23:46,669 - pymongo.topology - DEBUG - {"topologyId": {"$oid": "67d2c042aaac9805d606d8fb"}, "previousDescription": "<TopologyDescription id: 67d2c042aaac9805d606d8fb, topology_type: Unknown, servers: []>", "newDescription": "<TopologyDescription id: 67d2c042aaac9805d606d8fb, topology_type: Unknown, servers: [<ServerDescription ('3.144.134.141', 27017) server_type: Unknown, rtt: None>]>", "message": "Topology description changed"}
2025-03-13 16:23:46,670 - pymongo.topology - DEBUG - {"topologyId": {"$oid": "67d2c042aaac9805d606d8fb"}, "serverHost": "3.144.134.141", "serverPort": 27017, "message": "Starting server monitoring"}
2025-03-13 16:23:46,671 - pymongo.connection - DEBUG - {"clientId": {"$oid": "67d2c042aaac9805d606d8fb"}, "message": "Connection pool created", "serverHost": "3.144.134.141", "serverPort": 27017}
2025-03-13 16:23:46,672 - pymongo.serverSelection - DEBUG - {"message": "Server selection started", "selector": "Primary()", "operation": "ping", "topologyDescription": "<TopologyDescription id: 67d2c042aaac9805d606d8fb, topology_type: Unknown, servers: [<ServerDescription ('3.144.134.141', 27017) server_type: Unknown, rtt: None>]>", "clientId": {"$oid": "67d2c042aaac9805d606d8fb"}}
2025-03-13 16:23:46,672 - pymongo.serverSelection - DEBUG - {"message": "Waiting for suitable server to become available", "selector": "Primary()", "operation": "ping", "topologyDescription": "<TopologyDescription id: 67d2c042aaac9805d606d8fb, topology_type: Unknown, servers: [<ServerDescription ('3.144.134.141', 27017) server_type: Unknown, rtt: None>]>", "clientId": {"$oid": "67d2c042aaac9805d606d8fb"}, "remainingTimeMS": 30}
2025-03-13 16:23:46,990 - pymongo.topology - DEBUG - {"topologyId": {"$oid": "67d2c042aaac9805d606d8fb"}, "driverConnectionId": 1, "serverHost": "3.144.134.141", "serverPort": 27017, "awaited": false, "message": "Server heartbeat started"}
2025-03-13 16:23:47,289 - pymongo.topology - DEBUG - {"topologyId": {"$oid": "67d2c042aaac9805d606d8fb"}, "driverConnectionId": 1, "serverConnectionId": 13215, "serverHost": "3.144.134.141", "serverPort": 27017, "awaited": false, "durationMS": 312.9999999982829, "reply": "{\"helloOk\": true, \"ismaster\": true, \"topologyVersion\": {\"processId\": {\"$oid\": \"67b7e5814f77c1a87c56d054\"}}, \"maxBsonObjectSize\": 16777216, \"maxMessageSizeBytes\": 48000000, \"maxWriteBatchSize\": 100000, \"localTime\": {\"$date\": \"2025-03-13T11:23:47.287Z\"}, \"logicalSessionTimeoutMinutes\": 30, \"connectionId\": 13215, \"maxWireVersion\": 25, \"ok\": 1.0}", "message": "Server heartbeat succeeded"}
2025-03-13 16:23:47,289 - pymongo.connection - DEBUG - {"clientId": {"$oid": "67d2c042aaac9805d606d8fb"}, "message": "Connection pool ready", "serverHost": "3.144.134.141", "serverPort": 27017}
2025-03-13 16:23:47,290 - pymongo.topology - DEBUG - {"topologyId": {"$oid": "67d2c042aaac9805d606d8fb"}, "previousDescription": "<TopologyDescription id: 67d2c042aaac9805d606d8fb, topology_type: Unknown, servers: [<ServerDescription ('3.144.134.141', 27017) server_type: Unknown, rtt: None>]>", "newDescription": "<TopologyDescription id: 67d2c042aaac9805d606d8fb, topology_type: Single, servers: [<ServerDescription ('3.144.134.141', 27017) server_type: Standalone, rtt: 0.3129999999982829>]>", "message": "Topology description changed"}
2025-03-13 16:23:47,290 - pymongo.serverSelection - DEBUG - {"message": "Server selection succeeded", "selector": "Primary()", "operation": "ping", "topologyDescription": "<TopologyDescription id: 67d2c042aaac9805d606d8fb, topology_type: Single, servers: [<ServerDescription ('3.144.134.141', 27017) server_type: Standalone, rtt: 0.3129999999982829>]>", "clientId": {"$oid": "67d2c042aaac9805d606d8fb"}, "serverHost": "3.144.134.141", "serverPort": 27017}
2025-03-13 16:23:47,291 - pymongo.connection - DEBUG - {"clientId": {"$oid": "67d2c042aaac9805d606d8fb"}, "message": "Connection checkout started", "serverHost": "3.144.134.141", "serverPort": 27017}
2025-03-13 16:23:47,292 - pymongo.topology - DEBUG - {"topologyId": {"$oid": "67d2c042aaac9805d606d8fb"}, "driverConnectionId": 1, "serverConnectionId": 13215, "serverHost": "3.144.134.141", "serverPort": 27017, "awaited": true, "message": "Server heartbeat started"}
2025-03-13 16:23:47,292 - pymongo.connection - DEBUG - {"clientId": {"$oid": "67d2c042aaac9805d606d8fb"}, "message": "Connection created", "serverHost": "3.144.134.141", "serverPort": 27017, "driverConnectionId": 1}
2025-03-13 16:23:48,246 - pymongo.connection - DEBUG - {"clientId": {"$oid": "67d2c042aaac9805d606d8fb"}, "message": "Connection ready", "serverHost": "3.144.134.141", "serverPort": 27017, "driverConnectionId": 1, "durationMS": 0.625}
2025-03-13 16:23:48,246 - pymongo.connection - DEBUG - {"clientId": {"$oid": "67d2c042aaac9805d606d8fb"}, "message": "Connection checked out", "serverHost": "3.144.134.141", "serverPort": 27017, "driverConnectionId": 1, "durationMS": 0.9530000000013388}
2025-03-13 16:23:48,247 - pymongo.command - DEBUG - {"clientId": {"$oid": "67d2c042aaac9805d606d8fb"}, "message": "Command started", "command": "{\"ping\": 1, \"lsid\": {\"id\": {\"$binary\": {\"base64\": \"ipoqJ14rQjm4rpwxLqX2QQ==\", \"subType\": \"04\"}}}, \"$db\": \"opal_server\"}", "commandName": "ping", "databaseName": "opal_server", "requestId": 6334, "operationId": 6334, "driverConnectionId": 1, "serverConnectionId": 13217, "serverHost": "3.144.134.141", "serverPort": 27017}
2025-03-13 16:23:48,556 - pymongo.command - DEBUG - {"clientId": {"$oid": "67d2c042aaac9805d606d8fb"}, "message": "Command succeeded", "durationMS": 308.63800000000003, "reply": "{\"ok\": 1.0}", "commandName": "ping", "databaseName": "opal_server", "requestId": 6334, "operationId": 6334, "driverConnectionId": 1, "serverConnectionId": 13217, "serverHost": "3.144.134.141", "serverPort": 27017}
2025-03-13 16:23:48,557 - pymongo.connection - DEBUG - {"clientId": {"$oid": "67d2c042aaac9805d606d8fb"}, "message": "Connection checked in", "serverHost": "3.144.134.141", "serverPort": 27017, "driverConnectionId": 1}
2025-03-13 16:23:51,678 - app.services.predictive_analytics - INFO - Starting driver risk prediction for last 3 days
2025-03-13 16:23:51,678 - app.db.repositories.data_repository - INFO - Fetching driver risk data for past 3 days
2025-03-13 16:23:51,679 - app.db.repositories.data_repository - DEBUG - Executing pipeline: [{'$match': {'event_time': {'$gte': datetime.datetime(2025, 3, 10, 16, 23, 51, 678011)}}}, {'$group': {'_id': '$driver_uuid', 'name': {'$first': '$driver_name'}, 'violation_count': {'$sum': 1}, 'violation_types': {'$addToSet': '$violation_type'}, 'avg_severity': {'$avg': {'$switch': {'branches': [{'case': {'$eq': ['$severity', 'HIGH']}, 'then': 3}, {'case': {'$eq': ['$severity', 'MEDIUM']}, 'then': 2}], 'default': 1}}}, 'last_violation': {'$max': '$event_time'}, 'max_speed': {'$max': '$telemetry.speed'}, 'vehicle_license': {'$first': '$vehicle_license'}}}, {'$sort': {'violation_count': -1}}]
2025-03-13 16:23:51,680 - pymongo.serverSelection - DEBUG - {"message": "Server selection started", "selector": "Primary()", "operation": "aggregate", "topologyDescription": "<TopologyDescription id: 67d2c042aaac9805d606d8fb, topology_type: Single, servers: [<ServerDescription ('3.144.134.141', 27017) server_type: Standalone, rtt: 0.3129999999982829>]>", "clientId": {"$oid": "67d2c042aaac9805d606d8fb"}}
2025-03-13 16:23:51,682 - pymongo.serverSelection - DEBUG - {"message": "Server selection succeeded", "selector": "Primary()", "operation": "aggregate", "topologyDescription": "<TopologyDescription id: 67d2c042aaac9805d606d8fb, topology_type: Single, servers: [<ServerDescription ('3.144.134.141', 27017) server_type: Standalone, rtt: 0.3129999999982829>]>", "clientId": {"$oid": "67d2c042aaac9805d606d8fb"}, "serverHost": "3.144.134.141", "serverPort": 27017}
2025-03-13 16:23:51,683 - pymongo.connection - DEBUG - {"clientId": {"$oid": "67d2c042aaac9805d606d8fb"}, "message": "Connection checkout started", "serverHost": "3.144.134.141", "serverPort": 27017}
2025-03-13 16:23:51,683 - pymongo.connection - DEBUG - {"clientId": {"$oid": "67d2c042aaac9805d606d8fb"}, "message": "Connection checked out", "serverHost": "3.144.134.141", "serverPort": 27017, "driverConnectionId": 1, "durationMS": 0.0}
2025-03-13 16:23:51,683 - pymongo.command - DEBUG - {"clientId": {"$oid": "67d2c042aaac9805d606d8fb"}, "message": "Command started", "command": "{\"aggregate\": \"violations\", \"pipeline\": [{\"$match\": {\"event_time\": {\"$gte\": {\"$date\": \"2025-03-10T16:23:51.678Z\"}}}}, {\"$group\": {\"_id\": \"$driver_uuid\", \"name\": {\"$first\": \"$driver_name\"}, \"violation_count\": {\"$sum\": 1}, \"violation_types\": {\"$addToSet\": \"$violation_type\"}, \"avg_severity\": {\"$avg\": {\"$switch\": {\"branches\": [{\"case\": {\"$eq\": [\"$severity\", \"HIGH\"]}, \"then\": 3}, {\"case\": {\"$eq\": [\"$severity\", \"MEDIUM\"]}, \"then\": 2}], \"default\": 1}}}, \"last_violation\": {\"$max\": \"$event_time\"}, \"max_speed\": {\"$max\": \"$telemetry.speed\"}, \"vehicle_license\": {\"$first\": \"$vehicle_license\"}}}, {\"$sort\": {\"violation_count\": -1}}], \"lsid\": {\"id\": {\"$binary\": {\"base64\": \"ipoqJ14rQjm4rpwxLqX2QQ==\", \"subType\": \"04\"}}}, \"$db\": \"opal_server\"}", "commandName": "aggregate", "databaseName": "opal_server", "requestId": 26500, "operationId": 26500, "driverConnectionId": 1, "serverConnectionId": 13217, "serverHost": "3.144.134.141", "serverPort": 27017}
2025-03-13 16:23:52,310 - pymongo.command - DEBUG - {"clientId": {"$oid": "67d2c042aaac9805d606d8fb"}, "message": "Command succeeded", "durationMS": 627.5659999999999, "reply": "{\"cursor\": {\"firstBatch\": [{\"_id\": \"unknown\", \"name\": \"Unknown\", \"violation_count\": 960, \"violation_types\": [\"SPEED_MEDIUM\", \"SPEED_LOW\", \"SPEED_HIGH\"], \"avg_severity\": 1.9552083333333334, \"last_violation\": {\"$date\": \"2025-03-13T11:14:29.496Z\"}, \"vehicle_license\": \"860260057075813\"}, {\"_id\": \"7463170a-de85-4c5d-a77b-b506d939aca1\", \"name\": \"GUL ZAMAN #94378054\", \"violation_count\": 237, \"violation_types\": [\"SPEED_MEDIUM\", \"SPEED_LOW\"], \"avg_severity\": 1.59915611814346, \"last_violation\": {\"$date\": \"2025-03-13T06:31:35.314Z\"}, \"vehicle_license\": \"1075MR\"}, {\"_id\": \"3dd80f61-5ed1-4038-b3a8-5d2e37759893\", \"name\": \"DALER SINGH\", \"violation_count\": 227, \"violation_types\": [\"SPEED_MEDIUM\", \"SPEED_LOW\"], \"avg_severity\": 1.5374449339207048, \"last_violation\": {\"$date\": \"2025-03-11T15:04:20.407Z\"}, \"vehicle_license\": \"1313YD\"}, {\"_id\": \"10009164\", \"name\": \"Unknown\", \"violation_count\": 209, \"violation_types\": [\"SPEED_MEDIUM\", \"SPEED_LOW\", \"SPEED_HIGH\"], \"avg_severity\": 1.7129186602870814, \"last_viol...", "commandName": "aggregate", "databaseName": "opal_server", "requestId": 26500, "operationId": 26500, "driverConnectionId": 1, "serverConnectionId": 13217, "serverHost": "3.144.134.141", "serverPort": 27017}
2025-03-13 16:23:52,313 - pymongo.connection - DEBUG - {"clientId": {"$oid": "67d2c042aaac9805d606d8fb"}, "message": "Connection checked in", "serverHost": "3.144.134.141", "serverPort": 27017, "driverConnectionId": 1}
2025-03-13 16:23:52,314 - pymongo.serverSelection - DEBUG - {"message": "Server selection started", "selector": "<function any_server_selector at 0x0000023A2C948720>", "operation": "getMore", "topologyDescription": "<TopologyDescription id: 67d2c042aaac9805d606d8fb, topology_type: Single, servers: [<ServerDescription ('3.144.134.141', 27017) server_type: Standalone, rtt: 0.3129999999982829>]>", "clientId": {"$oid": "67d2c042aaac9805d606d8fb"}}
2025-03-13 16:23:52,315 - pymongo.serverSelection - DEBUG - {"message": "Server selection succeeded", "selector": "<function any_server_selector at 0x0000023A2C948720>", "operation": "getMore", "topologyDescription": "<TopologyDescription id: 67d2c042aaac9805d606d8fb, topology_type: Single, servers: [<ServerDescription ('3.144.134.141', 27017) server_type: Standalone, rtt: 0.3129999999982829>]>", "clientId": {"$oid": "67d2c042aaac9805d606d8fb"}, "serverHost": "3.144.134.141", "serverPort": 27017}
2025-03-13 16:23:52,316 - pymongo.connection - DEBUG - {"clientId": {"$oid": "67d2c042aaac9805d606d8fb"}, "message": "Connection checkout started", "serverHost": "3.144.134.141", "serverPort": 27017}
2025-03-13 16:23:52,317 - pymongo.connection - DEBUG - {"clientId": {"$oid": "67d2c042aaac9805d606d8fb"}, "message": "Connection checked out", "serverHost": "3.144.134.141", "serverPort": 27017, "driverConnectionId": 1, "durationMS": 0.0}
2025-03-13 16:23:52,317 - pymongo.command - DEBUG - {"clientId": {"$oid": "67d2c042aaac9805d606d8fb"}, "message": "Command started", "command": "{\"getMore\": 7982476433377190716, \"collection\": \"violations\", \"lsid\": {\"id\": {\"$binary\": {\"base64\": \"ipoqJ14rQjm4rpwxLqX2QQ==\", \"subType\": \"04\"}}}, \"$db\": \"opal_server\"}", "commandName": "getMore", "databaseName": "opal_server", "requestId": 19169, "operationId": 19169, "driverConnectionId": 1, "serverConnectionId": 13217, "serverHost": "3.144.134.141", "serverPort": 27017}
2025-03-13 16:23:52,614 - pymongo.command - DEBUG - {"clientId": {"$oid": "67d2c042aaac9805d606d8fb"}, "message": "Command succeeded", "durationMS": 296.796, "reply": "{\"cursor\": {\"nextBatch\": [{\"_id\": \"12861265\", \"name\": \"Unknown\", \"violation_count\": 1, \"violation_types\": [\"SPEED_HIGH\"], \"avg_severity\": 3.0, \"last_violation\": {\"$date\": \"2025-03-11T13:39:36.796Z\"}, \"vehicle_license\": \"860260057076571\"}], \"ns\": \"opal_server.violations\"}, \"ok\": 1.0}", "commandName": "getMore", "databaseName": "opal_server", "requestId": 19169, "operationId": 19169, "driverConnectionId": 1, "serverConnectionId": 13217, "serverHost": "3.144.134.141", "serverPort": 27017}
2025-03-13 16:23:52,614 - pymongo.connection - DEBUG - {"clientId": {"$oid": "67d2c042aaac9805d606d8fb"}, "message": "Connection checked in", "serverHost": "3.144.134.141", "serverPort": 27017, "driverConnectionId": 1}
2025-03-13 16:23:52,615 - app.db.repositories.data_repository - INFO - Retrieved stats for 102 drivers
2025-03-13 16:23:52,615 - app.services.predictive_analytics - INFO - Retrieved 102 driver records
2025-03-13 16:23:52,616 - app.services.predictive_analytics - INFO - Successfully processed 9 drivers
2025-03-13 16:23:57,606 - pymongo.topology - DEBUG - {"topologyId": {"$oid": "67d2c042aaac9805d606d8fb"}, "driverConnectionId": 1, "serverConnectionId": 13215, "serverHost": "3.144.134.141", "serverPort": 27017, "awaited": true, "durationMS": 10312.000000001717, "reply": "{\"isWritablePrimary\": true, \"topologyVersion\": {\"processId\": {\"$oid\": \"67b7e5814f77c1a87c56d054\"}}, \"maxBsonObjectSize\": 16777216, \"maxMessageSizeBytes\": 48000000, \"maxWriteBatchSize\": 100000, \"localTime\": {\"$date\": \"2025-03-13T11:23:57.593Z\"}, \"logicalSessionTimeoutMinutes\": 30, \"connectionId\": 13215, \"maxWireVersion\": 25, \"ok\": 1.0}", "message": "Server heartbeat succeeded"}
2025-03-13 16:23:57,607 - pymongo.topology - DEBUG - {"topologyId": {"$oid": "67d2c042aaac9805d606d8fb"}, "driverConnectionId": 1, "serverConnectionId": 13215, "serverHost": "3.144.134.141", "serverPort": 27017, "awaited": true, "message": "Server heartbeat started"}
2025-03-13 16:24:07,609 - pymongo.topology - DEBUG - {"topologyId": {"$oid": "67d2c042aaac9805d606d8fb"}, "driverConnectionId": 1, "serverConnectionId": 13215, "serverHost": "3.144.134.141", "serverPort": 27017, "awaited": true, "durationMS": 10000.0, "reply": "{\"isWritablePrimary\": true, \"topologyVersion\": {\"processId\": {\"$oid\": \"67b7e5814f77c1a87c56d054\"}}, \"maxBsonObjectSize\": 16777216, \"maxMessageSizeBytes\": 48000000, \"maxWriteBatchSize\": 100000, \"localTime\": {\"$date\": \"2025-03-13T11:24:07.595Z\"}, \"logicalSessionTimeoutMinutes\": 30, \"connectionId\": 13215, \"maxWireVersion\": 25, \"ok\": 1.0}", "message": "Server heartbeat succeeded"}
2025-03-13 16:24:07,609 - pymongo.topology - DEBUG - {"topologyId": {"$oid": "67d2c042aaac9805d606d8fb"}, "driverConnectionId": 1, "serverConnectionId": 13215, "serverHost": "3.144.134.141", "serverPort": 27017, "awaited": true, "message": "Server heartbeat started"}
2025-03-13 16:24:17,578 - pymongo.topology - DEBUG - {"topologyId": {"$oid": "67d2c042aaac9805d606d8fb"}, "driverConnectionId": 1, "serverConnectionId": 13215, "serverHost": "3.144.134.141", "serverPort": 27017, "awaited": true, "durationMS": 9969.00000000096, "reply": "{\"isWritablePrimary\": true, \"topologyVersion\": {\"processId\": {\"$oid\": \"67b7e5814f77c1a87c56d054\"}}, \"maxBsonObjectSize\": 16777216, \"maxMessageSizeBytes\": 48000000, \"maxWriteBatchSize\": 100000, \"localTime\": {\"$date\": \"2025-03-13T11:24:17.597Z\"}, \"logicalSessionTimeoutMinutes\": 30, \"connectionId\": 13215, \"maxWireVersion\": 25, \"ok\": 1.0}", "message": "Server heartbeat succeeded"}
2025-03-13 16:24:17,579 - pymongo.topology - DEBUG - {"topologyId": {"$oid": "67d2c042aaac9805d606d8fb"}, "driverConnectionId": 1, "serverConnectionId": 13215, "serverHost": "3.144.134.141", "serverPort": 27017, "awaited": true, "message": "Server heartbeat started"}
2025-03-13 16:24:27,546 - pymongo.topology - DEBUG - {"topologyId": {"$oid": "67d2c042aaac9805d606d8fb"}, "driverConnectionId": 1, "serverConnectionId": 13215, "serverHost": "3.144.134.141", "serverPort": 27017, "awaited": true, "durationMS": 9968.999999997322, "reply": "{\"isWritablePrimary\": true, \"topologyVersion\": {\"processId\": {\"$oid\": \"67b7e5814f77c1a87c56d054\"}}, \"maxBsonObjectSize\": 16777216, \"maxMessageSizeBytes\": 48000000, \"maxWriteBatchSize\": 100000, \"localTime\": {\"$date\": \"2025-03-13T11:24:27.597Z\"}, \"logicalSessionTimeoutMinutes\": 30, \"connectionId\": 13215, \"maxWireVersion\": 25, \"ok\": 1.0}", "message": "Server heartbeat succeeded"}
2025-03-13 16:24:27,547 - pymongo.topology - DEBUG - {"topologyId": {"$oid": "67d2c042aaac9805d606d8fb"}, "driverConnectionId": 1, "serverConnectionId": 13215, "serverHost": "3.144.134.141", "serverPort": 27017, "awaited": true, "message": "Server heartbeat started"}
2025-03-13 16:24:37,594 - pymongo.topology - DEBUG - {"topologyId": {"$oid": "67d2c042aaac9805d606d8fb"}, "driverConnectionId": 1, "serverConnectionId": 13215, "serverHost": "3.144.134.141", "serverPort": 27017, "awaited": true, "durationMS": 10047.0000000023, "reply": "{\"isWritablePrimary\": true, \"topologyVersion\": {\"processId\": {\"$oid\": \"67b7e5814f77c1a87c56d054\"}}, \"maxBsonObjectSize\": 16777216, \"maxMessageSizeBytes\": 48000000, \"maxWriteBatchSize\": 100000, \"localTime\": {\"$date\": \"2025-03-13T11:24:37.598Z\"}, \"logicalSessionTimeoutMinutes\": 30, \"connectionId\": 13215, \"maxWireVersion\": 25, \"ok\": 1.0}", "message": "Server heartbeat succeeded"}
2025-03-13 16:24:37,595 - pymongo.topology - DEBUG - {"topologyId": {"$oid": "67d2c042aaac9805d606d8fb"}, "driverConnectionId": 1, "serverConnectionId": 13215, "serverHost": "3.144.134.141", "serverPort": 27017, "awaited": true, "message": "Server heartbeat started"}
2025-03-13 16:24:47,616 - pymongo.topology - DEBUG - {"topologyId": {"$oid": "67d2c042aaac9805d606d8fb"}, "driverConnectionId": 1, "serverConnectionId": 13215, "serverHost": "3.144.134.141", "serverPort": 27017, "awaited": true, "durationMS": 10030.99999999904, "reply": "{\"isWritablePrimary\": true, \"topologyVersion\": {\"processId\": {\"$oid\": \"67b7e5814f77c1a87c56d054\"}}, \"maxBsonObjectSize\": 16777216, \"maxMessageSizeBytes\": 48000000, \"maxWriteBatchSize\": 100000, \"localTime\": {\"$date\": \"2025-03-13T11:24:47.600Z\"}, \"logicalSessionTimeoutMinutes\": 30, \"connectionId\": 13215, \"maxWireVersion\": 25, \"ok\": 1.0}", "message": "Server heartbeat succeeded"}
2025-03-13 16:24:47,617 - pymongo.topology - DEBUG - {"topologyId": {"$oid": "67d2c042aaac9805d606d8fb"}, "driverConnectionId": 1, "serverConnectionId": 13215, "serverHost": "3.144.134.141", "serverPort": 27017, "awaited": true, "message": "Server heartbeat started"}
2025-03-13 16:24:57,613 - pymongo.topology - DEBUG - {"topologyId": {"$oid": "67d2c042aaac9805d606d8fb"}, "driverConnectionId": 1, "serverConnectionId": 13215, "serverHost": "3.144.134.141", "serverPort": 27017, "awaited": true, "durationMS": 9984.000000000378, "reply": "{\"isWritablePrimary\": true, \"topologyVersion\": {\"processId\": {\"$oid\": \"67b7e5814f77c1a87c56d054\"}}, \"maxBsonObjectSize\": 16777216, \"maxMessageSizeBytes\": 48000000, \"maxWriteBatchSize\": 100000, \"localTime\": {\"$date\": \"2025-03-13T11:24:57.601Z\"}, \"logicalSessionTimeoutMinutes\": 30, \"connectionId\": 13215, \"maxWireVersion\": 25, \"ok\": 1.0}", "message": "Server heartbeat succeeded"}
2025-03-13 16:24:57,614 - pymongo.topology - DEBUG - {"topologyId": {"$oid": "67d2c042aaac9805d606d8fb"}, "driverConnectionId": 1, "serverConnectionId": 13215, "serverHost": "3.144.134.141", "serverPort": 27017, "awaited": true, "message": "Server heartbeat started"}
2025-03-13 16:25:07,635 - pymongo.topology - DEBUG - {"topologyId": {"$oid": "67d2c042aaac9805d606d8fb"}, "driverConnectionId": 1, "serverConnectionId": 13215, "serverHost": "3.144.134.141", "serverPort": 27017, "awaited": true, "durationMS": 10031.999999999243, "reply": "{\"isWritablePrimary\": true, \"topologyVersion\": {\"processId\": {\"$oid\": \"67b7e5814f77c1a87c56d054\"}}, \"maxBsonObjectSize\": 16777216, \"maxMessageSizeBytes\": 48000000, \"maxWriteBatchSize\": 100000, \"localTime\": {\"$date\": \"2025-03-13T11:25:07.602Z\"}, \"logicalSessionTimeoutMinutes\": 30, \"connectionId\": 13215, \"maxWireVersion\": 25, \"ok\": 1.0}", "message": "Server heartbeat succeeded"}
2025-03-13 16:25:07,637 - pymongo.topology - DEBUG - {"topologyId": {"$oid": "67d2c042aaac9805d606d8fb"}, "driverConnectionId": 1, "serverConnectionId": 13215, "serverHost": "3.144.134.141", "serverPort": 27017, "awaited": true, "message": "Server heartbeat started"}
2025-03-13 16:25:17,619 - pymongo.topology - DEBUG - {"topologyId": {"$oid": "67d2c042aaac9805d606d8fb"}, "driverConnectionId": 1, "serverConnectionId": 13215, "serverHost": "3.144.134.141", "serverPort": 27017, "awaited": true, "durationMS": 9984.000000000378, "reply": "{\"isWritablePrimary\": true, \"topologyVersion\": {\"processId\": {\"$oid\": \"67b7e5814f77c1a87c56d054\"}}, \"maxBsonObjectSize\": 16777216, \"maxMessageSizeBytes\": 48000000, \"maxWriteBatchSize\": 100000, \"localTime\": {\"$date\": \"2025-03-13T11:25:17.609Z\"}, \"logicalSessionTimeoutMinutes\": 30, \"connectionId\": 13215, \"maxWireVersion\": 25, \"ok\": 1.0}", "message": "Server heartbeat succeeded"}
2025-03-13 16:25:17,620 - pymongo.topology - DEBUG - {"topologyId": {"$oid": "67d2c042aaac9805d606d8fb"}, "driverConnectionId": 1, "serverConnectionId": 13215, "serverHost": "3.144.134.141", "serverPort": 27017, "awaited": true, "message": "Server heartbeat started"}
2025-03-13 16:25:27,648 - pymongo.topology - DEBUG - {"topologyId": {"$oid": "67d2c042aaac9805d606d8fb"}, "driverConnectionId": 1, "serverConnectionId": 13215, "serverHost": "3.144.134.141", "serverPort": 27017, "awaited": true, "durationMS": 10030.99999999904, "reply": "{\"isWritablePrimary\": true, \"topologyVersion\": {\"processId\": {\"$oid\": \"67b7e5814f77c1a87c56d054\"}}, \"maxBsonObjectSize\": 16777216, \"maxMessageSizeBytes\": 48000000, \"maxWriteBatchSize\": 100000, \"localTime\": {\"$date\": \"2025-03-13T11:25:27.619Z\"}, \"logicalSessionTimeoutMinutes\": 30, \"connectionId\": 13215, \"maxWireVersion\": 25, \"ok\": 1.0}", "message": "Server heartbeat succeeded"}
2025-03-13 16:25:27,649 - pymongo.topology - DEBUG - {"topologyId": {"$oid": "67d2c042aaac9805d606d8fb"}, "driverConnectionId": 1, "serverConnectionId": 13215, "serverHost": "3.144.134.141", "serverPort": 27017, "awaited": true, "message": "Server heartbeat started"}
2025-03-13 16:25:37,622 - pymongo.topology - DEBUG - {"topologyId": {"$oid": "67d2c042aaac9805d606d8fb"}, "driverConnectionId": 1, "serverConnectionId": 13215, "serverHost": "3.144.134.141", "serverPort": 27017, "awaited": true, "durationMS": 9969.00000000096, "reply": "{\"isWritablePrimary\": true, \"topologyVersion\": {\"processId\": {\"$oid\": \"67b7e5814f77c1a87c56d054\"}}, \"maxBsonObjectSize\": 16777216, \"maxMessageSizeBytes\": 48000000, \"maxWriteBatchSize\": 100000, \"localTime\": {\"$date\": \"2025-03-13T11:25:37.623Z\"}, \"logicalSessionTimeoutMinutes\": 30, \"connectionId\": 13215, \"maxWireVersion\": 25, \"ok\": 1.0}", "message": "Server heartbeat succeeded"}
2025-03-13 16:25:37,623 - pymongo.topology - DEBUG - {"topologyId": {"$oid": "67d2c042aaac9805d606d8fb"}, "driverConnectionId": 1, "serverConnectionId": 13215, "serverHost": "3.144.134.141", "serverPort": 27017, "awaited": true, "message": "Server heartbeat started"}
2025-03-13 16:25:47,632 - pymongo.topology - DEBUG - {"topologyId": {"$oid": "67d2c042aaac9805d606d8fb"}, "driverConnectionId": 1, "serverConnectionId": 13215, "serverHost": "3.144.134.141", "serverPort": 27017, "awaited": true, "durationMS": 10015.999999999622, "reply": "{\"isWritablePrimary\": true, \"topologyVersion\": {\"processId\": {\"$oid\": \"67b7e5814f77c1a87c56d054\"}}, \"maxBsonObjectSize\": 16777216, \"maxMessageSizeBytes\": 48000000, \"maxWriteBatchSize\": 100000, \"localTime\": {\"$date\": \"2025-03-13T11:25:47.633Z\"}, \"logicalSessionTimeoutMinutes\": 30, \"connectionId\": 13215, \"maxWireVersion\": 25, \"ok\": 1.0}", "message": "Server heartbeat succeeded"}
2025-03-13 16:25:47,633 - pymongo.topology - DEBUG - {"topologyId": {"$oid": "67d2c042aaac9805d606d8fb"}, "driverConnectionId": 1, "serverConnectionId": 13215, "serverHost": "3.144.134.141", "serverPort": 27017, "awaited": true, "message": "Server heartbeat started"}
2025-03-13 16:25:57,626 - pymongo.topology - DEBUG - {"topologyId": {"$oid": "67d2c042aaac9805d606d8fb"}, "driverConnectionId": 1, "serverConnectionId": 13215, "serverHost": "3.144.134.141", "serverPort": 27017, "awaited": true, "durationMS": 9984.000000000378, "reply": "{\"isWritablePrimary\": true, \"topologyVersion\": {\"processId\": {\"$oid\": \"67b7e5814f77c1a87c56d054\"}}, \"maxBsonObjectSize\": 16777216, \"maxMessageSizeBytes\": 48000000, \"maxWriteBatchSize\": 100000, \"localTime\": {\"$date\": \"2025-03-13T11:25:57.640Z\"}, \"logicalSessionTimeoutMinutes\": 30, \"connectionId\": 13215, \"maxWireVersion\": 25, \"ok\": 1.0}", "message": "Server heartbeat succeeded"}
2025-03-13 16:25:57,627 - pymongo.topology - DEBUG - {"topologyId": {"$oid": "67d2c042aaac9805d606d8fb"}, "driverConnectionId": 1, "serverConnectionId": 13215, "serverHost": "3.144.134.141", "serverPort": 27017, "awaited": true, "message": "Server heartbeat started"}
2025-03-13 16:26:07,698 - pymongo.topology - DEBUG - {"topologyId": {"$oid": "67d2c042aaac9805d606d8fb"}, "driverConnectionId": 1, "serverConnectionId": 13215, "serverHost": "3.144.134.141", "serverPort": 27017, "awaited": true, "durationMS": 10078.000000001339, "reply": "{\"isWritablePrimary\": true, \"topologyVersion\": {\"processId\": {\"$oid\": \"67b7e5814f77c1a87c56d054\"}}, \"maxBsonObjectSize\": 16777216, \"maxMessageSizeBytes\": 48000000, \"maxWriteBatchSize\": 100000, \"localTime\": {\"$date\": \"2025-03-13T11:26:07.641Z\"}, \"logicalSessionTimeoutMinutes\": 30, \"connectionId\": 13215, \"maxWireVersion\": 25, \"ok\": 1.0}", "message": "Server heartbeat succeeded"}
2025-03-13 16:26:07,699 - pymongo.topology - DEBUG - {"topologyId": {"$oid": "67d2c042aaac9805d606d8fb"}, "driverConnectionId": 1, "serverConnectionId": 13215, "serverHost": "3.144.134.141", "serverPort": 27017, "awaited": true, "message": "Server heartbeat started"}
2025-03-13 16:26:17,640 - pymongo.topology - DEBUG - {"topologyId": {"$oid": "67d2c042aaac9805d606d8fb"}, "driverConnectionId": 1, "serverConnectionId": 13215, "serverHost": "3.144.134.141", "serverPort": 27017, "awaited": true, "durationMS": 9937.999999998283, "reply": "{\"isWritablePrimary\": true, \"topologyVersion\": {\"processId\": {\"$oid\": \"67b7e5814f77c1a87c56d054\"}}, \"maxBsonObjectSize\": 16777216, \"maxMessageSizeBytes\": 48000000, \"maxWriteBatchSize\": 100000, \"localTime\": {\"$date\": \"2025-03-13T11:26:17.642Z\"}, \"logicalSessionTimeoutMinutes\": 30, \"connectionId\": 13215, \"maxWireVersion\": 25, \"ok\": 1.0}", "message": "Server heartbeat succeeded"}
2025-03-13 16:26:17,641 - pymongo.topology - DEBUG - {"topologyId": {"$oid": "67d2c042aaac9805d606d8fb"}, "driverConnectionId": 1, "serverConnectionId": 13215, "serverHost": "3.144.134.141", "serverPort": 27017, "awaited": true, "message": "Server heartbeat started"}
2025-03-13 16:26:27,656 - pymongo.topology - DEBUG - {"topologyId": {"$oid": "67d2c042aaac9805d606d8fb"}, "driverConnectionId": 1, "serverConnectionId": 13215, "serverHost": "3.144.134.141", "serverPort": 27017, "awaited": true, "durationMS": 10014.999999999418, "reply": "{\"isWritablePrimary\": true, \"topologyVersion\": {\"processId\": {\"$oid\": \"67b7e5814f77c1a87c56d054\"}}, \"maxBsonObjectSize\": 16777216, \"maxMessageSizeBytes\": 48000000, \"maxWriteBatchSize\": 100000, \"localTime\": {\"$date\": \"2025-03-13T11:26:27.643Z\"}, \"logicalSessionTimeoutMinutes\": 30, \"connectionId\": 13215, \"maxWireVersion\": 25, \"ok\": 1.0}", "message": "Server heartbeat succeeded"}
2025-03-13 16:26:27,658 - pymongo.topology - DEBUG - {"topologyId": {"$oid": "67d2c042aaac9805d606d8fb"}, "driverConnectionId": 1, "serverConnectionId": 13215, "serverHost": "3.144.134.141", "serverPort": 27017, "awaited": true, "message": "Server heartbeat started"}
2025-03-13 16:26:37,633 - pymongo.topology - DEBUG - {"topologyId": {"$oid": "67d2c042aaac9805d606d8fb"}, "driverConnectionId": 1, "serverConnectionId": 13215, "serverHost": "3.144.134.141", "serverPort": 27017, "awaited": true, "durationMS": 9985.000000000582, "reply": "{\"isWritablePrimary\": true, \"topologyVersion\": {\"processId\": {\"$oid\": \"67b7e5814f77c1a87c56d054\"}}, \"maxBsonObjectSize\": 16777216, \"maxMessageSizeBytes\": 48000000, \"maxWriteBatchSize\": 100000, \"localTime\": {\"$date\": \"2025-03-13T11:26:37.644Z\"}, \"logicalSessionTimeoutMinutes\": 30, \"connectionId\": 13215, \"maxWireVersion\": 25, \"ok\": 1.0}", "message": "Server heartbeat succeeded"}
2025-03-13 16:26:37,634 - pymongo.topology - DEBUG - {"topologyId": {"$oid": "67d2c042aaac9805d606d8fb"}, "driverConnectionId": 1, "serverConnectionId": 13215, "serverHost": "3.144.134.141", "serverPort": 27017, "awaited": true, "message": "Server heartbeat started"}
2025-03-13 16:26:47,628 - pymongo.topology - DEBUG - {"topologyId": {"$oid": "67d2c042aaac9805d606d8fb"}, "driverConnectionId": 1, "serverConnectionId": 13215, "serverHost": "3.144.134.141", "serverPort": 27017, "awaited": true, "durationMS": 9984.000000000378, "reply": "{\"isWritablePrimary\": true, \"topologyVersion\": {\"processId\": {\"$oid\": \"67b7e5814f77c1a87c56d054\"}}, \"maxBsonObjectSize\": 16777216, \"maxMessageSizeBytes\": 48000000, \"maxWriteBatchSize\": 100000, \"localTime\": {\"$date\": \"2025-03-13T11:26:47.645Z\"}, \"logicalSessionTimeoutMinutes\": 30, \"connectionId\": 13215, \"maxWireVersion\": 25, \"ok\": 1.0}", "message": "Server heartbeat succeeded"}
2025-03-13 16:26:47,629 - pymongo.topology - DEBUG - {"topologyId": {"$oid": "67d2c042aaac9805d606d8fb"}, "driverConnectionId": 1, "serverConnectionId": 13215, "serverHost": "3.144.134.141", "serverPort": 27017, "awaited": true, "message": "Server heartbeat started"}
2025-03-13 16:26:57,661 - pymongo.topology - DEBUG - {"topologyId": {"$oid": "67d2c042aaac9805d606d8fb"}, "driverConnectionId": 1, "serverConnectionId": 13215, "serverHost": "3.144.134.141", "serverPort": 27017, "awaited": true, "durationMS": 10030.99999999904, "reply": "{\"isWritablePrimary\": true, \"topologyVersion\": {\"processId\": {\"$oid\": \"67b7e5814f77c1a87c56d054\"}}, \"maxBsonObjectSize\": 16777216, \"maxMessageSizeBytes\": 48000000, \"maxWriteBatchSize\": 100000, \"localTime\": {\"$date\": \"2025-03-13T11:26:57.645Z\"}, \"logicalSessionTimeoutMinutes\": 30, \"connectionId\": 13215, \"maxWireVersion\": 25, \"ok\": 1.0}", "message": "Server heartbeat succeeded"}
2025-03-13 16:26:57,662 - pymongo.topology - DEBUG - {"topologyId": {"$oid": "67d2c042aaac9805d606d8fb"}, "driverConnectionId": 1, "serverConnectionId": 13215, "serverHost": "3.144.134.141", "serverPort": 27017, "awaited": true, "message": "Server heartbeat started"}
2025-03-13 16:27:07,662 - pymongo.topology - DEBUG - {"topologyId": {"$oid": "67d2c042aaac9805d606d8fb"}, "driverConnectionId": 1, "serverConnectionId": 13215, "serverHost": "3.144.134.141", "serverPort": 27017, "awaited": true, "durationMS": 9984.000000000378, "reply": "{\"isWritablePrimary\": true, \"topologyVersion\": {\"processId\": {\"$oid\": \"67b7e5814f77c1a87c56d054\"}}, \"maxBsonObjectSize\": 16777216, \"maxMessageSizeBytes\": 48000000, \"maxWriteBatchSize\": 100000, \"localTime\": {\"$date\": \"2025-03-13T11:27:07.647Z\"}, \"logicalSessionTimeoutMinutes\": 30, \"connectionId\": 13215, \"maxWireVersion\": 25, \"ok\": 1.0}", "message": "Server heartbeat succeeded"}
2025-03-13 16:27:07,663 - pymongo.topology - DEBUG - {"topologyId": {"$oid": "67d2c042aaac9805d606d8fb"}, "driverConnectionId": 1, "serverConnectionId": 13215, "serverHost": "3.144.134.141", "serverPort": 27017, "awaited": true, "message": "Server heartbeat started"}
2025-03-13 16:27:17,619 - pymongo.topology - DEBUG - {"topologyId": {"$oid": "67d2c042aaac9805d606d8fb"}, "driverConnectionId": 1, "serverConnectionId": 13215, "serverHost": "3.144.134.141", "serverPort": 27017, "awaited": true, "durationMS": 9953.000000001339, "reply": "{\"isWritablePrimary\": true, \"topologyVersion\": {\"processId\": {\"$oid\": \"67b7e5814f77c1a87c56d054\"}}, \"maxBsonObjectSize\": 16777216, \"maxMessageSizeBytes\": 48000000, \"maxWriteBatchSize\": 100000, \"localTime\": {\"$date\": \"2025-03-13T11:27:17.648Z\"}, \"logicalSessionTimeoutMinutes\": 30, \"connectionId\": 13215, \"maxWireVersion\": 25, \"ok\": 1.0}", "message": "Server heartbeat succeeded"}
2025-03-13 16:27:17,620 - pymongo.topology - DEBUG - {"topologyId": {"$oid": "67d2c042aaac9805d606d8fb"}, "driverConnectionId": 1, "serverConnectionId": 13215, "serverHost": "3.144.134.141", "serverPort": 27017, "awaited": true, "message": "Server heartbeat started"}
2025-03-13 16:27:27,660 - pymongo.topology - DEBUG - {"topologyId": {"$oid": "67d2c042aaac9805d606d8fb"}, "driverConnectionId": 1, "serverConnectionId": 13215, "serverHost": "3.144.134.141", "serverPort": 27017, "awaited": true, "durationMS": 10030.99999999904, "reply": "{\"isWritablePrimary\": true, \"topologyVersion\": {\"processId\": {\"$oid\": \"67b7e5814f77c1a87c56d054\"}}, \"maxBsonObjectSize\": 16777216, \"maxMessageSizeBytes\": 48000000, \"maxWriteBatchSize\": 100000, \"localTime\": {\"$date\": \"2025-03-13T11:27:27.652Z\"}, \"logicalSessionTimeoutMinutes\": 30, \"connectionId\": 13215, \"maxWireVersion\": 25, \"ok\": 1.0}", "message": "Server heartbeat succeeded"}
2025-03-13 16:27:27,660 - pymongo.topology - DEBUG - {"topologyId": {"$oid": "67d2c042aaac9805d606d8fb"}, "driverConnectionId": 1, "serverConnectionId": 13215, "serverHost": "3.144.134.141", "serverPort": 27017, "awaited": true, "message": "Server heartbeat started"}
2025-03-13 16:27:37,653 - pymongo.topology - DEBUG - {"topologyId": {"$oid": "67d2c042aaac9805d606d8fb"}, "driverConnectionId": 1, "serverConnectionId": 13215, "serverHost": "3.144.134.141", "serverPort": 27017, "awaited": true, "durationMS": 10000.0, "reply": "{\"isWritablePrimary\": true, \"topologyVersion\": {\"processId\": {\"$oid\": \"67b7e5814f77c1a87c56d054\"}}, \"maxBsonObjectSize\": 16777216, \"maxMessageSizeBytes\": 48000000, \"maxWriteBatchSize\": 100000, \"localTime\": {\"$date\": \"2025-03-13T11:27:37.653Z\"}, \"logicalSessionTimeoutMinutes\": 30, \"connectionId\": 13215, \"maxWireVersion\": 25, \"ok\": 1.0}", "message": "Server heartbeat succeeded"}
2025-03-13 16:27:37,653 - pymongo.topology - DEBUG - {"topologyId": {"$oid": "67d2c042aaac9805d606d8fb"}, "driverConnectionId": 1, "serverConnectionId": 13215, "serverHost": "3.144.134.141", "serverPort": 27017, "awaited": true, "message": "Server heartbeat started"}
2025-03-13 16:27:47,648 - pymongo.topology - DEBUG - {"topologyId": {"$oid": "67d2c042aaac9805d606d8fb"}, "driverConnectionId": 1, "serverConnectionId": 13215, "serverHost": "3.144.134.141", "serverPort": 27017, "awaited": true, "durationMS": 10000.0, "reply": "{\"isWritablePrimary\": true, \"topologyVersion\": {\"processId\": {\"$oid\": \"67b7e5814f77c1a87c56d054\"}}, \"maxBsonObjectSize\": 16777216, \"maxMessageSizeBytes\": 48000000, \"maxWriteBatchSize\": 100000, \"localTime\": {\"$date\": \"2025-03-13T11:27:47.653Z\"}, \"logicalSessionTimeoutMinutes\": 30, \"connectionId\": 13215, \"maxWireVersion\": 25, \"ok\": 1.0}", "message": "Server heartbeat succeeded"}
2025-03-13 16:27:47,649 - pymongo.topology - DEBUG - {"topologyId": {"$oid": "67d2c042aaac9805d606d8fb"}, "driverConnectionId": 1, "serverConnectionId": 13215, "serverHost": "3.144.134.141", "serverPort": 27017, "awaited": true, "message": "Server heartbeat started"}
2025-03-13 16:27:58,096 - numexpr.utils - INFO - Note: NumExpr detected 12 cores but "NUMEXPR_MAX_THREADS" not set, so enforcing safe limit of 8.
2025-03-13 16:27:58,097 - numexpr.utils - INFO - NumExpr defaulting to 8 threads.
2025-03-13 16:27:59,891 - matplotlib - DEBUG - matplotlib data path: C:\Users\msameerakram\AppData\Local\anaconda3\Lib\site-packages\matplotlib\mpl-data
2025-03-13 16:27:59,900 - matplotlib - DEBUG - CONFIGDIR=C:\Users\msameerakram\.matplotlib
2025-03-13 16:27:59,902 - matplotlib - DEBUG - interactive is False
2025-03-13 16:27:59,903 - matplotlib - DEBUG - platform is win32
2025-03-13 16:28:00,009 - matplotlib - DEBUG - CACHEDIR=C:\Users\msameerakram\.matplotlib
2025-03-13 16:28:00,015 - matplotlib.font_manager - DEBUG - Using fontManager instance from C:\Users\msameerakram\.matplotlib\fontlist-v390.json
2025-03-13 16:28:03,585 - numexpr.utils - INFO - Note: NumExpr detected 12 cores but "NUMEXPR_MAX_THREADS" not set, so enforcing safe limit of 8.
2025-03-13 16:28:03,585 - numexpr.utils - INFO - NumExpr defaulting to 8 threads.
2025-03-13 16:28:05,157 - matplotlib - DEBUG - matplotlib data path: C:\Users\msameerakram\AppData\Local\anaconda3\Lib\site-packages\matplotlib\mpl-data
2025-03-13 16:28:05,163 - matplotlib - DEBUG - CONFIGDIR=C:\Users\msameerakram\.matplotlib
2025-03-13 16:28:05,164 - matplotlib - DEBUG - interactive is False
2025-03-13 16:28:05,165 - matplotlib - DEBUG - platform is win32
2025-03-13 16:28:05,234 - matplotlib - DEBUG - CACHEDIR=C:\Users\msameerakram\.matplotlib
2025-03-13 16:28:05,238 - matplotlib.font_manager - DEBUG - Using fontManager instance from C:\Users\msameerakram\.matplotlib\fontlist-v390.json
2025-03-13 16:28:06,932 - asyncio - DEBUG - Using selector: SelectSelector
2025-03-13 16:28:06,984 - pymongo.topology - DEBUG - {"topologyId": {"$oid": "67d2c146b3494cfb751155aa"}, "message": "Starting topology monitoring"}
2025-03-13 16:28:06,984 - pymongo.topology - DEBUG - {"topologyId": {"$oid": "67d2c146b3494cfb751155aa"}, "previousDescription": "<TopologyDescription id: 67d2c146b3494cfb751155aa, topology_type: Unknown, servers: []>", "newDescription": "<TopologyDescription id: 67d2c146b3494cfb751155aa, topology_type: Unknown, servers: [<ServerDescription ('3.144.134.141', 27017) server_type: Unknown, rtt: None>]>", "message": "Topology description changed"}
2025-03-13 16:28:06,984 - pymongo.topology - DEBUG - {"topologyId": {"$oid": "67d2c146b3494cfb751155aa"}, "serverHost": "3.144.134.141", "serverPort": 27017, "message": "Starting server monitoring"}
2025-03-13 16:28:06,986 - pymongo.connection - DEBUG - {"clientId": {"$oid": "67d2c146b3494cfb751155aa"}, "message": "Connection pool created", "serverHost": "3.144.134.141", "serverPort": 27017}
2025-03-13 16:28:06,987 - pymongo.serverSelection - DEBUG - {"message": "Server selection started", "selector": "Primary()", "operation": "ping", "topologyDescription": "<TopologyDescription id: 67d2c146b3494cfb751155aa, topology_type: Unknown, servers: [<ServerDescription ('3.144.134.141', 27017) server_type: Unknown, rtt: None>]>", "clientId": {"$oid": "67d2c146b3494cfb751155aa"}}
2025-03-13 16:28:06,987 - pymongo.serverSelection - DEBUG - {"message": "Waiting for suitable server to become available", "selector": "Primary()", "operation": "ping", "topologyDescription": "<TopologyDescription id: 67d2c146b3494cfb751155aa, topology_type: Unknown, servers: [<ServerDescription ('3.144.134.141', 27017) server_type: Unknown, rtt: None>]>", "clientId": {"$oid": "67d2c146b3494cfb751155aa"}, "remainingTimeMS": 30}
2025-03-13 16:28:07,303 - pymongo.topology - DEBUG - {"topologyId": {"$oid": "67d2c146b3494cfb751155aa"}, "driverConnectionId": 1, "serverHost": "3.144.134.141", "serverPort": 27017, "awaited": false, "message": "Server heartbeat started"}
2025-03-13 16:28:07,610 - pymongo.topology - DEBUG - {"topologyId": {"$oid": "67d2c146b3494cfb751155aa"}, "driverConnectionId": 1, "serverConnectionId": 13218, "serverHost": "3.144.134.141", "serverPort": 27017, "awaited": false, "durationMS": 297.0000000022992, "reply": "{\"helloOk\": true, \"ismaster\": true, \"topologyVersion\": {\"processId\": {\"$oid\": \"67b7e5814f77c1a87c56d054\"}}, \"maxBsonObjectSize\": 16777216, \"maxMessageSizeBytes\": 48000000, \"maxWriteBatchSize\": 100000, \"localTime\": {\"$date\": \"2025-03-13T11:28:07.605Z\"}, \"logicalSessionTimeoutMinutes\": 30, \"connectionId\": 13218, \"maxWireVersion\": 25, \"ok\": 1.0}", "message": "Server heartbeat succeeded"}
2025-03-13 16:28:07,612 - pymongo.connection - DEBUG - {"clientId": {"$oid": "67d2c146b3494cfb751155aa"}, "message": "Connection pool ready", "serverHost": "3.144.134.141", "serverPort": 27017}
2025-03-13 16:28:07,612 - pymongo.topology - DEBUG - {"topologyId": {"$oid": "67d2c146b3494cfb751155aa"}, "previousDescription": "<TopologyDescription id: 67d2c146b3494cfb751155aa, topology_type: Unknown, servers: [<ServerDescription ('3.144.134.141', 27017) server_type: Unknown, rtt: None>]>", "newDescription": "<TopologyDescription id: 67d2c146b3494cfb751155aa, topology_type: Single, servers: [<ServerDescription ('3.144.134.141', 27017) server_type: Standalone, rtt: 0.2970000000022992>]>", "message": "Topology description changed"}
2025-03-13 16:28:07,615 - pymongo.serverSelection - DEBUG - {"message": "Server selection succeeded", "selector": "Primary()", "operation": "ping", "topologyDescription": "<TopologyDescription id: 67d2c146b3494cfb751155aa, topology_type: Single, servers: [<ServerDescription ('3.144.134.141', 27017) server_type: Standalone, rtt: 0.2970000000022992>]>", "clientId": {"$oid": "67d2c146b3494cfb751155aa"}, "serverHost": "3.144.134.141", "serverPort": 27017}
2025-03-13 16:28:07,617 - pymongo.topology - DEBUG - {"topologyId": {"$oid": "67d2c146b3494cfb751155aa"}, "driverConnectionId": 1, "serverConnectionId": 13218, "serverHost": "3.144.134.141", "serverPort": 27017, "awaited": true, "message": "Server heartbeat started"}
2025-03-13 16:28:07,617 - pymongo.connection - DEBUG - {"clientId": {"$oid": "67d2c146b3494cfb751155aa"}, "message": "Connection checkout started", "serverHost": "3.144.134.141", "serverPort": 27017}
2025-03-13 16:28:07,618 - pymongo.connection - DEBUG - {"clientId": {"$oid": "67d2c146b3494cfb751155aa"}, "message": "Connection created", "serverHost": "3.144.134.141", "serverPort": 27017, "driverConnectionId": 1}
2025-03-13 16:28:08,663 - pymongo.connection - DEBUG - {"clientId": {"$oid": "67d2c146b3494cfb751155aa"}, "message": "Connection ready", "serverHost": "3.144.134.141", "serverPort": 27017, "driverConnectionId": 1, "durationMS": 0.7189999999973224}
2025-03-13 16:28:08,663 - pymongo.connection - DEBUG - {"clientId": {"$oid": "67d2c146b3494cfb751155aa"}, "message": "Connection checked out", "serverHost": "3.144.134.141", "serverPort": 27017, "driverConnectionId": 1, "durationMS": 1.0469999999986612}
2025-03-13 16:28:08,664 - pymongo.command - DEBUG - {"clientId": {"$oid": "67d2c146b3494cfb751155aa"}, "message": "Command started", "command": "{\"ping\": 1, \"lsid\": {\"id\": {\"$binary\": {\"base64\": \"uFnC+8A4QQ+322J3O4U94g==\", \"subType\": \"04\"}}}, \"$db\": \"opal_server\"}", "commandName": "ping", "databaseName": "opal_server", "requestId": 6334, "operationId": 6334, "driverConnectionId": 1, "serverConnectionId": 13220, "serverHost": "3.144.134.141", "serverPort": 27017}
2025-03-13 16:28:08,965 - pymongo.command - DEBUG - {"clientId": {"$oid": "67d2c146b3494cfb751155aa"}, "message": "Command succeeded", "durationMS": 301.685, "reply": "{\"ok\": 1.0}", "commandName": "ping", "databaseName": "opal_server", "requestId": 6334, "operationId": 6334, "driverConnectionId": 1, "serverConnectionId": 13220, "serverHost": "3.144.134.141", "serverPort": 27017}
2025-03-13 16:28:08,966 - pymongo.connection - DEBUG - {"clientId": {"$oid": "67d2c146b3494cfb751155aa"}, "message": "Connection checked in", "serverHost": "3.144.134.141", "serverPort": 27017, "driverConnectionId": 1}
2025-03-13 16:28:12,538 - app.services.predictive_analytics - INFO - Starting driver risk prediction for last 3 days
2025-03-13 16:28:12,538 - app.db.repositories.data_repository - INFO - Fetching driver risk data for past 3 days
2025-03-13 16:28:12,539 - app.db.repositories.data_repository - DEBUG - Executing pipeline: [{'$match': {'event_time': {'$gte': datetime.datetime(2025, 3, 10, 16, 28, 12, 539279)}}}, {'$group': {'_id': '$driver_uuid', 'name': {'$first': '$driver_name'}, 'violation_count': {'$sum': 1}, 'violation_types': {'$addToSet': '$violation_type'}, 'avg_severity': {'$avg': {'$switch': {'branches': [{'case': {'$eq': ['$severity', 'HIGH']}, 'then': 3}, {'case': {'$eq': ['$severity', 'MEDIUM']}, 'then': 2}], 'default': 1}}}, 'last_violation': {'$max': '$event_time'}, 'max_speed': {'$max': '$telemetry.speed'}, 'vehicle_license': {'$first': '$vehicle_license'}}}, {'$sort': {'violation_count': -1}}]
2025-03-13 16:28:12,539 - pymongo.serverSelection - DEBUG - {"message": "Server selection started", "selector": "Primary()", "operation": "aggregate", "topologyDescription": "<TopologyDescription id: 67d2c146b3494cfb751155aa, topology_type: Single, servers: [<ServerDescription ('3.144.134.141', 27017) server_type: Standalone, rtt: 0.2970000000022992>]>", "clientId": {"$oid": "67d2c146b3494cfb751155aa"}}
2025-03-13 16:28:12,540 - pymongo.serverSelection - DEBUG - {"message": "Server selection succeeded", "selector": "Primary()", "operation": "aggregate", "topologyDescription": "<TopologyDescription id: 67d2c146b3494cfb751155aa, topology_type: Single, servers: [<ServerDescription ('3.144.134.141', 27017) server_type: Standalone, rtt: 0.2970000000022992>]>", "clientId": {"$oid": "67d2c146b3494cfb751155aa"}, "serverHost": "3.144.134.141", "serverPort": 27017}
2025-03-13 16:28:12,540 - pymongo.connection - DEBUG - {"clientId": {"$oid": "67d2c146b3494cfb751155aa"}, "message": "Connection checkout started", "serverHost": "3.144.134.141", "serverPort": 27017}
2025-03-13 16:28:12,541 - pymongo.connection - DEBUG - {"clientId": {"$oid": "67d2c146b3494cfb751155aa"}, "message": "Connection checked out", "serverHost": "3.144.134.141", "serverPort": 27017, "driverConnectionId": 1, "durationMS": 0.0}
2025-03-13 16:28:12,541 - pymongo.command - DEBUG - {"clientId": {"$oid": "67d2c146b3494cfb751155aa"}, "message": "Command started", "command": "{\"aggregate\": \"violations\", \"pipeline\": [{\"$match\": {\"event_time\": {\"$gte\": {\"$date\": \"2025-03-10T16:28:12.539Z\"}}}}, {\"$group\": {\"_id\": \"$driver_uuid\", \"name\": {\"$first\": \"$driver_name\"}, \"violation_count\": {\"$sum\": 1}, \"violation_types\": {\"$addToSet\": \"$violation_type\"}, \"avg_severity\": {\"$avg\": {\"$switch\": {\"branches\": [{\"case\": {\"$eq\": [\"$severity\", \"HIGH\"]}, \"then\": 3}, {\"case\": {\"$eq\": [\"$severity\", \"MEDIUM\"]}, \"then\": 2}], \"default\": 1}}}, \"last_violation\": {\"$max\": \"$event_time\"}, \"max_speed\": {\"$max\": \"$telemetry.speed\"}, \"vehicle_license\": {\"$first\": \"$vehicle_license\"}}}, {\"$sort\": {\"violation_count\": -1}}], \"lsid\": {\"id\": {\"$binary\": {\"base64\": \"uFnC+8A4QQ+322J3O4U94g==\", \"subType\": \"04\"}}}, \"$db\": \"opal_server\"}", "commandName": "aggregate", "databaseName": "opal_server", "requestId": 26500, "operationId": 26500, "driverConnectionId": 1, "serverConnectionId": 13220, "serverHost": "3.144.134.141", "serverPort": 27017}
2025-03-13 16:28:13,094 - pymongo.command - DEBUG - {"clientId": {"$oid": "67d2c146b3494cfb751155aa"}, "message": "Command succeeded", "durationMS": 552.881, "reply": "{\"cursor\": {\"firstBatch\": [{\"_id\": \"unknown\", \"name\": \"Unknown\", \"violation_count\": 959, \"violation_types\": [\"SPEED_MEDIUM\", \"SPEED_LOW\", \"SPEED_HIGH\"], \"avg_severity\": 1.9551616266944734, \"last_violation\": {\"$date\": \"2025-03-13T11:14:29.496Z\"}, \"vehicle_license\": \"860260056948960\"}, {\"_id\": \"7463170a-de85-4c5d-a77b-b506d939aca1\", \"name\": \"GUL ZAMAN #94378054\", \"violation_count\": 237, \"violation_types\": [\"SPEED_LOW\", \"SPEED_MEDIUM\"], \"avg_severity\": 1.59915611814346, \"last_violation\": {\"$date\": \"2025-03-13T06:31:35.314Z\"}, \"vehicle_license\": \"1075MR\"}, {\"_id\": \"3dd80f61-5ed1-4038-b3a8-5d2e37759893\", \"name\": \"DALER SINGH\", \"violation_count\": 225, \"violation_types\": [\"SPEED_LOW\", \"SPEED_MEDIUM\"], \"avg_severity\": 1.5333333333333334, \"last_violation\": {\"$date\": \"2025-03-11T15:04:20.407Z\"}, \"vehicle_license\": \"1313YD\"}, {\"_id\": \"10009164\", \"name\": \"Unknown\", \"violation_count\": 209, \"violation_types\": [\"SPEED_LOW\", \"SPEED_HIGH\", \"SPEED_MEDIUM\"], \"avg_severity\": 1.7129186602870814, \"last_viol...", "commandName": "aggregate", "databaseName": "opal_server", "requestId": 26500, "operationId": 26500, "driverConnectionId": 1, "serverConnectionId": 13220, "serverHost": "3.144.134.141", "serverPort": 27017}
2025-03-13 16:28:13,096 - pymongo.connection - DEBUG - {"clientId": {"$oid": "67d2c146b3494cfb751155aa"}, "message": "Connection checked in", "serverHost": "3.144.134.141", "serverPort": 27017, "driverConnectionId": 1}
2025-03-13 16:28:13,097 - pymongo.serverSelection - DEBUG - {"message": "Server selection started", "selector": "<function any_server_selector at 0x0000018C152E8720>", "operation": "getMore", "topologyDescription": "<TopologyDescription id: 67d2c146b3494cfb751155aa, topology_type: Single, servers: [<ServerDescription ('3.144.134.141', 27017) server_type: Standalone, rtt: 0.2970000000022992>]>", "clientId": {"$oid": "67d2c146b3494cfb751155aa"}}
2025-03-13 16:28:13,097 - pymongo.serverSelection - DEBUG - {"message": "Server selection succeeded", "selector": "<function any_server_selector at 0x0000018C152E8720>", "operation": "getMore", "topologyDescription": "<TopologyDescription id: 67d2c146b3494cfb751155aa, topology_type: Single, servers: [<ServerDescription ('3.144.134.141', 27017) server_type: Standalone, rtt: 0.2970000000022992>]>", "clientId": {"$oid": "67d2c146b3494cfb751155aa"}, "serverHost": "3.144.134.141", "serverPort": 27017}
2025-03-13 16:28:13,098 - pymongo.connection - DEBUG - {"clientId": {"$oid": "67d2c146b3494cfb751155aa"}, "message": "Connection checkout started", "serverHost": "3.144.134.141", "serverPort": 27017}
2025-03-13 16:28:13,098 - pymongo.connection - DEBUG - {"clientId": {"$oid": "67d2c146b3494cfb751155aa"}, "message": "Connection checked out", "serverHost": "3.144.134.141", "serverPort": 27017, "driverConnectionId": 1, "durationMS": 0.0}
2025-03-13 16:28:13,099 - pymongo.command - DEBUG - {"clientId": {"$oid": "67d2c146b3494cfb751155aa"}, "message": "Command started", "command": "{\"getMore\": 1570977179714360327, \"collection\": \"violations\", \"lsid\": {\"id\": {\"$binary\": {\"base64\": \"uFnC+8A4QQ+322J3O4U94g==\", \"subType\": \"04\"}}}, \"$db\": \"opal_server\"}", "commandName": "getMore", "databaseName": "opal_server", "requestId": 19169, "operationId": 19169, "driverConnectionId": 1, "serverConnectionId": 13220, "serverHost": "3.144.134.141", "serverPort": 27017}
2025-03-13 16:28:13,388 - pymongo.command - DEBUG - {"clientId": {"$oid": "67d2c146b3494cfb751155aa"}, "message": "Command succeeded", "durationMS": 288.64, "reply": "{\"cursor\": {\"nextBatch\": [{\"_id\": \"12861265\", \"name\": \"Unknown\", \"violation_count\": 1, \"violation_types\": [\"SPEED_HIGH\"], \"avg_severity\": 3.0, \"last_violation\": {\"$date\": \"2025-03-11T13:39:36.796Z\"}, \"vehicle_license\": \"860260057076571\"}], \"ns\": \"opal_server.violations\"}, \"ok\": 1.0}", "commandName": "getMore", "databaseName": "opal_server", "requestId": 19169, "operationId": 19169, "driverConnectionId": 1, "serverConnectionId": 13220, "serverHost": "3.144.134.141", "serverPort": 27017}
2025-03-13 16:28:13,388 - pymongo.connection - DEBUG - {"clientId": {"$oid": "67d2c146b3494cfb751155aa"}, "message": "Connection checked in", "serverHost": "3.144.134.141", "serverPort": 27017, "driverConnectionId": 1}
2025-03-13 16:28:13,389 - app.db.repositories.data_repository - INFO - Retrieved stats for 102 drivers
2025-03-13 16:28:13,389 - app.services.predictive_analytics - INFO - Retrieved 102 driver records
2025-03-13 16:28:13,390 - app.services.predictive_analytics - INFO - Successfully processed 9 drivers
2025-03-13 16:28:17,936 - pymongo.topology - DEBUG - {"topologyId": {"$oid": "67d2c146b3494cfb751155aa"}, "driverConnectionId": 1, "serverConnectionId": 13218, "serverHost": "3.144.134.141", "serverPort": 27017, "awaited": true, "durationMS": 10311.99999999808, "reply": "{\"isWritablePrimary\": true, \"topologyVersion\": {\"processId\": {\"$oid\": \"67b7e5814f77c1a87c56d054\"}}, \"maxBsonObjectSize\": 16777216, \"maxMessageSizeBytes\": 48000000, \"maxWriteBatchSize\": 100000, \"localTime\": {\"$date\": \"2025-03-13T11:28:17.919Z\"}, \"logicalSessionTimeoutMinutes\": 30, \"connectionId\": 13218, \"maxWireVersion\": 25, \"ok\": 1.0}", "message": "Server heartbeat succeeded"}
2025-03-13 16:28:17,937 - pymongo.topology - DEBUG - {"topologyId": {"$oid": "67d2c146b3494cfb751155aa"}, "driverConnectionId": 1, "serverConnectionId": 13218, "serverHost": "3.144.134.141", "serverPort": 27017, "awaited": true, "message": "Server heartbeat started"}
2025-03-13 16:28:27,938 - pymongo.topology - DEBUG - {"topologyId": {"$oid": "67d2c146b3494cfb751155aa"}, "driverConnectionId": 1, "serverConnectionId": 13218, "serverHost": "3.144.134.141", "serverPort": 27017, "awaited": true, "durationMS": 10000.0, "reply": "{\"isWritablePrimary\": true, \"topologyVersion\": {\"processId\": {\"$oid\": \"67b7e5814f77c1a87c56d054\"}}, \"maxBsonObjectSize\": 16777216, \"maxMessageSizeBytes\": 48000000, \"maxWriteBatchSize\": 100000, \"localTime\": {\"$date\": \"2025-03-13T11:28:27.922Z\"}, \"logicalSessionTimeoutMinutes\": 30, \"connectionId\": 13218, \"maxWireVersion\": 25, \"ok\": 1.0}", "message": "Server heartbeat succeeded"}
2025-03-13 16:28:27,939 - pymongo.topology - DEBUG - {"topologyId": {"$oid": "67d2c146b3494cfb751155aa"}, "driverConnectionId": 1, "serverConnectionId": 13218, "serverHost": "3.144.134.141", "serverPort": 27017, "awaited": true, "message": "Server heartbeat started"}
2025-03-13 16:28:37,929 - pymongo.topology - DEBUG - {"topologyId": {"$oid": "67d2c146b3494cfb751155aa"}, "driverConnectionId": 1, "serverConnectionId": 13218, "serverHost": "3.144.134.141", "serverPort": 27017, "awaited": true, "durationMS": 10000.0, "reply": "{\"isWritablePrimary\": true, \"topologyVersion\": {\"processId\": {\"$oid\": \"67b7e5814f77c1a87c56d054\"}}, \"maxBsonObjectSize\": 16777216, \"maxMessageSizeBytes\": 48000000, \"maxWriteBatchSize\": 100000, \"localTime\": {\"$date\": \"2025-03-13T11:28:37.932Z\"}, \"logicalSessionTimeoutMinutes\": 30, \"connectionId\": 13218, \"maxWireVersion\": 25, \"ok\": 1.0}", "message": "Server heartbeat succeeded"}
2025-03-13 16:28:37,930 - pymongo.topology - DEBUG - {"topologyId": {"$oid": "67d2c146b3494cfb751155aa"}, "driverConnectionId": 1, "serverConnectionId": 13218, "serverHost": "3.144.134.141", "serverPort": 27017, "awaited": true, "message": "Server heartbeat started"}
2025-03-13 16:28:47,945 - pymongo.topology - DEBUG - {"topologyId": {"$oid": "67d2c146b3494cfb751155aa"}, "driverConnectionId": 1, "serverConnectionId": 13218, "serverHost": "3.144.134.141", "serverPort": 27017, "awaited": true, "durationMS": 10016.00000000326, "reply": "{\"isWritablePrimary\": true, \"topologyVersion\": {\"processId\": {\"$oid\": \"67b7e5814f77c1a87c56d054\"}}, \"maxBsonObjectSize\": 16777216, \"maxMessageSizeBytes\": 48000000, \"maxWriteBatchSize\": 100000, \"localTime\": {\"$date\": \"2025-03-13T11:28:47.942Z\"}, \"logicalSessionTimeoutMinutes\": 30, \"connectionId\": 13218, \"maxWireVersion\": 25, \"ok\": 1.0}", "message": "Server heartbeat succeeded"}
2025-03-13 16:28:47,945 - pymongo.topology - DEBUG - {"topologyId": {"$oid": "67d2c146b3494cfb751155aa"}, "driverConnectionId": 1, "serverConnectionId": 13218, "serverHost": "3.144.134.141", "serverPort": 27017, "awaited": true, "message": "Server heartbeat started"}
2025-03-13 16:28:57,946 - pymongo.topology - DEBUG - {"topologyId": {"$oid": "67d2c146b3494cfb751155aa"}, "driverConnectionId": 1, "serverConnectionId": 13218, "serverHost": "3.144.134.141", "serverPort": 27017, "awaited": true, "durationMS": 10000.0, "reply": "{\"isWritablePrimary\": true, \"topologyVersion\": {\"processId\": {\"$oid\": \"67b7e5814f77c1a87c56d054\"}}, \"maxBsonObjectSize\": 16777216, \"maxMessageSizeBytes\": 48000000, \"maxWriteBatchSize\": 100000, \"localTime\": {\"$date\": \"2025-03-13T11:28:57.942Z\"}, \"logicalSessionTimeoutMinutes\": 30, \"connectionId\": 13218, \"maxWireVersion\": 25, \"ok\": 1.0}", "message": "Server heartbeat succeeded"}
2025-03-13 16:28:57,947 - pymongo.topology - DEBUG - {"topologyId": {"$oid": "67d2c146b3494cfb751155aa"}, "driverConnectionId": 1, "serverConnectionId": 13218, "serverHost": "3.144.134.141", "serverPort": 27017, "awaited": true, "message": "Server heartbeat started"}
2025-03-13 16:29:07,962 - pymongo.topology - DEBUG - {"topologyId": {"$oid": "67d2c146b3494cfb751155aa"}, "driverConnectionId": 1, "serverConnectionId": 13218, "serverHost": "3.144.134.141", "serverPort": 27017, "awaited": true, "durationMS": 10015.999999999622, "reply": "{\"isWritablePrimary\": true, \"topologyVersion\": {\"processId\": {\"$oid\": \"67b7e5814f77c1a87c56d054\"}}, \"maxBsonObjectSize\": 16777216, \"maxMessageSizeBytes\": 48000000, \"maxWriteBatchSize\": 100000, \"localTime\": {\"$date\": \"2025-03-13T11:29:07.943Z\"}, \"logicalSessionTimeoutMinutes\": 30, \"connectionId\": 13218, \"maxWireVersion\": 25, \"ok\": 1.0}", "message": "Server heartbeat succeeded"}
2025-03-13 16:29:07,963 - pymongo.topology - DEBUG - {"topologyId": {"$oid": "67d2c146b3494cfb751155aa"}, "driverConnectionId": 1, "serverConnectionId": 13218, "serverHost": "3.144.134.141", "serverPort": 27017, "awaited": true, "message": "Server heartbeat started"}
2025-03-13 16:29:17,961 - pymongo.topology - DEBUG - {"topologyId": {"$oid": "67d2c146b3494cfb751155aa"}, "driverConnectionId": 1, "serverConnectionId": 13218, "serverHost": "3.144.134.141", "serverPort": 27017, "awaited": true, "durationMS": 10000.0, "reply": "{\"isWritablePrimary\": true, \"topologyVersion\": {\"processId\": {\"$oid\": \"67b7e5814f77c1a87c56d054\"}}, \"maxBsonObjectSize\": 16777216, \"maxMessageSizeBytes\": 48000000, \"maxWriteBatchSize\": 100000, \"localTime\": {\"$date\": \"2025-03-13T11:29:17.944Z\"}, \"logicalSessionTimeoutMinutes\": 30, \"connectionId\": 13218, \"maxWireVersion\": 25, \"ok\": 1.0}", "message": "Server heartbeat succeeded"}
2025-03-13 16:29:17,961 - pymongo.topology - DEBUG - {"topologyId": {"$oid": "67d2c146b3494cfb751155aa"}, "driverConnectionId": 1, "serverConnectionId": 13218, "serverHost": "3.144.134.141", "serverPort": 27017, "awaited": true, "message": "Server heartbeat started"}
2025-03-13 16:29:27,981 - pymongo.topology - DEBUG - {"topologyId": {"$oid": "67d2c146b3494cfb751155aa"}, "driverConnectionId": 1, "serverConnectionId": 13218, "serverHost": "3.144.134.141", "serverPort": 27017, "awaited": true, "durationMS": 10014.999999999418, "reply": "{\"isWritablePrimary\": true, \"topologyVersion\": {\"processId\": {\"$oid\": \"67b7e5814f77c1a87c56d054\"}}, \"maxBsonObjectSize\": 16777216, \"maxMessageSizeBytes\": 48000000, \"maxWriteBatchSize\": 100000, \"localTime\": {\"$date\": \"2025-03-13T11:29:27.945Z\"}, \"logicalSessionTimeoutMinutes\": 30, \"connectionId\": 13218, \"maxWireVersion\": 25, \"ok\": 1.0}", "message": "Server heartbeat succeeded"}
2025-03-13 16:29:27,982 - pymongo.topology - DEBUG - {"topologyId": {"$oid": "67d2c146b3494cfb751155aa"}, "driverConnectionId": 1, "serverConnectionId": 13218, "serverHost": "3.144.134.141", "serverPort": 27017, "awaited": true, "message": "Server heartbeat started"}
2025-03-13 16:29:37,938 - pymongo.topology - DEBUG - {"topologyId": {"$oid": "67d2c146b3494cfb751155aa"}, "driverConnectionId": 1, "serverConnectionId": 13218, "serverHost": "3.144.134.141", "serverPort": 27017, "awaited": true, "durationMS": 9952.9999999977, "reply": "{\"isWritablePrimary\": true, \"topologyVersion\": {\"processId\": {\"$oid\": \"67b7e5814f77c1a87c56d054\"}}, \"maxBsonObjectSize\": 16777216, \"maxMessageSizeBytes\": 48000000, \"maxWriteBatchSize\": 100000, \"localTime\": {\"$date\": \"2025-03-13T11:29:37.946Z\"}, \"logicalSessionTimeoutMinutes\": 30, \"connectionId\": 13218, \"maxWireVersion\": 25, \"ok\": 1.0}", "message": "Server heartbeat succeeded"}
2025-03-13 16:29:37,939 - pymongo.topology - DEBUG - {"topologyId": {"$oid": "67d2c146b3494cfb751155aa"}, "driverConnectionId": 1, "serverConnectionId": 13218, "serverHost": "3.144.134.141", "serverPort": 27017, "awaited": true, "message": "Server heartbeat started"}
2025-03-13 16:29:47,990 - pymongo.topology - DEBUG - {"topologyId": {"$oid": "67d2c146b3494cfb751155aa"}, "driverConnectionId": 1, "serverConnectionId": 13218, "serverHost": "3.144.134.141", "serverPort": 27017, "awaited": true, "durationMS": 10047.0000000023, "reply": "{\"isWritablePrimary\": true, \"topologyVersion\": {\"processId\": {\"$oid\": \"67b7e5814f77c1a87c56d054\"}}, \"maxBsonObjectSize\": 16777216, \"maxMessageSizeBytes\": 48000000, \"maxWriteBatchSize\": 100000, \"localTime\": {\"$date\": \"2025-03-13T11:29:47.947Z\"}, \"logicalSessionTimeoutMinutes\": 30, \"connectionId\": 13218, \"maxWireVersion\": 25, \"ok\": 1.0}", "message": "Server heartbeat succeeded"}
2025-03-13 16:29:47,991 - pymongo.topology - DEBUG - {"topologyId": {"$oid": "67d2c146b3494cfb751155aa"}, "driverConnectionId": 1, "serverConnectionId": 13218, "serverHost": "3.144.134.141", "serverPort": 27017, "awaited": true, "message": "Server heartbeat started"}
2025-03-13 16:29:57,945 - pymongo.topology - DEBUG - {"topologyId": {"$oid": "67d2c146b3494cfb751155aa"}, "driverConnectionId": 1, "serverConnectionId": 13218, "serverHost": "3.144.134.141", "serverPort": 27017, "awaited": true, "durationMS": 9953.000000001339, "reply": "{\"isWritablePrimary\": true, \"topologyVersion\": {\"processId\": {\"$oid\": \"67b7e5814f77c1a87c56d054\"}}, \"maxBsonObjectSize\": 16777216, \"maxMessageSizeBytes\": 48000000, \"maxWriteBatchSize\": 100000, \"localTime\": {\"$date\": \"2025-03-13T11:29:57.953Z\"}, \"logicalSessionTimeoutMinutes\": 30, \"connectionId\": 13218, \"maxWireVersion\": 25, \"ok\": 1.0}", "message": "Server heartbeat succeeded"}
2025-03-13 16:29:57,946 - pymongo.topology - DEBUG - {"topologyId": {"$oid": "67d2c146b3494cfb751155aa"}, "driverConnectionId": 1, "serverConnectionId": 13218, "serverHost": "3.144.134.141", "serverPort": 27017, "awaited": true, "message": "Server heartbeat started"}
2025-03-13 16:30:08,014 - pymongo.topology - DEBUG - {"topologyId": {"$oid": "67d2c146b3494cfb751155aa"}, "driverConnectionId": 1, "serverConnectionId": 13218, "serverHost": "3.144.134.141", "serverPort": 27017, "awaited": true, "durationMS": 10062.999999998283, "reply": "{\"isWritablePrimary\": true, \"topologyVersion\": {\"processId\": {\"$oid\": \"67b7e5814f77c1a87c56d054\"}}, \"maxBsonObjectSize\": 16777216, \"maxMessageSizeBytes\": 48000000, \"maxWriteBatchSize\": 100000, \"localTime\": {\"$date\": \"2025-03-13T11:30:07.954Z\"}, \"logicalSessionTimeoutMinutes\": 30, \"connectionId\": 13218, \"maxWireVersion\": 25, \"ok\": 1.0}", "message": "Server heartbeat succeeded"}
2025-03-13 16:30:08,015 - pymongo.topology - DEBUG - {"topologyId": {"$oid": "67d2c146b3494cfb751155aa"}, "driverConnectionId": 1, "serverConnectionId": 13218, "serverHost": "3.144.134.141", "serverPort": 27017, "awaited": true, "message": "Server heartbeat started"}
2025-03-13 16:32:05,646 - numexpr.utils - INFO - Note: NumExpr detected 12 cores but "NUMEXPR_MAX_THREADS" not set, so enforcing safe limit of 8.
2025-03-13 16:32:05,646 - numexpr.utils - INFO - NumExpr defaulting to 8 threads.
2025-03-13 16:32:07,681 - matplotlib - DEBUG - matplotlib data path: C:\Users\msameerakram\AppData\Local\anaconda3\Lib\site-packages\matplotlib\mpl-data
2025-03-13 16:32:07,691 - matplotlib - DEBUG - CONFIGDIR=C:\Users\msameerakram\.matplotlib
2025-03-13 16:32:07,693 - matplotlib - DEBUG - interactive is False
2025-03-13 16:32:07,693 - matplotlib - DEBUG - platform is win32
2025-03-13 16:32:07,785 - matplotlib - DEBUG - CACHEDIR=C:\Users\msameerakram\.matplotlib
2025-03-13 16:32:07,789 - matplotlib.font_manager - DEBUG - Using fontManager instance from C:\Users\msameerakram\.matplotlib\fontlist-v390.json
2025-03-13 16:32:11,177 - numexpr.utils - INFO - Note: NumExpr detected 12 cores but "NUMEXPR_MAX_THREADS" not set, so enforcing safe limit of 8.
2025-03-13 16:32:11,178 - numexpr.utils - INFO - NumExpr defaulting to 8 threads.
2025-03-13 16:32:12,946 - matplotlib - DEBUG - matplotlib data path: C:\Users\msameerakram\AppData\Local\anaconda3\Lib\site-packages\matplotlib\mpl-data
2025-03-13 16:32:12,953 - matplotlib - DEBUG - CONFIGDIR=C:\Users\msameerakram\.matplotlib
2025-03-13 16:32:12,955 - matplotlib - DEBUG - interactive is False
2025-03-13 16:32:12,956 - matplotlib - DEBUG - platform is win32
2025-03-13 16:32:13,033 - matplotlib - DEBUG - CACHEDIR=C:\Users\msameerakram\.matplotlib
2025-03-13 16:32:13,036 - matplotlib.font_manager - DEBUG - Using fontManager instance from C:\Users\msameerakram\.matplotlib\fontlist-v390.json
2025-03-13 16:32:15,215 - asyncio - DEBUG - Using selector: SelectSelector
2025-03-13 16:32:15,263 - pymongo.topology - DEBUG - {"topologyId": {"$oid": "67d2c23fe6e4bbe630b5e5bc"}, "message": "Starting topology monitoring"}
2025-03-13 16:32:15,263 - pymongo.topology - DEBUG - {"topologyId": {"$oid": "67d2c23fe6e4bbe630b5e5bc"}, "previousDescription": "<TopologyDescription id: 67d2c23fe6e4bbe630b5e5bc, topology_type: Unknown, servers: []>", "newDescription": "<TopologyDescription id: 67d2c23fe6e4bbe630b5e5bc, topology_type: Unknown, servers: [<ServerDescription ('3.144.134.141', 27017) server_type: Unknown, rtt: None>]>", "message": "Topology description changed"}
2025-03-13 16:32:15,264 - pymongo.topology - DEBUG - {"topologyId": {"$oid": "67d2c23fe6e4bbe630b5e5bc"}, "serverHost": "3.144.134.141", "serverPort": 27017, "message": "Starting server monitoring"}
2025-03-13 16:32:15,265 - pymongo.connection - DEBUG - {"clientId": {"$oid": "67d2c23fe6e4bbe630b5e5bc"}, "message": "Connection pool created", "serverHost": "3.144.134.141", "serverPort": 27017}
2025-03-13 16:32:15,266 - pymongo.serverSelection - DEBUG - {"message": "Server selection started", "selector": "Primary()", "operation": "ping", "topologyDescription": "<TopologyDescription id: 67d2c23fe6e4bbe630b5e5bc, topology_type: Unknown, servers: [<ServerDescription ('3.144.134.141', 27017) server_type: Unknown, rtt: None>]>", "clientId": {"$oid": "67d2c23fe6e4bbe630b5e5bc"}}
2025-03-13 16:32:15,266 - pymongo.serverSelection - DEBUG - {"message": "Waiting for suitable server to become available", "selector": "Primary()", "operation": "ping", "topologyDescription": "<TopologyDescription id: 67d2c23fe6e4bbe630b5e5bc, topology_type: Unknown, servers: [<ServerDescription ('3.144.134.141', 27017) server_type: Unknown, rtt: None>]>", "clientId": {"$oid": "67d2c23fe6e4bbe630b5e5bc"}, "remainingTimeMS": 30}
2025-03-13 16:32:15,566 - pymongo.topology - DEBUG - {"topologyId": {"$oid": "67d2c23fe6e4bbe630b5e5bc"}, "driverConnectionId": 1, "serverHost": "3.144.134.141", "serverPort": 27017, "awaited": false, "message": "Server heartbeat started"}
2025-03-13 16:32:15,863 - pymongo.topology - DEBUG - {"topologyId": {"$oid": "67d2c23fe6e4bbe630b5e5bc"}, "driverConnectionId": 1, "serverConnectionId": 13221, "serverHost": "3.144.134.141", "serverPort": 27017, "awaited": false, "durationMS": 297.0000000022992, "reply": "{\"helloOk\": true, \"ismaster\": true, \"topologyVersion\": {\"processId\": {\"$oid\": \"67b7e5814f77c1a87c56d054\"}}, \"maxBsonObjectSize\": 16777216, \"maxMessageSizeBytes\": 48000000, \"maxWriteBatchSize\": 100000, \"localTime\": {\"$date\": \"2025-03-13T11:32:15.869Z\"}, \"logicalSessionTimeoutMinutes\": 30, \"connectionId\": 13221, \"maxWireVersion\": 25, \"ok\": 1.0}", "message": "Server heartbeat succeeded"}
2025-03-13 16:32:15,863 - pymongo.connection - DEBUG - {"clientId": {"$oid": "67d2c23fe6e4bbe630b5e5bc"}, "message": "Connection pool ready", "serverHost": "3.144.134.141", "serverPort": 27017}
2025-03-13 16:32:15,863 - pymongo.topology - DEBUG - {"topologyId": {"$oid": "67d2c23fe6e4bbe630b5e5bc"}, "previousDescription": "<TopologyDescription id: 67d2c23fe6e4bbe630b5e5bc, topology_type: Unknown, servers: [<ServerDescription ('3.144.134.141', 27017) server_type: Unknown, rtt: None>]>", "newDescription": "<TopologyDescription id: 67d2c23fe6e4bbe630b5e5bc, topology_type: Single, servers: [<ServerDescription ('3.144.134.141', 27017) server_type: Standalone, rtt: 0.2970000000022992>]>", "message": "Topology description changed"}
2025-03-13 16:32:15,864 - pymongo.serverSelection - DEBUG - {"message": "Server selection succeeded", "selector": "Primary()", "operation": "ping", "topologyDescription": "<TopologyDescription id: 67d2c23fe6e4bbe630b5e5bc, topology_type: Single, servers: [<ServerDescription ('3.144.134.141', 27017) server_type: Standalone, rtt: 0.2970000000022992>]>", "clientId": {"$oid": "67d2c23fe6e4bbe630b5e5bc"}, "serverHost": "3.144.134.141", "serverPort": 27017}
2025-03-13 16:32:15,866 - pymongo.topology - DEBUG - {"topologyId": {"$oid": "67d2c23fe6e4bbe630b5e5bc"}, "driverConnectionId": 1, "serverConnectionId": 13221, "serverHost": "3.144.134.141", "serverPort": 27017, "awaited": true, "message": "Server heartbeat started"}
2025-03-13 16:32:15,866 - pymongo.connection - DEBUG - {"clientId": {"$oid": "67d2c23fe6e4bbe630b5e5bc"}, "message": "Connection checkout started", "serverHost": "3.144.134.141", "serverPort": 27017}
2025-03-13 16:32:15,866 - pymongo.connection - DEBUG - {"clientId": {"$oid": "67d2c23fe6e4bbe630b5e5bc"}, "message": "Connection created", "serverHost": "3.144.134.141", "serverPort": 27017, "driverConnectionId": 1}
2025-03-13 16:32:16,819 - pymongo.connection - DEBUG - {"clientId": {"$oid": "67d2c23fe6e4bbe630b5e5bc"}, "message": "Connection ready", "serverHost": "3.144.134.141", "serverPort": 27017, "driverConnectionId": 1, "durationMS": 0.6870000000017171}
2025-03-13 16:32:16,820 - pymongo.connection - DEBUG - {"clientId": {"$oid": "67d2c23fe6e4bbe630b5e5bc"}, "message": "Connection checked out", "serverHost": "3.144.134.141", "serverPort": 27017, "driverConnectionId": 1, "durationMS": 0.9530000000013388}
2025-03-13 16:32:16,820 - pymongo.command - DEBUG - {"clientId": {"$oid": "67d2c23fe6e4bbe630b5e5bc"}, "message": "Command started", "command": "{\"ping\": 1, \"lsid\": {\"id\": {\"$binary\": {\"base64\": \"6kju3nAMTwmkIc/yOLPwHQ==\", \"subType\": \"04\"}}}, \"$db\": \"opal_server\"}", "commandName": "ping", "databaseName": "opal_server", "requestId": 6334, "operationId": 6334, "driverConnectionId": 1, "serverConnectionId": 13222, "serverHost": "3.144.134.141", "serverPort": 27017}
2025-03-13 16:32:17,149 - pymongo.command - DEBUG - {"clientId": {"$oid": "67d2c23fe6e4bbe630b5e5bc"}, "message": "Command succeeded", "durationMS": 329.239, "reply": "{\"ok\": 1.0}", "commandName": "ping", "databaseName": "opal_server", "requestId": 6334, "operationId": 6334, "driverConnectionId": 1, "serverConnectionId": 13222, "serverHost": "3.144.134.141", "serverPort": 27017}
2025-03-13 16:32:17,149 - pymongo.connection - DEBUG - {"clientId": {"$oid": "67d2c23fe6e4bbe630b5e5bc"}, "message": "Connection checked in", "serverHost": "3.144.134.141", "serverPort": 27017, "driverConnectionId": 1}
2025-03-13 16:32:17,839 - app.services.predictive_analytics - INFO - Starting driver risk prediction for last 3 days
2025-03-13 16:32:17,839 - app.db.repositories.data_repository - INFO - Fetching driver risk data for past 3 days
2025-03-13 16:32:17,840 - app.db.repositories.data_repository - DEBUG - Executing pipeline: [{'$match': {'event_time': {'$gte': datetime.datetime(2025, 3, 10, 16, 32, 17, 840482)}}}, {'$group': {'_id': '$driver_uuid', 'name': {'$first': '$driver_name'}, 'violation_count': {'$sum': 1}, 'violation_types': {'$addToSet': '$violation_type'}, 'avg_severity': {'$avg': {'$switch': {'branches': [{'case': {'$eq': ['$severity', 'HIGH']}, 'then': 3}, {'case': {'$eq': ['$severity', 'MEDIUM']}, 'then': 2}], 'default': 1}}}, 'last_violation': {'$max': '$event_time'}, 'max_speed': {'$max': '$telemetry.speed'}, 'vehicle_license': {'$first': '$vehicle_license'}}}, {'$sort': {'violation_count': -1}}]
2025-03-13 16:32:17,841 - pymongo.serverSelection - DEBUG - {"message": "Server selection started", "selector": "Primary()", "operation": "aggregate", "topologyDescription": "<TopologyDescription id: 67d2c23fe6e4bbe630b5e5bc, topology_type: Single, servers: [<ServerDescription ('3.144.134.141', 27017) server_type: Standalone, rtt: 0.2970000000022992>]>", "clientId": {"$oid": "67d2c23fe6e4bbe630b5e5bc"}}
2025-03-13 16:32:17,841 - pymongo.serverSelection - DEBUG - {"message": "Server selection succeeded", "selector": "Primary()", "operation": "aggregate", "topologyDescription": "<TopologyDescription id: 67d2c23fe6e4bbe630b5e5bc, topology_type: Single, servers: [<ServerDescription ('3.144.134.141', 27017) server_type: Standalone, rtt: 0.2970000000022992>]>", "clientId": {"$oid": "67d2c23fe6e4bbe630b5e5bc"}, "serverHost": "3.144.134.141", "serverPort": 27017}
2025-03-13 16:32:17,843 - pymongo.connection - DEBUG - {"clientId": {"$oid": "67d2c23fe6e4bbe630b5e5bc"}, "message": "Connection checkout started", "serverHost": "3.144.134.141", "serverPort": 27017}
2025-03-13 16:32:17,843 - pymongo.connection - DEBUG - {"clientId": {"$oid": "67d2c23fe6e4bbe630b5e5bc"}, "message": "Connection checked out", "serverHost": "3.144.134.141", "serverPort": 27017, "driverConnectionId": 1, "durationMS": 0.0}
2025-03-13 16:32:17,844 - pymongo.command - DEBUG - {"clientId": {"$oid": "67d2c23fe6e4bbe630b5e5bc"}, "message": "Command started", "command": "{\"aggregate\": \"violations\", \"pipeline\": [{\"$match\": {\"event_time\": {\"$gte\": {\"$date\": \"2025-03-10T16:32:17.840Z\"}}}}, {\"$group\": {\"_id\": \"$driver_uuid\", \"name\": {\"$first\": \"$driver_name\"}, \"violation_count\": {\"$sum\": 1}, \"violation_types\": {\"$addToSet\": \"$violation_type\"}, \"avg_severity\": {\"$avg\": {\"$switch\": {\"branches\": [{\"case\": {\"$eq\": [\"$severity\", \"HIGH\"]}, \"then\": 3}, {\"case\": {\"$eq\": [\"$severity\", \"MEDIUM\"]}, \"then\": 2}], \"default\": 1}}}, \"last_violation\": {\"$max\": \"$event_time\"}, \"max_speed\": {\"$max\": \"$telemetry.speed\"}, \"vehicle_license\": {\"$first\": \"$vehicle_license\"}}}, {\"$sort\": {\"violation_count\": -1}}], \"lsid\": {\"id\": {\"$binary\": {\"base64\": \"6kju3nAMTwmkIc/yOLPwHQ==\", \"subType\": \"04\"}}}, \"$db\": \"opal_server\"}", "commandName": "aggregate", "databaseName": "opal_server", "requestId": 26500, "operationId": 26500, "driverConnectionId": 1, "serverConnectionId": 13222, "serverHost": "3.144.134.141", "serverPort": 27017}
2025-03-13 16:32:18,567 - pymongo.command - DEBUG - {"clientId": {"$oid": "67d2c23fe6e4bbe630b5e5bc"}, "message": "Command succeeded", "durationMS": 724.0060000000001, "reply": "{\"cursor\": {\"firstBatch\": [{\"_id\": \"unknown\", \"name\": \"Unknown\", \"violation_count\": 958, \"violation_types\": [\"SPEED_MEDIUM\", \"SPEED_LOW\", \"SPEED_HIGH\"], \"avg_severity\": 1.953027139874739, \"last_violation\": {\"$date\": \"2025-03-13T11:30:01.013Z\"}, \"vehicle_license\": \"860665050647824\"}, {\"_id\": \"7463170a-de85-4c5d-a77b-b506d939aca1\", \"name\": \"GUL ZAMAN #94378054\", \"violation_count\": 237, \"violation_types\": [\"SPEED_MEDIUM\", \"SPEED_LOW\"], \"avg_severity\": 1.59915611814346, \"last_violation\": {\"$date\": \"2025-03-13T06:31:35.314Z\"}, \"vehicle_license\": \"1075MR\"}, {\"_id\": \"3dd80f61-5ed1-4038-b3a8-5d2e37759893\", \"name\": \"DALER SINGH\", \"violation_count\": 223, \"violation_types\": [\"SPEED_MEDIUM\", \"SPEED_LOW\"], \"avg_severity\": 1.5381165919282511, \"last_violation\": {\"$date\": \"2025-03-11T15:04:20.407Z\"}, \"vehicle_license\": \"1313YD\"}, {\"_id\": \"10009164\", \"name\": \"Unknown\", \"violation_count\": 209, \"violation_types\": [\"SPEED_MEDIUM\", \"SPEED_LOW\", \"SPEED_HIGH\"], \"avg_severity\": 1.7129186602870814, \"last_viola...", "commandName": "aggregate", "databaseName": "opal_server", "requestId": 26500, "operationId": 26500, "driverConnectionId": 1, "serverConnectionId": 13222, "serverHost": "3.144.134.141", "serverPort": 27017}
2025-03-13 16:32:18,569 - pymongo.connection - DEBUG - {"clientId": {"$oid": "67d2c23fe6e4bbe630b5e5bc"}, "message": "Connection checked in", "serverHost": "3.144.134.141", "serverPort": 27017, "driverConnectionId": 1}
2025-03-13 16:32:18,569 - pymongo.serverSelection - DEBUG - {"message": "Server selection started", "selector": "<function any_server_selector at 0x0000026990BB8720>", "operation": "getMore", "topologyDescription": "<TopologyDescription id: 67d2c23fe6e4bbe630b5e5bc, topology_type: Single, servers: [<ServerDescription ('3.144.134.141', 27017) server_type: Standalone, rtt: 0.2970000000022992>]>", "clientId": {"$oid": "67d2c23fe6e4bbe630b5e5bc"}}
2025-03-13 16:32:18,570 - pymongo.serverSelection - DEBUG - {"message": "Server selection succeeded", "selector": "<function any_server_selector at 0x0000026990BB8720>", "operation": "getMore", "topologyDescription": "<TopologyDescription id: 67d2c23fe6e4bbe630b5e5bc, topology_type: Single, servers: [<ServerDescription ('3.144.134.141', 27017) server_type: Standalone, rtt: 0.2970000000022992>]>", "clientId": {"$oid": "67d2c23fe6e4bbe630b5e5bc"}, "serverHost": "3.144.134.141", "serverPort": 27017}
2025-03-13 16:32:18,570 - pymongo.connection - DEBUG - {"clientId": {"$oid": "67d2c23fe6e4bbe630b5e5bc"}, "message": "Connection checkout started", "serverHost": "3.144.134.141", "serverPort": 27017}
2025-03-13 16:32:18,570 - pymongo.connection - DEBUG - {"clientId": {"$oid": "67d2c23fe6e4bbe630b5e5bc"}, "message": "Connection checked out", "serverHost": "3.144.134.141", "serverPort": 27017, "driverConnectionId": 1, "durationMS": 0.0}
2025-03-13 16:32:18,571 - pymongo.command - DEBUG - {"clientId": {"$oid": "67d2c23fe6e4bbe630b5e5bc"}, "message": "Command started", "command": "{\"getMore\": 4707187652007638808, \"collection\": \"violations\", \"lsid\": {\"id\": {\"$binary\": {\"base64\": \"6kju3nAMTwmkIc/yOLPwHQ==\", \"subType\": \"04\"}}}, \"$db\": \"opal_server\"}", "commandName": "getMore", "databaseName": "opal_server", "requestId": 19169, "operationId": 19169, "driverConnectionId": 1, "serverConnectionId": 13222, "serverHost": "3.144.134.141", "serverPort": 27017}
2025-03-13 16:32:18,931 - pymongo.command - DEBUG - {"clientId": {"$oid": "67d2c23fe6e4bbe630b5e5bc"}, "message": "Command succeeded", "durationMS": 360.93399999999997, "reply": "{\"cursor\": {\"nextBatch\": [{\"_id\": \"12861265\", \"name\": \"Unknown\", \"violation_count\": 1, \"violation_types\": [\"SPEED_HIGH\"], \"avg_severity\": 3.0, \"last_violation\": {\"$date\": \"2025-03-11T13:39:36.796Z\"}, \"vehicle_license\": \"860260057076571\"}], \"ns\": \"opal_server.violations\"}, \"ok\": 1.0}", "commandName": "getMore", "databaseName": "opal_server", "requestId": 19169, "operationId": 19169, "driverConnectionId": 1, "serverConnectionId": 13222, "serverHost": "3.144.134.141", "serverPort": 27017}
2025-03-13 16:32:18,931 - pymongo.connection - DEBUG - {"clientId": {"$oid": "67d2c23fe6e4bbe630b5e5bc"}, "message": "Connection checked in", "serverHost": "3.144.134.141", "serverPort": 27017, "driverConnectionId": 1}
2025-03-13 16:32:18,933 - app.db.repositories.data_repository - INFO - Retrieved stats for 102 drivers
2025-03-13 16:32:18,934 - app.services.predictive_analytics - INFO - Retrieved 102 driver records
2025-03-13 16:32:18,934 - app.services.predictive_analytics - INFO - Successfully processed 9 drivers
2025-03-13 16:32:26,141 - pymongo.topology - DEBUG - {"topologyId": {"$oid": "67d2c23fe6e4bbe630b5e5bc"}, "driverConnectionId": 1, "serverConnectionId": 13221, "serverHost": "3.144.134.141", "serverPort": 27017, "awaited": true, "durationMS": 10265.999999999622, "reply": "{\"isWritablePrimary\": true, \"topologyVersion\": {\"processId\": {\"$oid\": \"67b7e5814f77c1a87c56d054\"}}, \"maxBsonObjectSize\": 16777216, \"maxMessageSizeBytes\": 48000000, \"maxWriteBatchSize\": 100000, \"localTime\": {\"$date\": \"2025-03-13T11:32:26.169Z\"}, \"logicalSessionTimeoutMinutes\": 30, \"connectionId\": 13221, \"maxWireVersion\": 25, \"ok\": 1.0}", "message": "Server heartbeat succeeded"}
2025-03-13 16:32:26,143 - pymongo.topology - DEBUG - {"topologyId": {"$oid": "67d2c23fe6e4bbe630b5e5bc"}, "driverConnectionId": 1, "serverConnectionId": 13221, "serverHost": "3.144.134.141", "serverPort": 27017, "awaited": true, "message": "Server heartbeat started"}
2025-03-13 16:32:36,171 - pymongo.topology - DEBUG - {"topologyId": {"$oid": "67d2c23fe6e4bbe630b5e5bc"}, "driverConnectionId": 1, "serverConnectionId": 13221, "serverHost": "3.144.134.141", "serverPort": 27017, "awaited": true, "durationMS": 10030.99999999904, "reply": "{\"isWritablePrimary\": true, \"topologyVersion\": {\"processId\": {\"$oid\": \"67b7e5814f77c1a87c56d054\"}}, \"maxBsonObjectSize\": 16777216, \"maxMessageSizeBytes\": 48000000, \"maxWriteBatchSize\": 100000, \"localTime\": {\"$date\": \"2025-03-13T11:32:36.170Z\"}, \"logicalSessionTimeoutMinutes\": 30, \"connectionId\": 13221, \"maxWireVersion\": 25, \"ok\": 1.0}", "message": "Server heartbeat succeeded"}
2025-03-13 16:32:36,172 - pymongo.topology - DEBUG - {"topologyId": {"$oid": "67d2c23fe6e4bbe630b5e5bc"}, "driverConnectionId": 1, "serverConnectionId": 13221, "serverHost": "3.144.134.141", "serverPort": 27017, "awaited": true, "message": "Server heartbeat started"}
2025-03-13 16:32:46,167 - pymongo.topology - DEBUG - {"topologyId": {"$oid": "67d2c23fe6e4bbe630b5e5bc"}, "driverConnectionId": 1, "serverConnectionId": 13221, "serverHost": "3.144.134.141", "serverPort": 27017, "awaited": true, "durationMS": 10000.0, "reply": "{\"isWritablePrimary\": true, \"topologyVersion\": {\"processId\": {\"$oid\": \"67b7e5814f77c1a87c56d054\"}}, \"maxBsonObjectSize\": 16777216, \"maxMessageSizeBytes\": 48000000, \"maxWriteBatchSize\": 100000, \"localTime\": {\"$date\": \"2025-03-13T11:32:46.171Z\"}, \"logicalSessionTimeoutMinutes\": 30, \"connectionId\": 13221, \"maxWireVersion\": 25, \"ok\": 1.0}", "message": "Server heartbeat succeeded"}
2025-03-13 16:32:46,167 - pymongo.topology - DEBUG - {"topologyId": {"$oid": "67d2c23fe6e4bbe630b5e5bc"}, "driverConnectionId": 1, "serverConnectionId": 13221, "serverHost": "3.144.134.141", "serverPort": 27017, "awaited": true, "message": "Server heartbeat started"}
2025-03-13 16:32:56,159 - pymongo.topology - DEBUG - {"topologyId": {"$oid": "67d2c23fe6e4bbe630b5e5bc"}, "driverConnectionId": 1, "serverConnectionId": 13221, "serverHost": "3.144.134.141", "serverPort": 27017, "awaited": true, "durationMS": 9984.000000000378, "reply": "{\"isWritablePrimary\": true, \"topologyVersion\": {\"processId\": {\"$oid\": \"67b7e5814f77c1a87c56d054\"}}, \"maxBsonObjectSize\": 16777216, \"maxMessageSizeBytes\": 48000000, \"maxWriteBatchSize\": 100000, \"localTime\": {\"$date\": \"2025-03-13T11:32:56.172Z\"}, \"logicalSessionTimeoutMinutes\": 30, \"connectionId\": 13221, \"maxWireVersion\": 25, \"ok\": 1.0}", "message": "Server heartbeat succeeded"}
2025-03-13 16:32:56,160 - pymongo.topology - DEBUG - {"topologyId": {"$oid": "67d2c23fe6e4bbe630b5e5bc"}, "driverConnectionId": 1, "serverConnectionId": 13221, "serverHost": "3.144.134.141", "serverPort": 27017, "awaited": true, "message": "Server heartbeat started"}
2025-03-13 16:33:37,520 - numexpr.utils - INFO - Note: NumExpr detected 12 cores but "NUMEXPR_MAX_THREADS" not set, so enforcing safe limit of 8.
2025-03-13 16:33:37,520 - numexpr.utils - INFO - NumExpr defaulting to 8 threads.
2025-03-13 16:33:38,930 - matplotlib - DEBUG - matplotlib data path: C:\Users\msameerakram\AppData\Local\anaconda3\Lib\site-packages\matplotlib\mpl-data
2025-03-13 16:33:38,937 - matplotlib - DEBUG - CONFIGDIR=C:\Users\msameerakram\.matplotlib
2025-03-13 16:33:38,938 - matplotlib - DEBUG - interactive is False
2025-03-13 16:33:38,939 - matplotlib - DEBUG - platform is win32
2025-03-13 16:33:39,007 - matplotlib - DEBUG - CACHEDIR=C:\Users\msameerakram\.matplotlib
2025-03-13 16:33:39,010 - matplotlib.font_manager - DEBUG - Using fontManager instance from C:\Users\msameerakram\.matplotlib\fontlist-v390.json
2025-03-13 16:33:42,159 - numexpr.utils - INFO - Note: NumExpr detected 12 cores but "NUMEXPR_MAX_THREADS" not set, so enforcing safe limit of 8.
2025-03-13 16:33:42,159 - numexpr.utils - INFO - NumExpr defaulting to 8 threads.
2025-03-13 16:33:43,784 - matplotlib - DEBUG - matplotlib data path: C:\Users\msameerakram\AppData\Local\anaconda3\Lib\site-packages\matplotlib\mpl-data
2025-03-13 16:33:43,790 - matplotlib - DEBUG - CONFIGDIR=C:\Users\msameerakram\.matplotlib
2025-03-13 16:33:43,791 - matplotlib - DEBUG - interactive is False
2025-03-13 16:33:43,793 - matplotlib - DEBUG - platform is win32
2025-03-13 16:33:43,877 - matplotlib - DEBUG - CACHEDIR=C:\Users\msameerakram\.matplotlib
2025-03-13 16:33:43,881 - matplotlib.font_manager - DEBUG - Using fontManager instance from C:\Users\msameerakram\.matplotlib\fontlist-v390.json
2025-03-13 16:33:45,648 - asyncio - DEBUG - Using selector: SelectSelector
2025-03-13 16:33:45,689 - pymongo.topology - DEBUG - {"topologyId": {"$oid": "67d2c299b0c037f7572fb17e"}, "message": "Starting topology monitoring"}
2025-03-13 16:33:45,690 - pymongo.topology - DEBUG - {"topologyId": {"$oid": "67d2c299b0c037f7572fb17e"}, "previousDescription": "<TopologyDescription id: 67d2c299b0c037f7572fb17e, topology_type: Unknown, servers: []>", "newDescription": "<TopologyDescription id: 67d2c299b0c037f7572fb17e, topology_type: Unknown, servers: [<ServerDescription ('3.144.134.141', 27017) server_type: Unknown, rtt: None>]>", "message": "Topology description changed"}
2025-03-13 16:33:45,690 - pymongo.topology - DEBUG - {"topologyId": {"$oid": "67d2c299b0c037f7572fb17e"}, "serverHost": "3.144.134.141", "serverPort": 27017, "message": "Starting server monitoring"}
2025-03-13 16:33:45,691 - pymongo.connection - DEBUG - {"clientId": {"$oid": "67d2c299b0c037f7572fb17e"}, "message": "Connection pool created", "serverHost": "3.144.134.141", "serverPort": 27017}
2025-03-13 16:33:45,693 - pymongo.serverSelection - DEBUG - {"message": "Server selection started", "selector": "Primary()", "operation": "ping", "topologyDescription": "<TopologyDescription id: 67d2c299b0c037f7572fb17e, topology_type: Unknown, servers: [<ServerDescription ('3.144.134.141', 27017) server_type: Unknown, rtt: None>]>", "clientId": {"$oid": "67d2c299b0c037f7572fb17e"}}
2025-03-13 16:33:45,694 - pymongo.serverSelection - DEBUG - {"message": "Waiting for suitable server to become available", "selector": "Primary()", "operation": "ping", "topologyDescription": "<TopologyDescription id: 67d2c299b0c037f7572fb17e, topology_type: Unknown, servers: [<ServerDescription ('3.144.134.141', 27017) server_type: Unknown, rtt: None>]>", "clientId": {"$oid": "67d2c299b0c037f7572fb17e"}, "remainingTimeMS": 30}
2025-03-13 16:33:46,003 - pymongo.topology - DEBUG - {"topologyId": {"$oid": "67d2c299b0c037f7572fb17e"}, "driverConnectionId": 1, "serverHost": "3.144.134.141", "serverPort": 27017, "awaited": false, "message": "Server heartbeat started"}
2025-03-13 16:33:46,319 - pymongo.topology - DEBUG - {"topologyId": {"$oid": "67d2c299b0c037f7572fb17e"}, "driverConnectionId": 1, "serverConnectionId": 13224, "serverHost": "3.144.134.141", "serverPort": 27017, "awaited": false, "durationMS": 311.99999999807915, "reply": "{\"helloOk\": true, \"ismaster\": true, \"topologyVersion\": {\"processId\": {\"$oid\": \"67b7e5814f77c1a87c56d054\"}}, \"maxBsonObjectSize\": 16777216, \"maxMessageSizeBytes\": 48000000, \"maxWriteBatchSize\": 100000, \"localTime\": {\"$date\": \"2025-03-13T11:33:46.308Z\"}, \"logicalSessionTimeoutMinutes\": 30, \"connectionId\": 13224, \"maxWireVersion\": 25, \"ok\": 1.0}", "message": "Server heartbeat succeeded"}
2025-03-13 16:33:46,319 - pymongo.connection - DEBUG - {"clientId": {"$oid": "67d2c299b0c037f7572fb17e"}, "message": "Connection pool ready", "serverHost": "3.144.134.141", "serverPort": 27017}
2025-03-13 16:33:46,319 - pymongo.topology - DEBUG - {"topologyId": {"$oid": "67d2c299b0c037f7572fb17e"}, "previousDescription": "<TopologyDescription id: 67d2c299b0c037f7572fb17e, topology_type: Unknown, servers: [<ServerDescription ('3.144.134.141', 27017) server_type: Unknown, rtt: None>]>", "newDescription": "<TopologyDescription id: 67d2c299b0c037f7572fb17e, topology_type: Single, servers: [<ServerDescription ('3.144.134.141', 27017) server_type: Standalone, rtt: 0.31199999999807915>]>", "message": "Topology description changed"}
2025-03-13 16:33:46,320 - pymongo.serverSelection - DEBUG - {"message": "Server selection succeeded", "selector": "Primary()", "operation": "ping", "topologyDescription": "<TopologyDescription id: 67d2c299b0c037f7572fb17e, topology_type: Single, servers: [<ServerDescription ('3.144.134.141', 27017) server_type: Standalone, rtt: 0.31199999999807915>]>", "clientId": {"$oid": "67d2c299b0c037f7572fb17e"}, "serverHost": "3.144.134.141", "serverPort": 27017}
2025-03-13 16:33:46,321 - pymongo.connection - DEBUG - {"clientId": {"$oid": "67d2c299b0c037f7572fb17e"}, "message": "Connection checkout started", "serverHost": "3.144.134.141", "serverPort": 27017}
2025-03-13 16:33:46,321 - pymongo.topology - DEBUG - {"topologyId": {"$oid": "67d2c299b0c037f7572fb17e"}, "driverConnectionId": 1, "serverConnectionId": 13224, "serverHost": "3.144.134.141", "serverPort": 27017, "awaited": true, "message": "Server heartbeat started"}
2025-03-13 16:33:46,321 - pymongo.connection - DEBUG - {"clientId": {"$oid": "67d2c299b0c037f7572fb17e"}, "message": "Connection created", "serverHost": "3.144.134.141", "serverPort": 27017, "driverConnectionId": 1}
2025-03-13 16:33:47,245 - pymongo.connection - DEBUG - {"clientId": {"$oid": "67d2c299b0c037f7572fb17e"}, "message": "Connection ready", "serverHost": "3.144.134.141", "serverPort": 27017, "driverConnectionId": 1, "durationMS": 0.6090000000003783}
2025-03-13 16:33:47,246 - pymongo.connection - DEBUG - {"clientId": {"$oid": "67d2c299b0c037f7572fb17e"}, "message": "Connection checked out", "serverHost": "3.144.134.141", "serverPort": 27017, "driverConnectionId": 1, "durationMS": 0.9219999999986612}
2025-03-13 16:33:47,246 - pymongo.command - DEBUG - {"clientId": {"$oid": "67d2c299b0c037f7572fb17e"}, "message": "Command started", "command": "{\"ping\": 1, \"lsid\": {\"id\": {\"$binary\": {\"base64\": \"dCdmkbP0Td2gYKL01xzfNg==\", \"subType\": \"04\"}}}, \"$db\": \"opal_server\"}", "commandName": "ping", "databaseName": "opal_server", "requestId": 6334, "operationId": 6334, "driverConnectionId": 1, "serverConnectionId": 13226, "serverHost": "3.144.134.141", "serverPort": 27017}
2025-03-13 16:33:47,541 - pymongo.command - DEBUG - {"clientId": {"$oid": "67d2c299b0c037f7572fb17e"}, "message": "Command succeeded", "durationMS": 294.33, "reply": "{\"ok\": 1.0}", "commandName": "ping", "databaseName": "opal_server", "requestId": 6334, "operationId": 6334, "driverConnectionId": 1, "serverConnectionId": 13226, "serverHost": "3.144.134.141", "serverPort": 27017}
2025-03-13 16:33:47,542 - pymongo.connection - DEBUG - {"clientId": {"$oid": "67d2c299b0c037f7572fb17e"}, "message": "Connection checked in", "serverHost": "3.144.134.141", "serverPort": 27017, "driverConnectionId": 1}
2025-03-13 16:33:52,874 - app.services.predictive_analytics - INFO - Starting driver risk prediction for last 3 days
2025-03-13 16:33:52,874 - app.db.repositories.data_repository - INFO - Fetching driver risk data for past 3 days
2025-03-13 16:33:52,875 - app.db.repositories.data_repository - DEBUG - Executing pipeline: [{'$match': {'event_time': {'$gte': datetime.datetime(2025, 3, 10, 16, 33, 52, 875185)}}}, {'$group': {'_id': '$driver_uuid', 'name': {'$first': '$driver_name'}, 'violation_count': {'$sum': 1}, 'violation_types': {'$addToSet': '$violation_type'}, 'avg_severity': {'$avg': {'$switch': {'branches': [{'case': {'$eq': ['$severity', 'HIGH']}, 'then': 3}, {'case': {'$eq': ['$severity', 'MEDIUM']}, 'then': 2}], 'default': 1}}}, 'last_violation': {'$max': '$event_time'}, 'max_speed': {'$max': '$telemetry.speed'}, 'vehicle_license': {'$first': '$vehicle_license'}}}, {'$sort': {'violation_count': -1}}]
2025-03-13 16:33:52,876 - pymongo.serverSelection - DEBUG - {"message": "Server selection started", "selector": "Primary()", "operation": "aggregate", "topologyDescription": "<TopologyDescription id: 67d2c299b0c037f7572fb17e, topology_type: Single, servers: [<ServerDescription ('3.144.134.141', 27017) server_type: Standalone, rtt: 0.31199999999807915>]>", "clientId": {"$oid": "67d2c299b0c037f7572fb17e"}}
2025-03-13 16:33:52,877 - pymongo.serverSelection - DEBUG - {"message": "Server selection succeeded", "selector": "Primary()", "operation": "aggregate", "topologyDescription": "<TopologyDescription id: 67d2c299b0c037f7572fb17e, topology_type: Single, servers: [<ServerDescription ('3.144.134.141', 27017) server_type: Standalone, rtt: 0.31199999999807915>]>", "clientId": {"$oid": "67d2c299b0c037f7572fb17e"}, "serverHost": "3.144.134.141", "serverPort": 27017}
2025-03-13 16:33:52,880 - pymongo.connection - DEBUG - {"clientId": {"$oid": "67d2c299b0c037f7572fb17e"}, "message": "Connection checkout started", "serverHost": "3.144.134.141", "serverPort": 27017}
2025-03-13 16:33:52,881 - pymongo.connection - DEBUG - {"clientId": {"$oid": "67d2c299b0c037f7572fb17e"}, "message": "Connection checked out", "serverHost": "3.144.134.141", "serverPort": 27017, "driverConnectionId": 1, "durationMS": 0.0}
2025-03-13 16:33:52,882 - pymongo.command - DEBUG - {"clientId": {"$oid": "67d2c299b0c037f7572fb17e"}, "message": "Command started", "command": "{\"aggregate\": \"violations\", \"pipeline\": [{\"$match\": {\"event_time\": {\"$gte\": {\"$date\": \"2025-03-10T16:33:52.875Z\"}}}}, {\"$group\": {\"_id\": \"$driver_uuid\", \"name\": {\"$first\": \"$driver_name\"}, \"violation_count\": {\"$sum\": 1}, \"violation_types\": {\"$addToSet\": \"$violation_type\"}, \"avg_severity\": {\"$avg\": {\"$switch\": {\"branches\": [{\"case\": {\"$eq\": [\"$severity\", \"HIGH\"]}, \"then\": 3}, {\"case\": {\"$eq\": [\"$severity\", \"MEDIUM\"]}, \"then\": 2}], \"default\": 1}}}, \"last_violation\": {\"$max\": \"$event_time\"}, \"max_speed\": {\"$max\": \"$telemetry.speed\"}, \"vehicle_license\": {\"$first\": \"$vehicle_license\"}}}, {\"$sort\": {\"violation_count\": -1}}], \"lsid\": {\"id\": {\"$binary\": {\"base64\": \"dCdmkbP0Td2gYKL01xzfNg==\", \"subType\": \"04\"}}}, \"$db\": \"opal_server\"}", "commandName": "aggregate", "databaseName": "opal_server", "requestId": 26500, "operationId": 26500, "driverConnectionId": 1, "serverConnectionId": 13226, "serverHost": "3.144.134.141", "serverPort": 27017}
2025-03-13 16:33:53,522 - pymongo.command - DEBUG - {"clientId": {"$oid": "67d2c299b0c037f7572fb17e"}, "message": "Command succeeded", "durationMS": 639.8620000000001, "reply": "{\"cursor\": {\"firstBatch\": [{\"_id\": \"unknown\", \"name\": \"Unknown\", \"violation_count\": 958, \"violation_types\": [\"SPEED_HIGH\", \"SPEED_LOW\", \"SPEED_MEDIUM\"], \"avg_severity\": 1.953027139874739, \"last_violation\": {\"$date\": \"2025-03-13T11:30:01.013Z\"}, \"vehicle_license\": \"860665050647824\"}, {\"_id\": \"7463170a-de85-4c5d-a77b-b506d939aca1\", \"name\": \"GUL ZAMAN #94378054\", \"violation_count\": 237, \"violation_types\": [\"SPEED_LOW\", \"SPEED_MEDIUM\"], \"avg_severity\": 1.59915611814346, \"last_violation\": {\"$date\": \"2025-03-13T06:31:35.314Z\"}, \"vehicle_license\": \"1075MR\"}, {\"_id\": \"3dd80f61-5ed1-4038-b3a8-5d2e37759893\", \"name\": \"DALER SINGH\", \"violation_count\": 223, \"violation_types\": [\"SPEED_LOW\", \"SPEED_MEDIUM\"], \"avg_severity\": 1.5381165919282511, \"last_violation\": {\"$date\": \"2025-03-11T15:04:20.407Z\"}, \"vehicle_license\": \"1313YD\"}, {\"_id\": \"10009164\", \"name\": \"Unknown\", \"violation_count\": 209, \"violation_types\": [\"SPEED_HIGH\", \"SPEED_LOW\", \"SPEED_MEDIUM\"], \"avg_severity\": 1.7129186602870814, \"last_viola...", "commandName": "aggregate", "databaseName": "opal_server", "requestId": 26500, "operationId": 26500, "driverConnectionId": 1, "serverConnectionId": 13226, "serverHost": "3.144.134.141", "serverPort": 27017}
2025-03-13 16:33:53,526 - pymongo.connection - DEBUG - {"clientId": {"$oid": "67d2c299b0c037f7572fb17e"}, "message": "Connection checked in", "serverHost": "3.144.134.141", "serverPort": 27017, "driverConnectionId": 1}
2025-03-13 16:33:53,527 - pymongo.serverSelection - DEBUG - {"message": "Server selection started", "selector": "<function any_server_selector at 0x0000020A27168720>", "operation": "getMore", "topologyDescription": "<TopologyDescription id: 67d2c299b0c037f7572fb17e, topology_type: Single, servers: [<ServerDescription ('3.144.134.141', 27017) server_type: Standalone, rtt: 0.31199999999807915>]>", "clientId": {"$oid": "67d2c299b0c037f7572fb17e"}}
2025-03-13 16:33:53,528 - pymongo.serverSelection - DEBUG - {"message": "Server selection succeeded", "selector": "<function any_server_selector at 0x0000020A27168720>", "operation": "getMore", "topologyDescription": "<TopologyDescription id: 67d2c299b0c037f7572fb17e, topology_type: Single, servers: [<ServerDescription ('3.144.134.141', 27017) server_type: Standalone, rtt: 0.31199999999807915>]>", "clientId": {"$oid": "67d2c299b0c037f7572fb17e"}, "serverHost": "3.144.134.141", "serverPort": 27017}
2025-03-13 16:33:53,528 - pymongo.connection - DEBUG - {"clientId": {"$oid": "67d2c299b0c037f7572fb17e"}, "message": "Connection checkout started", "serverHost": "3.144.134.141", "serverPort": 27017}
2025-03-13 16:33:53,528 - pymongo.connection - DEBUG - {"clientId": {"$oid": "67d2c299b0c037f7572fb17e"}, "message": "Connection checked out", "serverHost": "3.144.134.141", "serverPort": 27017, "driverConnectionId": 1, "durationMS": 0.0}
2025-03-13 16:33:53,529 - pymongo.command - DEBUG - {"clientId": {"$oid": "67d2c299b0c037f7572fb17e"}, "message": "Command started", "command": "{\"getMore\": 5913428894910886102, \"collection\": \"violations\", \"lsid\": {\"id\": {\"$binary\": {\"base64\": \"dCdmkbP0Td2gYKL01xzfNg==\", \"subType\": \"04\"}}}, \"$db\": \"opal_server\"}", "commandName": "getMore", "databaseName": "opal_server", "requestId": 19169, "operationId": 19169, "driverConnectionId": 1, "serverConnectionId": 13226, "serverHost": "3.144.134.141", "serverPort": 27017}
2025-03-13 16:33:53,825 - pymongo.command - DEBUG - {"clientId": {"$oid": "67d2c299b0c037f7572fb17e"}, "message": "Command succeeded", "durationMS": 295.815, "reply": "{\"cursor\": {\"nextBatch\": [{\"_id\": \"10162055\", \"name\": \"Unknown\", \"violation_count\": 1, \"violation_types\": [\"SPEED_HIGH\"], \"avg_severity\": 3.0, \"last_violation\": {\"$date\": \"2025-03-11T15:43:20.683Z\"}, \"vehicle_license\": \"860665050686715\"}], \"ns\": \"opal_server.violations\"}, \"ok\": 1.0}", "commandName": "getMore", "databaseName": "opal_server", "requestId": 19169, "operationId": 19169, "driverConnectionId": 1, "serverConnectionId": 13226, "serverHost": "3.144.134.141", "serverPort": 27017}
2025-03-13 16:33:53,825 - pymongo.connection - DEBUG - {"clientId": {"$oid": "67d2c299b0c037f7572fb17e"}, "message": "Connection checked in", "serverHost": "3.144.134.141", "serverPort": 27017, "driverConnectionId": 1}
2025-03-13 16:33:53,826 - app.db.repositories.data_repository - INFO - Retrieved stats for 102 drivers
2025-03-13 16:33:53,826 - app.services.predictive_analytics - INFO - Retrieved 102 driver records
2025-03-13 16:33:53,826 - app.services.predictive_analytics - INFO - Successfully processed 9 drivers
2025-03-13 16:33:56,647 - pymongo.topology - DEBUG - {"topologyId": {"$oid": "67d2c299b0c037f7572fb17e"}, "driverConnectionId": 1, "serverConnectionId": 13224, "serverHost": "3.144.134.141", "serverPort": 27017, "awaited": true, "durationMS": 10312.999999998283, "reply": "{\"isWritablePrimary\": true, \"topologyVersion\": {\"processId\": {\"$oid\": \"67b7e5814f77c1a87c56d054\"}}, \"maxBsonObjectSize\": 16777216, \"maxMessageSizeBytes\": 48000000, \"maxWriteBatchSize\": 100000, \"localTime\": {\"$date\": \"2025-03-13T11:33:56.636Z\"}, \"logicalSessionTimeoutMinutes\": 30, \"connectionId\": 13224, \"maxWireVersion\": 25, \"ok\": 1.0}", "message": "Server heartbeat succeeded"}
2025-03-13 16:33:56,648 - pymongo.topology - DEBUG - {"topologyId": {"$oid": "67d2c299b0c037f7572fb17e"}, "driverConnectionId": 1, "serverConnectionId": 13224, "serverHost": "3.144.134.141", "serverPort": 27017, "awaited": true, "message": "Server heartbeat started"}
2025-03-13 16:34:06,641 - pymongo.topology - DEBUG - {"topologyId": {"$oid": "67d2c299b0c037f7572fb17e"}, "driverConnectionId": 1, "serverConnectionId": 13224, "serverHost": "3.144.134.141", "serverPort": 27017, "awaited": true, "durationMS": 9985.000000000582, "reply": "{\"isWritablePrimary\": true, \"topologyVersion\": {\"processId\": {\"$oid\": \"67b7e5814f77c1a87c56d054\"}}, \"maxBsonObjectSize\": 16777216, \"maxMessageSizeBytes\": 48000000, \"maxWriteBatchSize\": 100000, \"localTime\": {\"$date\": \"2025-03-13T11:34:06.638Z\"}, \"logicalSessionTimeoutMinutes\": 30, \"connectionId\": 13224, \"maxWireVersion\": 25, \"ok\": 1.0}", "message": "Server heartbeat succeeded"}
2025-03-13 16:34:06,642 - pymongo.topology - DEBUG - {"topologyId": {"$oid": "67d2c299b0c037f7572fb17e"}, "driverConnectionId": 1, "serverConnectionId": 13224, "serverHost": "3.144.134.141", "serverPort": 27017, "awaited": true, "message": "Server heartbeat started"}
2025-03-13 16:34:16,656 - pymongo.topology - DEBUG - {"topologyId": {"$oid": "67d2c299b0c037f7572fb17e"}, "driverConnectionId": 1, "serverConnectionId": 13224, "serverHost": "3.144.134.141", "serverPort": 27017, "awaited": true, "durationMS": 10014.999999999418, "reply": "{\"isWritablePrimary\": true, \"topologyVersion\": {\"processId\": {\"$oid\": \"67b7e5814f77c1a87c56d054\"}}, \"maxBsonObjectSize\": 16777216, \"maxMessageSizeBytes\": 48000000, \"maxWriteBatchSize\": 100000, \"localTime\": {\"$date\": \"2025-03-13T11:34:16.648Z\"}, \"logicalSessionTimeoutMinutes\": 30, \"connectionId\": 13224, \"maxWireVersion\": 25, \"ok\": 1.0}", "message": "Server heartbeat succeeded"}
2025-03-13 16:34:16,656 - pymongo.topology - DEBUG - {"topologyId": {"$oid": "67d2c299b0c037f7572fb17e"}, "driverConnectionId": 1, "serverConnectionId": 13224, "serverHost": "3.144.134.141", "serverPort": 27017, "awaited": true, "message": "Server heartbeat started"}
2025-03-13 16:34:26,623 - pymongo.topology - DEBUG - {"topologyId": {"$oid": "67d2c299b0c037f7572fb17e"}, "driverConnectionId": 1, "serverConnectionId": 13224, "serverHost": "3.144.134.141", "serverPort": 27017, "awaited": true, "durationMS": 9969.00000000096, "reply": "{\"isWritablePrimary\": true, \"topologyVersion\": {\"processId\": {\"$oid\": \"67b7e5814f77c1a87c56d054\"}}, \"maxBsonObjectSize\": 16777216, \"maxMessageSizeBytes\": 48000000, \"maxWriteBatchSize\": 100000, \"localTime\": {\"$date\": \"2025-03-13T11:34:26.648Z\"}, \"logicalSessionTimeoutMinutes\": 30, \"connectionId\": 13224, \"maxWireVersion\": 25, \"ok\": 1.0}", "message": "Server heartbeat succeeded"}
2025-03-13 16:34:26,624 - pymongo.topology - DEBUG - {"topologyId": {"$oid": "67d2c299b0c037f7572fb17e"}, "driverConnectionId": 1, "serverConnectionId": 13224, "serverHost": "3.144.134.141", "serverPort": 27017, "awaited": true, "message": "Server heartbeat started"}
2025-03-13 16:34:36,711 - pymongo.topology - DEBUG - {"topologyId": {"$oid": "67d2c299b0c037f7572fb17e"}, "driverConnectionId": 1, "serverConnectionId": 13224, "serverHost": "3.144.134.141", "serverPort": 27017, "awaited": true, "durationMS": 10094.00000000096, "reply": "{\"isWritablePrimary\": true, \"topologyVersion\": {\"processId\": {\"$oid\": \"67b7e5814f77c1a87c56d054\"}}, \"maxBsonObjectSize\": 16777216, \"maxMessageSizeBytes\": 48000000, \"maxWriteBatchSize\": 100000, \"localTime\": {\"$date\": \"2025-03-13T11:34:36.657Z\"}, \"logicalSessionTimeoutMinutes\": 30, \"connectionId\": 13224, \"maxWireVersion\": 25, \"ok\": 1.0}", "message": "Server heartbeat succeeded"}
2025-03-13 16:34:36,713 - pymongo.topology - DEBUG - {"topologyId": {"$oid": "67d2c299b0c037f7572fb17e"}, "driverConnectionId": 1, "serverConnectionId": 13224, "serverHost": "3.144.134.141", "serverPort": 27017, "awaited": true, "message": "Server heartbeat started"}
2025-03-13 16:34:46,657 - pymongo.topology - DEBUG - {"topologyId": {"$oid": "67d2c299b0c037f7572fb17e"}, "driverConnectionId": 1, "serverConnectionId": 13224, "serverHost": "3.144.134.141", "serverPort": 27017, "awaited": true, "durationMS": 9936.99999999808, "reply": "{\"isWritablePrimary\": true, \"topologyVersion\": {\"processId\": {\"$oid\": \"67b7e5814f77c1a87c56d054\"}}, \"maxBsonObjectSize\": 16777216, \"maxMessageSizeBytes\": 48000000, \"maxWriteBatchSize\": 100000, \"localTime\": {\"$date\": \"2025-03-13T11:34:46.658Z\"}, \"logicalSessionTimeoutMinutes\": 30, \"connectionId\": 13224, \"maxWireVersion\": 25, \"ok\": 1.0}", "message": "Server heartbeat succeeded"}
2025-03-13 16:34:46,657 - pymongo.topology - DEBUG - {"topologyId": {"$oid": "67d2c299b0c037f7572fb17e"}, "driverConnectionId": 1, "serverConnectionId": 13224, "serverHost": "3.144.134.141", "serverPort": 27017, "awaited": true, "message": "Server heartbeat started"}
2025-03-13 16:34:56,648 - pymongo.topology - DEBUG - {"topologyId": {"$oid": "67d2c299b0c037f7572fb17e"}, "driverConnectionId": 1, "serverConnectionId": 13224, "serverHost": "3.144.134.141", "serverPort": 27017, "awaited": true, "durationMS": 10000.0, "reply": "{\"isWritablePrimary\": true, \"topologyVersion\": {\"processId\": {\"$oid\": \"67b7e5814f77c1a87c56d054\"}}, \"maxBsonObjectSize\": 16777216, \"maxMessageSizeBytes\": 48000000, \"maxWriteBatchSize\": 100000, \"localTime\": {\"$date\": \"2025-03-13T11:34:56.658Z\"}, \"logicalSessionTimeoutMinutes\": 30, \"connectionId\": 13224, \"maxWireVersion\": 25, \"ok\": 1.0}", "message": "Server heartbeat succeeded"}
2025-03-13 16:34:56,648 - pymongo.topology - DEBUG - {"topologyId": {"$oid": "67d2c299b0c037f7572fb17e"}, "driverConnectionId": 1, "serverConnectionId": 13224, "serverHost": "3.144.134.141", "serverPort": 27017, "awaited": true, "message": "Server heartbeat started"}
2025-03-13 16:35:06,678 - pymongo.topology - DEBUG - {"topologyId": {"$oid": "67d2c299b0c037f7572fb17e"}, "driverConnectionId": 1, "serverConnectionId": 13224, "serverHost": "3.144.134.141", "serverPort": 27017, "awaited": true, "durationMS": 10015.999999999622, "reply": "{\"isWritablePrimary\": true, \"topologyVersion\": {\"processId\": {\"$oid\": \"67b7e5814f77c1a87c56d054\"}}, \"maxBsonObjectSize\": 16777216, \"maxMessageSizeBytes\": 48000000, \"maxWriteBatchSize\": 100000, \"localTime\": {\"$date\": \"2025-03-13T11:35:06.667Z\"}, \"logicalSessionTimeoutMinutes\": 30, \"connectionId\": 13224, \"maxWireVersion\": 25, \"ok\": 1.0}", "message": "Server heartbeat succeeded"}
2025-03-13 16:35:06,680 - pymongo.topology - DEBUG - {"topologyId": {"$oid": "67d2c299b0c037f7572fb17e"}, "driverConnectionId": 1, "serverConnectionId": 13224, "serverHost": "3.144.134.141", "serverPort": 27017, "awaited": true, "message": "Server heartbeat started"}
2025-03-13 16:35:16,675 - pymongo.topology - DEBUG - {"topologyId": {"$oid": "67d2c299b0c037f7572fb17e"}, "driverConnectionId": 1, "serverConnectionId": 13224, "serverHost": "3.144.134.141", "serverPort": 27017, "awaited": true, "durationMS": 9985.000000000582, "reply": "{\"isWritablePrimary\": true, \"topologyVersion\": {\"processId\": {\"$oid\": \"67b7e5814f77c1a87c56d054\"}}, \"maxBsonObjectSize\": 16777216, \"maxMessageSizeBytes\": 48000000, \"maxWriteBatchSize\": 100000, \"localTime\": {\"$date\": \"2025-03-13T11:35:16.668Z\"}, \"logicalSessionTimeoutMinutes\": 30, \"connectionId\": 13224, \"maxWireVersion\": 25, \"ok\": 1.0}", "message": "Server heartbeat succeeded"}
2025-03-13 16:35:16,676 - pymongo.topology - DEBUG - {"topologyId": {"$oid": "67d2c299b0c037f7572fb17e"}, "driverConnectionId": 1, "serverConnectionId": 13224, "serverHost": "3.144.134.141", "serverPort": 27017, "awaited": true, "message": "Server heartbeat started"}
2025-03-13 16:35:26,689 - pymongo.topology - DEBUG - {"topologyId": {"$oid": "67d2c299b0c037f7572fb17e"}, "driverConnectionId": 1, "serverConnectionId": 13224, "serverHost": "3.144.134.141", "serverPort": 27017, "awaited": true, "durationMS": 10014.999999999418, "reply": "{\"isWritablePrimary\": true, \"topologyVersion\": {\"processId\": {\"$oid\": \"67b7e5814f77c1a87c56d054\"}}, \"maxBsonObjectSize\": 16777216, \"maxMessageSizeBytes\": 48000000, \"maxWriteBatchSize\": 100000, \"localTime\": {\"$date\": \"2025-03-13T11:35:26.669Z\"}, \"logicalSessionTimeoutMinutes\": 30, \"connectionId\": 13224, \"maxWireVersion\": 25, \"ok\": 1.0}", "message": "Server heartbeat succeeded"}
2025-03-13 16:35:26,690 - pymongo.topology - DEBUG - {"topologyId": {"$oid": "67d2c299b0c037f7572fb17e"}, "driverConnectionId": 1, "serverConnectionId": 13224, "serverHost": "3.144.134.141", "serverPort": 27017, "awaited": true, "message": "Server heartbeat started"}
2025-03-13 16:35:36,680 - pymongo.topology - DEBUG - {"topologyId": {"$oid": "67d2c299b0c037f7572fb17e"}, "driverConnectionId": 1, "serverConnectionId": 13224, "serverHost": "3.144.134.141", "serverPort": 27017, "awaited": true, "durationMS": 10000.0, "reply": "{\"isWritablePrimary\": true, \"topologyVersion\": {\"processId\": {\"$oid\": \"67b7e5814f77c1a87c56d054\"}}, \"maxBsonObjectSize\": 16777216, \"maxMessageSizeBytes\": 48000000, \"maxWriteBatchSize\": 100000, \"localTime\": {\"$date\": \"2025-03-13T11:35:36.670Z\"}, \"logicalSessionTimeoutMinutes\": 30, \"connectionId\": 13224, \"maxWireVersion\": 25, \"ok\": 1.0}", "message": "Server heartbeat succeeded"}
2025-03-13 16:35:36,681 - pymongo.topology - DEBUG - {"topologyId": {"$oid": "67d2c299b0c037f7572fb17e"}, "driverConnectionId": 1, "serverConnectionId": 13224, "serverHost": "3.144.134.141", "serverPort": 27017, "awaited": true, "message": "Server heartbeat started"}
2025-03-13 16:35:46,691 - pymongo.topology - DEBUG - {"topologyId": {"$oid": "67d2c299b0c037f7572fb17e"}, "driverConnectionId": 1, "serverConnectionId": 13224, "serverHost": "3.144.134.141", "serverPort": 27017, "awaited": true, "durationMS": 10000.0, "reply": "{\"isWritablePrimary\": true, \"topologyVersion\": {\"processId\": {\"$oid\": \"67b7e5814f77c1a87c56d054\"}}, \"maxBsonObjectSize\": 16777216, \"maxMessageSizeBytes\": 48000000, \"maxWriteBatchSize\": 100000, \"localTime\": {\"$date\": \"2025-03-13T11:35:46.673Z\"}, \"logicalSessionTimeoutMinutes\": 30, \"connectionId\": 13224, \"maxWireVersion\": 25, \"ok\": 1.0}", "message": "Server heartbeat succeeded"}
2025-03-13 16:35:46,692 - pymongo.topology - DEBUG - {"topologyId": {"$oid": "67d2c299b0c037f7572fb17e"}, "driverConnectionId": 1, "serverConnectionId": 13224, "serverHost": "3.144.134.141", "serverPort": 27017, "awaited": true, "message": "Server heartbeat started"}
2025-03-13 16:35:56,688 - pymongo.topology - DEBUG - {"topologyId": {"$oid": "67d2c299b0c037f7572fb17e"}, "driverConnectionId": 1, "serverConnectionId": 13224, "serverHost": "3.144.134.141", "serverPort": 27017, "awaited": true, "durationMS": 10000.0, "reply": "{\"isWritablePrimary\": true, \"topologyVersion\": {\"processId\": {\"$oid\": \"67b7e5814f77c1a87c56d054\"}}, \"maxBsonObjectSize\": 16777216, \"maxMessageSizeBytes\": 48000000, \"maxWriteBatchSize\": 100000, \"localTime\": {\"$date\": \"2025-03-13T11:35:56.674Z\"}, \"logicalSessionTimeoutMinutes\": 30, \"connectionId\": 13224, \"maxWireVersion\": 25, \"ok\": 1.0}", "message": "Server heartbeat succeeded"}
2025-03-13 16:35:56,689 - pymongo.topology - DEBUG - {"topologyId": {"$oid": "67d2c299b0c037f7572fb17e"}, "driverConnectionId": 1, "serverConnectionId": 13224, "serverHost": "3.144.134.141", "serverPort": 27017, "awaited": true, "message": "Server heartbeat started"}
2025-03-13 16:36:06,616 - pymongo.topology - DEBUG - {"topologyId": {"$oid": "67d2c299b0c037f7572fb17e"}, "driverConnectionId": 1, "serverConnectionId": 13224, "serverHost": "3.144.134.141", "serverPort": 27017, "awaited": true, "durationMS": 9938.00000000192, "reply": "{\"isWritablePrimary\": true, \"topologyVersion\": {\"processId\": {\"$oid\": \"67b7e5814f77c1a87c56d054\"}}, \"maxBsonObjectSize\": 16777216, \"maxMessageSizeBytes\": 48000000, \"maxWriteBatchSize\": 100000, \"localTime\": {\"$date\": \"2025-03-13T11:36:06.675Z\"}, \"logicalSessionTimeoutMinutes\": 30, \"connectionId\": 13224, \"maxWireVersion\": 25, \"ok\": 1.0}", "message": "Server heartbeat succeeded"}
2025-03-13 16:36:06,617 - pymongo.topology - DEBUG - {"topologyId": {"$oid": "67d2c299b0c037f7572fb17e"}, "driverConnectionId": 1, "serverConnectionId": 13224, "serverHost": "3.144.134.141", "serverPort": 27017, "awaited": true, "message": "Server heartbeat started"}
2025-03-13 16:36:23,032 - numexpr.utils - INFO - Note: NumExpr detected 12 cores but "NUMEXPR_MAX_THREADS" not set, so enforcing safe limit of 8.
2025-03-13 16:36:23,033 - numexpr.utils - INFO - NumExpr defaulting to 8 threads.
2025-03-13 16:36:24,565 - matplotlib - DEBUG - matplotlib data path: C:\Users\msameerakram\AppData\Local\anaconda3\Lib\site-packages\matplotlib\mpl-data
2025-03-13 16:36:24,572 - matplotlib - DEBUG - CONFIGDIR=C:\Users\msameerakram\.matplotlib
2025-03-13 16:36:24,574 - matplotlib - DEBUG - interactive is False
2025-03-13 16:36:24,574 - matplotlib - DEBUG - platform is win32
2025-03-13 16:36:24,645 - matplotlib - DEBUG - CACHEDIR=C:\Users\msameerakram\.matplotlib
2025-03-13 16:36:24,648 - matplotlib.font_manager - DEBUG - Using fontManager instance from C:\Users\msameerakram\.matplotlib\fontlist-v390.json
2025-03-13 16:36:27,525 - numexpr.utils - INFO - Note: NumExpr detected 12 cores but "NUMEXPR_MAX_THREADS" not set, so enforcing safe limit of 8.
2025-03-13 16:36:27,525 - numexpr.utils - INFO - NumExpr defaulting to 8 threads.
2025-03-13 16:36:28,913 - matplotlib - DEBUG - matplotlib data path: C:\Users\msameerakram\AppData\Local\anaconda3\Lib\site-packages\matplotlib\mpl-data
2025-03-13 16:36:28,919 - matplotlib - DEBUG - CONFIGDIR=C:\Users\msameerakram\.matplotlib
2025-03-13 16:36:28,921 - matplotlib - DEBUG - interactive is False
2025-03-13 16:36:28,922 - matplotlib - DEBUG - platform is win32
2025-03-13 16:36:28,987 - matplotlib - DEBUG - CACHEDIR=C:\Users\msameerakram\.matplotlib
2025-03-13 16:36:28,991 - matplotlib.font_manager - DEBUG - Using fontManager instance from C:\Users\msameerakram\.matplotlib\fontlist-v390.json
2025-03-13 16:36:30,488 - asyncio - DEBUG - Using selector: SelectSelector
2025-03-13 16:36:30,528 - pymongo.topology - DEBUG - {"topologyId": {"$oid": "67d2c33eaf766b3fc9225822"}, "message": "Starting topology monitoring"}
2025-03-13 16:36:30,529 - pymongo.topology - DEBUG - {"topologyId": {"$oid": "67d2c33eaf766b3fc9225822"}, "previousDescription": "<TopologyDescription id: 67d2c33eaf766b3fc9225822, topology_type: Unknown, servers: []>", "newDescription": "<TopologyDescription id: 67d2c33eaf766b3fc9225822, topology_type: Unknown, servers: [<ServerDescription ('3.144.134.141', 27017) server_type: Unknown, rtt: None>]>", "message": "Topology description changed"}
2025-03-13 16:36:30,529 - pymongo.topology - DEBUG - {"topologyId": {"$oid": "67d2c33eaf766b3fc9225822"}, "serverHost": "3.144.134.141", "serverPort": 27017, "message": "Starting server monitoring"}
2025-03-13 16:36:30,530 - pymongo.connection - DEBUG - {"clientId": {"$oid": "67d2c33eaf766b3fc9225822"}, "message": "Connection pool created", "serverHost": "3.144.134.141", "serverPort": 27017}
2025-03-13 16:36:30,532 - pymongo.serverSelection - DEBUG - {"message": "Server selection started", "selector": "Primary()", "operation": "ping", "topologyDescription": "<TopologyDescription id: 67d2c33eaf766b3fc9225822, topology_type: Unknown, servers: [<ServerDescription ('3.144.134.141', 27017) server_type: Unknown, rtt: None>]>", "clientId": {"$oid": "67d2c33eaf766b3fc9225822"}}
2025-03-13 16:36:30,532 - pymongo.serverSelection - DEBUG - {"message": "Waiting for suitable server to become available", "selector": "Primary()", "operation": "ping", "topologyDescription": "<TopologyDescription id: 67d2c33eaf766b3fc9225822, topology_type: Unknown, servers: [<ServerDescription ('3.144.134.141', 27017) server_type: Unknown, rtt: None>]>", "clientId": {"$oid": "67d2c33eaf766b3fc9225822"}, "remainingTimeMS": 30}
2025-03-13 16:36:30,836 - pymongo.topology - DEBUG - {"topologyId": {"$oid": "67d2c33eaf766b3fc9225822"}, "driverConnectionId": 1, "serverHost": "3.144.134.141", "serverPort": 27017, "awaited": false, "message": "Server heartbeat started"}
2025-03-13 16:36:31,142 - pymongo.topology - DEBUG - {"topologyId": {"$oid": "67d2c33eaf766b3fc9225822"}, "driverConnectionId": 1, "serverConnectionId": 13227, "serverHost": "3.144.134.141", "serverPort": 27017, "awaited": false, "durationMS": 296.9999999986612, "reply": "{\"helloOk\": true, \"ismaster\": true, \"topologyVersion\": {\"processId\": {\"$oid\": \"67b7e5814f77c1a87c56d054\"}}, \"maxBsonObjectSize\": 16777216, \"maxMessageSizeBytes\": 48000000, \"maxWriteBatchSize\": 100000, \"localTime\": {\"$date\": \"2025-03-13T11:36:31.139Z\"}, \"logicalSessionTimeoutMinutes\": 30, \"connectionId\": 13227, \"maxWireVersion\": 25, \"ok\": 1.0}", "message": "Server heartbeat succeeded"}
2025-03-13 16:36:31,144 - pymongo.connection - DEBUG - {"clientId": {"$oid": "67d2c33eaf766b3fc9225822"}, "message": "Connection pool ready", "serverHost": "3.144.134.141", "serverPort": 27017}
2025-03-13 16:36:31,144 - pymongo.topology - DEBUG - {"topologyId": {"$oid": "67d2c33eaf766b3fc9225822"}, "previousDescription": "<TopologyDescription id: 67d2c33eaf766b3fc9225822, topology_type: Unknown, servers: [<ServerDescription ('3.144.134.141', 27017) server_type: Unknown, rtt: None>]>", "newDescription": "<TopologyDescription id: 67d2c33eaf766b3fc9225822, topology_type: Single, servers: [<ServerDescription ('3.144.134.141', 27017) server_type: Standalone, rtt: 0.2969999999986612>]>", "message": "Topology description changed"}
2025-03-13 16:36:31,145 - pymongo.serverSelection - DEBUG - {"message": "Server selection succeeded", "selector": "Primary()", "operation": "ping", "topologyDescription": "<TopologyDescription id: 67d2c33eaf766b3fc9225822, topology_type: Single, servers: [<ServerDescription ('3.144.134.141', 27017) server_type: Standalone, rtt: 0.2969999999986612>]>", "clientId": {"$oid": "67d2c33eaf766b3fc9225822"}, "serverHost": "3.144.134.141", "serverPort": 27017}
2025-03-13 16:36:31,147 - pymongo.topology - DEBUG - {"topologyId": {"$oid": "67d2c33eaf766b3fc9225822"}, "driverConnectionId": 1, "serverConnectionId": 13227, "serverHost": "3.144.134.141", "serverPort": 27017, "awaited": true, "message": "Server heartbeat started"}
2025-03-13 16:36:31,147 - pymongo.connection - DEBUG - {"clientId": {"$oid": "67d2c33eaf766b3fc9225822"}, "message": "Connection checkout started", "serverHost": "3.144.134.141", "serverPort": 27017}
2025-03-13 16:36:31,148 - pymongo.connection - DEBUG - {"clientId": {"$oid": "67d2c33eaf766b3fc9225822"}, "message": "Connection created", "serverHost": "3.144.134.141", "serverPort": 27017, "driverConnectionId": 1}
2025-03-13 16:36:32,057 - pymongo.connection - DEBUG - {"clientId": {"$oid": "67d2c33eaf766b3fc9225822"}, "message": "Connection ready", "serverHost": "3.144.134.141", "serverPort": 27017, "driverConnectionId": 1, "durationMS": 0.6089999999967404}
2025-03-13 16:36:32,057 - pymongo.connection - DEBUG - {"clientId": {"$oid": "67d2c33eaf766b3fc9225822"}, "message": "Connection checked out", "serverHost": "3.144.134.141", "serverPort": 27017, "driverConnectionId": 1, "durationMS": 0.9209999999984575}
2025-03-13 16:36:32,058 - pymongo.command - DEBUG - {"clientId": {"$oid": "67d2c33eaf766b3fc9225822"}, "message": "Command started", "command": "{\"ping\": 1, \"lsid\": {\"id\": {\"$binary\": {\"base64\": \"TrkSffKIR0aavVoHQe0w/g==\", \"subType\": \"04\"}}}, \"$db\": \"opal_server\"}", "commandName": "ping", "databaseName": "opal_server", "requestId": 6334, "operationId": 6334, "driverConnectionId": 1, "serverConnectionId": 13228, "serverHost": "3.144.134.141", "serverPort": 27017}
2025-03-13 16:36:32,360 - pymongo.command - DEBUG - {"clientId": {"$oid": "67d2c33eaf766b3fc9225822"}, "message": "Command succeeded", "durationMS": 302.551, "reply": "{\"ok\": 1.0}", "commandName": "ping", "databaseName": "opal_server", "requestId": 6334, "operationId": 6334, "driverConnectionId": 1, "serverConnectionId": 13228, "serverHost": "3.144.134.141", "serverPort": 27017}
2025-03-13 16:36:32,360 - pymongo.connection - DEBUG - {"clientId": {"$oid": "67d2c33eaf766b3fc9225822"}, "message": "Connection checked in", "serverHost": "3.144.134.141", "serverPort": 27017, "driverConnectionId": 1}
2025-03-13 16:36:33,446 - app.services.predictive_analytics - INFO - Starting driver risk prediction for last 3 days
2025-03-13 16:36:33,447 - app.db.repositories.data_repository - INFO - Fetching driver risk data for past 3 days
2025-03-13 16:36:33,447 - app.db.repositories.data_repository - DEBUG - Executing pipeline: [{'$match': {'event_time': {'$gte': datetime.datetime(2025, 3, 10, 16, 36, 33, 447253)}}}, {'$group': {'_id': '$driver_uuid', 'name': {'$first': '$driver_name'}, 'violation_count': {'$sum': 1}, 'violation_types': {'$addToSet': '$violation_type'}, 'avg_severity': {'$avg': {'$switch': {'branches': [{'case': {'$eq': ['$severity', 'HIGH']}, 'then': 3}, {'case': {'$eq': ['$severity', 'MEDIUM']}, 'then': 2}], 'default': 1}}}, 'last_violation': {'$max': '$event_time'}, 'max_speed': {'$max': '$telemetry.speed'}, 'vehicle_license': {'$first': '$vehicle_license'}}}, {'$sort': {'violation_count': -1}}]
2025-03-13 16:36:33,448 - pymongo.serverSelection - DEBUG - {"message": "Server selection started", "selector": "Primary()", "operation": "aggregate", "topologyDescription": "<TopologyDescription id: 67d2c33eaf766b3fc9225822, topology_type: Single, servers: [<ServerDescription ('3.144.134.141', 27017) server_type: Standalone, rtt: 0.2969999999986612>]>", "clientId": {"$oid": "67d2c33eaf766b3fc9225822"}}
2025-03-13 16:36:33,449 - pymongo.serverSelection - DEBUG - {"message": "Server selection succeeded", "selector": "Primary()", "operation": "aggregate", "topologyDescription": "<TopologyDescription id: 67d2c33eaf766b3fc9225822, topology_type: Single, servers: [<ServerDescription ('3.144.134.141', 27017) server_type: Standalone, rtt: 0.2969999999986612>]>", "clientId": {"$oid": "67d2c33eaf766b3fc9225822"}, "serverHost": "3.144.134.141", "serverPort": 27017}
2025-03-13 16:36:33,449 - pymongo.connection - DEBUG - {"clientId": {"$oid": "67d2c33eaf766b3fc9225822"}, "message": "Connection checkout started", "serverHost": "3.144.134.141", "serverPort": 27017}
2025-03-13 16:36:33,450 - pymongo.connection - DEBUG - {"clientId": {"$oid": "67d2c33eaf766b3fc9225822"}, "message": "Connection checked out", "serverHost": "3.144.134.141", "serverPort": 27017, "driverConnectionId": 1, "durationMS": 0.0}
2025-03-13 16:36:33,450 - pymongo.command - DEBUG - {"clientId": {"$oid": "67d2c33eaf766b3fc9225822"}, "message": "Command started", "command": "{\"aggregate\": \"violations\", \"pipeline\": [{\"$match\": {\"event_time\": {\"$gte\": {\"$date\": \"2025-03-10T16:36:33.447Z\"}}}}, {\"$group\": {\"_id\": \"$driver_uuid\", \"name\": {\"$first\": \"$driver_name\"}, \"violation_count\": {\"$sum\": 1}, \"violation_types\": {\"$addToSet\": \"$violation_type\"}, \"avg_severity\": {\"$avg\": {\"$switch\": {\"branches\": [{\"case\": {\"$eq\": [\"$severity\", \"HIGH\"]}, \"then\": 3}, {\"case\": {\"$eq\": [\"$severity\", \"MEDIUM\"]}, \"then\": 2}], \"default\": 1}}}, \"last_violation\": {\"$max\": \"$event_time\"}, \"max_speed\": {\"$max\": \"$telemetry.speed\"}, \"vehicle_license\": {\"$first\": \"$vehicle_license\"}}}, {\"$sort\": {\"violation_count\": -1}}], \"lsid\": {\"id\": {\"$binary\": {\"base64\": \"TrkSffKIR0aavVoHQe0w/g==\", \"subType\": \"04\"}}}, \"$db\": \"opal_server\"}", "commandName": "aggregate", "databaseName": "opal_server", "requestId": 26500, "operationId": 26500, "driverConnectionId": 1, "serverConnectionId": 13228, "serverHost": "3.144.134.141", "serverPort": 27017}
2025-03-13 16:36:34,066 - pymongo.command - DEBUG - {"clientId": {"$oid": "67d2c33eaf766b3fc9225822"}, "message": "Command succeeded", "durationMS": 616.173, "reply": "{\"cursor\": {\"firstBatch\": [{\"_id\": \"unknown\", \"name\": \"Unknown\", \"violation_count\": 955, \"violation_types\": [\"SPEED_MEDIUM\", \"SPEED_LOW\", \"SPEED_HIGH\"], \"avg_severity\": 1.9507853403141362, \"last_violation\": {\"$date\": \"2025-03-13T11:30:01.013Z\"}, \"vehicle_license\": \"860665050647824\"}, {\"_id\": \"7463170a-de85-4c5d-a77b-b506d939aca1\", \"name\": \"GUL ZAMAN #94378054\", \"violation_count\": 237, \"violation_types\": [\"SPEED_LOW\", \"SPEED_MEDIUM\"], \"avg_severity\": 1.59915611814346, \"last_violation\": {\"$date\": \"2025-03-13T06:31:35.314Z\"}, \"vehicle_license\": \"1075MR\"}, {\"_id\": \"3dd80f61-5ed1-4038-b3a8-5d2e37759893\", \"name\": \"DALER SINGH\", \"violation_count\": 221, \"violation_types\": [\"SPEED_MEDIUM\", \"SPEED_LOW\"], \"avg_severity\": 1.5384615384615385, \"last_violation\": {\"$date\": \"2025-03-11T15:04:20.407Z\"}, \"vehicle_license\": \"1313YD\"}, {\"_id\": \"10009164\", \"name\": \"Unknown\", \"violation_count\": 209, \"violation_types\": [\"SPEED_LOW\", \"SPEED_HIGH\", \"SPEED_MEDIUM\"], \"avg_severity\": 1.7129186602870814, \"last_viol...", "commandName": "aggregate", "databaseName": "opal_server", "requestId": 26500, "operationId": 26500, "driverConnectionId": 1, "serverConnectionId": 13228, "serverHost": "3.144.134.141", "serverPort": 27017}
2025-03-13 16:36:34,068 - pymongo.connection - DEBUG - {"clientId": {"$oid": "67d2c33eaf766b3fc9225822"}, "message": "Connection checked in", "serverHost": "3.144.134.141", "serverPort": 27017, "driverConnectionId": 1}
2025-03-13 16:36:34,069 - pymongo.serverSelection - DEBUG - {"message": "Server selection started", "selector": "<function any_server_selector at 0x000002898CE68720>", "operation": "getMore", "topologyDescription": "<TopologyDescription id: 67d2c33eaf766b3fc9225822, topology_type: Single, servers: [<ServerDescription ('3.144.134.141', 27017) server_type: Standalone, rtt: 0.2969999999986612>]>", "clientId": {"$oid": "67d2c33eaf766b3fc9225822"}}
2025-03-13 16:36:34,070 - pymongo.serverSelection - DEBUG - {"message": "Server selection succeeded", "selector": "<function any_server_selector at 0x000002898CE68720>", "operation": "getMore", "topologyDescription": "<TopologyDescription id: 67d2c33eaf766b3fc9225822, topology_type: Single, servers: [<ServerDescription ('3.144.134.141', 27017) server_type: Standalone, rtt: 0.2969999999986612>]>", "clientId": {"$oid": "67d2c33eaf766b3fc9225822"}, "serverHost": "3.144.134.141", "serverPort": 27017}
2025-03-13 16:36:34,071 - pymongo.connection - DEBUG - {"clientId": {"$oid": "67d2c33eaf766b3fc9225822"}, "message": "Connection checkout started", "serverHost": "3.144.134.141", "serverPort": 27017}
2025-03-13 16:36:34,071 - pymongo.connection - DEBUG - {"clientId": {"$oid": "67d2c33eaf766b3fc9225822"}, "message": "Connection checked out", "serverHost": "3.144.134.141", "serverPort": 27017, "driverConnectionId": 1, "durationMS": 0.0}
2025-03-13 16:36:34,071 - pymongo.command - DEBUG - {"clientId": {"$oid": "67d2c33eaf766b3fc9225822"}, "message": "Command started", "command": "{\"getMore\": 1650628879434191237, \"collection\": \"violations\", \"lsid\": {\"id\": {\"$binary\": {\"base64\": \"TrkSffKIR0aavVoHQe0w/g==\", \"subType\": \"04\"}}}, \"$db\": \"opal_server\"}", "commandName": "getMore", "databaseName": "opal_server", "requestId": 19169, "operationId": 19169, "driverConnectionId": 1, "serverConnectionId": 13228, "serverHost": "3.144.134.141", "serverPort": 27017}
2025-03-13 16:36:34,382 - pymongo.command - DEBUG - {"clientId": {"$oid": "67d2c33eaf766b3fc9225822"}, "message": "Command succeeded", "durationMS": 311.423, "reply": "{\"cursor\": {\"nextBatch\": [{\"_id\": \"10162055\", \"name\": \"Unknown\", \"violation_count\": 1, \"violation_types\": [\"SPEED_HIGH\"], \"avg_severity\": 3.0, \"last_violation\": {\"$date\": \"2025-03-11T15:43:20.683Z\"}, \"vehicle_license\": \"860665050686715\"}], \"ns\": \"opal_server.violations\"}, \"ok\": 1.0}", "commandName": "getMore", "databaseName": "opal_server", "requestId": 19169, "operationId": 19169, "driverConnectionId": 1, "serverConnectionId": 13228, "serverHost": "3.144.134.141", "serverPort": 27017}
2025-03-13 16:36:34,383 - pymongo.connection - DEBUG - {"clientId": {"$oid": "67d2c33eaf766b3fc9225822"}, "message": "Connection checked in", "serverHost": "3.144.134.141", "serverPort": 27017, "driverConnectionId": 1}
2025-03-13 16:36:34,384 - app.db.repositories.data_repository - INFO - Retrieved stats for 102 drivers
2025-03-13 16:36:34,384 - app.services.predictive_analytics - INFO - Retrieved 102 driver records
2025-03-13 16:36:34,384 - app.services.predictive_analytics - INFO - Successfully processed 9 drivers
2025-03-13 16:36:41,446 - pymongo.topology - DEBUG - {"topologyId": {"$oid": "67d2c33eaf766b3fc9225822"}, "driverConnectionId": 1, "serverConnectionId": 13227, "serverHost": "3.144.134.141", "serverPort": 27017, "awaited": true, "durationMS": 10312.000000001717, "reply": "{\"isWritablePrimary\": true, \"topologyVersion\": {\"processId\": {\"$oid\": \"67b7e5814f77c1a87c56d054\"}}, \"maxBsonObjectSize\": 16777216, \"maxMessageSizeBytes\": 48000000, \"maxWriteBatchSize\": 100000, \"localTime\": {\"$date\": \"2025-03-13T11:36:41.451Z\"}, \"logicalSessionTimeoutMinutes\": 30, \"connectionId\": 13227, \"maxWireVersion\": 25, \"ok\": 1.0}", "message": "Server heartbeat succeeded"}
2025-03-13 16:36:41,447 - pymongo.topology - DEBUG - {"topologyId": {"$oid": "67d2c33eaf766b3fc9225822"}, "driverConnectionId": 1, "serverConnectionId": 13227, "serverHost": "3.144.134.141", "serverPort": 27017, "awaited": true, "message": "Server heartbeat started"}
2025-03-13 16:36:51,492 - pymongo.topology - DEBUG - {"topologyId": {"$oid": "67d2c33eaf766b3fc9225822"}, "driverConnectionId": 1, "serverConnectionId": 13227, "serverHost": "3.144.134.141", "serverPort": 27017, "awaited": true, "durationMS": 10046.999999998661, "reply": "{\"isWritablePrimary\": true, \"topologyVersion\": {\"processId\": {\"$oid\": \"67b7e5814f77c1a87c56d054\"}}, \"maxBsonObjectSize\": 16777216, \"maxMessageSizeBytes\": 48000000, \"maxWriteBatchSize\": 100000, \"localTime\": {\"$date\": \"2025-03-13T11:36:51.451Z\"}, \"logicalSessionTimeoutMinutes\": 30, \"connectionId\": 13227, \"maxWireVersion\": 25, \"ok\": 1.0}", "message": "Server heartbeat succeeded"}
2025-03-13 16:36:51,492 - pymongo.topology - DEBUG - {"topologyId": {"$oid": "67d2c33eaf766b3fc9225822"}, "driverConnectionId": 1, "serverConnectionId": 13227, "serverHost": "3.144.134.141", "serverPort": 27017, "awaited": true, "message": "Server heartbeat started"}
2025-03-13 16:37:01,446 - pymongo.topology - DEBUG - {"topologyId": {"$oid": "67d2c33eaf766b3fc9225822"}, "driverConnectionId": 1, "serverConnectionId": 13227, "serverHost": "3.144.134.141", "serverPort": 27017, "awaited": true, "durationMS": 9953.000000001339, "reply": "{\"isWritablePrimary\": true, \"topologyVersion\": {\"processId\": {\"$oid\": \"67b7e5814f77c1a87c56d054\"}}, \"maxBsonObjectSize\": 16777216, \"maxMessageSizeBytes\": 48000000, \"maxWriteBatchSize\": 100000, \"localTime\": {\"$date\": \"2025-03-13T11:37:01.453Z\"}, \"logicalSessionTimeoutMinutes\": 30, \"connectionId\": 13227, \"maxWireVersion\": 25, \"ok\": 1.0}", "message": "Server heartbeat succeeded"}
2025-03-13 16:37:01,447 - pymongo.topology - DEBUG - {"topologyId": {"$oid": "67d2c33eaf766b3fc9225822"}, "driverConnectionId": 1, "serverConnectionId": 13227, "serverHost": "3.144.134.141", "serverPort": 27017, "awaited": true, "message": "Server heartbeat started"}
2025-03-13 16:37:11,455 - pymongo.topology - DEBUG - {"topologyId": {"$oid": "67d2c33eaf766b3fc9225822"}, "driverConnectionId": 1, "serverConnectionId": 13227, "serverHost": "3.144.134.141", "serverPort": 27017, "awaited": true, "durationMS": 10000.0, "reply": "{\"isWritablePrimary\": true, \"topologyVersion\": {\"processId\": {\"$oid\": \"67b7e5814f77c1a87c56d054\"}}, \"maxBsonObjectSize\": 16777216, \"maxMessageSizeBytes\": 48000000, \"maxWriteBatchSize\": 100000, \"localTime\": {\"$date\": \"2025-03-13T11:37:11.460Z\"}, \"logicalSessionTimeoutMinutes\": 30, \"connectionId\": 13227, \"maxWireVersion\": 25, \"ok\": 1.0}", "message": "Server heartbeat succeeded"}
2025-03-13 16:37:11,456 - pymongo.topology - DEBUG - {"topologyId": {"$oid": "67d2c33eaf766b3fc9225822"}, "driverConnectionId": 1, "serverConnectionId": 13227, "serverHost": "3.144.134.141", "serverPort": 27017, "awaited": true, "message": "Server heartbeat started"}
2025-03-13 16:37:21,483 - pymongo.topology - DEBUG - {"topologyId": {"$oid": "67d2c33eaf766b3fc9225822"}, "driverConnectionId": 1, "serverConnectionId": 13227, "serverHost": "3.144.134.141", "serverPort": 27017, "awaited": true, "durationMS": 10030.99999999904, "reply": "{\"isWritablePrimary\": true, \"topologyVersion\": {\"processId\": {\"$oid\": \"67b7e5814f77c1a87c56d054\"}}, \"maxBsonObjectSize\": 16777216, \"maxMessageSizeBytes\": 48000000, \"maxWriteBatchSize\": 100000, \"localTime\": {\"$date\": \"2025-03-13T11:37:21.461Z\"}, \"logicalSessionTimeoutMinutes\": 30, \"connectionId\": 13227, \"maxWireVersion\": 25, \"ok\": 1.0}", "message": "Server heartbeat succeeded"}
2025-03-13 16:37:21,484 - pymongo.topology - DEBUG - {"topologyId": {"$oid": "67d2c33eaf766b3fc9225822"}, "driverConnectionId": 1, "serverConnectionId": 13227, "serverHost": "3.144.134.141", "serverPort": 27017, "awaited": true, "message": "Server heartbeat started"}
2025-03-13 16:37:32,138 - pymongo.topology - DEBUG - {"topologyId": {"$oid": "67d2c33eaf766b3fc9225822"}, "driverConnectionId": 1, "serverConnectionId": 13227, "serverHost": "3.144.134.141", "serverPort": 27017, "awaited": true, "durationMS": 10656.999999999243, "reply": "{\"isWritablePrimary\": true, \"topologyVersion\": {\"processId\": {\"$oid\": \"67b7e5814f77c1a87c56d054\"}}, \"maxBsonObjectSize\": 16777216, \"maxMessageSizeBytes\": 48000000, \"maxWriteBatchSize\": 100000, \"localTime\": {\"$date\": \"2025-03-13T11:37:31.462Z\"}, \"logicalSessionTimeoutMinutes\": 30, \"connectionId\": 13227, \"maxWireVersion\": 25, \"ok\": 1.0}", "message": "Server heartbeat succeeded"}
2025-03-13 16:37:32,138 - pymongo.topology - DEBUG - {"topologyId": {"$oid": "67d2c33eaf766b3fc9225822"}, "driverConnectionId": 1, "serverConnectionId": 13227, "serverHost": "3.144.134.141", "serverPort": 27017, "awaited": true, "message": "Server heartbeat started"}
2025-03-13 16:37:41,401 - pymongo.topology - DEBUG - {"topologyId": {"$oid": "67d2c33eaf766b3fc9225822"}, "driverConnectionId": 1, "serverConnectionId": 13227, "serverHost": "3.144.134.141", "serverPort": 27017, "awaited": true, "durationMS": 9264.999999999418, "reply": "{\"isWritablePrimary\": true, \"topologyVersion\": {\"processId\": {\"$oid\": \"67b7e5814f77c1a87c56d054\"}}, \"maxBsonObjectSize\": 16777216, \"maxMessageSizeBytes\": 48000000, \"maxWriteBatchSize\": 100000, \"localTime\": {\"$date\": \"2025-03-13T11:37:41.462Z\"}, \"logicalSessionTimeoutMinutes\": 30, \"connectionId\": 13227, \"maxWireVersion\": 25, \"ok\": 1.0}", "message": "Server heartbeat succeeded"}
2025-03-13 16:37:41,402 - pymongo.topology - DEBUG - {"topologyId": {"$oid": "67d2c33eaf766b3fc9225822"}, "driverConnectionId": 1, "serverConnectionId": 13227, "serverHost": "3.144.134.141", "serverPort": 27017, "awaited": true, "message": "Server heartbeat started"}
2025-03-13 16:37:51,405 - pymongo.topology - DEBUG - {"topologyId": {"$oid": "67d2c33eaf766b3fc9225822"}, "driverConnectionId": 1, "serverConnectionId": 13227, "serverHost": "3.144.134.141", "serverPort": 27017, "awaited": true, "durationMS": 10000.0, "reply": "{\"isWritablePrimary\": true, \"topologyVersion\": {\"processId\": {\"$oid\": \"67b7e5814f77c1a87c56d054\"}}, \"maxBsonObjectSize\": 16777216, \"maxMessageSizeBytes\": 48000000, \"maxWriteBatchSize\": 100000, \"localTime\": {\"$date\": \"2025-03-13T11:37:51.465Z\"}, \"logicalSessionTimeoutMinutes\": 30, \"connectionId\": 13227, \"maxWireVersion\": 25, \"ok\": 1.0}", "message": "Server heartbeat succeeded"}
2025-03-13 16:37:51,406 - pymongo.topology - DEBUG - {"topologyId": {"$oid": "67d2c33eaf766b3fc9225822"}, "driverConnectionId": 1, "serverConnectionId": 13227, "serverHost": "3.144.134.141", "serverPort": 27017, "awaited": true, "message": "Server heartbeat started"}
2025-03-13 16:38:01,413 - pymongo.topology - DEBUG - {"topologyId": {"$oid": "67d2c33eaf766b3fc9225822"}, "driverConnectionId": 1, "serverConnectionId": 13227, "serverHost": "3.144.134.141", "serverPort": 27017, "awaited": true, "durationMS": 10015.999999999622, "reply": "{\"isWritablePrimary\": true, \"topologyVersion\": {\"processId\": {\"$oid\": \"67b7e5814f77c1a87c56d054\"}}, \"maxBsonObjectSize\": 16777216, \"maxMessageSizeBytes\": 48000000, \"maxWriteBatchSize\": 100000, \"localTime\": {\"$date\": \"2025-03-13T11:38:01.474Z\"}, \"logicalSessionTimeoutMinutes\": 30, \"connectionId\": 13227, \"maxWireVersion\": 25, \"ok\": 1.0}", "message": "Server heartbeat succeeded"}
2025-03-13 16:38:01,414 - pymongo.topology - DEBUG - {"topologyId": {"$oid": "67d2c33eaf766b3fc9225822"}, "driverConnectionId": 1, "serverConnectionId": 13227, "serverHost": "3.144.134.141", "serverPort": 27017, "awaited": true, "message": "Server heartbeat started"}
2025-03-13 16:38:11,423 - pymongo.topology - DEBUG - {"topologyId": {"$oid": "67d2c33eaf766b3fc9225822"}, "driverConnectionId": 1, "serverConnectionId": 13227, "serverHost": "3.144.134.141", "serverPort": 27017, "awaited": true, "durationMS": 10000.0, "reply": "{\"isWritablePrimary\": true, \"topologyVersion\": {\"processId\": {\"$oid\": \"67b7e5814f77c1a87c56d054\"}}, \"maxBsonObjectSize\": 16777216, \"maxMessageSizeBytes\": 48000000, \"maxWriteBatchSize\": 100000, \"localTime\": {\"$date\": \"2025-03-13T11:38:11.483Z\"}, \"logicalSessionTimeoutMinutes\": 30, \"connectionId\": 13227, \"maxWireVersion\": 25, \"ok\": 1.0}", "message": "Server heartbeat succeeded"}
2025-03-13 16:38:11,423 - pymongo.topology - DEBUG - {"topologyId": {"$oid": "67d2c33eaf766b3fc9225822"}, "driverConnectionId": 1, "serverConnectionId": 13227, "serverHost": "3.144.134.141", "serverPort": 27017, "awaited": true, "message": "Server heartbeat started"}
2025-03-13 16:38:21,501 - pymongo.topology - DEBUG - {"topologyId": {"$oid": "67d2c33eaf766b3fc9225822"}, "driverConnectionId": 1, "serverConnectionId": 13227, "serverHost": "3.144.134.141", "serverPort": 27017, "awaited": true, "durationMS": 10078.000000001339, "reply": "{\"isWritablePrimary\": true, \"topologyVersion\": {\"processId\": {\"$oid\": \"67b7e5814f77c1a87c56d054\"}}, \"maxBsonObjectSize\": 16777216, \"maxMessageSizeBytes\": 48000000, \"maxWriteBatchSize\": 100000, \"localTime\": {\"$date\": \"2025-03-13T11:38:21.484Z\"}, \"logicalSessionTimeoutMinutes\": 30, \"connectionId\": 13227, \"maxWireVersion\": 25, \"ok\": 1.0}", "message": "Server heartbeat succeeded"}
2025-03-13 16:38:21,501 - pymongo.topology - DEBUG - {"topologyId": {"$oid": "67d2c33eaf766b3fc9225822"}, "driverConnectionId": 1, "serverConnectionId": 13227, "serverHost": "3.144.134.141", "serverPort": 27017, "awaited": true, "message": "Server heartbeat started"}
2025-03-13 16:38:31,488 - pymongo.topology - DEBUG - {"topologyId": {"$oid": "67d2c33eaf766b3fc9225822"}, "driverConnectionId": 1, "serverConnectionId": 13227, "serverHost": "3.144.134.141", "serverPort": 27017, "awaited": true, "durationMS": 9984.000000000378, "reply": "{\"isWritablePrimary\": true, \"topologyVersion\": {\"processId\": {\"$oid\": \"67b7e5814f77c1a87c56d054\"}}, \"maxBsonObjectSize\": 16777216, \"maxMessageSizeBytes\": 48000000, \"maxWriteBatchSize\": 100000, \"localTime\": {\"$date\": \"2025-03-13T11:38:31.488Z\"}, \"logicalSessionTimeoutMinutes\": 30, \"connectionId\": 13227, \"maxWireVersion\": 25, \"ok\": 1.0}", "message": "Server heartbeat succeeded"}
2025-03-13 16:38:31,489 - pymongo.topology - DEBUG - {"topologyId": {"$oid": "67d2c33eaf766b3fc9225822"}, "driverConnectionId": 1, "serverConnectionId": 13227, "serverHost": "3.144.134.141", "serverPort": 27017, "awaited": true, "message": "Server heartbeat started"}
2025-03-13 16:38:41,494 - pymongo.topology - DEBUG - {"topologyId": {"$oid": "67d2c33eaf766b3fc9225822"}, "driverConnectionId": 1, "serverConnectionId": 13227, "serverHost": "3.144.134.141", "serverPort": 27017, "awaited": true, "durationMS": 10015.999999999622, "reply": "{\"isWritablePrimary\": true, \"topologyVersion\": {\"processId\": {\"$oid\": \"67b7e5814f77c1a87c56d054\"}}, \"maxBsonObjectSize\": 16777216, \"maxMessageSizeBytes\": 48000000, \"maxWriteBatchSize\": 100000, \"localTime\": {\"$date\": \"2025-03-13T11:38:41.489Z\"}, \"logicalSessionTimeoutMinutes\": 30, \"connectionId\": 13227, \"maxWireVersion\": 25, \"ok\": 1.0}", "message": "Server heartbeat succeeded"}
2025-03-13 16:38:41,494 - pymongo.topology - DEBUG - {"topologyId": {"$oid": "67d2c33eaf766b3fc9225822"}, "driverConnectionId": 1, "serverConnectionId": 13227, "serverHost": "3.144.134.141", "serverPort": 27017, "awaited": true, "message": "Server heartbeat started"}
2025-03-13 16:38:51,520 - pymongo.topology - DEBUG - {"topologyId": {"$oid": "67d2c33eaf766b3fc9225822"}, "driverConnectionId": 1, "serverConnectionId": 13227, "serverHost": "3.144.134.141", "serverPort": 27017, "awaited": true, "durationMS": 10015.999999999622, "reply": "{\"isWritablePrimary\": true, \"topologyVersion\": {\"processId\": {\"$oid\": \"67b7e5814f77c1a87c56d054\"}}, \"maxBsonObjectSize\": 16777216, \"maxMessageSizeBytes\": 48000000, \"maxWriteBatchSize\": 100000, \"localTime\": {\"$date\": \"2025-03-13T11:38:51.495Z\"}, \"logicalSessionTimeoutMinutes\": 30, \"connectionId\": 13227, \"maxWireVersion\": 25, \"ok\": 1.0}", "message": "Server heartbeat succeeded"}
2025-03-13 16:38:51,520 - pymongo.topology - DEBUG - {"topologyId": {"$oid": "67d2c33eaf766b3fc9225822"}, "driverConnectionId": 1, "serverConnectionId": 13227, "serverHost": "3.144.134.141", "serverPort": 27017, "awaited": true, "message": "Server heartbeat started"}
2025-03-13 16:39:01,516 - pymongo.topology - DEBUG - {"topologyId": {"$oid": "67d2c33eaf766b3fc9225822"}, "driverConnectionId": 1, "serverConnectionId": 13227, "serverHost": "3.144.134.141", "serverPort": 27017, "awaited": true, "durationMS": 10000.0, "reply": "{\"isWritablePrimary\": true, \"topologyVersion\": {\"processId\": {\"$oid\": \"67b7e5814f77c1a87c56d054\"}}, \"maxBsonObjectSize\": 16777216, \"maxMessageSizeBytes\": 48000000, \"maxWriteBatchSize\": 100000, \"localTime\": {\"$date\": \"2025-03-13T11:39:01.497Z\"}, \"logicalSessionTimeoutMinutes\": 30, \"connectionId\": 13227, \"maxWireVersion\": 25, \"ok\": 1.0}", "message": "Server heartbeat succeeded"}
2025-03-13 16:39:01,516 - pymongo.topology - DEBUG - {"topologyId": {"$oid": "67d2c33eaf766b3fc9225822"}, "driverConnectionId": 1, "serverConnectionId": 13227, "serverHost": "3.144.134.141", "serverPort": 27017, "awaited": true, "message": "Server heartbeat started"}
2025-03-13 16:39:11,502 - pymongo.topology - DEBUG - {"topologyId": {"$oid": "67d2c33eaf766b3fc9225822"}, "driverConnectionId": 1, "serverConnectionId": 13227, "serverHost": "3.144.134.141", "serverPort": 27017, "awaited": true, "durationMS": 9984.000000000378, "reply": "{\"isWritablePrimary\": true, \"topologyVersion\": {\"processId\": {\"$oid\": \"67b7e5814f77c1a87c56d054\"}}, \"maxBsonObjectSize\": 16777216, \"maxMessageSizeBytes\": 48000000, \"maxWriteBatchSize\": 100000, \"localTime\": {\"$date\": \"2025-03-13T11:39:11.498Z\"}, \"logicalSessionTimeoutMinutes\": 30, \"connectionId\": 13227, \"maxWireVersion\": 25, \"ok\": 1.0}", "message": "Server heartbeat succeeded"}
2025-03-13 16:39:11,503 - pymongo.topology - DEBUG - {"topologyId": {"$oid": "67d2c33eaf766b3fc9225822"}, "driverConnectionId": 1, "serverConnectionId": 13227, "serverHost": "3.144.134.141", "serverPort": 27017, "awaited": true, "message": "Server heartbeat started"}
2025-03-13 16:39:21,438 - pymongo.topology - DEBUG - {"topologyId": {"$oid": "67d2c33eaf766b3fc9225822"}, "driverConnectionId": 1, "serverConnectionId": 13227, "serverHost": "3.144.134.141", "serverPort": 27017, "awaited": true, "durationMS": 9936.99999999808, "reply": "{\"isWritablePrimary\": true, \"topologyVersion\": {\"processId\": {\"$oid\": \"67b7e5814f77c1a87c56d054\"}}, \"maxBsonObjectSize\": 16777216, \"maxMessageSizeBytes\": 48000000, \"maxWriteBatchSize\": 100000, \"localTime\": {\"$date\": \"2025-03-13T11:39:21.499Z\"}, \"logicalSessionTimeoutMinutes\": 30, \"connectionId\": 13227, \"maxWireVersion\": 25, \"ok\": 1.0}", "message": "Server heartbeat succeeded"}
2025-03-13 16:39:21,438 - pymongo.topology - DEBUG - {"topologyId": {"$oid": "67d2c33eaf766b3fc9225822"}, "driverConnectionId": 1, "serverConnectionId": 13227, "serverHost": "3.144.134.141", "serverPort": 27017, "awaited": true, "message": "Server heartbeat started"}
2025-03-13 16:39:31,437 - pymongo.topology - DEBUG - {"topologyId": {"$oid": "67d2c33eaf766b3fc9225822"}, "driverConnectionId": 1, "serverConnectionId": 13227, "serverHost": "3.144.134.141", "serverPort": 27017, "awaited": true, "durationMS": 10000.0, "reply": "{\"isWritablePrimary\": true, \"topologyVersion\": {\"processId\": {\"$oid\": \"67b7e5814f77c1a87c56d054\"}}, \"maxBsonObjectSize\": 16777216, \"maxMessageSizeBytes\": 48000000, \"maxWriteBatchSize\": 100000, \"localTime\": {\"$date\": \"2025-03-13T11:39:31.499Z\"}, \"logicalSessionTimeoutMinutes\": 30, \"connectionId\": 13227, \"maxWireVersion\": 25, \"ok\": 1.0}", "message": "Server heartbeat succeeded"}
2025-03-13 16:39:31,438 - pymongo.topology - DEBUG - {"topologyId": {"$oid": "67d2c33eaf766b3fc9225822"}, "driverConnectionId": 1, "serverConnectionId": 13227, "serverHost": "3.144.134.141", "serverPort": 27017, "awaited": true, "message": "Server heartbeat started"}
2025-03-13 16:39:41,438 - pymongo.topology - DEBUG - {"topologyId": {"$oid": "67d2c33eaf766b3fc9225822"}, "driverConnectionId": 1, "serverConnectionId": 13227, "serverHost": "3.144.134.141", "serverPort": 27017, "awaited": true, "durationMS": 10000.0, "reply": "{\"isWritablePrimary\": true, \"topologyVersion\": {\"processId\": {\"$oid\": \"67b7e5814f77c1a87c56d054\"}}, \"maxBsonObjectSize\": 16777216, \"maxMessageSizeBytes\": 48000000, \"maxWriteBatchSize\": 100000, \"localTime\": {\"$date\": \"2025-03-13T11:39:41.500Z\"}, \"logicalSessionTimeoutMinutes\": 30, \"connectionId\": 13227, \"maxWireVersion\": 25, \"ok\": 1.0}", "message": "Server heartbeat succeeded"}
2025-03-13 16:39:41,439 - pymongo.topology - DEBUG - {"topologyId": {"$oid": "67d2c33eaf766b3fc9225822"}, "driverConnectionId": 1, "serverConnectionId": 13227, "serverHost": "3.144.134.141", "serverPort": 27017, "awaited": true, "message": "Server heartbeat started"}
2025-03-13 16:39:51,439 - pymongo.topology - DEBUG - {"topologyId": {"$oid": "67d2c33eaf766b3fc9225822"}, "driverConnectionId": 1, "serverConnectionId": 13227, "serverHost": "3.144.134.141", "serverPort": 27017, "awaited": true, "durationMS": 10000.0, "reply": "{\"isWritablePrimary\": true, \"topologyVersion\": {\"processId\": {\"$oid\": \"67b7e5814f77c1a87c56d054\"}}, \"maxBsonObjectSize\": 16777216, \"maxMessageSizeBytes\": 48000000, \"maxWriteBatchSize\": 100000, \"localTime\": {\"$date\": \"2025-03-13T11:39:51.501Z\"}, \"logicalSessionTimeoutMinutes\": 30, \"connectionId\": 13227, \"maxWireVersion\": 25, \"ok\": 1.0}", "message": "Server heartbeat succeeded"}
2025-03-13 16:39:51,439 - pymongo.topology - DEBUG - {"topologyId": {"$oid": "67d2c33eaf766b3fc9225822"}, "driverConnectionId": 1, "serverConnectionId": 13227, "serverHost": "3.144.134.141", "serverPort": 27017, "awaited": true, "message": "Server heartbeat started"}
2025-03-13 16:40:01,440 - pymongo.topology - DEBUG - {"topologyId": {"$oid": "67d2c33eaf766b3fc9225822"}, "driverConnectionId": 1, "serverConnectionId": 13227, "serverHost": "3.144.134.141", "serverPort": 27017, "awaited": true, "durationMS": 10000.0, "reply": "{\"isWritablePrimary\": true, \"topologyVersion\": {\"processId\": {\"$oid\": \"67b7e5814f77c1a87c56d054\"}}, \"maxBsonObjectSize\": 16777216, \"maxMessageSizeBytes\": 48000000, \"maxWriteBatchSize\": 100000, \"localTime\": {\"$date\": \"2025-03-13T11:40:01.503Z\"}, \"logicalSessionTimeoutMinutes\": 30, \"connectionId\": 13227, \"maxWireVersion\": 25, \"ok\": 1.0}", "message": "Server heartbeat succeeded"}
2025-03-13 16:40:01,441 - pymongo.topology - DEBUG - {"topologyId": {"$oid": "67d2c33eaf766b3fc9225822"}, "driverConnectionId": 1, "serverConnectionId": 13227, "serverHost": "3.144.134.141", "serverPort": 27017, "awaited": true, "message": "Server heartbeat started"}
2025-03-13 16:40:11,441 - pymongo.topology - DEBUG - {"topologyId": {"$oid": "67d2c33eaf766b3fc9225822"}, "driverConnectionId": 1, "serverConnectionId": 13227, "serverHost": "3.144.134.141", "serverPort": 27017, "awaited": true, "durationMS": 10000.0, "reply": "{\"isWritablePrimary\": true, \"topologyVersion\": {\"processId\": {\"$oid\": \"67b7e5814f77c1a87c56d054\"}}, \"maxBsonObjectSize\": 16777216, \"maxMessageSizeBytes\": 48000000, \"maxWriteBatchSize\": 100000, \"localTime\": {\"$date\": \"2025-03-13T11:40:11.504Z\"}, \"logicalSessionTimeoutMinutes\": 30, \"connectionId\": 13227, \"maxWireVersion\": 25, \"ok\": 1.0}", "message": "Server heartbeat succeeded"}
2025-03-13 16:40:11,442 - pymongo.topology - DEBUG - {"topologyId": {"$oid": "67d2c33eaf766b3fc9225822"}, "driverConnectionId": 1, "serverConnectionId": 13227, "serverHost": "3.144.134.141", "serverPort": 27017, "awaited": true, "message": "Server heartbeat started"}
2025-03-13 16:40:21,443 - pymongo.topology - DEBUG - {"topologyId": {"$oid": "67d2c33eaf766b3fc9225822"}, "driverConnectionId": 1, "serverConnectionId": 13227, "serverHost": "3.144.134.141", "serverPort": 27017, "awaited": true, "durationMS": 10000.0, "reply": "{\"isWritablePrimary\": true, \"topologyVersion\": {\"processId\": {\"$oid\": \"67b7e5814f77c1a87c56d054\"}}, \"maxBsonObjectSize\": 16777216, \"maxMessageSizeBytes\": 48000000, \"maxWriteBatchSize\": 100000, \"localTime\": {\"$date\": \"2025-03-13T11:40:21.505Z\"}, \"logicalSessionTimeoutMinutes\": 30, \"connectionId\": 13227, \"maxWireVersion\": 25, \"ok\": 1.0}", "message": "Server heartbeat succeeded"}
2025-03-13 16:40:21,443 - pymongo.topology - DEBUG - {"topologyId": {"$oid": "67d2c33eaf766b3fc9225822"}, "driverConnectionId": 1, "serverConnectionId": 13227, "serverHost": "3.144.134.141", "serverPort": 27017, "awaited": true, "message": "Server heartbeat started"}
2025-03-13 16:40:31,475 - pymongo.topology - DEBUG - {"topologyId": {"$oid": "67d2c33eaf766b3fc9225822"}, "driverConnectionId": 1, "serverConnectionId": 13227, "serverHost": "3.144.134.141", "serverPort": 27017, "awaited": true, "durationMS": 10015.999999999622, "reply": "{\"isWritablePrimary\": true, \"topologyVersion\": {\"processId\": {\"$oid\": \"67b7e5814f77c1a87c56d054\"}}, \"maxBsonObjectSize\": 16777216, \"maxMessageSizeBytes\": 48000000, \"maxWriteBatchSize\": 100000, \"localTime\": {\"$date\": \"2025-03-13T11:40:31.506Z\"}, \"logicalSessionTimeoutMinutes\": 30, \"connectionId\": 13227, \"maxWireVersion\": 25, \"ok\": 1.0}", "message": "Server heartbeat succeeded"}
2025-03-13 16:40:31,475 - pymongo.topology - DEBUG - {"topologyId": {"$oid": "67d2c33eaf766b3fc9225822"}, "driverConnectionId": 1, "serverConnectionId": 13227, "serverHost": "3.144.134.141", "serverPort": 27017, "awaited": true, "message": "Server heartbeat started"}
2025-03-13 16:40:41,444 - pymongo.topology - DEBUG - {"topologyId": {"$oid": "67d2c33eaf766b3fc9225822"}, "driverConnectionId": 1, "serverConnectionId": 13227, "serverHost": "3.144.134.141", "serverPort": 27017, "awaited": true, "durationMS": 9969.00000000096, "reply": "{\"isWritablePrimary\": true, \"topologyVersion\": {\"processId\": {\"$oid\": \"67b7e5814f77c1a87c56d054\"}}, \"maxBsonObjectSize\": 16777216, \"maxMessageSizeBytes\": 48000000, \"maxWriteBatchSize\": 100000, \"localTime\": {\"$date\": \"2025-03-13T11:40:41.507Z\"}, \"logicalSessionTimeoutMinutes\": 30, \"connectionId\": 13227, \"maxWireVersion\": 25, \"ok\": 1.0}", "message": "Server heartbeat succeeded"}
2025-03-13 16:40:41,445 - pymongo.topology - DEBUG - {"topologyId": {"$oid": "67d2c33eaf766b3fc9225822"}, "driverConnectionId": 1, "serverConnectionId": 13227, "serverHost": "3.144.134.141", "serverPort": 27017, "awaited": true, "message": "Server heartbeat started"}
2025-03-13 16:40:51,444 - pymongo.topology - DEBUG - {"topologyId": {"$oid": "67d2c33eaf766b3fc9225822"}, "driverConnectionId": 1, "serverConnectionId": 13227, "serverHost": "3.144.134.141", "serverPort": 27017, "awaited": true, "durationMS": 10000.0, "reply": "{\"isWritablePrimary\": true, \"topologyVersion\": {\"processId\": {\"$oid\": \"67b7e5814f77c1a87c56d054\"}}, \"maxBsonObjectSize\": 16777216, \"maxMessageSizeBytes\": 48000000, \"maxWriteBatchSize\": 100000, \"localTime\": {\"$date\": \"2025-03-13T11:40:51.508Z\"}, \"logicalSessionTimeoutMinutes\": 30, \"connectionId\": 13227, \"maxWireVersion\": 25, \"ok\": 1.0}", "message": "Server heartbeat succeeded"}
2025-03-13 16:40:51,446 - pymongo.topology - DEBUG - {"topologyId": {"$oid": "67d2c33eaf766b3fc9225822"}, "driverConnectionId": 1, "serverConnectionId": 13227, "serverHost": "3.144.134.141", "serverPort": 27017, "awaited": true, "message": "Server heartbeat started"}
2025-03-13 16:41:03,370 - numexpr.utils - INFO - Note: NumExpr detected 12 cores but "NUMEXPR_MAX_THREADS" not set, so enforcing safe limit of 8.
2025-03-13 16:41:03,370 - numexpr.utils - INFO - NumExpr defaulting to 8 threads.
2025-03-13 16:41:04,865 - matplotlib - DEBUG - matplotlib data path: C:\Users\msameerakram\AppData\Local\anaconda3\Lib\site-packages\matplotlib\mpl-data
2025-03-13 16:41:04,871 - matplotlib - DEBUG - CONFIGDIR=C:\Users\msameerakram\.matplotlib
2025-03-13 16:41:04,872 - matplotlib - DEBUG - interactive is False
2025-03-13 16:41:04,872 - matplotlib - DEBUG - platform is win32
2025-03-13 16:41:04,929 - matplotlib - DEBUG - CACHEDIR=C:\Users\msameerakram\.matplotlib
2025-03-13 16:41:04,933 - matplotlib.font_manager - DEBUG - Using fontManager instance from C:\Users\msameerakram\.matplotlib\fontlist-v390.json
2025-03-13 16:41:07,744 - numexpr.utils - INFO - Note: NumExpr detected 12 cores but "NUMEXPR_MAX_THREADS" not set, so enforcing safe limit of 8.
2025-03-13 16:41:07,744 - numexpr.utils - INFO - NumExpr defaulting to 8 threads.
2025-03-13 16:41:09,212 - matplotlib - DEBUG - matplotlib data path: C:\Users\msameerakram\AppData\Local\anaconda3\Lib\site-packages\matplotlib\mpl-data
2025-03-13 16:41:09,217 - matplotlib - DEBUG - CONFIGDIR=C:\Users\msameerakram\.matplotlib
2025-03-13 16:41:09,219 - matplotlib - DEBUG - interactive is False
2025-03-13 16:41:09,219 - matplotlib - DEBUG - platform is win32
2025-03-13 16:41:09,283 - matplotlib - DEBUG - CACHEDIR=C:\Users\msameerakram\.matplotlib
2025-03-13 16:41:09,287 - matplotlib.font_manager - DEBUG - Using fontManager instance from C:\Users\msameerakram\.matplotlib\fontlist-v390.json
2025-03-13 16:41:10,892 - asyncio - DEBUG - Using selector: SelectSelector
2025-03-13 16:41:10,940 - pymongo.topology - DEBUG - {"topologyId": {"$oid": "67d2c456a94cf1f4d7edf44a"}, "message": "Starting topology monitoring"}
2025-03-13 16:41:10,941 - pymongo.topology - DEBUG - {"topologyId": {"$oid": "67d2c456a94cf1f4d7edf44a"}, "previousDescription": "<TopologyDescription id: 67d2c456a94cf1f4d7edf44a, topology_type: Unknown, servers: []>", "newDescription": "<TopologyDescription id: 67d2c456a94cf1f4d7edf44a, topology_type: Unknown, servers: [<ServerDescription ('3.144.134.141', 27017) server_type: Unknown, rtt: None>]>", "message": "Topology description changed"}
2025-03-13 16:41:10,941 - pymongo.topology - DEBUG - {"topologyId": {"$oid": "67d2c456a94cf1f4d7edf44a"}, "serverHost": "3.144.134.141", "serverPort": 27017, "message": "Starting server monitoring"}
2025-03-13 16:41:10,943 - pymongo.connection - DEBUG - {"clientId": {"$oid": "67d2c456a94cf1f4d7edf44a"}, "message": "Connection pool created", "serverHost": "3.144.134.141", "serverPort": 27017}
2025-03-13 16:41:10,946 - pymongo.serverSelection - DEBUG - {"message": "Server selection started", "selector": "Primary()", "operation": "ping", "topologyDescription": "<TopologyDescription id: 67d2c456a94cf1f4d7edf44a, topology_type: Unknown, servers: [<ServerDescription ('3.144.134.141', 27017) server_type: Unknown, rtt: None>]>", "clientId": {"$oid": "67d2c456a94cf1f4d7edf44a"}}
2025-03-13 16:41:10,946 - pymongo.serverSelection - DEBUG - {"message": "Waiting for suitable server to become available", "selector": "Primary()", "operation": "ping", "topologyDescription": "<TopologyDescription id: 67d2c456a94cf1f4d7edf44a, topology_type: Unknown, servers: [<ServerDescription ('3.144.134.141', 27017) server_type: Unknown, rtt: None>]>", "clientId": {"$oid": "67d2c456a94cf1f4d7edf44a"}, "remainingTimeMS": 30}
2025-03-13 16:41:11,189 - pymongo.topology - DEBUG - {"topologyId": {"$oid": "67d2c456a94cf1f4d7edf44a"}, "driverConnectionId": 1, "serverHost": "3.144.134.141", "serverPort": 27017, "awaited": false, "message": "Server heartbeat started"}
2025-03-13 16:41:11,436 - pymongo.topology - DEBUG - {"topologyId": {"$oid": "67d2c456a94cf1f4d7edf44a"}, "driverConnectionId": 1, "serverConnectionId": 13230, "serverHost": "3.144.134.141", "serverPort": 27017, "awaited": false, "durationMS": 250.0, "reply": "{\"helloOk\": true, \"ismaster\": true, \"topologyVersion\": {\"processId\": {\"$oid\": \"67b7e5814f77c1a87c56d054\"}}, \"maxBsonObjectSize\": 16777216, \"maxMessageSizeBytes\": 48000000, \"maxWriteBatchSize\": 100000, \"localTime\": {\"$date\": \"2025-03-13T11:41:11.496Z\"}, \"logicalSessionTimeoutMinutes\": 30, \"connectionId\": 13230, \"maxWireVersion\": 25, \"ok\": 1.0}", "message": "Server heartbeat succeeded"}
2025-03-13 16:41:11,437 - pymongo.connection - DEBUG - {"clientId": {"$oid": "67d2c456a94cf1f4d7edf44a"}, "message": "Connection pool ready", "serverHost": "3.144.134.141", "serverPort": 27017}
2025-03-13 16:41:11,437 - pymongo.topology - DEBUG - {"topologyId": {"$oid": "67d2c456a94cf1f4d7edf44a"}, "previousDescription": "<TopologyDescription id: 67d2c456a94cf1f4d7edf44a, topology_type: Unknown, servers: [<ServerDescription ('3.144.134.141', 27017) server_type: Unknown, rtt: None>]>", "newDescription": "<TopologyDescription id: 67d2c456a94cf1f4d7edf44a, topology_type: Single, servers: [<ServerDescription ('3.144.134.141', 27017) server_type: Standalone, rtt: 0.25>]>", "message": "Topology description changed"}
2025-03-13 16:41:11,437 - pymongo.serverSelection - DEBUG - {"message": "Server selection succeeded", "selector": "Primary()", "operation": "ping", "topologyDescription": "<TopologyDescription id: 67d2c456a94cf1f4d7edf44a, topology_type: Single, servers: [<ServerDescription ('3.144.134.141', 27017) server_type: Standalone, rtt: 0.25>]>", "clientId": {"$oid": "67d2c456a94cf1f4d7edf44a"}, "serverHost": "3.144.134.141", "serverPort": 27017}
2025-03-13 16:41:11,438 - pymongo.connection - DEBUG - {"clientId": {"$oid": "67d2c456a94cf1f4d7edf44a"}, "message": "Connection checkout started", "serverHost": "3.144.134.141", "serverPort": 27017}
2025-03-13 16:41:11,438 - pymongo.topology - DEBUG - {"topologyId": {"$oid": "67d2c456a94cf1f4d7edf44a"}, "driverConnectionId": 1, "serverConnectionId": 13230, "serverHost": "3.144.134.141", "serverPort": 27017, "awaited": true, "message": "Server heartbeat started"}
2025-03-13 16:41:11,439 - pymongo.connection - DEBUG - {"clientId": {"$oid": "67d2c456a94cf1f4d7edf44a"}, "message": "Connection created", "serverHost": "3.144.134.141", "serverPort": 27017, "driverConnectionId": 1}
2025-03-13 16:41:12,202 - pymongo.connection - DEBUG - {"clientId": {"$oid": "67d2c456a94cf1f4d7edf44a"}, "message": "Connection ready", "serverHost": "3.144.134.141", "serverPort": 27017, "driverConnectionId": 1, "durationMS": 0.5160000000032596}
2025-03-13 16:41:12,791 - pymongo.connection - DEBUG - {"clientId": {"$oid": "67d2c456a94cf1f4d7edf44a"}, "message": "Connection checked out", "serverHost": "3.144.134.141", "serverPort": 27017, "driverConnectionId": 1, "durationMS": 1.360000000000582}
2025-03-13 16:41:12,792 - pymongo.command - DEBUG - {"clientId": {"$oid": "67d2c456a94cf1f4d7edf44a"}, "message": "Command started", "command": "{\"ping\": 1, \"lsid\": {\"id\": {\"$binary\": {\"base64\": \"9YdCPm64TBeZ1NMrsQOCZQ==\", \"subType\": \"04\"}}}, \"$db\": \"opal_server\"}", "commandName": "ping", "databaseName": "opal_server", "requestId": 6334, "operationId": 6334, "driverConnectionId": 1, "serverConnectionId": 13232, "serverHost": "3.144.134.141", "serverPort": 27017}
2025-03-13 16:41:13,043 - pymongo.command - DEBUG - {"clientId": {"$oid": "67d2c456a94cf1f4d7edf44a"}, "message": "Command succeeded", "durationMS": 250.937, "reply": "{\"ok\": 1.0}", "commandName": "ping", "databaseName": "opal_server", "requestId": 6334, "operationId": 6334, "driverConnectionId": 1, "serverConnectionId": 13232, "serverHost": "3.144.134.141", "serverPort": 27017}
2025-03-13 16:41:13,044 - pymongo.connection - DEBUG - {"clientId": {"$oid": "67d2c456a94cf1f4d7edf44a"}, "message": "Connection checked in", "serverHost": "3.144.134.141", "serverPort": 27017, "driverConnectionId": 1}
2025-03-13 16:41:13,219 - app.services.predictive_analytics - INFO - Starting driver risk prediction for last 3 days
2025-03-13 16:41:13,220 - app.db.repositories.data_repository - INFO - Fetching driver risk data for past 3 days
2025-03-13 16:41:13,220 - app.db.repositories.data_repository - DEBUG - Executing pipeline: [{'$match': {'event_time': {'$gte': datetime.datetime(2025, 3, 10, 16, 41, 13, 220375)}}}, {'$group': {'_id': '$driver_uuid', 'name': {'$first': '$driver_name'}, 'violation_count': {'$sum': 1}, 'violation_types': {'$addToSet': '$violation_type'}, 'avg_severity': {'$avg': {'$switch': {'branches': [{'case': {'$eq': ['$severity', 'HIGH']}, 'then': 3}, {'case': {'$eq': ['$severity', 'MEDIUM']}, 'then': 2}], 'default': 1}}}, 'last_violation': {'$max': '$event_time'}, 'max_speed': {'$max': '$telemetry.speed'}, 'vehicle_license': {'$first': '$vehicle_license'}}}, {'$sort': {'violation_count': -1}}]
2025-03-13 16:41:13,221 - pymongo.serverSelection - DEBUG - {"message": "Server selection started", "selector": "Primary()", "operation": "aggregate", "topologyDescription": "<TopologyDescription id: 67d2c456a94cf1f4d7edf44a, topology_type: Single, servers: [<ServerDescription ('3.144.134.141', 27017) server_type: Standalone, rtt: 0.25>]>", "clientId": {"$oid": "67d2c456a94cf1f4d7edf44a"}}
2025-03-13 16:41:13,221 - pymongo.serverSelection - DEBUG - {"message": "Server selection succeeded", "selector": "Primary()", "operation": "aggregate", "topologyDescription": "<TopologyDescription id: 67d2c456a94cf1f4d7edf44a, topology_type: Single, servers: [<ServerDescription ('3.144.134.141', 27017) server_type: Standalone, rtt: 0.25>]>", "clientId": {"$oid": "67d2c456a94cf1f4d7edf44a"}, "serverHost": "3.144.134.141", "serverPort": 27017}
2025-03-13 16:41:13,222 - pymongo.connection - DEBUG - {"clientId": {"$oid": "67d2c456a94cf1f4d7edf44a"}, "message": "Connection checkout started", "serverHost": "3.144.134.141", "serverPort": 27017}
2025-03-13 16:41:13,222 - pymongo.connection - DEBUG - {"clientId": {"$oid": "67d2c456a94cf1f4d7edf44a"}, "message": "Connection checked out", "serverHost": "3.144.134.141", "serverPort": 27017, "driverConnectionId": 1, "durationMS": 0.0}
2025-03-13 16:41:13,222 - pymongo.command - DEBUG - {"clientId": {"$oid": "67d2c456a94cf1f4d7edf44a"}, "message": "Command started", "command": "{\"aggregate\": \"violations\", \"pipeline\": [{\"$match\": {\"event_time\": {\"$gte\": {\"$date\": \"2025-03-10T16:41:13.220Z\"}}}}, {\"$group\": {\"_id\": \"$driver_uuid\", \"name\": {\"$first\": \"$driver_name\"}, \"violation_count\": {\"$sum\": 1}, \"violation_types\": {\"$addToSet\": \"$violation_type\"}, \"avg_severity\": {\"$avg\": {\"$switch\": {\"branches\": [{\"case\": {\"$eq\": [\"$severity\", \"HIGH\"]}, \"then\": 3}, {\"case\": {\"$eq\": [\"$severity\", \"MEDIUM\"]}, \"then\": 2}], \"default\": 1}}}, \"last_violation\": {\"$max\": \"$event_time\"}, \"max_speed\": {\"$max\": \"$telemetry.speed\"}, \"vehicle_license\": {\"$first\": \"$vehicle_license\"}}}, {\"$sort\": {\"violation_count\": -1}}], \"lsid\": {\"id\": {\"$binary\": {\"base64\": \"9YdCPm64TBeZ1NMrsQOCZQ==\", \"subType\": \"04\"}}}, \"$db\": \"opal_server\"}", "commandName": "aggregate", "databaseName": "opal_server", "requestId": 26500, "operationId": 26500, "driverConnectionId": 1, "serverConnectionId": 13232, "serverHost": "3.144.134.141", "serverPort": 27017}
2025-03-13 16:41:13,737 - pymongo.command - DEBUG - {"clientId": {"$oid": "67d2c456a94cf1f4d7edf44a"}, "message": "Command succeeded", "durationMS": 514.725, "reply": "{\"cursor\": {\"firstBatch\": [{\"_id\": \"unknown\", \"name\": \"Unknown\", \"violation_count\": 953, \"violation_types\": [\"SPEED_HIGH\", \"SPEED_LOW\", \"SPEED_MEDIUM\"], \"avg_severity\": 1.949632738719832, \"last_violation\": {\"$date\": \"2025-03-13T11:30:01.013Z\"}, \"vehicle_license\": \"860665050647824\"}, {\"_id\": \"7463170a-de85-4c5d-a77b-b506d939aca1\", \"name\": \"GUL ZAMAN #94378054\", \"violation_count\": 237, \"violation_types\": [\"SPEED_MEDIUM\", \"SPEED_LOW\"], \"avg_severity\": 1.59915611814346, \"last_violation\": {\"$date\": \"2025-03-13T06:31:35.314Z\"}, \"vehicle_license\": \"1075MR\"}, {\"_id\": \"3dd80f61-5ed1-4038-b3a8-5d2e37759893\", \"name\": \"DALER SINGH\", \"violation_count\": 219, \"violation_types\": [\"SPEED_MEDIUM\", \"SPEED_LOW\"], \"avg_severity\": 1.538812785388128, \"last_violation\": {\"$date\": \"2025-03-11T15:04:20.407Z\"}, \"vehicle_license\": \"1313YD\"}, {\"_id\": \"10009164\", \"name\": \"Unknown\", \"violation_count\": 209, \"violation_types\": [\"SPEED_MEDIUM\", \"SPEED_LOW\", \"SPEED_HIGH\"], \"avg_severity\": 1.7129186602870814, \"last_violat...", "commandName": "aggregate", "databaseName": "opal_server", "requestId": 26500, "operationId": 26500, "driverConnectionId": 1, "serverConnectionId": 13232, "serverHost": "3.144.134.141", "serverPort": 27017}
2025-03-13 16:41:14,190 - pymongo.connection - DEBUG - {"clientId": {"$oid": "67d2c456a94cf1f4d7edf44a"}, "message": "Connection checked in", "serverHost": "3.144.134.141", "serverPort": 27017, "driverConnectionId": 1}
2025-03-13 16:41:14,191 - pymongo.serverSelection - DEBUG - {"message": "Server selection started", "selector": "<function any_server_selector at 0x0000029C8ED48720>", "operation": "getMore", "topologyDescription": "<TopologyDescription id: 67d2c456a94cf1f4d7edf44a, topology_type: Single, servers: [<ServerDescription ('3.144.134.141', 27017) server_type: Standalone, rtt: 0.25>]>", "clientId": {"$oid": "67d2c456a94cf1f4d7edf44a"}}
2025-03-13 16:41:14,192 - pymongo.serverSelection - DEBUG - {"message": "Server selection succeeded", "selector": "<function any_server_selector at 0x0000029C8ED48720>", "operation": "getMore", "topologyDescription": "<TopologyDescription id: 67d2c456a94cf1f4d7edf44a, topology_type: Single, servers: [<ServerDescription ('3.144.134.141', 27017) server_type: Standalone, rtt: 0.25>]>", "clientId": {"$oid": "67d2c456a94cf1f4d7edf44a"}, "serverHost": "3.144.134.141", "serverPort": 27017}
2025-03-13 16:41:14,193 - pymongo.connection - DEBUG - {"clientId": {"$oid": "67d2c456a94cf1f4d7edf44a"}, "message": "Connection checkout started", "serverHost": "3.144.134.141", "serverPort": 27017}
2025-03-13 16:41:14,193 - pymongo.connection - DEBUG - {"clientId": {"$oid": "67d2c456a94cf1f4d7edf44a"}, "message": "Connection checked out", "serverHost": "3.144.134.141", "serverPort": 27017, "driverConnectionId": 1, "durationMS": 0.0}
2025-03-13 16:41:14,193 - pymongo.command - DEBUG - {"clientId": {"$oid": "67d2c456a94cf1f4d7edf44a"}, "message": "Command started", "command": "{\"getMore\": 5103830517655224868, \"collection\": \"violations\", \"lsid\": {\"id\": {\"$binary\": {\"base64\": \"9YdCPm64TBeZ1NMrsQOCZQ==\", \"subType\": \"04\"}}}, \"$db\": \"opal_server\"}", "commandName": "getMore", "databaseName": "opal_server", "requestId": 19169, "operationId": 19169, "driverConnectionId": 1, "serverConnectionId": 13232, "serverHost": "3.144.134.141", "serverPort": 27017}
2025-03-13 16:41:14,444 - pymongo.command - DEBUG - {"clientId": {"$oid": "67d2c456a94cf1f4d7edf44a"}, "message": "Command succeeded", "durationMS": 250.963, "reply": "{\"cursor\": {\"nextBatch\": [{\"_id\": \"12861265\", \"name\": \"Unknown\", \"violation_count\": 1, \"violation_types\": [\"SPEED_HIGH\"], \"avg_severity\": 3.0, \"last_violation\": {\"$date\": \"2025-03-11T13:39:36.796Z\"}, \"vehicle_license\": \"860260057076571\"}], \"ns\": \"opal_server.violations\"}, \"ok\": 1.0}", "commandName": "getMore", "databaseName": "opal_server", "requestId": 19169, "operationId": 19169, "driverConnectionId": 1, "serverConnectionId": 13232, "serverHost": "3.144.134.141", "serverPort": 27017}
2025-03-13 16:41:14,444 - pymongo.connection - DEBUG - {"clientId": {"$oid": "67d2c456a94cf1f4d7edf44a"}, "message": "Connection checked in", "serverHost": "3.144.134.141", "serverPort": 27017, "driverConnectionId": 1}
2025-03-13 16:41:14,444 - app.db.repositories.data_repository - INFO - Retrieved stats for 102 drivers
2025-03-13 16:41:14,446 - app.services.predictive_analytics - INFO - Retrieved 102 driver records
2025-03-13 16:41:14,446 - app.services.predictive_analytics - INFO - Successfully processed 9 drivers
2025-03-13 16:41:21,684 - pymongo.topology - DEBUG - {"topologyId": {"$oid": "67d2c456a94cf1f4d7edf44a"}, "driverConnectionId": 1, "serverConnectionId": 13230, "serverHost": "3.144.134.141", "serverPort": 27017, "awaited": true, "durationMS": 10250.0, "reply": "{\"isWritablePrimary\": true, \"topologyVersion\": {\"processId\": {\"$oid\": \"67b7e5814f77c1a87c56d054\"}}, \"maxBsonObjectSize\": 16777216, \"maxMessageSizeBytes\": 48000000, \"maxWriteBatchSize\": 100000, \"localTime\": {\"$date\": \"2025-03-13T11:41:21.745Z\"}, \"logicalSessionTimeoutMinutes\": 30, \"connectionId\": 13230, \"maxWireVersion\": 25, \"ok\": 1.0}", "message": "Server heartbeat succeeded"}
2025-03-13 16:41:21,686 - pymongo.topology - DEBUG - {"topologyId": {"$oid": "67d2c456a94cf1f4d7edf44a"}, "driverConnectionId": 1, "serverConnectionId": 13230, "serverHost": "3.144.134.141", "serverPort": 27017, "awaited": true, "message": "Server heartbeat started"}
2025-03-13 16:41:31,686 - pymongo.topology - DEBUG - {"topologyId": {"$oid": "67d2c456a94cf1f4d7edf44a"}, "driverConnectionId": 1, "serverConnectionId": 13230, "serverHost": "3.144.134.141", "serverPort": 27017, "awaited": true, "durationMS": 10000.0, "reply": "{\"isWritablePrimary\": true, \"topologyVersion\": {\"processId\": {\"$oid\": \"67b7e5814f77c1a87c56d054\"}}, \"maxBsonObjectSize\": 16777216, \"maxMessageSizeBytes\": 48000000, \"maxWriteBatchSize\": 100000, \"localTime\": {\"$date\": \"2025-03-13T11:41:31.746Z\"}, \"logicalSessionTimeoutMinutes\": 30, \"connectionId\": 13230, \"maxWireVersion\": 25, \"ok\": 1.0}", "message": "Server heartbeat succeeded"}
2025-03-13 16:41:31,687 - pymongo.topology - DEBUG - {"topologyId": {"$oid": "67d2c456a94cf1f4d7edf44a"}, "driverConnectionId": 1, "serverConnectionId": 13230, "serverHost": "3.144.134.141", "serverPort": 27017, "awaited": true, "message": "Server heartbeat started"}
2025-03-13 16:41:41,687 - pymongo.topology - DEBUG - {"topologyId": {"$oid": "67d2c456a94cf1f4d7edf44a"}, "driverConnectionId": 1, "serverConnectionId": 13230, "serverHost": "3.144.134.141", "serverPort": 27017, "awaited": true, "durationMS": 10000.0, "reply": "{\"isWritablePrimary\": true, \"topologyVersion\": {\"processId\": {\"$oid\": \"67b7e5814f77c1a87c56d054\"}}, \"maxBsonObjectSize\": 16777216, \"maxMessageSizeBytes\": 48000000, \"maxWriteBatchSize\": 100000, \"localTime\": {\"$date\": \"2025-03-13T11:41:41.747Z\"}, \"logicalSessionTimeoutMinutes\": 30, \"connectionId\": 13230, \"maxWireVersion\": 25, \"ok\": 1.0}", "message": "Server heartbeat succeeded"}
2025-03-13 16:41:41,687 - pymongo.topology - DEBUG - {"topologyId": {"$oid": "67d2c456a94cf1f4d7edf44a"}, "driverConnectionId": 1, "serverConnectionId": 13230, "serverHost": "3.144.134.141", "serverPort": 27017, "awaited": true, "message": "Server heartbeat started"}
2025-03-13 16:41:51,687 - pymongo.topology - DEBUG - {"topologyId": {"$oid": "67d2c456a94cf1f4d7edf44a"}, "driverConnectionId": 1, "serverConnectionId": 13230, "serverHost": "3.144.134.141", "serverPort": 27017, "awaited": true, "durationMS": 10000.0, "reply": "{\"isWritablePrimary\": true, \"topologyVersion\": {\"processId\": {\"$oid\": \"67b7e5814f77c1a87c56d054\"}}, \"maxBsonObjectSize\": 16777216, \"maxMessageSizeBytes\": 48000000, \"maxWriteBatchSize\": 100000, \"localTime\": {\"$date\": \"2025-03-13T11:41:51.747Z\"}, \"logicalSessionTimeoutMinutes\": 30, \"connectionId\": 13230, \"maxWireVersion\": 25, \"ok\": 1.0}", "message": "Server heartbeat succeeded"}
2025-03-13 16:41:51,687 - pymongo.topology - DEBUG - {"topologyId": {"$oid": "67d2c456a94cf1f4d7edf44a"}, "driverConnectionId": 1, "serverConnectionId": 13230, "serverHost": "3.144.134.141", "serverPort": 27017, "awaited": true, "message": "Server heartbeat started"}
2025-03-13 16:42:01,691 - pymongo.topology - DEBUG - {"topologyId": {"$oid": "67d2c456a94cf1f4d7edf44a"}, "driverConnectionId": 1, "serverConnectionId": 13230, "serverHost": "3.144.134.141", "serverPort": 27017, "awaited": true, "durationMS": 10000.0, "reply": "{\"isWritablePrimary\": true, \"topologyVersion\": {\"processId\": {\"$oid\": \"67b7e5814f77c1a87c56d054\"}}, \"maxBsonObjectSize\": 16777216, \"maxMessageSizeBytes\": 48000000, \"maxWriteBatchSize\": 100000, \"localTime\": {\"$date\": \"2025-03-13T11:42:01.751Z\"}, \"logicalSessionTimeoutMinutes\": 30, \"connectionId\": 13230, \"maxWireVersion\": 25, \"ok\": 1.0}", "message": "Server heartbeat succeeded"}
2025-03-13 16:42:01,691 - pymongo.topology - DEBUG - {"topologyId": {"$oid": "67d2c456a94cf1f4d7edf44a"}, "driverConnectionId": 1, "serverConnectionId": 13230, "serverHost": "3.144.134.141", "serverPort": 27017, "awaited": true, "message": "Server heartbeat started"}
2025-03-13 16:42:11,692 - pymongo.topology - DEBUG - {"topologyId": {"$oid": "67d2c456a94cf1f4d7edf44a"}, "driverConnectionId": 1, "serverConnectionId": 13230, "serverHost": "3.144.134.141", "serverPort": 27017, "awaited": true, "durationMS": 10000.0, "reply": "{\"isWritablePrimary\": true, \"topologyVersion\": {\"processId\": {\"$oid\": \"67b7e5814f77c1a87c56d054\"}}, \"maxBsonObjectSize\": 16777216, \"maxMessageSizeBytes\": 48000000, \"maxWriteBatchSize\": 100000, \"localTime\": {\"$date\": \"2025-03-13T11:42:11.753Z\"}, \"logicalSessionTimeoutMinutes\": 30, \"connectionId\": 13230, \"maxWireVersion\": 25, \"ok\": 1.0}", "message": "Server heartbeat succeeded"}
2025-03-13 16:42:11,693 - pymongo.topology - DEBUG - {"topologyId": {"$oid": "67d2c456a94cf1f4d7edf44a"}, "driverConnectionId": 1, "serverConnectionId": 13230, "serverHost": "3.144.134.141", "serverPort": 27017, "awaited": true, "message": "Server heartbeat started"}
2025-03-13 16:42:21,694 - pymongo.topology - DEBUG - {"topologyId": {"$oid": "67d2c456a94cf1f4d7edf44a"}, "driverConnectionId": 1, "serverConnectionId": 13230, "serverHost": "3.144.134.141", "serverPort": 27017, "awaited": true, "durationMS": 10000.0, "reply": "{\"isWritablePrimary\": true, \"topologyVersion\": {\"processId\": {\"$oid\": \"67b7e5814f77c1a87c56d054\"}}, \"maxBsonObjectSize\": 16777216, \"maxMessageSizeBytes\": 48000000, \"maxWriteBatchSize\": 100000, \"localTime\": {\"$date\": \"2025-03-13T11:42:21.754Z\"}, \"logicalSessionTimeoutMinutes\": 30, \"connectionId\": 13230, \"maxWireVersion\": 25, \"ok\": 1.0}", "message": "Server heartbeat succeeded"}
2025-03-13 16:42:21,695 - pymongo.topology - DEBUG - {"topologyId": {"$oid": "67d2c456a94cf1f4d7edf44a"}, "driverConnectionId": 1, "serverConnectionId": 13230, "serverHost": "3.144.134.141", "serverPort": 27017, "awaited": true, "message": "Server heartbeat started"}
2025-03-13 16:42:31,696 - pymongo.topology - DEBUG - {"topologyId": {"$oid": "67d2c456a94cf1f4d7edf44a"}, "driverConnectionId": 1, "serverConnectionId": 13230, "serverHost": "3.144.134.141", "serverPort": 27017, "awaited": true, "durationMS": 10000.0, "reply": "{\"isWritablePrimary\": true, \"topologyVersion\": {\"processId\": {\"$oid\": \"67b7e5814f77c1a87c56d054\"}}, \"maxBsonObjectSize\": 16777216, \"maxMessageSizeBytes\": 48000000, \"maxWriteBatchSize\": 100000, \"localTime\": {\"$date\": \"2025-03-13T11:42:31.755Z\"}, \"logicalSessionTimeoutMinutes\": 30, \"connectionId\": 13230, \"maxWireVersion\": 25, \"ok\": 1.0}", "message": "Server heartbeat succeeded"}
2025-03-13 16:42:31,697 - pymongo.topology - DEBUG - {"topologyId": {"$oid": "67d2c456a94cf1f4d7edf44a"}, "driverConnectionId": 1, "serverConnectionId": 13230, "serverHost": "3.144.134.141", "serverPort": 27017, "awaited": true, "message": "Server heartbeat started"}
2025-03-13 16:42:41,893 - numexpr.utils - INFO - Note: NumExpr detected 12 cores but "NUMEXPR_MAX_THREADS" not set, so enforcing safe limit of 8.
2025-03-13 16:42:41,893 - numexpr.utils - INFO - NumExpr defaulting to 8 threads.
2025-03-13 16:42:43,284 - matplotlib - DEBUG - matplotlib data path: C:\Users\msameerakram\AppData\Local\anaconda3\Lib\site-packages\matplotlib\mpl-data
2025-03-13 16:42:43,292 - matplotlib - DEBUG - CONFIGDIR=C:\Users\msameerakram\.matplotlib
2025-03-13 16:42:43,294 - matplotlib - DEBUG - interactive is False
2025-03-13 16:42:43,294 - matplotlib - DEBUG - platform is win32
2025-03-13 16:42:43,357 - matplotlib - DEBUG - CACHEDIR=C:\Users\msameerakram\.matplotlib
2025-03-13 16:42:43,361 - matplotlib.font_manager - DEBUG - Using fontManager instance from C:\Users\msameerakram\.matplotlib\fontlist-v390.json
2025-03-13 16:42:46,044 - numexpr.utils - INFO - Note: NumExpr detected 12 cores but "NUMEXPR_MAX_THREADS" not set, so enforcing safe limit of 8.
2025-03-13 16:42:46,045 - numexpr.utils - INFO - NumExpr defaulting to 8 threads.
2025-03-13 16:42:47,313 - matplotlib - DEBUG - matplotlib data path: C:\Users\msameerakram\AppData\Local\anaconda3\Lib\site-packages\matplotlib\mpl-data
2025-03-13 16:42:47,319 - matplotlib - DEBUG - CONFIGDIR=C:\Users\msameerakram\.matplotlib
2025-03-13 16:42:47,321 - matplotlib - DEBUG - interactive is False
2025-03-13 16:42:47,321 - matplotlib - DEBUG - platform is win32
2025-03-13 16:42:47,379 - matplotlib - DEBUG - CACHEDIR=C:\Users\msameerakram\.matplotlib
2025-03-13 16:42:47,382 - matplotlib.font_manager - DEBUG - Using fontManager instance from C:\Users\msameerakram\.matplotlib\fontlist-v390.json
2025-03-13 16:42:48,768 - asyncio - DEBUG - Using selector: SelectSelector
2025-03-13 16:42:48,806 - pymongo.topology - DEBUG - {"topologyId": {"$oid": "67d2c4b8571072e3844332dc"}, "message": "Starting topology monitoring"}
2025-03-13 16:42:48,806 - pymongo.topology - DEBUG - {"topologyId": {"$oid": "67d2c4b8571072e3844332dc"}, "previousDescription": "<TopologyDescription id: 67d2c4b8571072e3844332dc, topology_type: Unknown, servers: []>", "newDescription": "<TopologyDescription id: 67d2c4b8571072e3844332dc, topology_type: Unknown, servers: [<ServerDescription ('3.144.134.141', 27017) server_type: Unknown, rtt: None>]>", "message": "Topology description changed"}
2025-03-13 16:42:48,807 - pymongo.topology - DEBUG - {"topologyId": {"$oid": "67d2c4b8571072e3844332dc"}, "serverHost": "3.144.134.141", "serverPort": 27017, "message": "Starting server monitoring"}
2025-03-13 16:42:48,808 - pymongo.connection - DEBUG - {"clientId": {"$oid": "67d2c4b8571072e3844332dc"}, "message": "Connection pool created", "serverHost": "3.144.134.141", "serverPort": 27017}
2025-03-13 16:42:48,809 - pymongo.serverSelection - DEBUG - {"message": "Server selection started", "selector": "Primary()", "operation": "ping", "topologyDescription": "<TopologyDescription id: 67d2c4b8571072e3844332dc, topology_type: Unknown, servers: [<ServerDescription ('3.144.134.141', 27017) server_type: Unknown, rtt: None>]>", "clientId": {"$oid": "67d2c4b8571072e3844332dc"}}
2025-03-13 16:42:48,810 - pymongo.serverSelection - DEBUG - {"message": "Waiting for suitable server to become available", "selector": "Primary()", "operation": "ping", "topologyDescription": "<TopologyDescription id: 67d2c4b8571072e3844332dc, topology_type: Unknown, servers: [<ServerDescription ('3.144.134.141', 27017) server_type: Unknown, rtt: None>]>", "clientId": {"$oid": "67d2c4b8571072e3844332dc"}, "remainingTimeMS": 30}
2025-03-13 16:43:04,080 - pymongo.topology - DEBUG - {"topologyId": {"$oid": "67d2c4b8571072e3844332dc"}, "driverConnectionId": 1, "serverHost": "3.144.134.141", "serverPort": 27017, "awaited": false, "message": "Server heartbeat started"}
2025-03-13 16:43:04,326 - pymongo.topology - DEBUG - {"topologyId": {"$oid": "67d2c4b8571072e3844332dc"}, "driverConnectionId": 1, "serverConnectionId": 13233, "serverHost": "3.144.134.141", "serverPort": 27017, "awaited": false, "durationMS": 250.0, "reply": "{\"helloOk\": true, \"ismaster\": true, \"topologyVersion\": {\"processId\": {\"$oid\": \"67b7e5814f77c1a87c56d054\"}}, \"maxBsonObjectSize\": 16777216, \"maxMessageSizeBytes\": 48000000, \"maxWriteBatchSize\": 100000, \"localTime\": {\"$date\": \"2025-03-13T11:43:04.389Z\"}, \"logicalSessionTimeoutMinutes\": 30, \"connectionId\": 13233, \"maxWireVersion\": 25, \"ok\": 1.0}", "message": "Server heartbeat succeeded"}
2025-03-13 16:43:04,326 - pymongo.connection - DEBUG - {"clientId": {"$oid": "67d2c4b8571072e3844332dc"}, "message": "Connection pool ready", "serverHost": "3.144.134.141", "serverPort": 27017}
2025-03-13 16:43:04,326 - pymongo.topology - DEBUG - {"topologyId": {"$oid": "67d2c4b8571072e3844332dc"}, "previousDescription": "<TopologyDescription id: 67d2c4b8571072e3844332dc, topology_type: Unknown, servers: [<ServerDescription ('3.144.134.141', 27017) server_type: Unknown, rtt: None>]>", "newDescription": "<TopologyDescription id: 67d2c4b8571072e3844332dc, topology_type: Single, servers: [<ServerDescription ('3.144.134.141', 27017) server_type: Standalone, rtt: 0.25>]>", "message": "Topology description changed"}
2025-03-13 16:43:04,327 - pymongo.serverSelection - DEBUG - {"message": "Server selection succeeded", "selector": "Primary()", "operation": "ping", "topologyDescription": "<TopologyDescription id: 67d2c4b8571072e3844332dc, topology_type: Single, servers: [<ServerDescription ('3.144.134.141', 27017) server_type: Standalone, rtt: 0.25>]>", "clientId": {"$oid": "67d2c4b8571072e3844332dc"}, "serverHost": "3.144.134.141", "serverPort": 27017}
2025-03-13 16:43:04,329 - pymongo.topology - DEBUG - {"topologyId": {"$oid": "67d2c4b8571072e3844332dc"}, "driverConnectionId": 1, "serverConnectionId": 13233, "serverHost": "3.144.134.141", "serverPort": 27017, "awaited": true, "message": "Server heartbeat started"}
2025-03-13 16:43:04,329 - pymongo.connection - DEBUG - {"clientId": {"$oid": "67d2c4b8571072e3844332dc"}, "message": "Connection checkout started", "serverHost": "3.144.134.141", "serverPort": 27017}
2025-03-13 16:43:04,330 - pymongo.connection - DEBUG - {"clientId": {"$oid": "67d2c4b8571072e3844332dc"}, "message": "Connection created", "serverHost": "3.144.134.141", "serverPort": 27017, "driverConnectionId": 1}
2025-03-13 16:43:05,082 - pymongo.connection - DEBUG - {"clientId": {"$oid": "67d2c4b8571072e3844332dc"}, "message": "Connection ready", "serverHost": "3.144.134.141", "serverPort": 27017, "driverConnectionId": 1, "durationMS": 0.5}
2025-03-13 16:43:05,082 - pymongo.connection - DEBUG - {"clientId": {"$oid": "67d2c4b8571072e3844332dc"}, "message": "Connection checked out", "serverHost": "3.144.134.141", "serverPort": 27017, "driverConnectionId": 1, "durationMS": 0.75}
2025-03-13 16:43:05,082 - pymongo.command - DEBUG - {"clientId": {"$oid": "67d2c4b8571072e3844332dc"}, "message": "Command started", "command": "{\"ping\": 1, \"lsid\": {\"id\": {\"$binary\": {\"base64\": \"wP2n9/ZcRnOE2FikPbtwGw==\", \"subType\": \"04\"}}}, \"$db\": \"opal_server\"}", "commandName": "ping", "databaseName": "opal_server", "requestId": 6334, "operationId": 6334, "driverConnectionId": 1, "serverConnectionId": 13235, "serverHost": "3.144.134.141", "serverPort": 27017}
2025-03-13 16:43:05,329 - pymongo.command - DEBUG - {"clientId": {"$oid": "67d2c4b8571072e3844332dc"}, "message": "Command succeeded", "durationMS": 246.322, "reply": "{\"ok\": 1.0}", "commandName": "ping", "databaseName": "opal_server", "requestId": 6334, "operationId": 6334, "driverConnectionId": 1, "serverConnectionId": 13235, "serverHost": "3.144.134.141", "serverPort": 27017}
2025-03-13 16:43:05,329 - pymongo.connection - DEBUG - {"clientId": {"$oid": "67d2c4b8571072e3844332dc"}, "message": "Connection checked in", "serverHost": "3.144.134.141", "serverPort": 27017, "driverConnectionId": 1}
2025-03-13 16:43:14,577 - pymongo.topology - DEBUG - {"topologyId": {"$oid": "67d2c4b8571072e3844332dc"}, "driverConnectionId": 1, "serverConnectionId": 13233, "serverHost": "3.144.134.141", "serverPort": 27017, "awaited": true, "durationMS": 10250.0, "reply": "{\"isWritablePrimary\": true, \"topologyVersion\": {\"processId\": {\"$oid\": \"67b7e5814f77c1a87c56d054\"}}, \"maxBsonObjectSize\": 16777216, \"maxMessageSizeBytes\": 48000000, \"maxWriteBatchSize\": 100000, \"localTime\": {\"$date\": \"2025-03-13T11:43:14.642Z\"}, \"logicalSessionTimeoutMinutes\": 30, \"connectionId\": 13233, \"maxWireVersion\": 25, \"ok\": 1.0}", "message": "Server heartbeat succeeded"}
2025-03-13 16:43:14,578 - pymongo.topology - DEBUG - {"topologyId": {"$oid": "67d2c4b8571072e3844332dc"}, "driverConnectionId": 1, "serverConnectionId": 13233, "serverHost": "3.144.134.141", "serverPort": 27017, "awaited": true, "message": "Server heartbeat started"}
2025-03-13 16:43:24,322 - app.services.predictive_analytics - INFO - Starting driver risk prediction for last 1 days
2025-03-13 16:43:24,322 - app.db.repositories.data_repository - INFO - Fetching driver risk data for past 1 days
2025-03-13 16:43:24,323 - app.db.repositories.data_repository - DEBUG - Executing pipeline: [{'$match': {'event_time': {'$gte': datetime.datetime(2025, 3, 12, 16, 43, 24, 322967)}}}, {'$group': {'_id': '$driver_uuid', 'name': {'$first': '$driver_name'}, 'violation_count': {'$sum': 1}, 'violation_types': {'$addToSet': '$violation_type'}, 'avg_severity': {'$avg': {'$switch': {'branches': [{'case': {'$eq': ['$severity', 'HIGH']}, 'then': 3}, {'case': {'$eq': ['$severity', 'MEDIUM']}, 'then': 2}], 'default': 1}}}, 'last_violation': {'$max': '$event_time'}, 'max_speed': {'$max': '$telemetry.speed'}, 'vehicle_license': {'$first': '$vehicle_license'}}}, {'$sort': {'violation_count': -1}}]
2025-03-13 16:43:24,323 - pymongo.serverSelection - DEBUG - {"message": "Server selection started", "selector": "Primary()", "operation": "aggregate", "topologyDescription": "<TopologyDescription id: 67d2c4b8571072e3844332dc, topology_type: Single, servers: [<ServerDescription ('3.144.134.141', 27017) server_type: Standalone, rtt: 0.25>]>", "clientId": {"$oid": "67d2c4b8571072e3844332dc"}}
2025-03-13 16:43:24,324 - pymongo.serverSelection - DEBUG - {"message": "Server selection succeeded", "selector": "Primary()", "operation": "aggregate", "topologyDescription": "<TopologyDescription id: 67d2c4b8571072e3844332dc, topology_type: Single, servers: [<ServerDescription ('3.144.134.141', 27017) server_type: Standalone, rtt: 0.25>]>", "clientId": {"$oid": "67d2c4b8571072e3844332dc"}, "serverHost": "3.144.134.141", "serverPort": 27017}
2025-03-13 16:43:24,325 - pymongo.connection - DEBUG - {"clientId": {"$oid": "67d2c4b8571072e3844332dc"}, "message": "Connection checkout started", "serverHost": "3.144.134.141", "serverPort": 27017}
2025-03-13 16:43:24,325 - pymongo.connection - DEBUG - {"clientId": {"$oid": "67d2c4b8571072e3844332dc"}, "message": "Connection checked out", "serverHost": "3.144.134.141", "serverPort": 27017, "driverConnectionId": 1, "durationMS": 0.0}
2025-03-13 16:43:24,326 - pymongo.command - DEBUG - {"clientId": {"$oid": "67d2c4b8571072e3844332dc"}, "message": "Command started", "command": "{\"aggregate\": \"violations\", \"pipeline\": [{\"$match\": {\"event_time\": {\"$gte\": {\"$date\": \"2025-03-12T16:43:24.322Z\"}}}}, {\"$group\": {\"_id\": \"$driver_uuid\", \"name\": {\"$first\": \"$driver_name\"}, \"violation_count\": {\"$sum\": 1}, \"violation_types\": {\"$addToSet\": \"$violation_type\"}, \"avg_severity\": {\"$avg\": {\"$switch\": {\"branches\": [{\"case\": {\"$eq\": [\"$severity\", \"HIGH\"]}, \"then\": 3}, {\"case\": {\"$eq\": [\"$severity\", \"MEDIUM\"]}, \"then\": 2}], \"default\": 1}}}, \"last_violation\": {\"$max\": \"$event_time\"}, \"max_speed\": {\"$max\": \"$telemetry.speed\"}, \"vehicle_license\": {\"$first\": \"$vehicle_license\"}}}, {\"$sort\": {\"violation_count\": -1}}], \"lsid\": {\"id\": {\"$binary\": {\"base64\": \"wP2n9/ZcRnOE2FikPbtwGw==\", \"subType\": \"04\"}}}, \"$db\": \"opal_server\"}", "commandName": "aggregate", "databaseName": "opal_server", "requestId": 26500, "operationId": 26500, "driverConnectionId": 1, "serverConnectionId": 13235, "serverHost": "3.144.134.141", "serverPort": 27017}
2025-03-13 16:43:24,585 - pymongo.topology - DEBUG - {"topologyId": {"$oid": "67d2c4b8571072e3844332dc"}, "driverConnectionId": 1, "serverConnectionId": 13233, "serverHost": "3.144.134.141", "serverPort": 27017, "awaited": true, "durationMS": 10015.999999999622, "reply": "{\"isWritablePrimary\": true, \"topologyVersion\": {\"processId\": {\"$oid\": \"67b7e5814f77c1a87c56d054\"}}, \"maxBsonObjectSize\": 16777216, \"maxMessageSizeBytes\": 48000000, \"maxWriteBatchSize\": 100000, \"localTime\": {\"$date\": \"2025-03-13T11:43:24.649Z\"}, \"logicalSessionTimeoutMinutes\": 30, \"connectionId\": 13233, \"maxWireVersion\": 25, \"ok\": 1.0}", "message": "Server heartbeat succeeded"}
2025-03-13 16:43:24,585 - pymongo.topology - DEBUG - {"topologyId": {"$oid": "67d2c4b8571072e3844332dc"}, "driverConnectionId": 1, "serverConnectionId": 13233, "serverHost": "3.144.134.141", "serverPort": 27017, "awaited": true, "message": "Server heartbeat started"}
2025-03-13 16:43:24,828 - pymongo.command - DEBUG - {"clientId": {"$oid": "67d2c4b8571072e3844332dc"}, "message": "Command succeeded", "durationMS": 502.131, "reply": "{\"cursor\": {\"firstBatch\": [{\"_id\": \"unknown\", \"name\": \"Unknown\", \"violation_count\": 177, \"violation_types\": [\"SPEED_MEDIUM\", \"SPEED_HIGH\", \"SPEED_LOW\"], \"avg_severity\": 1.9830508474576272, \"last_violation\": {\"$date\": \"2025-03-13T11:30:01.013Z\"}, \"vehicle_license\": \"860665050647824\"}, {\"_id\": \"10003423\", \"name\": \"Unknown\", \"violation_count\": 63, \"violation_types\": [\"SPEED_MEDIUM\", \"SPEED_LOW\"], \"avg_severity\": 1.7142857142857142, \"last_violation\": {\"$date\": \"2025-03-13T04:54:47.918Z\"}, \"vehicle_license\": \"860665050638518\"}, {\"_id\": \"e604d5c5-e1a6-45c3-b619-73393f04097c\", \"name\": \"Rajanaeem Khan # NEW\", \"violation_count\": 63, \"violation_types\": [\"SPEED_MEDIUM\", \"SPEED_LOW\"], \"avg_severity\": 1.7301587301587302, \"last_violation\": {\"$date\": \"2025-03-13T11:12:35.639Z\"}, \"vehicle_license\": \"6024MR\"}, {\"_id\": \"fb6b6c56-18fd-4602-aa8d-10d95f46f3d5\", \"name\": \"AMIR 95957295\", \"violation_count\": 55, \"violation_types\": [\"SPEED_MEDIUM\", \"SPEED_LOW\"], \"avg_severity\": 1.7454545454545454, \"last_violati...", "commandName": "aggregate", "databaseName": "opal_server", "requestId": 26500, "operationId": 26500, "driverConnectionId": 1, "serverConnectionId": 13235, "serverHost": "3.144.134.141", "serverPort": 27017}
2025-03-13 16:43:24,830 - pymongo.connection - DEBUG - {"clientId": {"$oid": "67d2c4b8571072e3844332dc"}, "message": "Connection checked in", "serverHost": "3.144.134.141", "serverPort": 27017, "driverConnectionId": 1}
2025-03-13 16:43:24,830 - app.db.repositories.data_repository - INFO - Retrieved stats for 71 drivers
2025-03-13 16:43:24,830 - app.services.predictive_analytics - INFO - Retrieved 71 driver records
2025-03-13 16:43:24,831 - app.services.predictive_analytics - INFO - Successfully processed 6 drivers
2025-03-13 16:43:34,585 - pymongo.topology - DEBUG - {"topologyId": {"$oid": "67d2c4b8571072e3844332dc"}, "driverConnectionId": 1, "serverConnectionId": 13233, "serverHost": "3.144.134.141", "serverPort": 27017, "awaited": true, "durationMS": 10000.0, "reply": "{\"isWritablePrimary\": true, \"topologyVersion\": {\"processId\": {\"$oid\": \"67b7e5814f77c1a87c56d054\"}}, \"maxBsonObjectSize\": 16777216, \"maxMessageSizeBytes\": 48000000, \"maxWriteBatchSize\": 100000, \"localTime\": {\"$date\": \"2025-03-13T11:43:34.649Z\"}, \"logicalSessionTimeoutMinutes\": 30, \"connectionId\": 13233, \"maxWireVersion\": 25, \"ok\": 1.0}", "message": "Server heartbeat succeeded"}
2025-03-13 16:43:34,586 - pymongo.topology - DEBUG - {"topologyId": {"$oid": "67d2c4b8571072e3844332dc"}, "driverConnectionId": 1, "serverConnectionId": 13233, "serverHost": "3.144.134.141", "serverPort": 27017, "awaited": true, "message": "Server heartbeat started"}
2025-03-13 16:43:42,832 - app.services.predictive_analytics - INFO - Starting driver risk prediction for last 3 days
2025-03-13 16:43:42,833 - app.db.repositories.data_repository - INFO - Fetching driver risk data for past 3 days
2025-03-13 16:43:42,833 - app.db.repositories.data_repository - DEBUG - Executing pipeline: [{'$match': {'event_time': {'$gte': datetime.datetime(2025, 3, 10, 16, 43, 42, 833502)}}}, {'$group': {'_id': '$driver_uuid', 'name': {'$first': '$driver_name'}, 'violation_count': {'$sum': 1}, 'violation_types': {'$addToSet': '$violation_type'}, 'avg_severity': {'$avg': {'$switch': {'branches': [{'case': {'$eq': ['$severity', 'HIGH']}, 'then': 3}, {'case': {'$eq': ['$severity', 'MEDIUM']}, 'then': 2}], 'default': 1}}}, 'last_violation': {'$max': '$event_time'}, 'max_speed': {'$max': '$telemetry.speed'}, 'vehicle_license': {'$first': '$vehicle_license'}}}, {'$sort': {'violation_count': -1}}]
2025-03-13 16:43:42,833 - pymongo.serverSelection - DEBUG - {"message": "Server selection started", "selector": "Primary()", "operation": "aggregate", "topologyDescription": "<TopologyDescription id: 67d2c4b8571072e3844332dc, topology_type: Single, servers: [<ServerDescription ('3.144.134.141', 27017) server_type: Standalone, rtt: 0.25>]>", "clientId": {"$oid": "67d2c4b8571072e3844332dc"}}
2025-03-13 16:43:42,836 - pymongo.serverSelection - DEBUG - {"message": "Server selection succeeded", "selector": "Primary()", "operation": "aggregate", "topologyDescription": "<TopologyDescription id: 67d2c4b8571072e3844332dc, topology_type: Single, servers: [<ServerDescription ('3.144.134.141', 27017) server_type: Standalone, rtt: 0.25>]>", "clientId": {"$oid": "67d2c4b8571072e3844332dc"}, "serverHost": "3.144.134.141", "serverPort": 27017}
2025-03-13 16:43:42,836 - pymongo.connection - DEBUG - {"clientId": {"$oid": "67d2c4b8571072e3844332dc"}, "message": "Connection checkout started", "serverHost": "3.144.134.141", "serverPort": 27017}
2025-03-13 16:43:42,836 - pymongo.connection - DEBUG - {"clientId": {"$oid": "67d2c4b8571072e3844332dc"}, "message": "Connection checked out", "serverHost": "3.144.134.141", "serverPort": 27017, "driverConnectionId": 1, "durationMS": 0.0}
2025-03-13 16:43:42,837 - pymongo.command - DEBUG - {"clientId": {"$oid": "67d2c4b8571072e3844332dc"}, "message": "Command started", "command": "{\"aggregate\": \"violations\", \"pipeline\": [{\"$match\": {\"event_time\": {\"$gte\": {\"$date\": \"2025-03-10T16:43:42.833Z\"}}}}, {\"$group\": {\"_id\": \"$driver_uuid\", \"name\": {\"$first\": \"$driver_name\"}, \"violation_count\": {\"$sum\": 1}, \"violation_types\": {\"$addToSet\": \"$violation_type\"}, \"avg_severity\": {\"$avg\": {\"$switch\": {\"branches\": [{\"case\": {\"$eq\": [\"$severity\", \"HIGH\"]}, \"then\": 3}, {\"case\": {\"$eq\": [\"$severity\", \"MEDIUM\"]}, \"then\": 2}], \"default\": 1}}}, \"last_violation\": {\"$max\": \"$event_time\"}, \"max_speed\": {\"$max\": \"$telemetry.speed\"}, \"vehicle_license\": {\"$first\": \"$vehicle_license\"}}}, {\"$sort\": {\"violation_count\": -1}}], \"lsid\": {\"id\": {\"$binary\": {\"base64\": \"wP2n9/ZcRnOE2FikPbtwGw==\", \"subType\": \"04\"}}}, \"$db\": \"opal_server\"}", "commandName": "aggregate", "databaseName": "opal_server", "requestId": 19169, "operationId": 19169, "driverConnectionId": 1, "serverConnectionId": 13235, "serverHost": "3.144.134.141", "serverPort": 27017}
2025-03-13 16:43:43,344 - pymongo.command - DEBUG - {"clientId": {"$oid": "67d2c4b8571072e3844332dc"}, "message": "Command succeeded", "durationMS": 507.069, "reply": "{\"cursor\": {\"firstBatch\": [{\"_id\": \"unknown\", \"name\": \"Unknown\", \"violation_count\": 952, \"violation_types\": [\"SPEED_MEDIUM\", \"SPEED_LOW\", \"SPEED_HIGH\"], \"avg_severity\": 1.9485294117647058, \"last_violation\": {\"$date\": \"2025-03-13T11:30:01.013Z\"}, \"vehicle_license\": \"860260057075813\"}, {\"_id\": \"7463170a-de85-4c5d-a77b-b506d939aca1\", \"name\": \"GUL ZAMAN #94378054\", \"violation_count\": 237, \"violation_types\": [\"SPEED_MEDIUM\", \"SPEED_LOW\"], \"avg_severity\": 1.59915611814346, \"last_violation\": {\"$date\": \"2025-03-13T06:31:35.314Z\"}, \"vehicle_license\": \"1075MR\"}, {\"_id\": \"3dd80f61-5ed1-4038-b3a8-5d2e37759893\", \"name\": \"DALER SINGH\", \"violation_count\": 218, \"violation_types\": [\"SPEED_MEDIUM\", \"SPEED_LOW\"], \"avg_severity\": 1.5412844036697249, \"last_violation\": {\"$date\": \"2025-03-11T15:04:20.407Z\"}, \"vehicle_license\": \"1313YD\"}, {\"_id\": \"10009164\", \"name\": \"Unknown\", \"violation_count\": 209, \"violation_types\": [\"SPEED_MEDIUM\", \"SPEED_LOW\", \"SPEED_HIGH\"], \"avg_severity\": 1.7129186602870814, \"last_viol...", "commandName": "aggregate", "databaseName": "opal_server", "requestId": 19169, "operationId": 19169, "driverConnectionId": 1, "serverConnectionId": 13235, "serverHost": "3.144.134.141", "serverPort": 27017}
2025-03-13 16:43:43,575 - pymongo.connection - DEBUG - {"clientId": {"$oid": "67d2c4b8571072e3844332dc"}, "message": "Connection checked in", "serverHost": "3.144.134.141", "serverPort": 27017, "driverConnectionId": 1}
2025-03-13 16:43:43,577 - pymongo.serverSelection - DEBUG - {"message": "Server selection started", "selector": "<function any_server_selector at 0x000001BB56EE8720>", "operation": "getMore", "topologyDescription": "<TopologyDescription id: 67d2c4b8571072e3844332dc, topology_type: Single, servers: [<ServerDescription ('3.144.134.141', 27017) server_type: Standalone, rtt: 0.25>]>", "clientId": {"$oid": "67d2c4b8571072e3844332dc"}}
2025-03-13 16:43:43,578 - pymongo.serverSelection - DEBUG - {"message": "Server selection succeeded", "selector": "<function any_server_selector at 0x000001BB56EE8720>", "operation": "getMore", "topologyDescription": "<TopologyDescription id: 67d2c4b8571072e3844332dc, topology_type: Single, servers: [<ServerDescription ('3.144.134.141', 27017) server_type: Standalone, rtt: 0.25>]>", "clientId": {"$oid": "67d2c4b8571072e3844332dc"}, "serverHost": "3.144.134.141", "serverPort": 27017}
2025-03-13 16:43:43,579 - pymongo.connection - DEBUG - {"clientId": {"$oid": "67d2c4b8571072e3844332dc"}, "message": "Connection checkout started", "serverHost": "3.144.134.141", "serverPort": 27017}
2025-03-13 16:43:43,579 - pymongo.connection - DEBUG - {"clientId": {"$oid": "67d2c4b8571072e3844332dc"}, "message": "Connection checked out", "serverHost": "3.144.134.141", "serverPort": 27017, "driverConnectionId": 1, "durationMS": 0.0}
2025-03-13 16:43:43,580 - pymongo.command - DEBUG - {"clientId": {"$oid": "67d2c4b8571072e3844332dc"}, "message": "Command started", "command": "{\"getMore\": 3373791204338896991, \"collection\": \"violations\", \"lsid\": {\"id\": {\"$binary\": {\"base64\": \"wP2n9/ZcRnOE2FikPbtwGw==\", \"subType\": \"04\"}}}, \"$db\": \"opal_server\"}", "commandName": "getMore", "databaseName": "opal_server", "requestId": 15724, "operationId": 15724, "driverConnectionId": 1, "serverConnectionId": 13235, "serverHost": "3.144.134.141", "serverPort": 27017}
2025-03-13 16:43:43,826 - pymongo.command - DEBUG - {"clientId": {"$oid": "67d2c4b8571072e3844332dc"}, "message": "Command succeeded", "durationMS": 245.43, "reply": "{\"cursor\": {\"nextBatch\": [{\"_id\": \"12861265\", \"name\": \"Unknown\", \"violation_count\": 1, \"violation_types\": [\"SPEED_HIGH\"], \"avg_severity\": 3.0, \"last_violation\": {\"$date\": \"2025-03-11T13:39:36.796Z\"}, \"vehicle_license\": \"860260057076571\"}], \"ns\": \"opal_server.violations\"}, \"ok\": 1.0}", "commandName": "getMore", "databaseName": "opal_server", "requestId": 15724, "operationId": 15724, "driverConnectionId": 1, "serverConnectionId": 13235, "serverHost": "3.144.134.141", "serverPort": 27017}
2025-03-13 16:43:43,827 - pymongo.connection - DEBUG - {"clientId": {"$oid": "67d2c4b8571072e3844332dc"}, "message": "Connection checked in", "serverHost": "3.144.134.141", "serverPort": 27017, "driverConnectionId": 1}
2025-03-13 16:43:43,827 - app.db.repositories.data_repository - INFO - Retrieved stats for 102 drivers
2025-03-13 16:43:43,827 - app.services.predictive_analytics - INFO - Retrieved 102 driver records
2025-03-13 16:43:43,828 - app.services.predictive_analytics - INFO - Successfully processed 9 drivers
2025-03-13 16:43:44,586 - pymongo.topology - DEBUG - {"topologyId": {"$oid": "67d2c4b8571072e3844332dc"}, "driverConnectionId": 1, "serverConnectionId": 13233, "serverHost": "3.144.134.141", "serverPort": 27017, "awaited": true, "durationMS": 10000.0, "reply": "{\"isWritablePrimary\": true, \"topologyVersion\": {\"processId\": {\"$oid\": \"67b7e5814f77c1a87c56d054\"}}, \"maxBsonObjectSize\": 16777216, \"maxMessageSizeBytes\": 48000000, \"maxWriteBatchSize\": 100000, \"localTime\": {\"$date\": \"2025-03-13T11:43:44.649Z\"}, \"logicalSessionTimeoutMinutes\": 30, \"connectionId\": 13233, \"maxWireVersion\": 25, \"ok\": 1.0}", "message": "Server heartbeat succeeded"}
2025-03-13 16:43:44,917 - pymongo.topology - DEBUG - {"topologyId": {"$oid": "67d2c4b8571072e3844332dc"}, "driverConnectionId": 1, "serverConnectionId": 13233, "serverHost": "3.144.134.141", "serverPort": 27017, "awaited": true, "message": "Server heartbeat started"}
2025-03-13 16:43:54,585 - pymongo.topology - DEBUG - {"topologyId": {"$oid": "67d2c4b8571072e3844332dc"}, "driverConnectionId": 1, "serverConnectionId": 13233, "serverHost": "3.144.134.141", "serverPort": 27017, "awaited": true, "durationMS": 9672.0000000023, "reply": "{\"isWritablePrimary\": true, \"topologyVersion\": {\"processId\": {\"$oid\": \"67b7e5814f77c1a87c56d054\"}}, \"maxBsonObjectSize\": 16777216, \"maxMessageSizeBytes\": 48000000, \"maxWriteBatchSize\": 100000, \"localTime\": {\"$date\": \"2025-03-13T11:43:54.649Z\"}, \"logicalSessionTimeoutMinutes\": 30, \"connectionId\": 13233, \"maxWireVersion\": 25, \"ok\": 1.0}", "message": "Server heartbeat succeeded"}
2025-03-13 16:43:54,586 - pymongo.topology - DEBUG - {"topologyId": {"$oid": "67d2c4b8571072e3844332dc"}, "driverConnectionId": 1, "serverConnectionId": 13233, "serverHost": "3.144.134.141", "serverPort": 27017, "awaited": true, "message": "Server heartbeat started"}
2025-03-13 16:44:00,302 - app.services.predictive_analytics - INFO - Starting driver risk prediction for last 5 days
2025-03-13 16:44:00,302 - app.db.repositories.data_repository - INFO - Fetching driver risk data for past 5 days
2025-03-13 16:44:00,302 - app.db.repositories.data_repository - DEBUG - Executing pipeline: [{'$match': {'event_time': {'$gte': datetime.datetime(2025, 3, 8, 16, 44, 0, 302803)}}}, {'$group': {'_id': '$driver_uuid', 'name': {'$first': '$driver_name'}, 'violation_count': {'$sum': 1}, 'violation_types': {'$addToSet': '$violation_type'}, 'avg_severity': {'$avg': {'$switch': {'branches': [{'case': {'$eq': ['$severity', 'HIGH']}, 'then': 3}, {'case': {'$eq': ['$severity', 'MEDIUM']}, 'then': 2}], 'default': 1}}}, 'last_violation': {'$max': '$event_time'}, 'max_speed': {'$max': '$telemetry.speed'}, 'vehicle_license': {'$first': '$vehicle_license'}}}, {'$sort': {'violation_count': -1}}]
2025-03-13 16:44:00,303 - pymongo.serverSelection - DEBUG - {"message": "Server selection started", "selector": "Primary()", "operation": "aggregate", "topologyDescription": "<TopologyDescription id: 67d2c4b8571072e3844332dc, topology_type: Single, servers: [<ServerDescription ('3.144.134.141', 27017) server_type: Standalone, rtt: 0.24744000000006056>]>", "clientId": {"$oid": "67d2c4b8571072e3844332dc"}}
2025-03-13 16:44:00,304 - pymongo.serverSelection - DEBUG - {"message": "Server selection succeeded", "selector": "Primary()", "operation": "aggregate", "topologyDescription": "<TopologyDescription id: 67d2c4b8571072e3844332dc, topology_type: Single, servers: [<ServerDescription ('3.144.134.141', 27017) server_type: Standalone, rtt: 0.24744000000006056>]>", "clientId": {"$oid": "67d2c4b8571072e3844332dc"}, "serverHost": "3.144.134.141", "serverPort": 27017}
2025-03-13 16:44:00,305 - pymongo.connection - DEBUG - {"clientId": {"$oid": "67d2c4b8571072e3844332dc"}, "message": "Connection checkout started", "serverHost": "3.144.134.141", "serverPort": 27017}
2025-03-13 16:44:00,305 - pymongo.connection - DEBUG - {"clientId": {"$oid": "67d2c4b8571072e3844332dc"}, "message": "Connection checked out", "serverHost": "3.144.134.141", "serverPort": 27017, "driverConnectionId": 1, "durationMS": 0.0}
2025-03-13 16:44:00,305 - pymongo.command - DEBUG - {"clientId": {"$oid": "67d2c4b8571072e3844332dc"}, "message": "Command started", "command": "{\"aggregate\": \"violations\", \"pipeline\": [{\"$match\": {\"event_time\": {\"$gte\": {\"$date\": \"2025-03-08T16:44:00.302Z\"}}}}, {\"$group\": {\"_id\": \"$driver_uuid\", \"name\": {\"$first\": \"$driver_name\"}, \"violation_count\": {\"$sum\": 1}, \"violation_types\": {\"$addToSet\": \"$violation_type\"}, \"avg_severity\": {\"$avg\": {\"$switch\": {\"branches\": [{\"case\": {\"$eq\": [\"$severity\", \"HIGH\"]}, \"then\": 3}, {\"case\": {\"$eq\": [\"$severity\", \"MEDIUM\"]}, \"then\": 2}], \"default\": 1}}}, \"last_violation\": {\"$max\": \"$event_time\"}, \"max_speed\": {\"$max\": \"$telemetry.speed\"}, \"vehicle_license\": {\"$first\": \"$vehicle_license\"}}}, {\"$sort\": {\"violation_count\": -1}}], \"lsid\": {\"id\": {\"$binary\": {\"base64\": \"wP2n9/ZcRnOE2FikPbtwGw==\", \"subType\": \"04\"}}}, \"$db\": \"opal_server\"}", "commandName": "aggregate", "databaseName": "opal_server", "requestId": 11478, "operationId": 11478, "driverConnectionId": 1, "serverConnectionId": 13235, "serverHost": "3.144.134.141", "serverPort": 27017}
2025-03-13 16:44:00,814 - pymongo.command - DEBUG - {"clientId": {"$oid": "67d2c4b8571072e3844332dc"}, "message": "Command succeeded", "durationMS": 509.13699999999994, "reply": "{\"cursor\": {\"firstBatch\": [{\"_id\": \"unknown\", \"name\": \"Unknown\", \"violation_count\": 1540, \"violation_types\": [\"SPEED_HIGH\", \"SPEED_LOW\", \"SPEED_MEDIUM\"], \"avg_severity\": 1.9064935064935065, \"last_violation\": {\"$date\": \"2025-03-13T11:30:01.013Z\"}, \"vehicle_license\": \"860260057075813\"}, {\"_id\": \"3dd80f61-5ed1-4038-b3a8-5d2e37759893\", \"name\": \"DALER SINGH\", \"violation_count\": 422, \"violation_types\": [\"SPEED_MEDIUM\", \"SPEED_LOW\"], \"avg_severity\": 1.661137440758294, \"last_violation\": {\"$date\": \"2025-03-11T15:04:20.407Z\"}, \"vehicle_license\": \"1313YD\"}, {\"_id\": \"ab007124-ab3c-4e74-9c14-2407e6e8975b\", \"name\": \"NAUSHAD 94941856\", \"violation_count\": 399, \"violation_types\": [\"SPEED_MEDIUM\", \"SPEED_LOW\"], \"avg_severity\": 1.4586466165413534, \"last_violation\": {\"$date\": \"2025-03-13T11:19:44.125Z\"}, \"vehicle_license\": \"2215 RK\"}, {\"_id\": \"10009164\", \"name\": \"Unknown\", \"violation_count\": 352, \"violation_types\": [\"SPEED_MEDIUM\", \"SPEED_LOW\", \"SPEED_HIGH\"], \"avg_severity\": 1.7017045454545454, \"last_viol...", "commandName": "aggregate", "databaseName": "opal_server", "requestId": 11478, "operationId": 11478, "driverConnectionId": 1, "serverConnectionId": 13235, "serverHost": "3.144.134.141", "serverPort": 27017}
2025-03-13 16:44:00,816 - pymongo.connection - DEBUG - {"clientId": {"$oid": "67d2c4b8571072e3844332dc"}, "message": "Connection checked in", "serverHost": "3.144.134.141", "serverPort": 27017, "driverConnectionId": 1}
2025-03-13 16:44:00,816 - pymongo.serverSelection - DEBUG - {"message": "Server selection started", "selector": "<function any_server_selector at 0x000001BB56EE8720>", "operation": "getMore", "topologyDescription": "<TopologyDescription id: 67d2c4b8571072e3844332dc, topology_type: Single, servers: [<ServerDescription ('3.144.134.141', 27017) server_type: Standalone, rtt: 0.24744000000006056>]>", "clientId": {"$oid": "67d2c4b8571072e3844332dc"}}
2025-03-13 16:44:00,817 - pymongo.serverSelection - DEBUG - {"message": "Server selection succeeded", "selector": "<function any_server_selector at 0x000001BB56EE8720>", "operation": "getMore", "topologyDescription": "<TopologyDescription id: 67d2c4b8571072e3844332dc, topology_type: Single, servers: [<ServerDescription ('3.144.134.141', 27017) server_type: Standalone, rtt: 0.24744000000006056>]>", "clientId": {"$oid": "67d2c4b8571072e3844332dc"}, "serverHost": "3.144.134.141", "serverPort": 27017}
2025-03-13 16:44:00,817 - pymongo.connection - DEBUG - {"clientId": {"$oid": "67d2c4b8571072e3844332dc"}, "message": "Connection checkout started", "serverHost": "3.144.134.141", "serverPort": 27017}
2025-03-13 16:44:00,818 - pymongo.connection - DEBUG - {"clientId": {"$oid": "67d2c4b8571072e3844332dc"}, "message": "Connection checked out", "serverHost": "3.144.134.141", "serverPort": 27017, "driverConnectionId": 1, "durationMS": 0.0}
2025-03-13 16:44:00,818 - pymongo.command - DEBUG - {"clientId": {"$oid": "67d2c4b8571072e3844332dc"}, "message": "Command started", "command": "{\"getMore\": 5607740866194850976, \"collection\": \"violations\", \"lsid\": {\"id\": {\"$binary\": {\"base64\": \"wP2n9/ZcRnOE2FikPbtwGw==\", \"subType\": \"04\"}}}, \"$db\": \"opal_server\"}", "commandName": "getMore", "databaseName": "opal_server", "requestId": 29358, "operationId": 29358, "driverConnectionId": 1, "serverConnectionId": 13235, "serverHost": "3.144.134.141", "serverPort": 27017}
2025-03-13 16:44:01,064 - pymongo.command - DEBUG - {"clientId": {"$oid": "67d2c4b8571072e3844332dc"}, "message": "Command succeeded", "durationMS": 245.78900000000002, "reply": "{\"cursor\": {\"nextBatch\": [{\"_id\": \"974227\", \"name\": \"Unknown\", \"violation_count\": 2, \"violation_types\": [\"SPEED_MEDIUM\"], \"avg_severity\": 2.0, \"last_violation\": {\"$date\": \"2025-03-10T16:23:40.317Z\"}, \"vehicle_license\": \"860665050844256\"}, {\"_id\": \"4574038\", \"name\": \"Unknown\", \"violation_count\": 2, \"violation_types\": [\"SPEED_HIGH\", \"SPEED_MEDIUM\"], \"avg_severity\": 2.5, \"last_violation\": {\"$date\": \"2025-03-10T04:10:29.208Z\"}, \"vehicle_license\": \"860665050851764\"}, {\"_id\": \"6482426\", \"name\": \"Unknown\", \"violation_count\": 2, \"violation_types\": [\"SPEED_LOW\"], \"avg_severity\": 1.0, \"last_violation\": {\"$date\": \"2025-03-12T05:23:56.475Z\"}, \"vehicle_license\": \"860665050637429\"}, {\"_id\": \"12854230\", \"name\": \"Unknown\", \"violation_count\": 1, \"violation_types\": [\"SPEED_MEDIUM\"], \"avg_severity\": 2.0, \"last_violation\": {\"$date\": \"2025-03-11T05:04:49.490Z\"}, \"vehicle_license\": \"860260056970113\"}, {\"_id\": \"13380099\", \"name\": \"Unknown\", \"violation_count\": 1, \"violation_types\": [\"SPEED_MEDIUM\"], \"avg_seve...", "commandName": "getMore", "databaseName": "opal_server", "requestId": 29358, "operationId": 29358, "driverConnectionId": 1, "serverConnectionId": 13235, "serverHost": "3.144.134.141", "serverPort": 27017}
2025-03-13 16:44:01,064 - pymongo.connection - DEBUG - {"clientId": {"$oid": "67d2c4b8571072e3844332dc"}, "message": "Connection checked in", "serverHost": "3.144.134.141", "serverPort": 27017, "driverConnectionId": 1}
2025-03-13 16:44:01,065 - app.db.repositories.data_repository - INFO - Retrieved stats for 111 drivers
2025-03-13 16:44:01,065 - app.services.predictive_analytics - INFO - Retrieved 111 driver records
2025-03-13 16:44:01,066 - app.services.predictive_analytics - INFO - Successfully processed 9 drivers
2025-03-13 16:44:04,588 - pymongo.topology - DEBUG - {"topologyId": {"$oid": "67d2c4b8571072e3844332dc"}, "driverConnectionId": 1, "serverConnectionId": 13233, "serverHost": "3.144.134.141", "serverPort": 27017, "awaited": true, "durationMS": 10000.0, "reply": "{\"isWritablePrimary\": true, \"topologyVersion\": {\"processId\": {\"$oid\": \"67b7e5814f77c1a87c56d054\"}}, \"maxBsonObjectSize\": 16777216, \"maxMessageSizeBytes\": 48000000, \"maxWriteBatchSize\": 100000, \"localTime\": {\"$date\": \"2025-03-13T11:44:04.650Z\"}, \"logicalSessionTimeoutMinutes\": 30, \"connectionId\": 13233, \"maxWireVersion\": 25, \"ok\": 1.0}", "message": "Server heartbeat succeeded"}
2025-03-13 16:44:04,588 - pymongo.topology - DEBUG - {"topologyId": {"$oid": "67d2c4b8571072e3844332dc"}, "driverConnectionId": 1, "serverConnectionId": 13233, "serverHost": "3.144.134.141", "serverPort": 27017, "awaited": true, "message": "Server heartbeat started"}
2025-03-13 16:44:14,589 - pymongo.topology - DEBUG - {"topologyId": {"$oid": "67d2c4b8571072e3844332dc"}, "driverConnectionId": 1, "serverConnectionId": 13233, "serverHost": "3.144.134.141", "serverPort": 27017, "awaited": true, "durationMS": 10000.0, "reply": "{\"isWritablePrimary\": true, \"topologyVersion\": {\"processId\": {\"$oid\": \"67b7e5814f77c1a87c56d054\"}}, \"maxBsonObjectSize\": 16777216, \"maxMessageSizeBytes\": 48000000, \"maxWriteBatchSize\": 100000, \"localTime\": {\"$date\": \"2025-03-13T11:44:14.651Z\"}, \"logicalSessionTimeoutMinutes\": 30, \"connectionId\": 13233, \"maxWireVersion\": 25, \"ok\": 1.0}", "message": "Server heartbeat succeeded"}
2025-03-13 16:44:14,589 - pymongo.topology - DEBUG - {"topologyId": {"$oid": "67d2c4b8571072e3844332dc"}, "driverConnectionId": 1, "serverConnectionId": 13233, "serverHost": "3.144.134.141", "serverPort": 27017, "awaited": true, "message": "Server heartbeat started"}
2025-03-13 16:44:24,589 - pymongo.topology - DEBUG - {"topologyId": {"$oid": "67d2c4b8571072e3844332dc"}, "driverConnectionId": 1, "serverConnectionId": 13233, "serverHost": "3.144.134.141", "serverPort": 27017, "awaited": true, "durationMS": 10000.0, "reply": "{\"isWritablePrimary\": true, \"topologyVersion\": {\"processId\": {\"$oid\": \"67b7e5814f77c1a87c56d054\"}}, \"maxBsonObjectSize\": 16777216, \"maxMessageSizeBytes\": 48000000, \"maxWriteBatchSize\": 100000, \"localTime\": {\"$date\": \"2025-03-13T11:44:24.652Z\"}, \"logicalSessionTimeoutMinutes\": 30, \"connectionId\": 13233, \"maxWireVersion\": 25, \"ok\": 1.0}", "message": "Server heartbeat succeeded"}
2025-03-13 16:44:24,590 - pymongo.topology - DEBUG - {"topologyId": {"$oid": "67d2c4b8571072e3844332dc"}, "driverConnectionId": 1, "serverConnectionId": 13233, "serverHost": "3.144.134.141", "serverPort": 27017, "awaited": true, "message": "Server heartbeat started"}
2025-03-13 16:44:34,590 - pymongo.topology - DEBUG - {"topologyId": {"$oid": "67d2c4b8571072e3844332dc"}, "driverConnectionId": 1, "serverConnectionId": 13233, "serverHost": "3.144.134.141", "serverPort": 27017, "awaited": true, "durationMS": 10000.0, "reply": "{\"isWritablePrimary\": true, \"topologyVersion\": {\"processId\": {\"$oid\": \"67b7e5814f77c1a87c56d054\"}}, \"maxBsonObjectSize\": 16777216, \"maxMessageSizeBytes\": 48000000, \"maxWriteBatchSize\": 100000, \"localTime\": {\"$date\": \"2025-03-13T11:44:34.653Z\"}, \"logicalSessionTimeoutMinutes\": 30, \"connectionId\": 13233, \"maxWireVersion\": 25, \"ok\": 1.0}", "message": "Server heartbeat succeeded"}
2025-03-13 16:44:34,590 - pymongo.topology - DEBUG - {"topologyId": {"$oid": "67d2c4b8571072e3844332dc"}, "driverConnectionId": 1, "serverConnectionId": 13233, "serverHost": "3.144.134.141", "serverPort": 27017, "awaited": true, "message": "Server heartbeat started"}
2025-03-13 16:44:44,600 - pymongo.topology - DEBUG - {"topologyId": {"$oid": "67d2c4b8571072e3844332dc"}, "driverConnectionId": 1, "serverConnectionId": 13233, "serverHost": "3.144.134.141", "serverPort": 27017, "awaited": true, "durationMS": 10014.999999999418, "reply": "{\"isWritablePrimary\": true, \"topologyVersion\": {\"processId\": {\"$oid\": \"67b7e5814f77c1a87c56d054\"}}, \"maxBsonObjectSize\": 16777216, \"maxMessageSizeBytes\": 48000000, \"maxWriteBatchSize\": 100000, \"localTime\": {\"$date\": \"2025-03-13T11:44:44.663Z\"}, \"logicalSessionTimeoutMinutes\": 30, \"connectionId\": 13233, \"maxWireVersion\": 25, \"ok\": 1.0}", "message": "Server heartbeat succeeded"}
2025-03-13 16:44:44,601 - pymongo.topology - DEBUG - {"topologyId": {"$oid": "67d2c4b8571072e3844332dc"}, "driverConnectionId": 1, "serverConnectionId": 13233, "serverHost": "3.144.134.141", "serverPort": 27017, "awaited": true, "message": "Server heartbeat started"}
2025-03-13 16:44:54,598 - pymongo.topology - DEBUG - {"topologyId": {"$oid": "67d2c4b8571072e3844332dc"}, "driverConnectionId": 1, "serverConnectionId": 13233, "serverHost": "3.144.134.141", "serverPort": 27017, "awaited": true, "durationMS": 9985.000000000582, "reply": "{\"isWritablePrimary\": true, \"topologyVersion\": {\"processId\": {\"$oid\": \"67b7e5814f77c1a87c56d054\"}}, \"maxBsonObjectSize\": 16777216, \"maxMessageSizeBytes\": 48000000, \"maxWriteBatchSize\": 100000, \"localTime\": {\"$date\": \"2025-03-13T11:44:54.663Z\"}, \"logicalSessionTimeoutMinutes\": 30, \"connectionId\": 13233, \"maxWireVersion\": 25, \"ok\": 1.0}", "message": "Server heartbeat succeeded"}
2025-03-13 16:44:54,600 - pymongo.topology - DEBUG - {"topologyId": {"$oid": "67d2c4b8571072e3844332dc"}, "driverConnectionId": 1, "serverConnectionId": 13233, "serverHost": "3.144.134.141", "serverPort": 27017, "awaited": true, "message": "Server heartbeat started"}
2025-03-13 16:45:04,601 - pymongo.topology - DEBUG - {"topologyId": {"$oid": "67d2c4b8571072e3844332dc"}, "driverConnectionId": 1, "serverConnectionId": 13233, "serverHost": "3.144.134.141", "serverPort": 27017, "awaited": true, "durationMS": 10014.999999999418, "reply": "{\"isWritablePrimary\": true, \"topologyVersion\": {\"processId\": {\"$oid\": \"67b7e5814f77c1a87c56d054\"}}, \"maxBsonObjectSize\": 16777216, \"maxMessageSizeBytes\": 48000000, \"maxWriteBatchSize\": 100000, \"localTime\": {\"$date\": \"2025-03-13T11:45:04.667Z\"}, \"logicalSessionTimeoutMinutes\": 30, \"connectionId\": 13233, \"maxWireVersion\": 25, \"ok\": 1.0}", "message": "Server heartbeat succeeded"}
2025-03-13 16:45:04,602 - pymongo.topology - DEBUG - {"topologyId": {"$oid": "67d2c4b8571072e3844332dc"}, "driverConnectionId": 1, "serverConnectionId": 13233, "serverHost": "3.144.134.141", "serverPort": 27017, "awaited": true, "message": "Server heartbeat started"}
2025-03-13 16:45:14,603 - pymongo.topology - DEBUG - {"topologyId": {"$oid": "67d2c4b8571072e3844332dc"}, "driverConnectionId": 1, "serverConnectionId": 13233, "serverHost": "3.144.134.141", "serverPort": 27017, "awaited": true, "durationMS": 10000.0, "reply": "{\"isWritablePrimary\": true, \"topologyVersion\": {\"processId\": {\"$oid\": \"67b7e5814f77c1a87c56d054\"}}, \"maxBsonObjectSize\": 16777216, \"maxMessageSizeBytes\": 48000000, \"maxWriteBatchSize\": 100000, \"localTime\": {\"$date\": \"2025-03-13T11:45:14.668Z\"}, \"logicalSessionTimeoutMinutes\": 30, \"connectionId\": 13233, \"maxWireVersion\": 25, \"ok\": 1.0}", "message": "Server heartbeat succeeded"}
2025-03-13 16:45:14,603 - pymongo.topology - DEBUG - {"topologyId": {"$oid": "67d2c4b8571072e3844332dc"}, "driverConnectionId": 1, "serverConnectionId": 13233, "serverHost": "3.144.134.141", "serverPort": 27017, "awaited": true, "message": "Server heartbeat started"}
2025-03-13 16:45:24,671 - pymongo.topology - DEBUG - {"topologyId": {"$oid": "67d2c4b8571072e3844332dc"}, "driverConnectionId": 1, "serverConnectionId": 13233, "serverHost": "3.144.134.141", "serverPort": 27017, "awaited": true, "durationMS": 10062.999999998283, "reply": "{\"isWritablePrimary\": true, \"topologyVersion\": {\"processId\": {\"$oid\": \"67b7e5814f77c1a87c56d054\"}}, \"maxBsonObjectSize\": 16777216, \"maxMessageSizeBytes\": 48000000, \"maxWriteBatchSize\": 100000, \"localTime\": {\"$date\": \"2025-03-13T11:45:24.669Z\"}, \"logicalSessionTimeoutMinutes\": 30, \"connectionId\": 13233, \"maxWireVersion\": 25, \"ok\": 1.0}", "message": "Server heartbeat succeeded"}
2025-03-13 16:45:24,671 - pymongo.topology - DEBUG - {"topologyId": {"$oid": "67d2c4b8571072e3844332dc"}, "driverConnectionId": 1, "serverConnectionId": 13233, "serverHost": "3.144.134.141", "serverPort": 27017, "awaited": true, "message": "Server heartbeat started"}
2025-03-13 16:45:34,606 - pymongo.topology - DEBUG - {"topologyId": {"$oid": "67d2c4b8571072e3844332dc"}, "driverConnectionId": 1, "serverConnectionId": 13233, "serverHost": "3.144.134.141", "serverPort": 27017, "awaited": true, "durationMS": 9937.000000001717, "reply": "{\"isWritablePrimary\": true, \"topologyVersion\": {\"processId\": {\"$oid\": \"67b7e5814f77c1a87c56d054\"}}, \"maxBsonObjectSize\": 16777216, \"maxMessageSizeBytes\": 48000000, \"maxWriteBatchSize\": 100000, \"localTime\": {\"$date\": \"2025-03-13T11:45:34.671Z\"}, \"logicalSessionTimeoutMinutes\": 30, \"connectionId\": 13233, \"maxWireVersion\": 25, \"ok\": 1.0}", "message": "Server heartbeat succeeded"}
2025-03-13 16:45:34,607 - pymongo.topology - DEBUG - {"topologyId": {"$oid": "67d2c4b8571072e3844332dc"}, "driverConnectionId": 1, "serverConnectionId": 13233, "serverHost": "3.144.134.141", "serverPort": 27017, "awaited": true, "message": "Server heartbeat started"}
2025-03-13 16:45:44,607 - pymongo.topology - DEBUG - {"topologyId": {"$oid": "67d2c4b8571072e3844332dc"}, "driverConnectionId": 1, "serverConnectionId": 13233, "serverHost": "3.144.134.141", "serverPort": 27017, "awaited": true, "durationMS": 10000.0, "reply": "{\"isWritablePrimary\": true, \"topologyVersion\": {\"processId\": {\"$oid\": \"67b7e5814f77c1a87c56d054\"}}, \"maxBsonObjectSize\": 16777216, \"maxMessageSizeBytes\": 48000000, \"maxWriteBatchSize\": 100000, \"localTime\": {\"$date\": \"2025-03-13T11:45:44.673Z\"}, \"logicalSessionTimeoutMinutes\": 30, \"connectionId\": 13233, \"maxWireVersion\": 25, \"ok\": 1.0}", "message": "Server heartbeat succeeded"}
2025-03-13 16:45:44,608 - pymongo.topology - DEBUG - {"topologyId": {"$oid": "67d2c4b8571072e3844332dc"}, "driverConnectionId": 1, "serverConnectionId": 13233, "serverHost": "3.144.134.141", "serverPort": 27017, "awaited": true, "message": "Server heartbeat started"}
2025-03-13 16:45:54,608 - pymongo.topology - DEBUG - {"topologyId": {"$oid": "67d2c4b8571072e3844332dc"}, "driverConnectionId": 1, "serverConnectionId": 13233, "serverHost": "3.144.134.141", "serverPort": 27017, "awaited": true, "durationMS": 10000.0, "reply": "{\"isWritablePrimary\": true, \"topologyVersion\": {\"processId\": {\"$oid\": \"67b7e5814f77c1a87c56d054\"}}, \"maxBsonObjectSize\": 16777216, \"maxMessageSizeBytes\": 48000000, \"maxWriteBatchSize\": 100000, \"localTime\": {\"$date\": \"2025-03-13T11:45:54.674Z\"}, \"logicalSessionTimeoutMinutes\": 30, \"connectionId\": 13233, \"maxWireVersion\": 25, \"ok\": 1.0}", "message": "Server heartbeat succeeded"}
2025-03-13 16:45:54,609 - pymongo.topology - DEBUG - {"topologyId": {"$oid": "67d2c4b8571072e3844332dc"}, "driverConnectionId": 1, "serverConnectionId": 13233, "serverHost": "3.144.134.141", "serverPort": 27017, "awaited": true, "message": "Server heartbeat started"}
2025-03-13 16:46:04,610 - pymongo.topology - DEBUG - {"topologyId": {"$oid": "67d2c4b8571072e3844332dc"}, "driverConnectionId": 1, "serverConnectionId": 13233, "serverHost": "3.144.134.141", "serverPort": 27017, "awaited": true, "durationMS": 10000.0, "reply": "{\"isWritablePrimary\": true, \"topologyVersion\": {\"processId\": {\"$oid\": \"67b7e5814f77c1a87c56d054\"}}, \"maxBsonObjectSize\": 16777216, \"maxMessageSizeBytes\": 48000000, \"maxWriteBatchSize\": 100000, \"localTime\": {\"$date\": \"2025-03-13T11:46:04.676Z\"}, \"logicalSessionTimeoutMinutes\": 30, \"connectionId\": 13233, \"maxWireVersion\": 25, \"ok\": 1.0}", "message": "Server heartbeat succeeded"}
2025-03-13 16:46:04,611 - pymongo.topology - DEBUG - {"topologyId": {"$oid": "67d2c4b8571072e3844332dc"}, "driverConnectionId": 1, "serverConnectionId": 13233, "serverHost": "3.144.134.141", "serverPort": 27017, "awaited": true, "message": "Server heartbeat started"}
2025-03-13 16:46:14,611 - pymongo.topology - DEBUG - {"topologyId": {"$oid": "67d2c4b8571072e3844332dc"}, "driverConnectionId": 1, "serverConnectionId": 13233, "serverHost": "3.144.134.141", "serverPort": 27017, "awaited": true, "durationMS": 10000.0, "reply": "{\"isWritablePrimary\": true, \"topologyVersion\": {\"processId\": {\"$oid\": \"67b7e5814f77c1a87c56d054\"}}, \"maxBsonObjectSize\": 16777216, \"maxMessageSizeBytes\": 48000000, \"maxWriteBatchSize\": 100000, \"localTime\": {\"$date\": \"2025-03-13T11:46:14.677Z\"}, \"logicalSessionTimeoutMinutes\": 30, \"connectionId\": 13233, \"maxWireVersion\": 25, \"ok\": 1.0}", "message": "Server heartbeat succeeded"}
2025-03-13 16:46:14,612 - pymongo.topology - DEBUG - {"topologyId": {"$oid": "67d2c4b8571072e3844332dc"}, "driverConnectionId": 1, "serverConnectionId": 13233, "serverHost": "3.144.134.141", "serverPort": 27017, "awaited": true, "message": "Server heartbeat started"}
2025-03-13 16:49:18,538 - numexpr.utils - INFO - Note: NumExpr detected 12 cores but "NUMEXPR_MAX_THREADS" not set, so enforcing safe limit of 8.
2025-03-13 16:49:18,538 - numexpr.utils - INFO - NumExpr defaulting to 8 threads.
2025-03-13 16:49:21,233 - matplotlib - DEBUG - matplotlib data path: C:\Users\msameerakram\AppData\Local\anaconda3\Lib\site-packages\matplotlib\mpl-data
2025-03-13 16:49:21,241 - matplotlib - DEBUG - CONFIGDIR=C:\Users\msameerakram\.matplotlib
2025-03-13 16:49:21,243 - matplotlib - DEBUG - interactive is False
2025-03-13 16:49:21,243 - matplotlib - DEBUG - platform is win32
2025-03-13 16:49:21,320 - matplotlib - DEBUG - CACHEDIR=C:\Users\msameerakram\.matplotlib
2025-03-13 16:49:21,324 - matplotlib.font_manager - DEBUG - Using fontManager instance from C:\Users\msameerakram\.matplotlib\fontlist-v390.json
2025-03-13 16:49:25,217 - numexpr.utils - INFO - Note: NumExpr detected 12 cores but "NUMEXPR_MAX_THREADS" not set, so enforcing safe limit of 8.
2025-03-13 16:49:25,217 - numexpr.utils - INFO - NumExpr defaulting to 8 threads.
2025-03-13 16:49:26,491 - matplotlib - DEBUG - matplotlib data path: C:\Users\msameerakram\AppData\Local\anaconda3\Lib\site-packages\matplotlib\mpl-data
2025-03-13 16:49:26,497 - matplotlib - DEBUG - CONFIGDIR=C:\Users\msameerakram\.matplotlib
2025-03-13 16:49:26,498 - matplotlib - DEBUG - interactive is False
2025-03-13 16:49:26,499 - matplotlib - DEBUG - platform is win32
2025-03-13 16:49:26,555 - matplotlib - DEBUG - CACHEDIR=C:\Users\msameerakram\.matplotlib
2025-03-13 16:49:26,559 - matplotlib.font_manager - DEBUG - Using fontManager instance from C:\Users\msameerakram\.matplotlib\fontlist-v390.json
2025-03-13 16:49:27,886 - asyncio - DEBUG - Using selector: SelectSelector
2025-03-13 16:49:28,201 - pymongo.topology - DEBUG - {"topologyId": {"$oid": "67d2c6474b050be8041a6a54"}, "message": "Starting topology monitoring"}
2025-03-13 16:49:28,202 - pymongo.topology - DEBUG - {"topologyId": {"$oid": "67d2c6474b050be8041a6a54"}, "previousDescription": "<TopologyDescription id: 67d2c6474b050be8041a6a54, topology_type: Unknown, servers: []>", "newDescription": "<TopologyDescription id: 67d2c6474b050be8041a6a54, topology_type: Unknown, servers: [<ServerDescription ('3.144.134.141', 27017) server_type: Unknown, rtt: None>]>", "message": "Topology description changed"}
2025-03-13 16:49:28,202 - pymongo.topology - DEBUG - {"topologyId": {"$oid": "67d2c6474b050be8041a6a54"}, "serverHost": "3.144.134.141", "serverPort": 27017, "message": "Starting server monitoring"}
2025-03-13 16:49:28,204 - pymongo.connection - DEBUG - {"clientId": {"$oid": "67d2c6474b050be8041a6a54"}, "message": "Connection pool created", "serverHost": "3.144.134.141", "serverPort": 27017}
2025-03-13 16:49:28,206 - pymongo.serverSelection - DEBUG - {"message": "Server selection started", "selector": "Primary()", "operation": "ping", "topologyDescription": "<TopologyDescription id: 67d2c6474b050be8041a6a54, topology_type: Unknown, servers: [<ServerDescription ('3.144.134.141', 27017) server_type: Unknown, rtt: None>]>", "clientId": {"$oid": "67d2c6474b050be8041a6a54"}}
2025-03-13 16:49:28,206 - pymongo.serverSelection - DEBUG - {"message": "Waiting for suitable server to become available", "selector": "Primary()", "operation": "ping", "topologyDescription": "<TopologyDescription id: 67d2c6474b050be8041a6a54, topology_type: Unknown, servers: [<ServerDescription ('3.144.134.141', 27017) server_type: Unknown, rtt: None>]>", "clientId": {"$oid": "67d2c6474b050be8041a6a54"}, "remainingTimeMS": 30}
2025-03-13 16:49:28,461 - pymongo.topology - DEBUG - {"topologyId": {"$oid": "67d2c6474b050be8041a6a54"}, "driverConnectionId": 1, "serverHost": "3.144.134.141", "serverPort": 27017, "awaited": false, "message": "Server heartbeat started"}
2025-03-13 16:49:28,707 - pymongo.topology - DEBUG - {"topologyId": {"$oid": "67d2c6474b050be8041a6a54"}, "driverConnectionId": 1, "serverConnectionId": 13236, "serverHost": "3.144.134.141", "serverPort": 27017, "awaited": false, "durationMS": 234.00000000037835, "reply": "{\"helloOk\": true, \"ismaster\": true, \"topologyVersion\": {\"processId\": {\"$oid\": \"67b7e5814f77c1a87c56d054\"}}, \"maxBsonObjectSize\": 16777216, \"maxMessageSizeBytes\": 48000000, \"maxWriteBatchSize\": 100000, \"localTime\": {\"$date\": \"2025-03-13T11:49:28.775Z\"}, \"logicalSessionTimeoutMinutes\": 30, \"connectionId\": 13236, \"maxWireVersion\": 25, \"ok\": 1.0}", "message": "Server heartbeat succeeded"}
2025-03-13 16:49:28,708 - pymongo.connection - DEBUG - {"clientId": {"$oid": "67d2c6474b050be8041a6a54"}, "message": "Connection pool ready", "serverHost": "3.144.134.141", "serverPort": 27017}
2025-03-13 16:49:28,708 - pymongo.topology - DEBUG - {"topologyId": {"$oid": "67d2c6474b050be8041a6a54"}, "previousDescription": "<TopologyDescription id: 67d2c6474b050be8041a6a54, topology_type: Unknown, servers: [<ServerDescription ('3.144.134.141', 27017) server_type: Unknown, rtt: None>]>", "newDescription": "<TopologyDescription id: 67d2c6474b050be8041a6a54, topology_type: Single, servers: [<ServerDescription ('3.144.134.141', 27017) server_type: Standalone, rtt: 0.23400000000037835>]>", "message": "Topology description changed"}
2025-03-13 16:49:28,709 - pymongo.serverSelection - DEBUG - {"message": "Server selection succeeded", "selector": "Primary()", "operation": "ping", "topologyDescription": "<TopologyDescription id: 67d2c6474b050be8041a6a54, topology_type: Single, servers: [<ServerDescription ('3.144.134.141', 27017) server_type: Standalone, rtt: 0.23400000000037835>]>", "clientId": {"$oid": "67d2c6474b050be8041a6a54"}, "serverHost": "3.144.134.141", "serverPort": 27017}
2025-03-13 16:49:28,710 - pymongo.connection - DEBUG - {"clientId": {"$oid": "67d2c6474b050be8041a6a54"}, "message": "Connection checkout started", "serverHost": "3.144.134.141", "serverPort": 27017}
2025-03-13 16:49:28,711 - pymongo.topology - DEBUG - {"topologyId": {"$oid": "67d2c6474b050be8041a6a54"}, "driverConnectionId": 1, "serverConnectionId": 13236, "serverHost": "3.144.134.141", "serverPort": 27017, "awaited": true, "message": "Server heartbeat started"}
2025-03-13 16:49:28,711 - pymongo.connection - DEBUG - {"clientId": {"$oid": "67d2c6474b050be8041a6a54"}, "message": "Connection created", "serverHost": "3.144.134.141", "serverPort": 27017, "driverConnectionId": 1}
2025-03-13 16:49:29,470 - pymongo.connection - DEBUG - {"clientId": {"$oid": "67d2c6474b050be8041a6a54"}, "message": "Connection ready", "serverHost": "3.144.134.141", "serverPort": 27017, "driverConnectionId": 1, "durationMS": 0.5}
2025-03-13 16:49:29,470 - pymongo.connection - DEBUG - {"clientId": {"$oid": "67d2c6474b050be8041a6a54"}, "message": "Connection checked out", "serverHost": "3.144.134.141", "serverPort": 27017, "driverConnectionId": 1, "durationMS": 0.75}
2025-03-13 16:49:29,471 - pymongo.command - DEBUG - {"clientId": {"$oid": "67d2c6474b050be8041a6a54"}, "message": "Command started", "command": "{\"ping\": 1, \"lsid\": {\"id\": {\"$binary\": {\"base64\": \"GPqwiGW1TnWY+50S5JQrbA==\", \"subType\": \"04\"}}}, \"$db\": \"opal_server\"}", "commandName": "ping", "databaseName": "opal_server", "requestId": 6334, "operationId": 6334, "driverConnectionId": 1, "serverConnectionId": 13237, "serverHost": "3.144.134.141", "serverPort": 27017}
2025-03-13 16:49:29,715 - pymongo.command - DEBUG - {"clientId": {"$oid": "67d2c6474b050be8041a6a54"}, "message": "Command succeeded", "durationMS": 244.41, "reply": "{\"ok\": 1.0}", "commandName": "ping", "databaseName": "opal_server", "requestId": 6334, "operationId": 6334, "driverConnectionId": 1, "serverConnectionId": 13237, "serverHost": "3.144.134.141", "serverPort": 27017}
2025-03-13 16:49:29,715 - pymongo.connection - DEBUG - {"clientId": {"$oid": "67d2c6474b050be8041a6a54"}, "message": "Connection checked in", "serverHost": "3.144.134.141", "serverPort": 27017, "driverConnectionId": 1}
2025-03-13 16:49:34,934 - app.services.predictive_analytics - INFO - Starting driver risk prediction for last 5 days
2025-03-13 16:49:34,934 - app.db.repositories.data_repository - INFO - Fetching driver risk data for past 5 days
2025-03-13 16:49:34,934 - app.db.repositories.data_repository - DEBUG - Executing pipeline: [{'$match': {'event_time': {'$gte': datetime.datetime(2025, 3, 8, 16, 49, 34, 934340)}}}, {'$group': {'_id': '$driver_uuid', 'name': {'$first': '$driver_name'}, 'violation_count': {'$sum': 1}, 'violation_types': {'$addToSet': '$violation_type'}, 'avg_severity': {'$avg': {'$switch': {'branches': [{'case': {'$eq': ['$severity', 'HIGH']}, 'then': 3}, {'case': {'$eq': ['$severity', 'MEDIUM']}, 'then': 2}], 'default': 1}}}, 'last_violation': {'$max': '$event_time'}, 'max_speed': {'$max': '$telemetry.speed'}, 'vehicle_license': {'$first': '$vehicle_license'}}}, {'$sort': {'violation_count': -1}}]
2025-03-13 16:49:34,935 - pymongo.serverSelection - DEBUG - {"message": "Server selection started", "selector": "Primary()", "operation": "aggregate", "topologyDescription": "<TopologyDescription id: 67d2c6474b050be8041a6a54, topology_type: Single, servers: [<ServerDescription ('3.144.134.141', 27017) server_type: Standalone, rtt: 0.23400000000037835>]>", "clientId": {"$oid": "67d2c6474b050be8041a6a54"}}
2025-03-13 16:49:34,935 - pymongo.serverSelection - DEBUG - {"message": "Server selection succeeded", "selector": "Primary()", "operation": "aggregate", "topologyDescription": "<TopologyDescription id: 67d2c6474b050be8041a6a54, topology_type: Single, servers: [<ServerDescription ('3.144.134.141', 27017) server_type: Standalone, rtt: 0.23400000000037835>]>", "clientId": {"$oid": "67d2c6474b050be8041a6a54"}, "serverHost": "3.144.134.141", "serverPort": 27017}
2025-03-13 16:49:34,936 - pymongo.connection - DEBUG - {"clientId": {"$oid": "67d2c6474b050be8041a6a54"}, "message": "Connection checkout started", "serverHost": "3.144.134.141", "serverPort": 27017}
2025-03-13 16:49:34,937 - pymongo.connection - DEBUG - {"clientId": {"$oid": "67d2c6474b050be8041a6a54"}, "message": "Connection checked out", "serverHost": "3.144.134.141", "serverPort": 27017, "driverConnectionId": 1, "durationMS": 0.0}
2025-03-13 16:49:34,937 - pymongo.command - DEBUG - {"clientId": {"$oid": "67d2c6474b050be8041a6a54"}, "message": "Command started", "command": "{\"aggregate\": \"violations\", \"pipeline\": [{\"$match\": {\"event_time\": {\"$gte\": {\"$date\": \"2025-03-08T16:49:34.934Z\"}}}}, {\"$group\": {\"_id\": \"$driver_uuid\", \"name\": {\"$first\": \"$driver_name\"}, \"violation_count\": {\"$sum\": 1}, \"violation_types\": {\"$addToSet\": \"$violation_type\"}, \"avg_severity\": {\"$avg\": {\"$switch\": {\"branches\": [{\"case\": {\"$eq\": [\"$severity\", \"HIGH\"]}, \"then\": 3}, {\"case\": {\"$eq\": [\"$severity\", \"MEDIUM\"]}, \"then\": 2}], \"default\": 1}}}, \"last_violation\": {\"$max\": \"$event_time\"}, \"max_speed\": {\"$max\": \"$telemetry.speed\"}, \"vehicle_license\": {\"$first\": \"$vehicle_license\"}}}, {\"$sort\": {\"violation_count\": -1}}], \"lsid\": {\"id\": {\"$binary\": {\"base64\": \"GPqwiGW1TnWY+50S5JQrbA==\", \"subType\": \"04\"}}}, \"$db\": \"opal_server\"}", "commandName": "aggregate", "databaseName": "opal_server", "requestId": 26500, "operationId": 26500, "driverConnectionId": 1, "serverConnectionId": 13237, "serverHost": "3.144.134.141", "serverPort": 27017}
2025-03-13 16:49:35,447 - pymongo.command - DEBUG - {"clientId": {"$oid": "67d2c6474b050be8041a6a54"}, "message": "Command succeeded", "durationMS": 509.46100000000007, "reply": "{\"cursor\": {\"firstBatch\": [{\"_id\": \"unknown\", \"name\": \"Unknown\", \"violation_count\": 1537, \"violation_types\": [\"SPEED_MEDIUM\", \"SPEED_LOW\", \"SPEED_HIGH\"], \"avg_severity\": 1.907612231620039, \"last_violation\": {\"$date\": \"2025-03-13T11:47:32.961Z\"}, \"vehicle_license\": \"860665050900298\"}, {\"_id\": \"3dd80f61-5ed1-4038-b3a8-5d2e37759893\", \"name\": \"DALER SINGH\", \"violation_count\": 422, \"violation_types\": [\"SPEED_LOW\", \"SPEED_MEDIUM\"], \"avg_severity\": 1.661137440758294, \"last_violation\": {\"$date\": \"2025-03-11T15:04:20.407Z\"}, \"vehicle_license\": \"1313YD\"}, {\"_id\": \"ab007124-ab3c-4e74-9c14-2407e6e8975b\", \"name\": \"NAUSHAD 94941856\", \"violation_count\": 399, \"violation_types\": [\"SPEED_LOW\", \"SPEED_MEDIUM\"], \"avg_severity\": 1.4586466165413534, \"last_violation\": {\"$date\": \"2025-03-13T11:19:44.125Z\"}, \"vehicle_license\": \"2215 RK\"}, {\"_id\": \"10009164\", \"name\": \"Unknown\", \"violation_count\": 352, \"violation_types\": [\"SPEED_LOW\", \"SPEED_HIGH\", \"SPEED_MEDIUM\"], \"avg_severity\": 1.7017045454545454, \"last_viola...", "commandName": "aggregate", "databaseName": "opal_server", "requestId": 26500, "operationId": 26500, "driverConnectionId": 1, "serverConnectionId": 13237, "serverHost": "3.144.134.141", "serverPort": 27017}
2025-03-13 16:49:35,449 - pymongo.connection - DEBUG - {"clientId": {"$oid": "67d2c6474b050be8041a6a54"}, "message": "Connection checked in", "serverHost": "3.144.134.141", "serverPort": 27017, "driverConnectionId": 1}
2025-03-13 16:49:35,450 - pymongo.serverSelection - DEBUG - {"message": "Server selection started", "selector": "<function any_server_selector at 0x000001A7AF148720>", "operation": "getMore", "topologyDescription": "<TopologyDescription id: 67d2c6474b050be8041a6a54, topology_type: Single, servers: [<ServerDescription ('3.144.134.141', 27017) server_type: Standalone, rtt: 0.23400000000037835>]>", "clientId": {"$oid": "67d2c6474b050be8041a6a54"}}
2025-03-13 16:49:35,451 - pymongo.serverSelection - DEBUG - {"message": "Server selection succeeded", "selector": "<function any_server_selector at 0x000001A7AF148720>", "operation": "getMore", "topologyDescription": "<TopologyDescription id: 67d2c6474b050be8041a6a54, topology_type: Single, servers: [<ServerDescription ('3.144.134.141', 27017) server_type: Standalone, rtt: 0.23400000000037835>]>", "clientId": {"$oid": "67d2c6474b050be8041a6a54"}, "serverHost": "3.144.134.141", "serverPort": 27017}
2025-03-13 16:49:35,451 - pymongo.connection - DEBUG - {"clientId": {"$oid": "67d2c6474b050be8041a6a54"}, "message": "Connection checkout started", "serverHost": "3.144.134.141", "serverPort": 27017}
2025-03-13 16:49:35,452 - pymongo.connection - DEBUG - {"clientId": {"$oid": "67d2c6474b050be8041a6a54"}, "message": "Connection checked out", "serverHost": "3.144.134.141", "serverPort": 27017, "driverConnectionId": 1, "durationMS": 0.0}
2025-03-13 16:49:35,452 - pymongo.command - DEBUG - {"clientId": {"$oid": "67d2c6474b050be8041a6a54"}, "message": "Command started", "command": "{\"getMore\": 1154715411790548421, \"collection\": \"violations\", \"lsid\": {\"id\": {\"$binary\": {\"base64\": \"GPqwiGW1TnWY+50S5JQrbA==\", \"subType\": \"04\"}}}, \"$db\": \"opal_server\"}", "commandName": "getMore", "databaseName": "opal_server", "requestId": 19169, "operationId": 19169, "driverConnectionId": 1, "serverConnectionId": 13237, "serverHost": "3.144.134.141", "serverPort": 27017}
2025-03-13 16:49:35,699 - pymongo.command - DEBUG - {"clientId": {"$oid": "67d2c6474b050be8041a6a54"}, "message": "Command succeeded", "durationMS": 247.001, "reply": "{\"cursor\": {\"nextBatch\": [{\"_id\": \"974227\", \"name\": \"Unknown\", \"violation_count\": 2, \"violation_types\": [\"SPEED_MEDIUM\"], \"avg_severity\": 2.0, \"last_violation\": {\"$date\": \"2025-03-10T16:23:40.317Z\"}, \"vehicle_license\": \"860665050844256\"}, {\"_id\": \"4574038\", \"name\": \"Unknown\", \"violation_count\": 2, \"violation_types\": [\"SPEED_MEDIUM\", \"SPEED_HIGH\"], \"avg_severity\": 2.5, \"last_violation\": {\"$date\": \"2025-03-10T04:10:29.208Z\"}, \"vehicle_license\": \"860665050851764\"}, {\"_id\": \"6482426\", \"name\": \"Unknown\", \"violation_count\": 2, \"violation_types\": [\"SPEED_LOW\"], \"avg_severity\": 1.0, \"last_violation\": {\"$date\": \"2025-03-12T05:23:56.475Z\"}, \"vehicle_license\": \"860665050637429\"}, {\"_id\": \"12854230\", \"name\": \"Unknown\", \"violation_count\": 1, \"violation_types\": [\"SPEED_MEDIUM\"], \"avg_severity\": 2.0, \"last_violation\": {\"$date\": \"2025-03-11T05:04:49.490Z\"}, \"vehicle_license\": \"860260056970113\"}, {\"_id\": \"13380099\", \"name\": \"Unknown\", \"violation_count\": 1, \"violation_types\": [\"SPEED_MEDIUM\"], \"avg_seve...", "commandName": "getMore", "databaseName": "opal_server", "requestId": 19169, "operationId": 19169, "driverConnectionId": 1, "serverConnectionId": 13237, "serverHost": "3.144.134.141", "serverPort": 27017}
2025-03-13 16:49:35,699 - pymongo.connection - DEBUG - {"clientId": {"$oid": "67d2c6474b050be8041a6a54"}, "message": "Connection checked in", "serverHost": "3.144.134.141", "serverPort": 27017, "driverConnectionId": 1}
2025-03-13 16:49:35,699 - app.db.repositories.data_repository - INFO - Retrieved stats for 111 drivers
2025-03-13 16:49:35,699 - app.services.predictive_analytics - INFO - Retrieved 111 driver records
2025-03-13 16:49:35,701 - app.services.predictive_analytics - INFO - Successfully processed 9 drivers
2025-03-13 16:49:38,957 - pymongo.topology - DEBUG - {"topologyId": {"$oid": "67d2c6474b050be8041a6a54"}, "driverConnectionId": 1, "serverConnectionId": 13236, "serverHost": "3.144.134.141", "serverPort": 27017, "awaited": true, "durationMS": 10234.000000000378, "reply": "{\"isWritablePrimary\": true, \"topologyVersion\": {\"processId\": {\"$oid\": \"67b7e5814f77c1a87c56d054\"}}, \"maxBsonObjectSize\": 16777216, \"maxMessageSizeBytes\": 48000000, \"maxWriteBatchSize\": 100000, \"localTime\": {\"$date\": \"2025-03-13T11:49:39.024Z\"}, \"logicalSessionTimeoutMinutes\": 30, \"connectionId\": 13236, \"maxWireVersion\": 25, \"ok\": 1.0}", "message": "Server heartbeat succeeded"}
2025-03-13 16:49:38,958 - pymongo.topology - DEBUG - {"topologyId": {"$oid": "67d2c6474b050be8041a6a54"}, "driverConnectionId": 1, "serverConnectionId": 13236, "serverHost": "3.144.134.141", "serverPort": 27017, "awaited": true, "message": "Server heartbeat started"}
2025-03-13 16:49:48,958 - pymongo.topology - DEBUG - {"topologyId": {"$oid": "67d2c6474b050be8041a6a54"}, "driverConnectionId": 1, "serverConnectionId": 13236, "serverHost": "3.144.134.141", "serverPort": 27017, "awaited": true, "durationMS": 9891.00000000326, "reply": "{\"isWritablePrimary\": true, \"topologyVersion\": {\"processId\": {\"$oid\": \"67b7e5814f77c1a87c56d054\"}}, \"maxBsonObjectSize\": 16777216, \"maxMessageSizeBytes\": 48000000, \"maxWriteBatchSize\": 100000, \"localTime\": {\"$date\": \"2025-03-13T11:49:49.025Z\"}, \"logicalSessionTimeoutMinutes\": 30, \"connectionId\": 13236, \"maxWireVersion\": 25, \"ok\": 1.0}", "message": "Server heartbeat succeeded"}
2025-03-13 16:49:48,959 - pymongo.topology - DEBUG - {"topologyId": {"$oid": "67d2c6474b050be8041a6a54"}, "driverConnectionId": 1, "serverConnectionId": 13236, "serverHost": "3.144.134.141", "serverPort": 27017, "awaited": true, "message": "Server heartbeat started"}
2025-03-13 16:49:58,959 - pymongo.topology - DEBUG - {"topologyId": {"$oid": "67d2c6474b050be8041a6a54"}, "driverConnectionId": 1, "serverConnectionId": 13236, "serverHost": "3.144.134.141", "serverPort": 27017, "awaited": true, "durationMS": 10000.0, "reply": "{\"isWritablePrimary\": true, \"topologyVersion\": {\"processId\": {\"$oid\": \"67b7e5814f77c1a87c56d054\"}}, \"maxBsonObjectSize\": 16777216, \"maxMessageSizeBytes\": 48000000, \"maxWriteBatchSize\": 100000, \"localTime\": {\"$date\": \"2025-03-13T11:49:59.026Z\"}, \"logicalSessionTimeoutMinutes\": 30, \"connectionId\": 13236, \"maxWireVersion\": 25, \"ok\": 1.0}", "message": "Server heartbeat succeeded"}
2025-03-13 16:49:58,959 - pymongo.topology - DEBUG - {"topologyId": {"$oid": "67d2c6474b050be8041a6a54"}, "driverConnectionId": 1, "serverConnectionId": 13236, "serverHost": "3.144.134.141", "serverPort": 27017, "awaited": true, "message": "Server heartbeat started"}
2025-03-13 16:50:08,959 - pymongo.topology - DEBUG - {"topologyId": {"$oid": "67d2c6474b050be8041a6a54"}, "driverConnectionId": 1, "serverConnectionId": 13236, "serverHost": "3.144.134.141", "serverPort": 27017, "awaited": true, "durationMS": 9984.000000000378, "reply": "{\"isWritablePrimary\": true, \"topologyVersion\": {\"processId\": {\"$oid\": \"67b7e5814f77c1a87c56d054\"}}, \"maxBsonObjectSize\": 16777216, \"maxMessageSizeBytes\": 48000000, \"maxWriteBatchSize\": 100000, \"localTime\": {\"$date\": \"2025-03-13T11:50:09.026Z\"}, \"logicalSessionTimeoutMinutes\": 30, \"connectionId\": 13236, \"maxWireVersion\": 25, \"ok\": 1.0}", "message": "Server heartbeat succeeded"}
2025-03-13 16:50:08,960 - pymongo.topology - DEBUG - {"topologyId": {"$oid": "67d2c6474b050be8041a6a54"}, "driverConnectionId": 1, "serverConnectionId": 13236, "serverHost": "3.144.134.141", "serverPort": 27017, "awaited": true, "message": "Server heartbeat started"}
2025-03-13 16:50:18,965 - pymongo.topology - DEBUG - {"topologyId": {"$oid": "67d2c6474b050be8041a6a54"}, "driverConnectionId": 1, "serverConnectionId": 13236, "serverHost": "3.144.134.141", "serverPort": 27017, "awaited": true, "durationMS": 10000.0, "reply": "{\"isWritablePrimary\": true, \"topologyVersion\": {\"processId\": {\"$oid\": \"67b7e5814f77c1a87c56d054\"}}, \"maxBsonObjectSize\": 16777216, \"maxMessageSizeBytes\": 48000000, \"maxWriteBatchSize\": 100000, \"localTime\": {\"$date\": \"2025-03-13T11:50:19.032Z\"}, \"logicalSessionTimeoutMinutes\": 30, \"connectionId\": 13236, \"maxWireVersion\": 25, \"ok\": 1.0}", "message": "Server heartbeat succeeded"}
2025-03-13 16:50:18,965 - pymongo.topology - DEBUG - {"topologyId": {"$oid": "67d2c6474b050be8041a6a54"}, "driverConnectionId": 1, "serverConnectionId": 13236, "serverHost": "3.144.134.141", "serverPort": 27017, "awaited": true, "message": "Server heartbeat started"}
2025-03-13 16:50:28,967 - pymongo.topology - DEBUG - {"topologyId": {"$oid": "67d2c6474b050be8041a6a54"}, "driverConnectionId": 1, "serverConnectionId": 13236, "serverHost": "3.144.134.141", "serverPort": 27017, "awaited": true, "durationMS": 10000.0, "reply": "{\"isWritablePrimary\": true, \"topologyVersion\": {\"processId\": {\"$oid\": \"67b7e5814f77c1a87c56d054\"}}, \"maxBsonObjectSize\": 16777216, \"maxMessageSizeBytes\": 48000000, \"maxWriteBatchSize\": 100000, \"localTime\": {\"$date\": \"2025-03-13T11:50:29.034Z\"}, \"logicalSessionTimeoutMinutes\": 30, \"connectionId\": 13236, \"maxWireVersion\": 25, \"ok\": 1.0}", "message": "Server heartbeat succeeded"}
2025-03-13 16:50:28,968 - pymongo.topology - DEBUG - {"topologyId": {"$oid": "67d2c6474b050be8041a6a54"}, "driverConnectionId": 1, "serverConnectionId": 13236, "serverHost": "3.144.134.141", "serverPort": 27017, "awaited": true, "message": "Server heartbeat started"}
2025-03-13 16:50:38,968 - pymongo.topology - DEBUG - {"topologyId": {"$oid": "67d2c6474b050be8041a6a54"}, "driverConnectionId": 1, "serverConnectionId": 13236, "serverHost": "3.144.134.141", "serverPort": 27017, "awaited": true, "durationMS": 10000.0, "reply": "{\"isWritablePrimary\": true, \"topologyVersion\": {\"processId\": {\"$oid\": \"67b7e5814f77c1a87c56d054\"}}, \"maxBsonObjectSize\": 16777216, \"maxMessageSizeBytes\": 48000000, \"maxWriteBatchSize\": 100000, \"localTime\": {\"$date\": \"2025-03-13T11:50:39.036Z\"}, \"logicalSessionTimeoutMinutes\": 30, \"connectionId\": 13236, \"maxWireVersion\": 25, \"ok\": 1.0}", "message": "Server heartbeat succeeded"}
2025-03-13 16:50:38,969 - pymongo.topology - DEBUG - {"topologyId": {"$oid": "67d2c6474b050be8041a6a54"}, "driverConnectionId": 1, "serverConnectionId": 13236, "serverHost": "3.144.134.141", "serverPort": 27017, "awaited": true, "message": "Server heartbeat started"}
2025-03-13 16:50:48,969 - pymongo.topology - DEBUG - {"topologyId": {"$oid": "67d2c6474b050be8041a6a54"}, "driverConnectionId": 1, "serverConnectionId": 13236, "serverHost": "3.144.134.141", "serverPort": 27017, "awaited": true, "durationMS": 10000.0, "reply": "{\"isWritablePrimary\": true, \"topologyVersion\": {\"processId\": {\"$oid\": \"67b7e5814f77c1a87c56d054\"}}, \"maxBsonObjectSize\": 16777216, \"maxMessageSizeBytes\": 48000000, \"maxWriteBatchSize\": 100000, \"localTime\": {\"$date\": \"2025-03-13T11:50:49.037Z\"}, \"logicalSessionTimeoutMinutes\": 30, \"connectionId\": 13236, \"maxWireVersion\": 25, \"ok\": 1.0}", "message": "Server heartbeat succeeded"}
2025-03-13 16:50:48,970 - pymongo.topology - DEBUG - {"topologyId": {"$oid": "67d2c6474b050be8041a6a54"}, "driverConnectionId": 1, "serverConnectionId": 13236, "serverHost": "3.144.134.141", "serverPort": 27017, "awaited": true, "message": "Server heartbeat started"}
2025-03-13 16:50:58,970 - pymongo.topology - DEBUG - {"topologyId": {"$oid": "67d2c6474b050be8041a6a54"}, "driverConnectionId": 1, "serverConnectionId": 13236, "serverHost": "3.144.134.141", "serverPort": 27017, "awaited": true, "durationMS": 10000.0, "reply": "{\"isWritablePrimary\": true, \"topologyVersion\": {\"processId\": {\"$oid\": \"67b7e5814f77c1a87c56d054\"}}, \"maxBsonObjectSize\": 16777216, \"maxMessageSizeBytes\": 48000000, \"maxWriteBatchSize\": 100000, \"localTime\": {\"$date\": \"2025-03-13T11:50:59.038Z\"}, \"logicalSessionTimeoutMinutes\": 30, \"connectionId\": 13236, \"maxWireVersion\": 25, \"ok\": 1.0}", "message": "Server heartbeat succeeded"}
2025-03-13 16:50:58,971 - pymongo.topology - DEBUG - {"topologyId": {"$oid": "67d2c6474b050be8041a6a54"}, "driverConnectionId": 1, "serverConnectionId": 13236, "serverHost": "3.144.134.141", "serverPort": 27017, "awaited": true, "message": "Server heartbeat started"}
2025-03-13 16:51:08,971 - pymongo.topology - DEBUG - {"topologyId": {"$oid": "67d2c6474b050be8041a6a54"}, "driverConnectionId": 1, "serverConnectionId": 13236, "serverHost": "3.144.134.141", "serverPort": 27017, "awaited": true, "durationMS": 10000.0, "reply": "{\"isWritablePrimary\": true, \"topologyVersion\": {\"processId\": {\"$oid\": \"67b7e5814f77c1a87c56d054\"}}, \"maxBsonObjectSize\": 16777216, \"maxMessageSizeBytes\": 48000000, \"maxWriteBatchSize\": 100000, \"localTime\": {\"$date\": \"2025-03-13T11:51:09.039Z\"}, \"logicalSessionTimeoutMinutes\": 30, \"connectionId\": 13236, \"maxWireVersion\": 25, \"ok\": 1.0}", "message": "Server heartbeat succeeded"}
2025-03-13 16:51:08,972 - pymongo.topology - DEBUG - {"topologyId": {"$oid": "67d2c6474b050be8041a6a54"}, "driverConnectionId": 1, "serverConnectionId": 13236, "serverHost": "3.144.134.141", "serverPort": 27017, "awaited": true, "message": "Server heartbeat started"}
2025-03-13 16:51:18,972 - pymongo.topology - DEBUG - {"topologyId": {"$oid": "67d2c6474b050be8041a6a54"}, "driverConnectionId": 1, "serverConnectionId": 13236, "serverHost": "3.144.134.141", "serverPort": 27017, "awaited": true, "durationMS": 10000.0, "reply": "{\"isWritablePrimary\": true, \"topologyVersion\": {\"processId\": {\"$oid\": \"67b7e5814f77c1a87c56d054\"}}, \"maxBsonObjectSize\": 16777216, \"maxMessageSizeBytes\": 48000000, \"maxWriteBatchSize\": 100000, \"localTime\": {\"$date\": \"2025-03-13T11:51:19.040Z\"}, \"logicalSessionTimeoutMinutes\": 30, \"connectionId\": 13236, \"maxWireVersion\": 25, \"ok\": 1.0}", "message": "Server heartbeat succeeded"}
2025-03-13 16:51:18,973 - pymongo.topology - DEBUG - {"topologyId": {"$oid": "67d2c6474b050be8041a6a54"}, "driverConnectionId": 1, "serverConnectionId": 13236, "serverHost": "3.144.134.141", "serverPort": 27017, "awaited": true, "message": "Server heartbeat started"}
2025-03-13 16:51:28,972 - pymongo.topology - DEBUG - {"topologyId": {"$oid": "67d2c6474b050be8041a6a54"}, "driverConnectionId": 1, "serverConnectionId": 13236, "serverHost": "3.144.134.141", "serverPort": 27017, "awaited": true, "durationMS": 10000.0, "reply": "{\"isWritablePrimary\": true, \"topologyVersion\": {\"processId\": {\"$oid\": \"67b7e5814f77c1a87c56d054\"}}, \"maxBsonObjectSize\": 16777216, \"maxMessageSizeBytes\": 48000000, \"maxWriteBatchSize\": 100000, \"localTime\": {\"$date\": \"2025-03-13T11:51:29.040Z\"}, \"logicalSessionTimeoutMinutes\": 30, \"connectionId\": 13236, \"maxWireVersion\": 25, \"ok\": 1.0}", "message": "Server heartbeat succeeded"}
2025-03-13 16:51:28,973 - pymongo.topology - DEBUG - {"topologyId": {"$oid": "67d2c6474b050be8041a6a54"}, "driverConnectionId": 1, "serverConnectionId": 13236, "serverHost": "3.144.134.141", "serverPort": 27017, "awaited": true, "message": "Server heartbeat started"}
2025-03-13 16:51:38,981 - pymongo.topology - DEBUG - {"topologyId": {"$oid": "67d2c6474b050be8041a6a54"}, "driverConnectionId": 1, "serverConnectionId": 13236, "serverHost": "3.144.134.141", "serverPort": 27017, "awaited": true, "durationMS": 10014.999999999418, "reply": "{\"isWritablePrimary\": true, \"topologyVersion\": {\"processId\": {\"$oid\": \"67b7e5814f77c1a87c56d054\"}}, \"maxBsonObjectSize\": 16777216, \"maxMessageSizeBytes\": 48000000, \"maxWriteBatchSize\": 100000, \"localTime\": {\"$date\": \"2025-03-13T11:51:39.049Z\"}, \"logicalSessionTimeoutMinutes\": 30, \"connectionId\": 13236, \"maxWireVersion\": 25, \"ok\": 1.0}", "message": "Server heartbeat succeeded"}
2025-03-13 16:51:38,982 - pymongo.topology - DEBUG - {"topologyId": {"$oid": "67d2c6474b050be8041a6a54"}, "driverConnectionId": 1, "serverConnectionId": 13236, "serverHost": "3.144.134.141", "serverPort": 27017, "awaited": true, "message": "Server heartbeat started"}
2025-03-13 16:51:48,984 - pymongo.topology - DEBUG - {"topologyId": {"$oid": "67d2c6474b050be8041a6a54"}, "driverConnectionId": 1, "serverConnectionId": 13236, "serverHost": "3.144.134.141", "serverPort": 27017, "awaited": true, "durationMS": 10000.0, "reply": "{\"isWritablePrimary\": true, \"topologyVersion\": {\"processId\": {\"$oid\": \"67b7e5814f77c1a87c56d054\"}}, \"maxBsonObjectSize\": 16777216, \"maxMessageSizeBytes\": 48000000, \"maxWriteBatchSize\": 100000, \"localTime\": {\"$date\": \"2025-03-13T11:51:49.052Z\"}, \"logicalSessionTimeoutMinutes\": 30, \"connectionId\": 13236, \"maxWireVersion\": 25, \"ok\": 1.0}", "message": "Server heartbeat succeeded"}
2025-03-13 16:51:48,984 - pymongo.topology - DEBUG - {"topologyId": {"$oid": "67d2c6474b050be8041a6a54"}, "driverConnectionId": 1, "serverConnectionId": 13236, "serverHost": "3.144.134.141", "serverPort": 27017, "awaited": true, "message": "Server heartbeat started"}
2025-03-13 16:51:58,985 - pymongo.topology - DEBUG - {"topologyId": {"$oid": "67d2c6474b050be8041a6a54"}, "driverConnectionId": 1, "serverConnectionId": 13236, "serverHost": "3.144.134.141", "serverPort": 27017, "awaited": true, "durationMS": 10000.0, "reply": "{\"isWritablePrimary\": true, \"topologyVersion\": {\"processId\": {\"$oid\": \"67b7e5814f77c1a87c56d054\"}}, \"maxBsonObjectSize\": 16777216, \"maxMessageSizeBytes\": 48000000, \"maxWriteBatchSize\": 100000, \"localTime\": {\"$date\": \"2025-03-13T11:51:59.054Z\"}, \"logicalSessionTimeoutMinutes\": 30, \"connectionId\": 13236, \"maxWireVersion\": 25, \"ok\": 1.0}", "message": "Server heartbeat succeeded"}
2025-03-13 16:51:58,985 - pymongo.topology - DEBUG - {"topologyId": {"$oid": "67d2c6474b050be8041a6a54"}, "driverConnectionId": 1, "serverConnectionId": 13236, "serverHost": "3.144.134.141", "serverPort": 27017, "awaited": true, "message": "Server heartbeat started"}
2025-03-13 16:52:08,996 - pymongo.topology - DEBUG - {"topologyId": {"$oid": "67d2c6474b050be8041a6a54"}, "driverConnectionId": 1, "serverConnectionId": 13236, "serverHost": "3.144.134.141", "serverPort": 27017, "awaited": true, "durationMS": 10015.999999999622, "reply": "{\"isWritablePrimary\": true, \"topologyVersion\": {\"processId\": {\"$oid\": \"67b7e5814f77c1a87c56d054\"}}, \"maxBsonObjectSize\": 16777216, \"maxMessageSizeBytes\": 48000000, \"maxWriteBatchSize\": 100000, \"localTime\": {\"$date\": \"2025-03-13T11:52:09.064Z\"}, \"logicalSessionTimeoutMinutes\": 30, \"connectionId\": 13236, \"maxWireVersion\": 25, \"ok\": 1.0}", "message": "Server heartbeat succeeded"}
2025-03-13 16:52:08,996 - pymongo.topology - DEBUG - {"topologyId": {"$oid": "67d2c6474b050be8041a6a54"}, "driverConnectionId": 1, "serverConnectionId": 13236, "serverHost": "3.144.134.141", "serverPort": 27017, "awaited": true, "message": "Server heartbeat started"}
2025-03-13 16:52:18,996 - pymongo.topology - DEBUG - {"topologyId": {"$oid": "67d2c6474b050be8041a6a54"}, "driverConnectionId": 1, "serverConnectionId": 13236, "serverHost": "3.144.134.141", "serverPort": 27017, "awaited": true, "durationMS": 10000.0, "reply": "{\"isWritablePrimary\": true, \"topologyVersion\": {\"processId\": {\"$oid\": \"67b7e5814f77c1a87c56d054\"}}, \"maxBsonObjectSize\": 16777216, \"maxMessageSizeBytes\": 48000000, \"maxWriteBatchSize\": 100000, \"localTime\": {\"$date\": \"2025-03-13T11:52:19.065Z\"}, \"logicalSessionTimeoutMinutes\": 30, \"connectionId\": 13236, \"maxWireVersion\": 25, \"ok\": 1.0}", "message": "Server heartbeat succeeded"}
2025-03-13 16:52:18,997 - pymongo.topology - DEBUG - {"topologyId": {"$oid": "67d2c6474b050be8041a6a54"}, "driverConnectionId": 1, "serverConnectionId": 13236, "serverHost": "3.144.134.141", "serverPort": 27017, "awaited": true, "message": "Server heartbeat started"}
2025-03-13 16:52:29,006 - pymongo.topology - DEBUG - {"topologyId": {"$oid": "67d2c6474b050be8041a6a54"}, "driverConnectionId": 1, "serverConnectionId": 13236, "serverHost": "3.144.134.141", "serverPort": 27017, "awaited": true, "durationMS": 10000.0, "reply": "{\"isWritablePrimary\": true, \"topologyVersion\": {\"processId\": {\"$oid\": \"67b7e5814f77c1a87c56d054\"}}, \"maxBsonObjectSize\": 16777216, \"maxMessageSizeBytes\": 48000000, \"maxWriteBatchSize\": 100000, \"localTime\": {\"$date\": \"2025-03-13T11:52:29.075Z\"}, \"logicalSessionTimeoutMinutes\": 30, \"connectionId\": 13236, \"maxWireVersion\": 25, \"ok\": 1.0}", "message": "Server heartbeat succeeded"}
2025-03-13 16:52:29,006 - pymongo.topology - DEBUG - {"topologyId": {"$oid": "67d2c6474b050be8041a6a54"}, "driverConnectionId": 1, "serverConnectionId": 13236, "serverHost": "3.144.134.141", "serverPort": 27017, "awaited": true, "message": "Server heartbeat started"}
2025-03-13 16:52:39,016 - pymongo.topology - DEBUG - {"topologyId": {"$oid": "67d2c6474b050be8041a6a54"}, "driverConnectionId": 1, "serverConnectionId": 13236, "serverHost": "3.144.134.141", "serverPort": 27017, "awaited": true, "durationMS": 10000.0, "reply": "{\"isWritablePrimary\": true, \"topologyVersion\": {\"processId\": {\"$oid\": \"67b7e5814f77c1a87c56d054\"}}, \"maxBsonObjectSize\": 16777216, \"maxMessageSizeBytes\": 48000000, \"maxWriteBatchSize\": 100000, \"localTime\": {\"$date\": \"2025-03-13T11:52:39.085Z\"}, \"logicalSessionTimeoutMinutes\": 30, \"connectionId\": 13236, \"maxWireVersion\": 25, \"ok\": 1.0}", "message": "Server heartbeat succeeded"}
2025-03-13 16:52:39,016 - pymongo.topology - DEBUG - {"topologyId": {"$oid": "67d2c6474b050be8041a6a54"}, "driverConnectionId": 1, "serverConnectionId": 13236, "serverHost": "3.144.134.141", "serverPort": 27017, "awaited": true, "message": "Server heartbeat started"}
2025-03-13 16:52:49,026 - pymongo.topology - DEBUG - {"topologyId": {"$oid": "67d2c6474b050be8041a6a54"}, "driverConnectionId": 1, "serverConnectionId": 13236, "serverHost": "3.144.134.141", "serverPort": 27017, "awaited": true, "durationMS": 10014.999999999418, "reply": "{\"isWritablePrimary\": true, \"topologyVersion\": {\"processId\": {\"$oid\": \"67b7e5814f77c1a87c56d054\"}}, \"maxBsonObjectSize\": 16777216, \"maxMessageSizeBytes\": 48000000, \"maxWriteBatchSize\": 100000, \"localTime\": {\"$date\": \"2025-03-13T11:52:49.095Z\"}, \"logicalSessionTimeoutMinutes\": 30, \"connectionId\": 13236, \"maxWireVersion\": 25, \"ok\": 1.0}", "message": "Server heartbeat succeeded"}
2025-03-13 16:52:49,026 - pymongo.topology - DEBUG - {"topologyId": {"$oid": "67d2c6474b050be8041a6a54"}, "driverConnectionId": 1, "serverConnectionId": 13236, "serverHost": "3.144.134.141", "serverPort": 27017, "awaited": true, "message": "Server heartbeat started"}
2025-03-13 16:52:59,027 - pymongo.topology - DEBUG - {"topologyId": {"$oid": "67d2c6474b050be8041a6a54"}, "driverConnectionId": 1, "serverConnectionId": 13236, "serverHost": "3.144.134.141", "serverPort": 27017, "awaited": true, "durationMS": 10000.0, "reply": "{\"isWritablePrimary\": true, \"topologyVersion\": {\"processId\": {\"$oid\": \"67b7e5814f77c1a87c56d054\"}}, \"maxBsonObjectSize\": 16777216, \"maxMessageSizeBytes\": 48000000, \"maxWriteBatchSize\": 100000, \"localTime\": {\"$date\": \"2025-03-13T11:52:59.096Z\"}, \"logicalSessionTimeoutMinutes\": 30, \"connectionId\": 13236, \"maxWireVersion\": 25, \"ok\": 1.0}", "message": "Server heartbeat succeeded"}
2025-03-13 16:52:59,027 - pymongo.topology - DEBUG - {"topologyId": {"$oid": "67d2c6474b050be8041a6a54"}, "driverConnectionId": 1, "serverConnectionId": 13236, "serverHost": "3.144.134.141", "serverPort": 27017, "awaited": true, "message": "Server heartbeat started"}
2025-03-13 16:53:09,028 - pymongo.topology - DEBUG - {"topologyId": {"$oid": "67d2c6474b050be8041a6a54"}, "driverConnectionId": 1, "serverConnectionId": 13236, "serverHost": "3.144.134.141", "serverPort": 27017, "awaited": true, "durationMS": 10000.0, "reply": "{\"isWritablePrimary\": true, \"topologyVersion\": {\"processId\": {\"$oid\": \"67b7e5814f77c1a87c56d054\"}}, \"maxBsonObjectSize\": 16777216, \"maxMessageSizeBytes\": 48000000, \"maxWriteBatchSize\": 100000, \"localTime\": {\"$date\": \"2025-03-13T11:53:09.097Z\"}, \"logicalSessionTimeoutMinutes\": 30, \"connectionId\": 13236, \"maxWireVersion\": 25, \"ok\": 1.0}", "message": "Server heartbeat succeeded"}
2025-03-13 16:53:09,029 - pymongo.topology - DEBUG - {"topologyId": {"$oid": "67d2c6474b050be8041a6a54"}, "driverConnectionId": 1, "serverConnectionId": 13236, "serverHost": "3.144.134.141", "serverPort": 27017, "awaited": true, "message": "Server heartbeat started"}
2025-03-13 16:53:19,028 - pymongo.topology - DEBUG - {"topologyId": {"$oid": "67d2c6474b050be8041a6a54"}, "driverConnectionId": 1, "serverConnectionId": 13236, "serverHost": "3.144.134.141", "serverPort": 27017, "awaited": true, "durationMS": 10000.0, "reply": "{\"isWritablePrimary\": true, \"topologyVersion\": {\"processId\": {\"$oid\": \"67b7e5814f77c1a87c56d054\"}}, \"maxBsonObjectSize\": 16777216, \"maxMessageSizeBytes\": 48000000, \"maxWriteBatchSize\": 100000, \"localTime\": {\"$date\": \"2025-03-13T11:53:19.098Z\"}, \"logicalSessionTimeoutMinutes\": 30, \"connectionId\": 13236, \"maxWireVersion\": 25, \"ok\": 1.0}", "message": "Server heartbeat succeeded"}
2025-03-13 16:53:19,029 - pymongo.topology - DEBUG - {"topologyId": {"$oid": "67d2c6474b050be8041a6a54"}, "driverConnectionId": 1, "serverConnectionId": 13236, "serverHost": "3.144.134.141", "serverPort": 27017, "awaited": true, "message": "Server heartbeat started"}
2025-03-13 16:53:29,030 - pymongo.topology - DEBUG - {"topologyId": {"$oid": "67d2c6474b050be8041a6a54"}, "driverConnectionId": 1, "serverConnectionId": 13236, "serverHost": "3.144.134.141", "serverPort": 27017, "awaited": true, "durationMS": 10000.0, "reply": "{\"isWritablePrimary\": true, \"topologyVersion\": {\"processId\": {\"$oid\": \"67b7e5814f77c1a87c56d054\"}}, \"maxBsonObjectSize\": 16777216, \"maxMessageSizeBytes\": 48000000, \"maxWriteBatchSize\": 100000, \"localTime\": {\"$date\": \"2025-03-13T11:53:29.100Z\"}, \"logicalSessionTimeoutMinutes\": 30, \"connectionId\": 13236, \"maxWireVersion\": 25, \"ok\": 1.0}", "message": "Server heartbeat succeeded"}
2025-03-13 16:53:29,031 - pymongo.topology - DEBUG - {"topologyId": {"$oid": "67d2c6474b050be8041a6a54"}, "driverConnectionId": 1, "serverConnectionId": 13236, "serverHost": "3.144.134.141", "serverPort": 27017, "awaited": true, "message": "Server heartbeat started"}
2025-03-13 16:53:39,031 - pymongo.topology - DEBUG - {"topologyId": {"$oid": "67d2c6474b050be8041a6a54"}, "driverConnectionId": 1, "serverConnectionId": 13236, "serverHost": "3.144.134.141", "serverPort": 27017, "awaited": true, "durationMS": 10000.0, "reply": "{\"isWritablePrimary\": true, \"topologyVersion\": {\"processId\": {\"$oid\": \"67b7e5814f77c1a87c56d054\"}}, \"maxBsonObjectSize\": 16777216, \"maxMessageSizeBytes\": 48000000, \"maxWriteBatchSize\": 100000, \"localTime\": {\"$date\": \"2025-03-13T11:53:39.100Z\"}, \"logicalSessionTimeoutMinutes\": 30, \"connectionId\": 13236, \"maxWireVersion\": 25, \"ok\": 1.0}", "message": "Server heartbeat succeeded"}
2025-03-13 16:53:39,032 - pymongo.topology - DEBUG - {"topologyId": {"$oid": "67d2c6474b050be8041a6a54"}, "driverConnectionId": 1, "serverConnectionId": 13236, "serverHost": "3.144.134.141", "serverPort": 27017, "awaited": true, "message": "Server heartbeat started"}
2025-03-13 16:53:49,033 - pymongo.topology - DEBUG - {"topologyId": {"$oid": "67d2c6474b050be8041a6a54"}, "driverConnectionId": 1, "serverConnectionId": 13236, "serverHost": "3.144.134.141", "serverPort": 27017, "awaited": true, "durationMS": 10000.0, "reply": "{\"isWritablePrimary\": true, \"topologyVersion\": {\"processId\": {\"$oid\": \"67b7e5814f77c1a87c56d054\"}}, \"maxBsonObjectSize\": 16777216, \"maxMessageSizeBytes\": 48000000, \"maxWriteBatchSize\": 100000, \"localTime\": {\"$date\": \"2025-03-13T11:53:49.103Z\"}, \"logicalSessionTimeoutMinutes\": 30, \"connectionId\": 13236, \"maxWireVersion\": 25, \"ok\": 1.0}", "message": "Server heartbeat succeeded"}
2025-03-13 16:53:49,034 - pymongo.topology - DEBUG - {"topologyId": {"$oid": "67d2c6474b050be8041a6a54"}, "driverConnectionId": 1, "serverConnectionId": 13236, "serverHost": "3.144.134.141", "serverPort": 27017, "awaited": true, "message": "Server heartbeat started"}
2025-03-13 16:53:59,034 - pymongo.topology - DEBUG - {"topologyId": {"$oid": "67d2c6474b050be8041a6a54"}, "driverConnectionId": 1, "serverConnectionId": 13236, "serverHost": "3.144.134.141", "serverPort": 27017, "awaited": true, "durationMS": 10000.0, "reply": "{\"isWritablePrimary\": true, \"topologyVersion\": {\"processId\": {\"$oid\": \"67b7e5814f77c1a87c56d054\"}}, \"maxBsonObjectSize\": 16777216, \"maxMessageSizeBytes\": 48000000, \"maxWriteBatchSize\": 100000, \"localTime\": {\"$date\": \"2025-03-13T11:53:59.103Z\"}, \"logicalSessionTimeoutMinutes\": 30, \"connectionId\": 13236, \"maxWireVersion\": 25, \"ok\": 1.0}", "message": "Server heartbeat succeeded"}
2025-03-13 16:53:59,035 - pymongo.topology - DEBUG - {"topologyId": {"$oid": "67d2c6474b050be8041a6a54"}, "driverConnectionId": 1, "serverConnectionId": 13236, "serverHost": "3.144.134.141", "serverPort": 27017, "awaited": true, "message": "Server heartbeat started"}
2025-03-13 16:54:09,043 - pymongo.topology - DEBUG - {"topologyId": {"$oid": "67d2c6474b050be8041a6a54"}, "driverConnectionId": 1, "serverConnectionId": 13236, "serverHost": "3.144.134.141", "serverPort": 27017, "awaited": true, "durationMS": 10015.999999999622, "reply": "{\"isWritablePrimary\": true, \"topologyVersion\": {\"processId\": {\"$oid\": \"67b7e5814f77c1a87c56d054\"}}, \"maxBsonObjectSize\": 16777216, \"maxMessageSizeBytes\": 48000000, \"maxWriteBatchSize\": 100000, \"localTime\": {\"$date\": \"2025-03-13T11:54:09.105Z\"}, \"logicalSessionTimeoutMinutes\": 30, \"connectionId\": 13236, \"maxWireVersion\": 25, \"ok\": 1.0}", "message": "Server heartbeat succeeded"}
2025-03-13 16:54:09,044 - pymongo.topology - DEBUG - {"topologyId": {"$oid": "67d2c6474b050be8041a6a54"}, "driverConnectionId": 1, "serverConnectionId": 13236, "serverHost": "3.144.134.141", "serverPort": 27017, "awaited": true, "message": "Server heartbeat started"}
2025-03-13 16:54:19,038 - pymongo.topology - DEBUG - {"topologyId": {"$oid": "67d2c6474b050be8041a6a54"}, "driverConnectionId": 1, "serverConnectionId": 13236, "serverHost": "3.144.134.141", "serverPort": 27017, "awaited": true, "durationMS": 10000.0, "reply": "{\"isWritablePrimary\": true, \"topologyVersion\": {\"processId\": {\"$oid\": \"67b7e5814f77c1a87c56d054\"}}, \"maxBsonObjectSize\": 16777216, \"maxMessageSizeBytes\": 48000000, \"maxWriteBatchSize\": 100000, \"localTime\": {\"$date\": \"2025-03-13T11:54:19.108Z\"}, \"logicalSessionTimeoutMinutes\": 30, \"connectionId\": 13236, \"maxWireVersion\": 25, \"ok\": 1.0}", "message": "Server heartbeat succeeded"}
2025-03-13 16:54:19,038 - pymongo.topology - DEBUG - {"topologyId": {"$oid": "67d2c6474b050be8041a6a54"}, "driverConnectionId": 1, "serverConnectionId": 13236, "serverHost": "3.144.134.141", "serverPort": 27017, "awaited": true, "message": "Server heartbeat started"}
2025-03-13 16:54:29,062 - pymongo.topology - DEBUG - {"topologyId": {"$oid": "67d2c6474b050be8041a6a54"}, "driverConnectionId": 1, "serverConnectionId": 13236, "serverHost": "3.144.134.141", "serverPort": 27017, "awaited": true, "durationMS": 10014.999999999418, "reply": "{\"isWritablePrimary\": true, \"topologyVersion\": {\"processId\": {\"$oid\": \"67b7e5814f77c1a87c56d054\"}}, \"maxBsonObjectSize\": 16777216, \"maxMessageSizeBytes\": 48000000, \"maxWriteBatchSize\": 100000, \"localTime\": {\"$date\": \"2025-03-13T11:54:29.118Z\"}, \"logicalSessionTimeoutMinutes\": 30, \"connectionId\": 13236, \"maxWireVersion\": 25, \"ok\": 1.0}", "message": "Server heartbeat succeeded"}
2025-03-13 16:54:29,063 - pymongo.topology - DEBUG - {"topologyId": {"$oid": "67d2c6474b050be8041a6a54"}, "driverConnectionId": 1, "serverConnectionId": 13236, "serverHost": "3.144.134.141", "serverPort": 27017, "awaited": true, "message": "Server heartbeat started"}
2025-03-13 16:54:39,058 - pymongo.topology - DEBUG - {"topologyId": {"$oid": "67d2c6474b050be8041a6a54"}, "driverConnectionId": 1, "serverConnectionId": 13236, "serverHost": "3.144.134.141", "serverPort": 27017, "awaited": true, "durationMS": 10000.0, "reply": "{\"isWritablePrimary\": true, \"topologyVersion\": {\"processId\": {\"$oid\": \"67b7e5814f77c1a87c56d054\"}}, \"maxBsonObjectSize\": 16777216, \"maxMessageSizeBytes\": 48000000, \"maxWriteBatchSize\": 100000, \"localTime\": {\"$date\": \"2025-03-13T11:54:39.128Z\"}, \"logicalSessionTimeoutMinutes\": 30, \"connectionId\": 13236, \"maxWireVersion\": 25, \"ok\": 1.0}", "message": "Server heartbeat succeeded"}
2025-03-13 16:54:39,059 - pymongo.topology - DEBUG - {"topologyId": {"$oid": "67d2c6474b050be8041a6a54"}, "driverConnectionId": 1, "serverConnectionId": 13236, "serverHost": "3.144.134.141", "serverPort": 27017, "awaited": true, "message": "Server heartbeat started"}
2025-03-13 16:54:49,059 - pymongo.topology - DEBUG - {"topologyId": {"$oid": "67d2c6474b050be8041a6a54"}, "driverConnectionId": 1, "serverConnectionId": 13236, "serverHost": "3.144.134.141", "serverPort": 27017, "awaited": true, "durationMS": 10000.0, "reply": "{\"isWritablePrimary\": true, \"topologyVersion\": {\"processId\": {\"$oid\": \"67b7e5814f77c1a87c56d054\"}}, \"maxBsonObjectSize\": 16777216, \"maxMessageSizeBytes\": 48000000, \"maxWriteBatchSize\": 100000, \"localTime\": {\"$date\": \"2025-03-13T11:54:49.129Z\"}, \"logicalSessionTimeoutMinutes\": 30, \"connectionId\": 13236, \"maxWireVersion\": 25, \"ok\": 1.0}", "message": "Server heartbeat succeeded"}
2025-03-13 16:54:49,059 - pymongo.topology - DEBUG - {"topologyId": {"$oid": "67d2c6474b050be8041a6a54"}, "driverConnectionId": 1, "serverConnectionId": 13236, "serverHost": "3.144.134.141", "serverPort": 27017, "awaited": true, "message": "Server heartbeat started"}
2025-03-13 16:54:59,060 - pymongo.topology - DEBUG - {"topologyId": {"$oid": "67d2c6474b050be8041a6a54"}, "driverConnectionId": 1, "serverConnectionId": 13236, "serverHost": "3.144.134.141", "serverPort": 27017, "awaited": true, "durationMS": 10000.0, "reply": "{\"isWritablePrimary\": true, \"topologyVersion\": {\"processId\": {\"$oid\": \"67b7e5814f77c1a87c56d054\"}}, \"maxBsonObjectSize\": 16777216, \"maxMessageSizeBytes\": 48000000, \"maxWriteBatchSize\": 100000, \"localTime\": {\"$date\": \"2025-03-13T11:54:59.130Z\"}, \"logicalSessionTimeoutMinutes\": 30, \"connectionId\": 13236, \"maxWireVersion\": 25, \"ok\": 1.0}", "message": "Server heartbeat succeeded"}
2025-03-13 16:54:59,060 - pymongo.topology - DEBUG - {"topologyId": {"$oid": "67d2c6474b050be8041a6a54"}, "driverConnectionId": 1, "serverConnectionId": 13236, "serverHost": "3.144.134.141", "serverPort": 27017, "awaited": true, "message": "Server heartbeat started"}
2025-03-13 16:55:09,061 - pymongo.topology - DEBUG - {"topologyId": {"$oid": "67d2c6474b050be8041a6a54"}, "driverConnectionId": 1, "serverConnectionId": 13236, "serverHost": "3.144.134.141", "serverPort": 27017, "awaited": true, "durationMS": 10000.0, "reply": "{\"isWritablePrimary\": true, \"topologyVersion\": {\"processId\": {\"$oid\": \"67b7e5814f77c1a87c56d054\"}}, \"maxBsonObjectSize\": 16777216, \"maxMessageSizeBytes\": 48000000, \"maxWriteBatchSize\": 100000, \"localTime\": {\"$date\": \"2025-03-13T11:55:09.131Z\"}, \"logicalSessionTimeoutMinutes\": 30, \"connectionId\": 13236, \"maxWireVersion\": 25, \"ok\": 1.0}", "message": "Server heartbeat succeeded"}
2025-03-13 16:55:09,061 - pymongo.topology - DEBUG - {"topologyId": {"$oid": "67d2c6474b050be8041a6a54"}, "driverConnectionId": 1, "serverConnectionId": 13236, "serverHost": "3.144.134.141", "serverPort": 27017, "awaited": true, "message": "Server heartbeat started"}
2025-03-13 16:55:19,062 - pymongo.topology - DEBUG - {"topologyId": {"$oid": "67d2c6474b050be8041a6a54"}, "driverConnectionId": 1, "serverConnectionId": 13236, "serverHost": "3.144.134.141", "serverPort": 27017, "awaited": true, "durationMS": 10000.0, "reply": "{\"isWritablePrimary\": true, \"topologyVersion\": {\"processId\": {\"$oid\": \"67b7e5814f77c1a87c56d054\"}}, \"maxBsonObjectSize\": 16777216, \"maxMessageSizeBytes\": 48000000, \"maxWriteBatchSize\": 100000, \"localTime\": {\"$date\": \"2025-03-13T11:55:19.132Z\"}, \"logicalSessionTimeoutMinutes\": 30, \"connectionId\": 13236, \"maxWireVersion\": 25, \"ok\": 1.0}", "message": "Server heartbeat succeeded"}
2025-03-13 16:55:19,062 - pymongo.topology - DEBUG - {"topologyId": {"$oid": "67d2c6474b050be8041a6a54"}, "driverConnectionId": 1, "serverConnectionId": 13236, "serverHost": "3.144.134.141", "serverPort": 27017, "awaited": true, "message": "Server heartbeat started"}
2025-03-13 16:55:29,068 - pymongo.topology - DEBUG - {"topologyId": {"$oid": "67d2c6474b050be8041a6a54"}, "driverConnectionId": 1, "serverConnectionId": 13236, "serverHost": "3.144.134.141", "serverPort": 27017, "awaited": true, "durationMS": 10000.0, "reply": "{\"isWritablePrimary\": true, \"topologyVersion\": {\"processId\": {\"$oid\": \"67b7e5814f77c1a87c56d054\"}}, \"maxBsonObjectSize\": 16777216, \"maxMessageSizeBytes\": 48000000, \"maxWriteBatchSize\": 100000, \"localTime\": {\"$date\": \"2025-03-13T11:55:29.138Z\"}, \"logicalSessionTimeoutMinutes\": 30, \"connectionId\": 13236, \"maxWireVersion\": 25, \"ok\": 1.0}", "message": "Server heartbeat succeeded"}
2025-03-13 16:55:29,068 - pymongo.topology - DEBUG - {"topologyId": {"$oid": "67d2c6474b050be8041a6a54"}, "driverConnectionId": 1, "serverConnectionId": 13236, "serverHost": "3.144.134.141", "serverPort": 27017, "awaited": true, "message": "Server heartbeat started"}
2025-03-13 16:55:39,070 - pymongo.topology - DEBUG - {"topologyId": {"$oid": "67d2c6474b050be8041a6a54"}, "driverConnectionId": 1, "serverConnectionId": 13236, "serverHost": "3.144.134.141", "serverPort": 27017, "awaited": true, "durationMS": 10016.00000000326, "reply": "{\"isWritablePrimary\": true, \"topologyVersion\": {\"processId\": {\"$oid\": \"67b7e5814f77c1a87c56d054\"}}, \"maxBsonObjectSize\": 16777216, \"maxMessageSizeBytes\": 48000000, \"maxWriteBatchSize\": 100000, \"localTime\": {\"$date\": \"2025-03-13T11:55:39.140Z\"}, \"logicalSessionTimeoutMinutes\": 30, \"connectionId\": 13236, \"maxWireVersion\": 25, \"ok\": 1.0}", "message": "Server heartbeat succeeded"}
2025-03-13 16:55:39,070 - pymongo.topology - DEBUG - {"topologyId": {"$oid": "67d2c6474b050be8041a6a54"}, "driverConnectionId": 1, "serverConnectionId": 13236, "serverHost": "3.144.134.141", "serverPort": 27017, "awaited": true, "message": "Server heartbeat started"}
2025-03-13 16:55:49,071 - pymongo.topology - DEBUG - {"topologyId": {"$oid": "67d2c6474b050be8041a6a54"}, "driverConnectionId": 1, "serverConnectionId": 13236, "serverHost": "3.144.134.141", "serverPort": 27017, "awaited": true, "durationMS": 10000.0, "reply": "{\"isWritablePrimary\": true, \"topologyVersion\": {\"processId\": {\"$oid\": \"67b7e5814f77c1a87c56d054\"}}, \"maxBsonObjectSize\": 16777216, \"maxMessageSizeBytes\": 48000000, \"maxWriteBatchSize\": 100000, \"localTime\": {\"$date\": \"2025-03-13T11:55:49.141Z\"}, \"logicalSessionTimeoutMinutes\": 30, \"connectionId\": 13236, \"maxWireVersion\": 25, \"ok\": 1.0}", "message": "Server heartbeat succeeded"}
2025-03-13 16:55:49,071 - pymongo.topology - DEBUG - {"topologyId": {"$oid": "67d2c6474b050be8041a6a54"}, "driverConnectionId": 1, "serverConnectionId": 13236, "serverHost": "3.144.134.141", "serverPort": 27017, "awaited": true, "message": "Server heartbeat started"}
2025-03-13 16:55:59,072 - pymongo.topology - DEBUG - {"topologyId": {"$oid": "67d2c6474b050be8041a6a54"}, "driverConnectionId": 1, "serverConnectionId": 13236, "serverHost": "3.144.134.141", "serverPort": 27017, "awaited": true, "durationMS": 10000.0, "reply": "{\"isWritablePrimary\": true, \"topologyVersion\": {\"processId\": {\"$oid\": \"67b7e5814f77c1a87c56d054\"}}, \"maxBsonObjectSize\": 16777216, \"maxMessageSizeBytes\": 48000000, \"maxWriteBatchSize\": 100000, \"localTime\": {\"$date\": \"2025-03-13T11:55:59.143Z\"}, \"logicalSessionTimeoutMinutes\": 30, \"connectionId\": 13236, \"maxWireVersion\": 25, \"ok\": 1.0}", "message": "Server heartbeat succeeded"}
2025-03-13 16:55:59,073 - pymongo.topology - DEBUG - {"topologyId": {"$oid": "67d2c6474b050be8041a6a54"}, "driverConnectionId": 1, "serverConnectionId": 13236, "serverHost": "3.144.134.141", "serverPort": 27017, "awaited": true, "message": "Server heartbeat started"}
2025-03-13 16:56:09,073 - pymongo.topology - DEBUG - {"topologyId": {"$oid": "67d2c6474b050be8041a6a54"}, "driverConnectionId": 1, "serverConnectionId": 13236, "serverHost": "3.144.134.141", "serverPort": 27017, "awaited": true, "durationMS": 10000.0, "reply": "{\"isWritablePrimary\": true, \"topologyVersion\": {\"processId\": {\"$oid\": \"67b7e5814f77c1a87c56d054\"}}, \"maxBsonObjectSize\": 16777216, \"maxMessageSizeBytes\": 48000000, \"maxWriteBatchSize\": 100000, \"localTime\": {\"$date\": \"2025-03-13T11:56:09.144Z\"}, \"logicalSessionTimeoutMinutes\": 30, \"connectionId\": 13236, \"maxWireVersion\": 25, \"ok\": 1.0}", "message": "Server heartbeat succeeded"}
2025-03-13 16:56:09,074 - pymongo.topology - DEBUG - {"topologyId": {"$oid": "67d2c6474b050be8041a6a54"}, "driverConnectionId": 1, "serverConnectionId": 13236, "serverHost": "3.144.134.141", "serverPort": 27017, "awaited": true, "message": "Server heartbeat started"}
2025-03-13 16:56:19,079 - pymongo.topology - DEBUG - {"topologyId": {"$oid": "67d2c6474b050be8041a6a54"}, "driverConnectionId": 1, "serverConnectionId": 13236, "serverHost": "3.144.134.141", "serverPort": 27017, "awaited": true, "durationMS": 10000.0, "reply": "{\"isWritablePrimary\": true, \"topologyVersion\": {\"processId\": {\"$oid\": \"67b7e5814f77c1a87c56d054\"}}, \"maxBsonObjectSize\": 16777216, \"maxMessageSizeBytes\": 48000000, \"maxWriteBatchSize\": 100000, \"localTime\": {\"$date\": \"2025-03-13T11:56:19.150Z\"}, \"logicalSessionTimeoutMinutes\": 30, \"connectionId\": 13236, \"maxWireVersion\": 25, \"ok\": 1.0}", "message": "Server heartbeat succeeded"}
2025-03-13 16:56:19,080 - pymongo.topology - DEBUG - {"topologyId": {"$oid": "67d2c6474b050be8041a6a54"}, "driverConnectionId": 1, "serverConnectionId": 13236, "serverHost": "3.144.134.141", "serverPort": 27017, "awaited": true, "message": "Server heartbeat started"}
2025-03-13 16:56:29,089 - pymongo.topology - DEBUG - {"topologyId": {"$oid": "67d2c6474b050be8041a6a54"}, "driverConnectionId": 1, "serverConnectionId": 13236, "serverHost": "3.144.134.141", "serverPort": 27017, "awaited": true, "durationMS": 10015.999999999622, "reply": "{\"isWritablePrimary\": true, \"topologyVersion\": {\"processId\": {\"$oid\": \"67b7e5814f77c1a87c56d054\"}}, \"maxBsonObjectSize\": 16777216, \"maxMessageSizeBytes\": 48000000, \"maxWriteBatchSize\": 100000, \"localTime\": {\"$date\": \"2025-03-13T11:56:29.160Z\"}, \"logicalSessionTimeoutMinutes\": 30, \"connectionId\": 13236, \"maxWireVersion\": 25, \"ok\": 1.0}", "message": "Server heartbeat succeeded"}
2025-03-13 16:56:29,090 - pymongo.topology - DEBUG - {"topologyId": {"$oid": "67d2c6474b050be8041a6a54"}, "driverConnectionId": 1, "serverConnectionId": 13236, "serverHost": "3.144.134.141", "serverPort": 27017, "awaited": true, "message": "Server heartbeat started"}
2025-03-13 16:56:39,090 - pymongo.topology - DEBUG - {"topologyId": {"$oid": "67d2c6474b050be8041a6a54"}, "driverConnectionId": 1, "serverConnectionId": 13236, "serverHost": "3.144.134.141", "serverPort": 27017, "awaited": true, "durationMS": 10000.0, "reply": "{\"isWritablePrimary\": true, \"topologyVersion\": {\"processId\": {\"$oid\": \"67b7e5814f77c1a87c56d054\"}}, \"maxBsonObjectSize\": 16777216, \"maxMessageSizeBytes\": 48000000, \"maxWriteBatchSize\": 100000, \"localTime\": {\"$date\": \"2025-03-13T11:56:39.161Z\"}, \"logicalSessionTimeoutMinutes\": 30, \"connectionId\": 13236, \"maxWireVersion\": 25, \"ok\": 1.0}", "message": "Server heartbeat succeeded"}
2025-03-13 16:56:39,091 - pymongo.topology - DEBUG - {"topologyId": {"$oid": "67d2c6474b050be8041a6a54"}, "driverConnectionId": 1, "serverConnectionId": 13236, "serverHost": "3.144.134.141", "serverPort": 27017, "awaited": true, "message": "Server heartbeat started"}
2025-03-13 16:56:49,091 - pymongo.topology - DEBUG - {"topologyId": {"$oid": "67d2c6474b050be8041a6a54"}, "driverConnectionId": 1, "serverConnectionId": 13236, "serverHost": "3.144.134.141", "serverPort": 27017, "awaited": true, "durationMS": 10000.0, "reply": "{\"isWritablePrimary\": true, \"topologyVersion\": {\"processId\": {\"$oid\": \"67b7e5814f77c1a87c56d054\"}}, \"maxBsonObjectSize\": 16777216, \"maxMessageSizeBytes\": 48000000, \"maxWriteBatchSize\": 100000, \"localTime\": {\"$date\": \"2025-03-13T11:56:49.161Z\"}, \"logicalSessionTimeoutMinutes\": 30, \"connectionId\": 13236, \"maxWireVersion\": 25, \"ok\": 1.0}", "message": "Server heartbeat succeeded"}
2025-03-13 16:56:49,092 - pymongo.topology - DEBUG - {"topologyId": {"$oid": "67d2c6474b050be8041a6a54"}, "driverConnectionId": 1, "serverConnectionId": 13236, "serverHost": "3.144.134.141", "serverPort": 27017, "awaited": true, "message": "Server heartbeat started"}
2025-03-13 16:56:59,091 - pymongo.topology - DEBUG - {"topologyId": {"$oid": "67d2c6474b050be8041a6a54"}, "driverConnectionId": 1, "serverConnectionId": 13236, "serverHost": "3.144.134.141", "serverPort": 27017, "awaited": true, "durationMS": 10000.0, "reply": "{\"isWritablePrimary\": true, \"topologyVersion\": {\"processId\": {\"$oid\": \"67b7e5814f77c1a87c56d054\"}}, \"maxBsonObjectSize\": 16777216, \"maxMessageSizeBytes\": 48000000, \"maxWriteBatchSize\": 100000, \"localTime\": {\"$date\": \"2025-03-13T11:56:59.161Z\"}, \"logicalSessionTimeoutMinutes\": 30, \"connectionId\": 13236, \"maxWireVersion\": 25, \"ok\": 1.0}", "message": "Server heartbeat succeeded"}
2025-03-13 16:56:59,092 - pymongo.topology - DEBUG - {"topologyId": {"$oid": "67d2c6474b050be8041a6a54"}, "driverConnectionId": 1, "serverConnectionId": 13236, "serverHost": "3.144.134.141", "serverPort": 27017, "awaited": true, "message": "Server heartbeat started"}
2025-03-13 16:57:09,091 - pymongo.topology - DEBUG - {"topologyId": {"$oid": "67d2c6474b050be8041a6a54"}, "driverConnectionId": 1, "serverConnectionId": 13236, "serverHost": "3.144.134.141", "serverPort": 27017, "awaited": true, "durationMS": 10000.0, "reply": "{\"isWritablePrimary\": true, \"topologyVersion\": {\"processId\": {\"$oid\": \"67b7e5814f77c1a87c56d054\"}}, \"maxBsonObjectSize\": 16777216, \"maxMessageSizeBytes\": 48000000, \"maxWriteBatchSize\": 100000, \"localTime\": {\"$date\": \"2025-03-13T11:57:09.162Z\"}, \"logicalSessionTimeoutMinutes\": 30, \"connectionId\": 13236, \"maxWireVersion\": 25, \"ok\": 1.0}", "message": "Server heartbeat succeeded"}
2025-03-13 16:57:09,091 - pymongo.topology - DEBUG - {"topologyId": {"$oid": "67d2c6474b050be8041a6a54"}, "driverConnectionId": 1, "serverConnectionId": 13236, "serverHost": "3.144.134.141", "serverPort": 27017, "awaited": true, "message": "Server heartbeat started"}
2025-03-13 16:57:19,091 - pymongo.topology - DEBUG - {"topologyId": {"$oid": "67d2c6474b050be8041a6a54"}, "driverConnectionId": 1, "serverConnectionId": 13236, "serverHost": "3.144.134.141", "serverPort": 27017, "awaited": true, "durationMS": 10000.0, "reply": "{\"isWritablePrimary\": true, \"topologyVersion\": {\"processId\": {\"$oid\": \"67b7e5814f77c1a87c56d054\"}}, \"maxBsonObjectSize\": 16777216, \"maxMessageSizeBytes\": 48000000, \"maxWriteBatchSize\": 100000, \"localTime\": {\"$date\": \"2025-03-13T11:57:19.162Z\"}, \"logicalSessionTimeoutMinutes\": 30, \"connectionId\": 13236, \"maxWireVersion\": 25, \"ok\": 1.0}", "message": "Server heartbeat succeeded"}
2025-03-13 16:57:19,092 - pymongo.topology - DEBUG - {"topologyId": {"$oid": "67d2c6474b050be8041a6a54"}, "driverConnectionId": 1, "serverConnectionId": 13236, "serverHost": "3.144.134.141", "serverPort": 27017, "awaited": true, "message": "Server heartbeat started"}
2025-03-13 16:57:29,092 - pymongo.topology - DEBUG - {"topologyId": {"$oid": "67d2c6474b050be8041a6a54"}, "driverConnectionId": 1, "serverConnectionId": 13236, "serverHost": "3.144.134.141", "serverPort": 27017, "awaited": true, "durationMS": 10000.0, "reply": "{\"isWritablePrimary\": true, \"topologyVersion\": {\"processId\": {\"$oid\": \"67b7e5814f77c1a87c56d054\"}}, \"maxBsonObjectSize\": 16777216, \"maxMessageSizeBytes\": 48000000, \"maxWriteBatchSize\": 100000, \"localTime\": {\"$date\": \"2025-03-13T11:57:29.163Z\"}, \"logicalSessionTimeoutMinutes\": 30, \"connectionId\": 13236, \"maxWireVersion\": 25, \"ok\": 1.0}", "message": "Server heartbeat succeeded"}
2025-03-13 16:57:29,093 - pymongo.topology - DEBUG - {"topologyId": {"$oid": "67d2c6474b050be8041a6a54"}, "driverConnectionId": 1, "serverConnectionId": 13236, "serverHost": "3.144.134.141", "serverPort": 27017, "awaited": true, "message": "Server heartbeat started"}
2025-03-13 16:57:39,093 - pymongo.topology - DEBUG - {"topologyId": {"$oid": "67d2c6474b050be8041a6a54"}, "driverConnectionId": 1, "serverConnectionId": 13236, "serverHost": "3.144.134.141", "serverPort": 27017, "awaited": true, "durationMS": 10000.0, "reply": "{\"isWritablePrimary\": true, \"topologyVersion\": {\"processId\": {\"$oid\": \"67b7e5814f77c1a87c56d054\"}}, \"maxBsonObjectSize\": 16777216, \"maxMessageSizeBytes\": 48000000, \"maxWriteBatchSize\": 100000, \"localTime\": {\"$date\": \"2025-03-13T11:57:39.164Z\"}, \"logicalSessionTimeoutMinutes\": 30, \"connectionId\": 13236, \"maxWireVersion\": 25, \"ok\": 1.0}", "message": "Server heartbeat succeeded"}
2025-03-13 16:57:39,093 - pymongo.topology - DEBUG - {"topologyId": {"$oid": "67d2c6474b050be8041a6a54"}, "driverConnectionId": 1, "serverConnectionId": 13236, "serverHost": "3.144.134.141", "serverPort": 27017, "awaited": true, "message": "Server heartbeat started"}
2025-03-13 16:57:49,095 - pymongo.topology - DEBUG - {"topologyId": {"$oid": "67d2c6474b050be8041a6a54"}, "driverConnectionId": 1, "serverConnectionId": 13236, "serverHost": "3.144.134.141", "serverPort": 27017, "awaited": true, "durationMS": 10000.0, "reply": "{\"isWritablePrimary\": true, \"topologyVersion\": {\"processId\": {\"$oid\": \"67b7e5814f77c1a87c56d054\"}}, \"maxBsonObjectSize\": 16777216, \"maxMessageSizeBytes\": 48000000, \"maxWriteBatchSize\": 100000, \"localTime\": {\"$date\": \"2025-03-13T11:57:49.166Z\"}, \"logicalSessionTimeoutMinutes\": 30, \"connectionId\": 13236, \"maxWireVersion\": 25, \"ok\": 1.0}", "message": "Server heartbeat succeeded"}
2025-03-13 16:57:49,096 - pymongo.topology - DEBUG - {"topologyId": {"$oid": "67d2c6474b050be8041a6a54"}, "driverConnectionId": 1, "serverConnectionId": 13236, "serverHost": "3.144.134.141", "serverPort": 27017, "awaited": true, "message": "Server heartbeat started"}
2025-03-13 16:57:59,096 - pymongo.topology - DEBUG - {"topologyId": {"$oid": "67d2c6474b050be8041a6a54"}, "driverConnectionId": 1, "serverConnectionId": 13236, "serverHost": "3.144.134.141", "serverPort": 27017, "awaited": true, "durationMS": 10000.0, "reply": "{\"isWritablePrimary\": true, \"topologyVersion\": {\"processId\": {\"$oid\": \"67b7e5814f77c1a87c56d054\"}}, \"maxBsonObjectSize\": 16777216, \"maxMessageSizeBytes\": 48000000, \"maxWriteBatchSize\": 100000, \"localTime\": {\"$date\": \"2025-03-13T11:57:59.167Z\"}, \"logicalSessionTimeoutMinutes\": 30, \"connectionId\": 13236, \"maxWireVersion\": 25, \"ok\": 1.0}", "message": "Server heartbeat succeeded"}
2025-03-13 16:57:59,096 - pymongo.topology - DEBUG - {"topologyId": {"$oid": "67d2c6474b050be8041a6a54"}, "driverConnectionId": 1, "serverConnectionId": 13236, "serverHost": "3.144.134.141", "serverPort": 27017, "awaited": true, "message": "Server heartbeat started"}
2025-03-13 16:58:09,105 - pymongo.topology - DEBUG - {"topologyId": {"$oid": "67d2c6474b050be8041a6a54"}, "driverConnectionId": 1, "serverConnectionId": 13236, "serverHost": "3.144.134.141", "serverPort": 27017, "awaited": true, "durationMS": 10014.999999999418, "reply": "{\"isWritablePrimary\": true, \"topologyVersion\": {\"processId\": {\"$oid\": \"67b7e5814f77c1a87c56d054\"}}, \"maxBsonObjectSize\": 16777216, \"maxMessageSizeBytes\": 48000000, \"maxWriteBatchSize\": 100000, \"localTime\": {\"$date\": \"2025-03-13T11:58:09.177Z\"}, \"logicalSessionTimeoutMinutes\": 30, \"connectionId\": 13236, \"maxWireVersion\": 25, \"ok\": 1.0}", "message": "Server heartbeat succeeded"}
2025-03-13 16:58:09,105 - pymongo.topology - DEBUG - {"topologyId": {"$oid": "67d2c6474b050be8041a6a54"}, "driverConnectionId": 1, "serverConnectionId": 13236, "serverHost": "3.144.134.141", "serverPort": 27017, "awaited": true, "message": "Server heartbeat started"}
2025-03-13 16:58:19,106 - pymongo.topology - DEBUG - {"topologyId": {"$oid": "67d2c6474b050be8041a6a54"}, "driverConnectionId": 1, "serverConnectionId": 13236, "serverHost": "3.144.134.141", "serverPort": 27017, "awaited": true, "durationMS": 10000.0, "reply": "{\"isWritablePrimary\": true, \"topologyVersion\": {\"processId\": {\"$oid\": \"67b7e5814f77c1a87c56d054\"}}, \"maxBsonObjectSize\": 16777216, \"maxMessageSizeBytes\": 48000000, \"maxWriteBatchSize\": 100000, \"localTime\": {\"$date\": \"2025-03-13T11:58:19.177Z\"}, \"logicalSessionTimeoutMinutes\": 30, \"connectionId\": 13236, \"maxWireVersion\": 25, \"ok\": 1.0}", "message": "Server heartbeat succeeded"}
2025-03-13 16:58:19,106 - pymongo.topology - DEBUG - {"topologyId": {"$oid": "67d2c6474b050be8041a6a54"}, "driverConnectionId": 1, "serverConnectionId": 13236, "serverHost": "3.144.134.141", "serverPort": 27017, "awaited": true, "message": "Server heartbeat started"}
2025-03-13 16:58:29,108 - pymongo.topology - DEBUG - {"topologyId": {"$oid": "67d2c6474b050be8041a6a54"}, "driverConnectionId": 1, "serverConnectionId": 13236, "serverHost": "3.144.134.141", "serverPort": 27017, "awaited": true, "durationMS": 10000.0, "reply": "{\"isWritablePrimary\": true, \"topologyVersion\": {\"processId\": {\"$oid\": \"67b7e5814f77c1a87c56d054\"}}, \"maxBsonObjectSize\": 16777216, \"maxMessageSizeBytes\": 48000000, \"maxWriteBatchSize\": 100000, \"localTime\": {\"$date\": \"2025-03-13T11:58:29.180Z\"}, \"logicalSessionTimeoutMinutes\": 30, \"connectionId\": 13236, \"maxWireVersion\": 25, \"ok\": 1.0}", "message": "Server heartbeat succeeded"}
2025-03-13 16:58:29,108 - pymongo.topology - DEBUG - {"topologyId": {"$oid": "67d2c6474b050be8041a6a54"}, "driverConnectionId": 1, "serverConnectionId": 13236, "serverHost": "3.144.134.141", "serverPort": 27017, "awaited": true, "message": "Server heartbeat started"}
2025-03-13 16:58:39,109 - pymongo.topology - DEBUG - {"topologyId": {"$oid": "67d2c6474b050be8041a6a54"}, "driverConnectionId": 1, "serverConnectionId": 13236, "serverHost": "3.144.134.141", "serverPort": 27017, "awaited": true, "durationMS": 10000.0, "reply": "{\"isWritablePrimary\": true, \"topologyVersion\": {\"processId\": {\"$oid\": \"67b7e5814f77c1a87c56d054\"}}, \"maxBsonObjectSize\": 16777216, \"maxMessageSizeBytes\": 48000000, \"maxWriteBatchSize\": 100000, \"localTime\": {\"$date\": \"2025-03-13T11:58:39.181Z\"}, \"logicalSessionTimeoutMinutes\": 30, \"connectionId\": 13236, \"maxWireVersion\": 25, \"ok\": 1.0}", "message": "Server heartbeat succeeded"}
2025-03-13 16:58:39,110 - pymongo.topology - DEBUG - {"topologyId": {"$oid": "67d2c6474b050be8041a6a54"}, "driverConnectionId": 1, "serverConnectionId": 13236, "serverHost": "3.144.134.141", "serverPort": 27017, "awaited": true, "message": "Server heartbeat started"}
2025-03-13 16:58:49,120 - pymongo.topology - DEBUG - {"topologyId": {"$oid": "67d2c6474b050be8041a6a54"}, "driverConnectionId": 1, "serverConnectionId": 13236, "serverHost": "3.144.134.141", "serverPort": 27017, "awaited": true, "durationMS": 10015.999999999622, "reply": "{\"isWritablePrimary\": true, \"topologyVersion\": {\"processId\": {\"$oid\": \"67b7e5814f77c1a87c56d054\"}}, \"maxBsonObjectSize\": 16777216, \"maxMessageSizeBytes\": 48000000, \"maxWriteBatchSize\": 100000, \"localTime\": {\"$date\": \"2025-03-13T11:58:49.192Z\"}, \"logicalSessionTimeoutMinutes\": 30, \"connectionId\": 13236, \"maxWireVersion\": 25, \"ok\": 1.0}", "message": "Server heartbeat succeeded"}
2025-03-13 16:58:49,121 - pymongo.topology - DEBUG - {"topologyId": {"$oid": "67d2c6474b050be8041a6a54"}, "driverConnectionId": 1, "serverConnectionId": 13236, "serverHost": "3.144.134.141", "serverPort": 27017, "awaited": true, "message": "Server heartbeat started"}
2025-03-13 16:58:59,128 - pymongo.topology - DEBUG - {"topologyId": {"$oid": "67d2c6474b050be8041a6a54"}, "driverConnectionId": 1, "serverConnectionId": 13236, "serverHost": "3.144.134.141", "serverPort": 27017, "awaited": true, "durationMS": 10000.0, "reply": "{\"isWritablePrimary\": true, \"topologyVersion\": {\"processId\": {\"$oid\": \"67b7e5814f77c1a87c56d054\"}}, \"maxBsonObjectSize\": 16777216, \"maxMessageSizeBytes\": 48000000, \"maxWriteBatchSize\": 100000, \"localTime\": {\"$date\": \"2025-03-13T11:58:59.200Z\"}, \"logicalSessionTimeoutMinutes\": 30, \"connectionId\": 13236, \"maxWireVersion\": 25, \"ok\": 1.0}", "message": "Server heartbeat succeeded"}
2025-03-13 16:58:59,128 - pymongo.topology - DEBUG - {"topologyId": {"$oid": "67d2c6474b050be8041a6a54"}, "driverConnectionId": 1, "serverConnectionId": 13236, "serverHost": "3.144.134.141", "serverPort": 27017, "awaited": true, "message": "Server heartbeat started"}
2025-03-13 16:59:09,128 - pymongo.topology - DEBUG - {"topologyId": {"$oid": "67d2c6474b050be8041a6a54"}, "driverConnectionId": 1, "serverConnectionId": 13236, "serverHost": "3.144.134.141", "serverPort": 27017, "awaited": true, "durationMS": 10000.0, "reply": "{\"isWritablePrimary\": true, \"topologyVersion\": {\"processId\": {\"$oid\": \"67b7e5814f77c1a87c56d054\"}}, \"maxBsonObjectSize\": 16777216, \"maxMessageSizeBytes\": 48000000, \"maxWriteBatchSize\": 100000, \"localTime\": {\"$date\": \"2025-03-13T11:59:09.200Z\"}, \"logicalSessionTimeoutMinutes\": 30, \"connectionId\": 13236, \"maxWireVersion\": 25, \"ok\": 1.0}", "message": "Server heartbeat succeeded"}
2025-03-13 16:59:09,128 - pymongo.topology - DEBUG - {"topologyId": {"$oid": "67d2c6474b050be8041a6a54"}, "driverConnectionId": 1, "serverConnectionId": 13236, "serverHost": "3.144.134.141", "serverPort": 27017, "awaited": true, "message": "Server heartbeat started"}
2025-03-13 16:59:19,135 - pymongo.topology - DEBUG - {"topologyId": {"$oid": "67d2c6474b050be8041a6a54"}, "driverConnectionId": 1, "serverConnectionId": 13236, "serverHost": "3.144.134.141", "serverPort": 27017, "awaited": true, "durationMS": 10015.999999999622, "reply": "{\"isWritablePrimary\": true, \"topologyVersion\": {\"processId\": {\"$oid\": \"67b7e5814f77c1a87c56d054\"}}, \"maxBsonObjectSize\": 16777216, \"maxMessageSizeBytes\": 48000000, \"maxWriteBatchSize\": 100000, \"localTime\": {\"$date\": \"2025-03-13T11:59:19.208Z\"}, \"logicalSessionTimeoutMinutes\": 30, \"connectionId\": 13236, \"maxWireVersion\": 25, \"ok\": 1.0}", "message": "Server heartbeat succeeded"}
2025-03-13 16:59:19,136 - pymongo.topology - DEBUG - {"topologyId": {"$oid": "67d2c6474b050be8041a6a54"}, "driverConnectionId": 1, "serverConnectionId": 13236, "serverHost": "3.144.134.141", "serverPort": 27017, "awaited": true, "message": "Server heartbeat started"}
2025-03-13 16:59:29,135 - pymongo.topology - DEBUG - {"topologyId": {"$oid": "67d2c6474b050be8041a6a54"}, "driverConnectionId": 1, "serverConnectionId": 13236, "serverHost": "3.144.134.141", "serverPort": 27017, "awaited": true, "durationMS": 10000.0, "reply": "{\"isWritablePrimary\": true, \"topologyVersion\": {\"processId\": {\"$oid\": \"67b7e5814f77c1a87c56d054\"}}, \"maxBsonObjectSize\": 16777216, \"maxMessageSizeBytes\": 48000000, \"maxWriteBatchSize\": 100000, \"localTime\": {\"$date\": \"2025-03-13T11:59:29.208Z\"}, \"logicalSessionTimeoutMinutes\": 30, \"connectionId\": 13236, \"maxWireVersion\": 25, \"ok\": 1.0}", "message": "Server heartbeat succeeded"}
2025-03-13 16:59:29,136 - pymongo.topology - DEBUG - {"topologyId": {"$oid": "67d2c6474b050be8041a6a54"}, "driverConnectionId": 1, "serverConnectionId": 13236, "serverHost": "3.144.134.141", "serverPort": 27017, "awaited": true, "message": "Server heartbeat started"}
2025-03-13 16:59:39,136 - pymongo.topology - DEBUG - {"topologyId": {"$oid": "67d2c6474b050be8041a6a54"}, "driverConnectionId": 1, "serverConnectionId": 13236, "serverHost": "3.144.134.141", "serverPort": 27017, "awaited": true, "durationMS": 10000.0, "reply": "{\"isWritablePrimary\": true, \"topologyVersion\": {\"processId\": {\"$oid\": \"67b7e5814f77c1a87c56d054\"}}, \"maxBsonObjectSize\": 16777216, \"maxMessageSizeBytes\": 48000000, \"maxWriteBatchSize\": 100000, \"localTime\": {\"$date\": \"2025-03-13T11:59:39.209Z\"}, \"logicalSessionTimeoutMinutes\": 30, \"connectionId\": 13236, \"maxWireVersion\": 25, \"ok\": 1.0}", "message": "Server heartbeat succeeded"}
2025-03-13 16:59:39,137 - pymongo.topology - DEBUG - {"topologyId": {"$oid": "67d2c6474b050be8041a6a54"}, "driverConnectionId": 1, "serverConnectionId": 13236, "serverHost": "3.144.134.141", "serverPort": 27017, "awaited": true, "message": "Server heartbeat started"}
2025-03-13 16:59:49,172 - pymongo.topology - DEBUG - {"topologyId": {"$oid": "67d2c6474b050be8041a6a54"}, "driverConnectionId": 1, "serverConnectionId": 13236, "serverHost": "3.144.134.141", "serverPort": 27017, "awaited": true, "durationMS": 10030.99999999904, "reply": "{\"isWritablePrimary\": true, \"topologyVersion\": {\"processId\": {\"$oid\": \"67b7e5814f77c1a87c56d054\"}}, \"maxBsonObjectSize\": 16777216, \"maxMessageSizeBytes\": 48000000, \"maxWriteBatchSize\": 100000, \"localTime\": {\"$date\": \"2025-03-13T11:59:49.209Z\"}, \"logicalSessionTimeoutMinutes\": 30, \"connectionId\": 13236, \"maxWireVersion\": 25, \"ok\": 1.0}", "message": "Server heartbeat succeeded"}
2025-03-13 16:59:49,172 - pymongo.topology - DEBUG - {"topologyId": {"$oid": "67d2c6474b050be8041a6a54"}, "driverConnectionId": 1, "serverConnectionId": 13236, "serverHost": "3.144.134.141", "serverPort": 27017, "awaited": true, "message": "Server heartbeat started"}
2025-03-13 16:59:59,139 - pymongo.topology - DEBUG - {"topologyId": {"$oid": "67d2c6474b050be8041a6a54"}, "driverConnectionId": 1, "serverConnectionId": 13236, "serverHost": "3.144.134.141", "serverPort": 27017, "awaited": true, "durationMS": 9969.00000000096, "reply": "{\"isWritablePrimary\": true, \"topologyVersion\": {\"processId\": {\"$oid\": \"67b7e5814f77c1a87c56d054\"}}, \"maxBsonObjectSize\": 16777216, \"maxMessageSizeBytes\": 48000000, \"maxWriteBatchSize\": 100000, \"localTime\": {\"$date\": \"2025-03-13T11:59:59.212Z\"}, \"logicalSessionTimeoutMinutes\": 30, \"connectionId\": 13236, \"maxWireVersion\": 25, \"ok\": 1.0}", "message": "Server heartbeat succeeded"}
2025-03-13 16:59:59,139 - pymongo.topology - DEBUG - {"topologyId": {"$oid": "67d2c6474b050be8041a6a54"}, "driverConnectionId": 1, "serverConnectionId": 13236, "serverHost": "3.144.134.141", "serverPort": 27017, "awaited": true, "message": "Server heartbeat started"}
2025-03-13 17:00:09,147 - pymongo.topology - DEBUG - {"topologyId": {"$oid": "67d2c6474b050be8041a6a54"}, "driverConnectionId": 1, "serverConnectionId": 13236, "serverHost": "3.144.134.141", "serverPort": 27017, "awaited": true, "durationMS": 10014.999999999418, "reply": "{\"isWritablePrimary\": true, \"topologyVersion\": {\"processId\": {\"$oid\": \"67b7e5814f77c1a87c56d054\"}}, \"maxBsonObjectSize\": 16777216, \"maxMessageSizeBytes\": 48000000, \"maxWriteBatchSize\": 100000, \"localTime\": {\"$date\": \"2025-03-13T12:00:09.220Z\"}, \"logicalSessionTimeoutMinutes\": 30, \"connectionId\": 13236, \"maxWireVersion\": 25, \"ok\": 1.0}", "message": "Server heartbeat succeeded"}
2025-03-13 17:00:09,147 - pymongo.topology - DEBUG - {"topologyId": {"$oid": "67d2c6474b050be8041a6a54"}, "driverConnectionId": 1, "serverConnectionId": 13236, "serverHost": "3.144.134.141", "serverPort": 27017, "awaited": true, "message": "Server heartbeat started"}
2025-03-13 17:00:19,148 - pymongo.topology - DEBUG - {"topologyId": {"$oid": "67d2c6474b050be8041a6a54"}, "driverConnectionId": 1, "serverConnectionId": 13236, "serverHost": "3.144.134.141", "serverPort": 27017, "awaited": true, "durationMS": 10000.0, "reply": "{\"isWritablePrimary\": true, \"topologyVersion\": {\"processId\": {\"$oid\": \"67b7e5814f77c1a87c56d054\"}}, \"maxBsonObjectSize\": 16777216, \"maxMessageSizeBytes\": 48000000, \"maxWriteBatchSize\": 100000, \"localTime\": {\"$date\": \"2025-03-13T12:00:19.221Z\"}, \"logicalSessionTimeoutMinutes\": 30, \"connectionId\": 13236, \"maxWireVersion\": 25, \"ok\": 1.0}", "message": "Server heartbeat succeeded"}
2025-03-13 17:00:19,148 - pymongo.topology - DEBUG - {"topologyId": {"$oid": "67d2c6474b050be8041a6a54"}, "driverConnectionId": 1, "serverConnectionId": 13236, "serverHost": "3.144.134.141", "serverPort": 27017, "awaited": true, "message": "Server heartbeat started"}
2025-03-13 17:00:29,148 - pymongo.topology - DEBUG - {"topologyId": {"$oid": "67d2c6474b050be8041a6a54"}, "driverConnectionId": 1, "serverConnectionId": 13236, "serverHost": "3.144.134.141", "serverPort": 27017, "awaited": true, "durationMS": 10000.0, "reply": "{\"isWritablePrimary\": true, \"topologyVersion\": {\"processId\": {\"$oid\": \"67b7e5814f77c1a87c56d054\"}}, \"maxBsonObjectSize\": 16777216, \"maxMessageSizeBytes\": 48000000, \"maxWriteBatchSize\": 100000, \"localTime\": {\"$date\": \"2025-03-13T12:00:29.222Z\"}, \"logicalSessionTimeoutMinutes\": 30, \"connectionId\": 13236, \"maxWireVersion\": 25, \"ok\": 1.0}", "message": "Server heartbeat succeeded"}
2025-03-13 17:00:29,149 - pymongo.topology - DEBUG - {"topologyId": {"$oid": "67d2c6474b050be8041a6a54"}, "driverConnectionId": 1, "serverConnectionId": 13236, "serverHost": "3.144.134.141", "serverPort": 27017, "awaited": true, "message": "Server heartbeat started"}
2025-03-13 17:00:39,159 - pymongo.topology - DEBUG - {"topologyId": {"$oid": "67d2c6474b050be8041a6a54"}, "driverConnectionId": 1, "serverConnectionId": 13236, "serverHost": "3.144.134.141", "serverPort": 27017, "awaited": true, "durationMS": 10000.0, "reply": "{\"isWritablePrimary\": true, \"topologyVersion\": {\"processId\": {\"$oid\": \"67b7e5814f77c1a87c56d054\"}}, \"maxBsonObjectSize\": 16777216, \"maxMessageSizeBytes\": 48000000, \"maxWriteBatchSize\": 100000, \"localTime\": {\"$date\": \"2025-03-13T12:00:39.232Z\"}, \"logicalSessionTimeoutMinutes\": 30, \"connectionId\": 13236, \"maxWireVersion\": 25, \"ok\": 1.0}", "message": "Server heartbeat succeeded"}
2025-03-13 17:00:39,159 - pymongo.topology - DEBUG - {"topologyId": {"$oid": "67d2c6474b050be8041a6a54"}, "driverConnectionId": 1, "serverConnectionId": 13236, "serverHost": "3.144.134.141", "serverPort": 27017, "awaited": true, "message": "Server heartbeat started"}
2025-03-13 17:00:49,160 - pymongo.topology - DEBUG - {"topologyId": {"$oid": "67d2c6474b050be8041a6a54"}, "driverConnectionId": 1, "serverConnectionId": 13236, "serverHost": "3.144.134.141", "serverPort": 27017, "awaited": true, "durationMS": 10000.0, "reply": "{\"isWritablePrimary\": true, \"topologyVersion\": {\"processId\": {\"$oid\": \"67b7e5814f77c1a87c56d054\"}}, \"maxBsonObjectSize\": 16777216, \"maxMessageSizeBytes\": 48000000, \"maxWriteBatchSize\": 100000, \"localTime\": {\"$date\": \"2025-03-13T12:00:49.233Z\"}, \"logicalSessionTimeoutMinutes\": 30, \"connectionId\": 13236, \"maxWireVersion\": 25, \"ok\": 1.0}", "message": "Server heartbeat succeeded"}
2025-03-13 17:00:49,160 - pymongo.topology - DEBUG - {"topologyId": {"$oid": "67d2c6474b050be8041a6a54"}, "driverConnectionId": 1, "serverConnectionId": 13236, "serverHost": "3.144.134.141", "serverPort": 27017, "awaited": true, "message": "Server heartbeat started"}
2025-03-13 17:00:59,167 - pymongo.topology - DEBUG - {"topologyId": {"$oid": "67d2c6474b050be8041a6a54"}, "driverConnectionId": 1, "serverConnectionId": 13236, "serverHost": "3.144.134.141", "serverPort": 27017, "awaited": true, "durationMS": 10015.999999999622, "reply": "{\"isWritablePrimary\": true, \"topologyVersion\": {\"processId\": {\"$oid\": \"67b7e5814f77c1a87c56d054\"}}, \"maxBsonObjectSize\": 16777216, \"maxMessageSizeBytes\": 48000000, \"maxWriteBatchSize\": 100000, \"localTime\": {\"$date\": \"2025-03-13T12:00:59.240Z\"}, \"logicalSessionTimeoutMinutes\": 30, \"connectionId\": 13236, \"maxWireVersion\": 25, \"ok\": 1.0}", "message": "Server heartbeat succeeded"}
2025-03-13 17:00:59,167 - pymongo.topology - DEBUG - {"topologyId": {"$oid": "67d2c6474b050be8041a6a54"}, "driverConnectionId": 1, "serverConnectionId": 13236, "serverHost": "3.144.134.141", "serverPort": 27017, "awaited": true, "message": "Server heartbeat started"}
2025-03-13 17:01:09,172 - pymongo.topology - DEBUG - {"topologyId": {"$oid": "67d2c6474b050be8041a6a54"}, "driverConnectionId": 1, "serverConnectionId": 13236, "serverHost": "3.144.134.141", "serverPort": 27017, "awaited": true, "durationMS": 10000.0, "reply": "{\"isWritablePrimary\": true, \"topologyVersion\": {\"processId\": {\"$oid\": \"67b7e5814f77c1a87c56d054\"}}, \"maxBsonObjectSize\": 16777216, \"maxMessageSizeBytes\": 48000000, \"maxWriteBatchSize\": 100000, \"localTime\": {\"$date\": \"2025-03-13T12:01:09.245Z\"}, \"logicalSessionTimeoutMinutes\": 30, \"connectionId\": 13236, \"maxWireVersion\": 25, \"ok\": 1.0}", "message": "Server heartbeat succeeded"}
2025-03-13 17:01:09,173 - pymongo.topology - DEBUG - {"topologyId": {"$oid": "67d2c6474b050be8041a6a54"}, "driverConnectionId": 1, "serverConnectionId": 13236, "serverHost": "3.144.134.141", "serverPort": 27017, "awaited": true, "message": "Server heartbeat started"}
2025-03-13 17:01:19,181 - pymongo.topology - DEBUG - {"topologyId": {"$oid": "67d2c6474b050be8041a6a54"}, "driverConnectionId": 1, "serverConnectionId": 13236, "serverHost": "3.144.134.141", "serverPort": 27017, "awaited": true, "durationMS": 10014.999999999418, "reply": "{\"isWritablePrimary\": true, \"topologyVersion\": {\"processId\": {\"$oid\": \"67b7e5814f77c1a87c56d054\"}}, \"maxBsonObjectSize\": 16777216, \"maxMessageSizeBytes\": 48000000, \"maxWriteBatchSize\": 100000, \"localTime\": {\"$date\": \"2025-03-13T12:01:19.254Z\"}, \"logicalSessionTimeoutMinutes\": 30, \"connectionId\": 13236, \"maxWireVersion\": 25, \"ok\": 1.0}", "message": "Server heartbeat succeeded"}
2025-03-13 17:01:19,181 - pymongo.topology - DEBUG - {"topologyId": {"$oid": "67d2c6474b050be8041a6a54"}, "driverConnectionId": 1, "serverConnectionId": 13236, "serverHost": "3.144.134.141", "serverPort": 27017, "awaited": true, "message": "Server heartbeat started"}
2025-03-13 17:01:29,183 - pymongo.topology - DEBUG - {"topologyId": {"$oid": "67d2c6474b050be8041a6a54"}, "driverConnectionId": 1, "serverConnectionId": 13236, "serverHost": "3.144.134.141", "serverPort": 27017, "awaited": true, "durationMS": 10000.0, "reply": "{\"isWritablePrimary\": true, \"topologyVersion\": {\"processId\": {\"$oid\": \"67b7e5814f77c1a87c56d054\"}}, \"maxBsonObjectSize\": 16777216, \"maxMessageSizeBytes\": 48000000, \"maxWriteBatchSize\": 100000, \"localTime\": {\"$date\": \"2025-03-13T12:01:29.256Z\"}, \"logicalSessionTimeoutMinutes\": 30, \"connectionId\": 13236, \"maxWireVersion\": 25, \"ok\": 1.0}", "message": "Server heartbeat succeeded"}
2025-03-13 17:01:29,184 - pymongo.topology - DEBUG - {"topologyId": {"$oid": "67d2c6474b050be8041a6a54"}, "driverConnectionId": 1, "serverConnectionId": 13236, "serverHost": "3.144.134.141", "serverPort": 27017, "awaited": true, "message": "Server heartbeat started"}
2025-03-13 17:01:39,185 - pymongo.topology - DEBUG - {"topologyId": {"$oid": "67d2c6474b050be8041a6a54"}, "driverConnectionId": 1, "serverConnectionId": 13236, "serverHost": "3.144.134.141", "serverPort": 27017, "awaited": true, "durationMS": 10000.0, "reply": "{\"isWritablePrimary\": true, \"topologyVersion\": {\"processId\": {\"$oid\": \"67b7e5814f77c1a87c56d054\"}}, \"maxBsonObjectSize\": 16777216, \"maxMessageSizeBytes\": 48000000, \"maxWriteBatchSize\": 100000, \"localTime\": {\"$date\": \"2025-03-13T12:01:39.258Z\"}, \"logicalSessionTimeoutMinutes\": 30, \"connectionId\": 13236, \"maxWireVersion\": 25, \"ok\": 1.0}", "message": "Server heartbeat succeeded"}
2025-03-13 17:01:39,185 - pymongo.topology - DEBUG - {"topologyId": {"$oid": "67d2c6474b050be8041a6a54"}, "driverConnectionId": 1, "serverConnectionId": 13236, "serverHost": "3.144.134.141", "serverPort": 27017, "awaited": true, "message": "Server heartbeat started"}
2025-03-13 17:01:49,195 - pymongo.topology - DEBUG - {"topologyId": {"$oid": "67d2c6474b050be8041a6a54"}, "driverConnectionId": 1, "serverConnectionId": 13236, "serverHost": "3.144.134.141", "serverPort": 27017, "awaited": true, "durationMS": 10016.00000000326, "reply": "{\"isWritablePrimary\": true, \"topologyVersion\": {\"processId\": {\"$oid\": \"67b7e5814f77c1a87c56d054\"}}, \"maxBsonObjectSize\": 16777216, \"maxMessageSizeBytes\": 48000000, \"maxWriteBatchSize\": 100000, \"localTime\": {\"$date\": \"2025-03-13T12:01:49.268Z\"}, \"logicalSessionTimeoutMinutes\": 30, \"connectionId\": 13236, \"maxWireVersion\": 25, \"ok\": 1.0}", "message": "Server heartbeat succeeded"}
2025-03-13 17:01:49,195 - pymongo.topology - DEBUG - {"topologyId": {"$oid": "67d2c6474b050be8041a6a54"}, "driverConnectionId": 1, "serverConnectionId": 13236, "serverHost": "3.144.134.141", "serverPort": 27017, "awaited": true, "message": "Server heartbeat started"}
2025-03-13 17:01:59,194 - pymongo.topology - DEBUG - {"topologyId": {"$oid": "67d2c6474b050be8041a6a54"}, "driverConnectionId": 1, "serverConnectionId": 13236, "serverHost": "3.144.134.141", "serverPort": 27017, "awaited": true, "durationMS": 10000.0, "reply": "{\"isWritablePrimary\": true, \"topologyVersion\": {\"processId\": {\"$oid\": \"67b7e5814f77c1a87c56d054\"}}, \"maxBsonObjectSize\": 16777216, \"maxMessageSizeBytes\": 48000000, \"maxWriteBatchSize\": 100000, \"localTime\": {\"$date\": \"2025-03-13T12:01:59.268Z\"}, \"logicalSessionTimeoutMinutes\": 30, \"connectionId\": 13236, \"maxWireVersion\": 25, \"ok\": 1.0}", "message": "Server heartbeat succeeded"}
2025-03-13 17:01:59,194 - pymongo.topology - DEBUG - {"topologyId": {"$oid": "67d2c6474b050be8041a6a54"}, "driverConnectionId": 1, "serverConnectionId": 13236, "serverHost": "3.144.134.141", "serverPort": 27017, "awaited": true, "message": "Server heartbeat started"}
2025-03-13 17:02:09,203 - pymongo.topology - DEBUG - {"topologyId": {"$oid": "67d2c6474b050be8041a6a54"}, "driverConnectionId": 1, "serverConnectionId": 13236, "serverHost": "3.144.134.141", "serverPort": 27017, "awaited": true, "durationMS": 10000.0, "reply": "{\"isWritablePrimary\": true, \"topologyVersion\": {\"processId\": {\"$oid\": \"67b7e5814f77c1a87c56d054\"}}, \"maxBsonObjectSize\": 16777216, \"maxMessageSizeBytes\": 48000000, \"maxWriteBatchSize\": 100000, \"localTime\": {\"$date\": \"2025-03-13T12:02:09.277Z\"}, \"logicalSessionTimeoutMinutes\": 30, \"connectionId\": 13236, \"maxWireVersion\": 25, \"ok\": 1.0}", "message": "Server heartbeat succeeded"}
2025-03-13 17:02:09,203 - pymongo.topology - DEBUG - {"topologyId": {"$oid": "67d2c6474b050be8041a6a54"}, "driverConnectionId": 1, "serverConnectionId": 13236, "serverHost": "3.144.134.141", "serverPort": 27017, "awaited": true, "message": "Server heartbeat started"}
2025-03-13 17:02:19,204 - pymongo.topology - DEBUG - {"topologyId": {"$oid": "67d2c6474b050be8041a6a54"}, "driverConnectionId": 1, "serverConnectionId": 13236, "serverHost": "3.144.134.141", "serverPort": 27017, "awaited": true, "durationMS": 10000.0, "reply": "{\"isWritablePrimary\": true, \"topologyVersion\": {\"processId\": {\"$oid\": \"67b7e5814f77c1a87c56d054\"}}, \"maxBsonObjectSize\": 16777216, \"maxMessageSizeBytes\": 48000000, \"maxWriteBatchSize\": 100000, \"localTime\": {\"$date\": \"2025-03-13T12:02:19.278Z\"}, \"logicalSessionTimeoutMinutes\": 30, \"connectionId\": 13236, \"maxWireVersion\": 25, \"ok\": 1.0}", "message": "Server heartbeat succeeded"}
2025-03-13 17:02:19,205 - pymongo.topology - DEBUG - {"topologyId": {"$oid": "67d2c6474b050be8041a6a54"}, "driverConnectionId": 1, "serverConnectionId": 13236, "serverHost": "3.144.134.141", "serverPort": 27017, "awaited": true, "message": "Server heartbeat started"}
2025-03-13 17:02:29,214 - pymongo.topology - DEBUG - {"topologyId": {"$oid": "67d2c6474b050be8041a6a54"}, "driverConnectionId": 1, "serverConnectionId": 13236, "serverHost": "3.144.134.141", "serverPort": 27017, "awaited": true, "durationMS": 10015.999999999622, "reply": "{\"isWritablePrimary\": true, \"topologyVersion\": {\"processId\": {\"$oid\": \"67b7e5814f77c1a87c56d054\"}}, \"maxBsonObjectSize\": 16777216, \"maxMessageSizeBytes\": 48000000, \"maxWriteBatchSize\": 100000, \"localTime\": {\"$date\": \"2025-03-13T12:02:29.288Z\"}, \"logicalSessionTimeoutMinutes\": 30, \"connectionId\": 13236, \"maxWireVersion\": 25, \"ok\": 1.0}", "message": "Server heartbeat succeeded"}
2025-03-13 17:02:29,215 - pymongo.topology - DEBUG - {"topologyId": {"$oid": "67d2c6474b050be8041a6a54"}, "driverConnectionId": 1, "serverConnectionId": 13236, "serverHost": "3.144.134.141", "serverPort": 27017, "awaited": true, "message": "Server heartbeat started"}
2025-03-13 17:02:39,222 - pymongo.topology - DEBUG - {"topologyId": {"$oid": "67d2c6474b050be8041a6a54"}, "driverConnectionId": 1, "serverConnectionId": 13236, "serverHost": "3.144.134.141", "serverPort": 27017, "awaited": true, "durationMS": 10000.0, "reply": "{\"isWritablePrimary\": true, \"topologyVersion\": {\"processId\": {\"$oid\": \"67b7e5814f77c1a87c56d054\"}}, \"maxBsonObjectSize\": 16777216, \"maxMessageSizeBytes\": 48000000, \"maxWriteBatchSize\": 100000, \"localTime\": {\"$date\": \"2025-03-13T12:02:39.297Z\"}, \"logicalSessionTimeoutMinutes\": 30, \"connectionId\": 13236, \"maxWireVersion\": 25, \"ok\": 1.0}", "message": "Server heartbeat succeeded"}
2025-03-13 17:02:39,223 - pymongo.topology - DEBUG - {"topologyId": {"$oid": "67d2c6474b050be8041a6a54"}, "driverConnectionId": 1, "serverConnectionId": 13236, "serverHost": "3.144.134.141", "serverPort": 27017, "awaited": true, "message": "Server heartbeat started"}
2025-03-13 17:02:49,224 - pymongo.topology - DEBUG - {"topologyId": {"$oid": "67d2c6474b050be8041a6a54"}, "driverConnectionId": 1, "serverConnectionId": 13236, "serverHost": "3.144.134.141", "serverPort": 27017, "awaited": true, "durationMS": 10000.0, "reply": "{\"isWritablePrimary\": true, \"topologyVersion\": {\"processId\": {\"$oid\": \"67b7e5814f77c1a87c56d054\"}}, \"maxBsonObjectSize\": 16777216, \"maxMessageSizeBytes\": 48000000, \"maxWriteBatchSize\": 100000, \"localTime\": {\"$date\": \"2025-03-13T12:02:49.298Z\"}, \"logicalSessionTimeoutMinutes\": 30, \"connectionId\": 13236, \"maxWireVersion\": 25, \"ok\": 1.0}", "message": "Server heartbeat succeeded"}
2025-03-13 17:02:49,225 - pymongo.topology - DEBUG - {"topologyId": {"$oid": "67d2c6474b050be8041a6a54"}, "driverConnectionId": 1, "serverConnectionId": 13236, "serverHost": "3.144.134.141", "serverPort": 27017, "awaited": true, "message": "Server heartbeat started"}
2025-03-13 17:02:59,225 - pymongo.topology - DEBUG - {"topologyId": {"$oid": "67d2c6474b050be8041a6a54"}, "driverConnectionId": 1, "serverConnectionId": 13236, "serverHost": "3.144.134.141", "serverPort": 27017, "awaited": true, "durationMS": 10000.0, "reply": "{\"isWritablePrimary\": true, \"topologyVersion\": {\"processId\": {\"$oid\": \"67b7e5814f77c1a87c56d054\"}}, \"maxBsonObjectSize\": 16777216, \"maxMessageSizeBytes\": 48000000, \"maxWriteBatchSize\": 100000, \"localTime\": {\"$date\": \"2025-03-13T12:02:59.299Z\"}, \"logicalSessionTimeoutMinutes\": 30, \"connectionId\": 13236, \"maxWireVersion\": 25, \"ok\": 1.0}", "message": "Server heartbeat succeeded"}
2025-03-13 17:02:59,225 - pymongo.topology - DEBUG - {"topologyId": {"$oid": "67d2c6474b050be8041a6a54"}, "driverConnectionId": 1, "serverConnectionId": 13236, "serverHost": "3.144.134.141", "serverPort": 27017, "awaited": true, "message": "Server heartbeat started"}
2025-03-13 17:03:09,229 - pymongo.topology - DEBUG - {"topologyId": {"$oid": "67d2c6474b050be8041a6a54"}, "driverConnectionId": 1, "serverConnectionId": 13236, "serverHost": "3.144.134.141", "serverPort": 27017, "awaited": true, "durationMS": 10000.0, "reply": "{\"isWritablePrimary\": true, \"topologyVersion\": {\"processId\": {\"$oid\": \"67b7e5814f77c1a87c56d054\"}}, \"maxBsonObjectSize\": 16777216, \"maxMessageSizeBytes\": 48000000, \"maxWriteBatchSize\": 100000, \"localTime\": {\"$date\": \"2025-03-13T12:03:09.304Z\"}, \"logicalSessionTimeoutMinutes\": 30, \"connectionId\": 13236, \"maxWireVersion\": 25, \"ok\": 1.0}", "message": "Server heartbeat succeeded"}
2025-03-13 17:03:09,229 - pymongo.topology - DEBUG - {"topologyId": {"$oid": "67d2c6474b050be8041a6a54"}, "driverConnectionId": 1, "serverConnectionId": 13236, "serverHost": "3.144.134.141", "serverPort": 27017, "awaited": true, "message": "Server heartbeat started"}
2025-03-13 17:03:19,230 - pymongo.topology - DEBUG - {"topologyId": {"$oid": "67d2c6474b050be8041a6a54"}, "driverConnectionId": 1, "serverConnectionId": 13236, "serverHost": "3.144.134.141", "serverPort": 27017, "awaited": true, "durationMS": 10000.0, "reply": "{\"isWritablePrimary\": true, \"topologyVersion\": {\"processId\": {\"$oid\": \"67b7e5814f77c1a87c56d054\"}}, \"maxBsonObjectSize\": 16777216, \"maxMessageSizeBytes\": 48000000, \"maxWriteBatchSize\": 100000, \"localTime\": {\"$date\": \"2025-03-13T12:03:19.305Z\"}, \"logicalSessionTimeoutMinutes\": 30, \"connectionId\": 13236, \"maxWireVersion\": 25, \"ok\": 1.0}", "message": "Server heartbeat succeeded"}
2025-03-13 17:03:19,230 - pymongo.topology - DEBUG - {"topologyId": {"$oid": "67d2c6474b050be8041a6a54"}, "driverConnectionId": 1, "serverConnectionId": 13236, "serverHost": "3.144.134.141", "serverPort": 27017, "awaited": true, "message": "Server heartbeat started"}
2025-03-13 17:03:29,231 - pymongo.topology - DEBUG - {"topologyId": {"$oid": "67d2c6474b050be8041a6a54"}, "driverConnectionId": 1, "serverConnectionId": 13236, "serverHost": "3.144.134.141", "serverPort": 27017, "awaited": true, "durationMS": 10000.0, "reply": "{\"isWritablePrimary\": true, \"topologyVersion\": {\"processId\": {\"$oid\": \"67b7e5814f77c1a87c56d054\"}}, \"maxBsonObjectSize\": 16777216, \"maxMessageSizeBytes\": 48000000, \"maxWriteBatchSize\": 100000, \"localTime\": {\"$date\": \"2025-03-13T12:03:29.306Z\"}, \"logicalSessionTimeoutMinutes\": 30, \"connectionId\": 13236, \"maxWireVersion\": 25, \"ok\": 1.0}", "message": "Server heartbeat succeeded"}
2025-03-13 17:03:29,231 - pymongo.topology - DEBUG - {"topologyId": {"$oid": "67d2c6474b050be8041a6a54"}, "driverConnectionId": 1, "serverConnectionId": 13236, "serverHost": "3.144.134.141", "serverPort": 27017, "awaited": true, "message": "Server heartbeat started"}
2025-03-13 17:03:39,233 - pymongo.topology - DEBUG - {"topologyId": {"$oid": "67d2c6474b050be8041a6a54"}, "driverConnectionId": 1, "serverConnectionId": 13236, "serverHost": "3.144.134.141", "serverPort": 27017, "awaited": true, "durationMS": 10000.0, "reply": "{\"isWritablePrimary\": true, \"topologyVersion\": {\"processId\": {\"$oid\": \"67b7e5814f77c1a87c56d054\"}}, \"maxBsonObjectSize\": 16777216, \"maxMessageSizeBytes\": 48000000, \"maxWriteBatchSize\": 100000, \"localTime\": {\"$date\": \"2025-03-13T12:03:39.307Z\"}, \"logicalSessionTimeoutMinutes\": 30, \"connectionId\": 13236, \"maxWireVersion\": 25, \"ok\": 1.0}", "message": "Server heartbeat succeeded"}
2025-03-13 17:03:39,233 - pymongo.topology - DEBUG - {"topologyId": {"$oid": "67d2c6474b050be8041a6a54"}, "driverConnectionId": 1, "serverConnectionId": 13236, "serverHost": "3.144.134.141", "serverPort": 27017, "awaited": true, "message": "Server heartbeat started"}
2025-03-13 17:03:49,234 - pymongo.topology - DEBUG - {"topologyId": {"$oid": "67d2c6474b050be8041a6a54"}, "driverConnectionId": 1, "serverConnectionId": 13236, "serverHost": "3.144.134.141", "serverPort": 27017, "awaited": true, "durationMS": 10000.0, "reply": "{\"isWritablePrimary\": true, \"topologyVersion\": {\"processId\": {\"$oid\": \"67b7e5814f77c1a87c56d054\"}}, \"maxBsonObjectSize\": 16777216, \"maxMessageSizeBytes\": 48000000, \"maxWriteBatchSize\": 100000, \"localTime\": {\"$date\": \"2025-03-13T12:03:49.308Z\"}, \"logicalSessionTimeoutMinutes\": 30, \"connectionId\": 13236, \"maxWireVersion\": 25, \"ok\": 1.0}", "message": "Server heartbeat succeeded"}
2025-03-13 17:03:49,234 - pymongo.topology - DEBUG - {"topologyId": {"$oid": "67d2c6474b050be8041a6a54"}, "driverConnectionId": 1, "serverConnectionId": 13236, "serverHost": "3.144.134.141", "serverPort": 27017, "awaited": true, "message": "Server heartbeat started"}
2025-03-13 17:03:59,235 - pymongo.topology - DEBUG - {"topologyId": {"$oid": "67d2c6474b050be8041a6a54"}, "driverConnectionId": 1, "serverConnectionId": 13236, "serverHost": "3.144.134.141", "serverPort": 27017, "awaited": true, "durationMS": 10000.0, "reply": "{\"isWritablePrimary\": true, \"topologyVersion\": {\"processId\": {\"$oid\": \"67b7e5814f77c1a87c56d054\"}}, \"maxBsonObjectSize\": 16777216, \"maxMessageSizeBytes\": 48000000, \"maxWriteBatchSize\": 100000, \"localTime\": {\"$date\": \"2025-03-13T12:03:59.310Z\"}, \"logicalSessionTimeoutMinutes\": 30, \"connectionId\": 13236, \"maxWireVersion\": 25, \"ok\": 1.0}", "message": "Server heartbeat succeeded"}
2025-03-13 17:03:59,235 - pymongo.topology - DEBUG - {"topologyId": {"$oid": "67d2c6474b050be8041a6a54"}, "driverConnectionId": 1, "serverConnectionId": 13236, "serverHost": "3.144.134.141", "serverPort": 27017, "awaited": true, "message": "Server heartbeat started"}
2025-03-13 17:04:09,244 - pymongo.topology - DEBUG - {"topologyId": {"$oid": "67d2c6474b050be8041a6a54"}, "driverConnectionId": 1, "serverConnectionId": 13236, "serverHost": "3.144.134.141", "serverPort": 27017, "awaited": true, "durationMS": 10015.999999999622, "reply": "{\"isWritablePrimary\": true, \"topologyVersion\": {\"processId\": {\"$oid\": \"67b7e5814f77c1a87c56d054\"}}, \"maxBsonObjectSize\": 16777216, \"maxMessageSizeBytes\": 48000000, \"maxWriteBatchSize\": 100000, \"localTime\": {\"$date\": \"2025-03-13T12:04:09.319Z\"}, \"logicalSessionTimeoutMinutes\": 30, \"connectionId\": 13236, \"maxWireVersion\": 25, \"ok\": 1.0}", "message": "Server heartbeat succeeded"}
2025-03-13 17:04:09,244 - pymongo.topology - DEBUG - {"topologyId": {"$oid": "67d2c6474b050be8041a6a54"}, "driverConnectionId": 1, "serverConnectionId": 13236, "serverHost": "3.144.134.141", "serverPort": 27017, "awaited": true, "message": "Server heartbeat started"}
2025-03-13 17:04:19,254 - pymongo.topology - DEBUG - {"topologyId": {"$oid": "67d2c6474b050be8041a6a54"}, "driverConnectionId": 1, "serverConnectionId": 13236, "serverHost": "3.144.134.141", "serverPort": 27017, "awaited": true, "durationMS": 10000.0, "reply": "{\"isWritablePrimary\": true, \"topologyVersion\": {\"processId\": {\"$oid\": \"67b7e5814f77c1a87c56d054\"}}, \"maxBsonObjectSize\": 16777216, \"maxMessageSizeBytes\": 48000000, \"maxWriteBatchSize\": 100000, \"localTime\": {\"$date\": \"2025-03-13T12:04:19.329Z\"}, \"logicalSessionTimeoutMinutes\": 30, \"connectionId\": 13236, \"maxWireVersion\": 25, \"ok\": 1.0}", "message": "Server heartbeat succeeded"}
2025-03-13 17:04:19,254 - pymongo.topology - DEBUG - {"topologyId": {"$oid": "67d2c6474b050be8041a6a54"}, "driverConnectionId": 1, "serverConnectionId": 13236, "serverHost": "3.144.134.141", "serverPort": 27017, "awaited": true, "message": "Server heartbeat started"}
2025-03-13 17:04:29,256 - pymongo.topology - DEBUG - {"topologyId": {"$oid": "67d2c6474b050be8041a6a54"}, "driverConnectionId": 1, "serverConnectionId": 13236, "serverHost": "3.144.134.141", "serverPort": 27017, "awaited": true, "durationMS": 10000.0, "reply": "{\"isWritablePrimary\": true, \"topologyVersion\": {\"processId\": {\"$oid\": \"67b7e5814f77c1a87c56d054\"}}, \"maxBsonObjectSize\": 16777216, \"maxMessageSizeBytes\": 48000000, \"maxWriteBatchSize\": 100000, \"localTime\": {\"$date\": \"2025-03-13T12:04:29.331Z\"}, \"logicalSessionTimeoutMinutes\": 30, \"connectionId\": 13236, \"maxWireVersion\": 25, \"ok\": 1.0}", "message": "Server heartbeat succeeded"}
2025-03-13 17:04:29,257 - pymongo.topology - DEBUG - {"topologyId": {"$oid": "67d2c6474b050be8041a6a54"}, "driverConnectionId": 1, "serverConnectionId": 13236, "serverHost": "3.144.134.141", "serverPort": 27017, "awaited": true, "message": "Server heartbeat started"}
2025-03-13 17:04:39,265 - pymongo.topology - DEBUG - {"topologyId": {"$oid": "67d2c6474b050be8041a6a54"}, "driverConnectionId": 1, "serverConnectionId": 13236, "serverHost": "3.144.134.141", "serverPort": 27017, "awaited": true, "durationMS": 10000.0, "reply": "{\"isWritablePrimary\": true, \"topologyVersion\": {\"processId\": {\"$oid\": \"67b7e5814f77c1a87c56d054\"}}, \"maxBsonObjectSize\": 16777216, \"maxMessageSizeBytes\": 48000000, \"maxWriteBatchSize\": 100000, \"localTime\": {\"$date\": \"2025-03-13T12:04:39.340Z\"}, \"logicalSessionTimeoutMinutes\": 30, \"connectionId\": 13236, \"maxWireVersion\": 25, \"ok\": 1.0}", "message": "Server heartbeat succeeded"}
2025-03-13 17:04:39,265 - pymongo.topology - DEBUG - {"topologyId": {"$oid": "67d2c6474b050be8041a6a54"}, "driverConnectionId": 1, "serverConnectionId": 13236, "serverHost": "3.144.134.141", "serverPort": 27017, "awaited": true, "message": "Server heartbeat started"}
2025-03-13 17:04:49,350 - pymongo.topology - DEBUG - {"topologyId": {"$oid": "67d2c6474b050be8041a6a54"}, "driverConnectionId": 1, "serverConnectionId": 13236, "serverHost": "3.144.134.141", "serverPort": 27017, "awaited": true, "durationMS": 10093.000000000757, "reply": "{\"isWritablePrimary\": true, \"topologyVersion\": {\"processId\": {\"$oid\": \"67b7e5814f77c1a87c56d054\"}}, \"maxBsonObjectSize\": 16777216, \"maxMessageSizeBytes\": 48000000, \"maxWriteBatchSize\": 100000, \"localTime\": {\"$date\": \"2025-03-13T12:04:49.351Z\"}, \"logicalSessionTimeoutMinutes\": 30, \"connectionId\": 13236, \"maxWireVersion\": 25, \"ok\": 1.0}", "message": "Server heartbeat succeeded"}
2025-03-13 17:04:49,352 - pymongo.topology - DEBUG - {"topologyId": {"$oid": "67d2c6474b050be8041a6a54"}, "driverConnectionId": 1, "serverConnectionId": 13236, "serverHost": "3.144.134.141", "serverPort": 27017, "awaited": true, "message": "Server heartbeat started"}
2025-03-13 17:04:59,276 - pymongo.topology - DEBUG - {"topologyId": {"$oid": "67d2c6474b050be8041a6a54"}, "driverConnectionId": 1, "serverConnectionId": 13236, "serverHost": "3.144.134.141", "serverPort": 27017, "awaited": true, "durationMS": 9921.999999998661, "reply": "{\"isWritablePrimary\": true, \"topologyVersion\": {\"processId\": {\"$oid\": \"67b7e5814f77c1a87c56d054\"}}, \"maxBsonObjectSize\": 16777216, \"maxMessageSizeBytes\": 48000000, \"maxWriteBatchSize\": 100000, \"localTime\": {\"$date\": \"2025-03-13T12:04:59.351Z\"}, \"logicalSessionTimeoutMinutes\": 30, \"connectionId\": 13236, \"maxWireVersion\": 25, \"ok\": 1.0}", "message": "Server heartbeat succeeded"}
2025-03-13 17:04:59,277 - pymongo.topology - DEBUG - {"topologyId": {"$oid": "67d2c6474b050be8041a6a54"}, "driverConnectionId": 1, "serverConnectionId": 13236, "serverHost": "3.144.134.141", "serverPort": 27017, "awaited": true, "message": "Server heartbeat started"}
2025-03-13 17:05:09,277 - pymongo.topology - DEBUG - {"topologyId": {"$oid": "67d2c6474b050be8041a6a54"}, "driverConnectionId": 1, "serverConnectionId": 13236, "serverHost": "3.144.134.141", "serverPort": 27017, "awaited": true, "durationMS": 10000.0, "reply": "{\"isWritablePrimary\": true, \"topologyVersion\": {\"processId\": {\"$oid\": \"67b7e5814f77c1a87c56d054\"}}, \"maxBsonObjectSize\": 16777216, \"maxMessageSizeBytes\": 48000000, \"maxWriteBatchSize\": 100000, \"localTime\": {\"$date\": \"2025-03-13T12:05:09.352Z\"}, \"logicalSessionTimeoutMinutes\": 30, \"connectionId\": 13236, \"maxWireVersion\": 25, \"ok\": 1.0}", "message": "Server heartbeat succeeded"}
2025-03-13 17:05:09,277 - pymongo.topology - DEBUG - {"topologyId": {"$oid": "67d2c6474b050be8041a6a54"}, "driverConnectionId": 1, "serverConnectionId": 13236, "serverHost": "3.144.134.141", "serverPort": 27017, "awaited": true, "message": "Server heartbeat started"}
2025-03-13 17:05:19,277 - pymongo.topology - DEBUG - {"topologyId": {"$oid": "67d2c6474b050be8041a6a54"}, "driverConnectionId": 1, "serverConnectionId": 13236, "serverHost": "3.144.134.141", "serverPort": 27017, "awaited": true, "durationMS": 10000.0, "reply": "{\"isWritablePrimary\": true, \"topologyVersion\": {\"processId\": {\"$oid\": \"67b7e5814f77c1a87c56d054\"}}, \"maxBsonObjectSize\": 16777216, \"maxMessageSizeBytes\": 48000000, \"maxWriteBatchSize\": 100000, \"localTime\": {\"$date\": \"2025-03-13T12:05:19.352Z\"}, \"logicalSessionTimeoutMinutes\": 30, \"connectionId\": 13236, \"maxWireVersion\": 25, \"ok\": 1.0}", "message": "Server heartbeat succeeded"}
2025-03-13 17:05:19,277 - pymongo.topology - DEBUG - {"topologyId": {"$oid": "67d2c6474b050be8041a6a54"}, "driverConnectionId": 1, "serverConnectionId": 13236, "serverHost": "3.144.134.141", "serverPort": 27017, "awaited": true, "message": "Server heartbeat started"}
2025-03-13 17:05:29,276 - pymongo.topology - DEBUG - {"topologyId": {"$oid": "67d2c6474b050be8041a6a54"}, "driverConnectionId": 1, "serverConnectionId": 13236, "serverHost": "3.144.134.141", "serverPort": 27017, "awaited": true, "durationMS": 10000.0, "reply": "{\"isWritablePrimary\": true, \"topologyVersion\": {\"processId\": {\"$oid\": \"67b7e5814f77c1a87c56d054\"}}, \"maxBsonObjectSize\": 16777216, \"maxMessageSizeBytes\": 48000000, \"maxWriteBatchSize\": 100000, \"localTime\": {\"$date\": \"2025-03-13T12:05:29.352Z\"}, \"logicalSessionTimeoutMinutes\": 30, \"connectionId\": 13236, \"maxWireVersion\": 25, \"ok\": 1.0}", "message": "Server heartbeat succeeded"}
2025-03-13 17:05:29,276 - pymongo.topology - DEBUG - {"topologyId": {"$oid": "67d2c6474b050be8041a6a54"}, "driverConnectionId": 1, "serverConnectionId": 13236, "serverHost": "3.144.134.141", "serverPort": 27017, "awaited": true, "message": "Server heartbeat started"}
2025-03-13 17:05:39,277 - pymongo.topology - DEBUG - {"topologyId": {"$oid": "67d2c6474b050be8041a6a54"}, "driverConnectionId": 1, "serverConnectionId": 13236, "serverHost": "3.144.134.141", "serverPort": 27017, "awaited": true, "durationMS": 10000.0, "reply": "{\"isWritablePrimary\": true, \"topologyVersion\": {\"processId\": {\"$oid\": \"67b7e5814f77c1a87c56d054\"}}, \"maxBsonObjectSize\": 16777216, \"maxMessageSizeBytes\": 48000000, \"maxWriteBatchSize\": 100000, \"localTime\": {\"$date\": \"2025-03-13T12:05:39.352Z\"}, \"logicalSessionTimeoutMinutes\": 30, \"connectionId\": 13236, \"maxWireVersion\": 25, \"ok\": 1.0}", "message": "Server heartbeat succeeded"}
2025-03-13 17:05:39,278 - pymongo.topology - DEBUG - {"topologyId": {"$oid": "67d2c6474b050be8041a6a54"}, "driverConnectionId": 1, "serverConnectionId": 13236, "serverHost": "3.144.134.141", "serverPort": 27017, "awaited": true, "message": "Server heartbeat started"}
2025-03-13 17:05:49,278 - pymongo.topology - DEBUG - {"topologyId": {"$oid": "67d2c6474b050be8041a6a54"}, "driverConnectionId": 1, "serverConnectionId": 13236, "serverHost": "3.144.134.141", "serverPort": 27017, "awaited": true, "durationMS": 10000.0, "reply": "{\"isWritablePrimary\": true, \"topologyVersion\": {\"processId\": {\"$oid\": \"67b7e5814f77c1a87c56d054\"}}, \"maxBsonObjectSize\": 16777216, \"maxMessageSizeBytes\": 48000000, \"maxWriteBatchSize\": 100000, \"localTime\": {\"$date\": \"2025-03-13T12:05:49.354Z\"}, \"logicalSessionTimeoutMinutes\": 30, \"connectionId\": 13236, \"maxWireVersion\": 25, \"ok\": 1.0}", "message": "Server heartbeat succeeded"}
2025-03-13 17:05:49,278 - pymongo.topology - DEBUG - {"topologyId": {"$oid": "67d2c6474b050be8041a6a54"}, "driverConnectionId": 1, "serverConnectionId": 13236, "serverHost": "3.144.134.141", "serverPort": 27017, "awaited": true, "message": "Server heartbeat started"}
2025-03-13 17:05:59,279 - pymongo.topology - DEBUG - {"topologyId": {"$oid": "67d2c6474b050be8041a6a54"}, "driverConnectionId": 1, "serverConnectionId": 13236, "serverHost": "3.144.134.141", "serverPort": 27017, "awaited": true, "durationMS": 10000.0, "reply": "{\"isWritablePrimary\": true, \"topologyVersion\": {\"processId\": {\"$oid\": \"67b7e5814f77c1a87c56d054\"}}, \"maxBsonObjectSize\": 16777216, \"maxMessageSizeBytes\": 48000000, \"maxWriteBatchSize\": 100000, \"localTime\": {\"$date\": \"2025-03-13T12:05:59.355Z\"}, \"logicalSessionTimeoutMinutes\": 30, \"connectionId\": 13236, \"maxWireVersion\": 25, \"ok\": 1.0}", "message": "Server heartbeat succeeded"}
2025-03-13 17:05:59,279 - pymongo.topology - DEBUG - {"topologyId": {"$oid": "67d2c6474b050be8041a6a54"}, "driverConnectionId": 1, "serverConnectionId": 13236, "serverHost": "3.144.134.141", "serverPort": 27017, "awaited": true, "message": "Server heartbeat started"}
2025-03-13 17:06:09,285 - pymongo.topology - DEBUG - {"topologyId": {"$oid": "67d2c6474b050be8041a6a54"}, "driverConnectionId": 1, "serverConnectionId": 13236, "serverHost": "3.144.134.141", "serverPort": 27017, "awaited": true, "durationMS": 10000.0, "reply": "{\"isWritablePrimary\": true, \"topologyVersion\": {\"processId\": {\"$oid\": \"67b7e5814f77c1a87c56d054\"}}, \"maxBsonObjectSize\": 16777216, \"maxMessageSizeBytes\": 48000000, \"maxWriteBatchSize\": 100000, \"localTime\": {\"$date\": \"2025-03-13T12:06:09.361Z\"}, \"logicalSessionTimeoutMinutes\": 30, \"connectionId\": 13236, \"maxWireVersion\": 25, \"ok\": 1.0}", "message": "Server heartbeat succeeded"}
2025-03-13 17:06:09,285 - pymongo.topology - DEBUG - {"topologyId": {"$oid": "67d2c6474b050be8041a6a54"}, "driverConnectionId": 1, "serverConnectionId": 13236, "serverHost": "3.144.134.141", "serverPort": 27017, "awaited": true, "message": "Server heartbeat started"}
2025-03-13 17:06:19,286 - pymongo.topology - DEBUG - {"topologyId": {"$oid": "67d2c6474b050be8041a6a54"}, "driverConnectionId": 1, "serverConnectionId": 13236, "serverHost": "3.144.134.141", "serverPort": 27017, "awaited": true, "durationMS": 10000.0, "reply": "{\"isWritablePrimary\": true, \"topologyVersion\": {\"processId\": {\"$oid\": \"67b7e5814f77c1a87c56d054\"}}, \"maxBsonObjectSize\": 16777216, \"maxMessageSizeBytes\": 48000000, \"maxWriteBatchSize\": 100000, \"localTime\": {\"$date\": \"2025-03-13T12:06:19.362Z\"}, \"logicalSessionTimeoutMinutes\": 30, \"connectionId\": 13236, \"maxWireVersion\": 25, \"ok\": 1.0}", "message": "Server heartbeat succeeded"}
2025-03-13 17:06:19,286 - pymongo.topology - DEBUG - {"topologyId": {"$oid": "67d2c6474b050be8041a6a54"}, "driverConnectionId": 1, "serverConnectionId": 13236, "serverHost": "3.144.134.141", "serverPort": 27017, "awaited": true, "message": "Server heartbeat started"}
2025-03-13 17:06:29,291 - pymongo.topology - DEBUG - {"topologyId": {"$oid": "67d2c6474b050be8041a6a54"}, "driverConnectionId": 1, "serverConnectionId": 13236, "serverHost": "3.144.134.141", "serverPort": 27017, "awaited": true, "durationMS": 10015.999999999622, "reply": "{\"isWritablePrimary\": true, \"topologyVersion\": {\"processId\": {\"$oid\": \"67b7e5814f77c1a87c56d054\"}}, \"maxBsonObjectSize\": 16777216, \"maxMessageSizeBytes\": 48000000, \"maxWriteBatchSize\": 100000, \"localTime\": {\"$date\": \"2025-03-13T12:06:29.367Z\"}, \"logicalSessionTimeoutMinutes\": 30, \"connectionId\": 13236, \"maxWireVersion\": 25, \"ok\": 1.0}", "message": "Server heartbeat succeeded"}
2025-03-13 17:06:29,291 - pymongo.topology - DEBUG - {"topologyId": {"$oid": "67d2c6474b050be8041a6a54"}, "driverConnectionId": 1, "serverConnectionId": 13236, "serverHost": "3.144.134.141", "serverPort": 27017, "awaited": true, "message": "Server heartbeat started"}
2025-03-13 17:06:39,301 - pymongo.topology - DEBUG - {"topologyId": {"$oid": "67d2c6474b050be8041a6a54"}, "driverConnectionId": 1, "serverConnectionId": 13236, "serverHost": "3.144.134.141", "serverPort": 27017, "awaited": true, "durationMS": 10000.0, "reply": "{\"isWritablePrimary\": true, \"topologyVersion\": {\"processId\": {\"$oid\": \"67b7e5814f77c1a87c56d054\"}}, \"maxBsonObjectSize\": 16777216, \"maxMessageSizeBytes\": 48000000, \"maxWriteBatchSize\": 100000, \"localTime\": {\"$date\": \"2025-03-13T12:06:39.377Z\"}, \"logicalSessionTimeoutMinutes\": 30, \"connectionId\": 13236, \"maxWireVersion\": 25, \"ok\": 1.0}", "message": "Server heartbeat succeeded"}
2025-03-13 17:06:39,301 - pymongo.topology - DEBUG - {"topologyId": {"$oid": "67d2c6474b050be8041a6a54"}, "driverConnectionId": 1, "serverConnectionId": 13236, "serverHost": "3.144.134.141", "serverPort": 27017, "awaited": true, "message": "Server heartbeat started"}
2025-03-13 17:06:49,310 - pymongo.topology - DEBUG - {"topologyId": {"$oid": "67d2c6474b050be8041a6a54"}, "driverConnectionId": 1, "serverConnectionId": 13236, "serverHost": "3.144.134.141", "serverPort": 27017, "awaited": true, "durationMS": 10014.999999999418, "reply": "{\"isWritablePrimary\": true, \"topologyVersion\": {\"processId\": {\"$oid\": \"67b7e5814f77c1a87c56d054\"}}, \"maxBsonObjectSize\": 16777216, \"maxMessageSizeBytes\": 48000000, \"maxWriteBatchSize\": 100000, \"localTime\": {\"$date\": \"2025-03-13T12:06:49.387Z\"}, \"logicalSessionTimeoutMinutes\": 30, \"connectionId\": 13236, \"maxWireVersion\": 25, \"ok\": 1.0}", "message": "Server heartbeat succeeded"}
2025-03-13 17:06:49,311 - pymongo.topology - DEBUG - {"topologyId": {"$oid": "67d2c6474b050be8041a6a54"}, "driverConnectionId": 1, "serverConnectionId": 13236, "serverHost": "3.144.134.141", "serverPort": 27017, "awaited": true, "message": "Server heartbeat started"}
2025-03-13 17:06:59,320 - pymongo.topology - DEBUG - {"topologyId": {"$oid": "67d2c6474b050be8041a6a54"}, "driverConnectionId": 1, "serverConnectionId": 13236, "serverHost": "3.144.134.141", "serverPort": 27017, "awaited": true, "durationMS": 10016.00000000326, "reply": "{\"isWritablePrimary\": true, \"topologyVersion\": {\"processId\": {\"$oid\": \"67b7e5814f77c1a87c56d054\"}}, \"maxBsonObjectSize\": 16777216, \"maxMessageSizeBytes\": 48000000, \"maxWriteBatchSize\": 100000, \"localTime\": {\"$date\": \"2025-03-13T12:06:59.396Z\"}, \"logicalSessionTimeoutMinutes\": 30, \"connectionId\": 13236, \"maxWireVersion\": 25, \"ok\": 1.0}", "message": "Server heartbeat succeeded"}
2025-03-13 17:06:59,320 - pymongo.topology - DEBUG - {"topologyId": {"$oid": "67d2c6474b050be8041a6a54"}, "driverConnectionId": 1, "serverConnectionId": 13236, "serverHost": "3.144.134.141", "serverPort": 27017, "awaited": true, "message": "Server heartbeat started"}
2025-03-13 17:07:09,320 - pymongo.topology - DEBUG - {"topologyId": {"$oid": "67d2c6474b050be8041a6a54"}, "driverConnectionId": 1, "serverConnectionId": 13236, "serverHost": "3.144.134.141", "serverPort": 27017, "awaited": true, "durationMS": 10000.0, "reply": "{\"isWritablePrimary\": true, \"topologyVersion\": {\"processId\": {\"$oid\": \"67b7e5814f77c1a87c56d054\"}}, \"maxBsonObjectSize\": 16777216, \"maxMessageSizeBytes\": 48000000, \"maxWriteBatchSize\": 100000, \"localTime\": {\"$date\": \"2025-03-13T12:07:09.396Z\"}, \"logicalSessionTimeoutMinutes\": 30, \"connectionId\": 13236, \"maxWireVersion\": 25, \"ok\": 1.0}", "message": "Server heartbeat succeeded"}
2025-03-13 17:07:09,320 - pymongo.topology - DEBUG - {"topologyId": {"$oid": "67d2c6474b050be8041a6a54"}, "driverConnectionId": 1, "serverConnectionId": 13236, "serverHost": "3.144.134.141", "serverPort": 27017, "awaited": true, "message": "Server heartbeat started"}
2025-03-13 17:07:19,320 - pymongo.topology - DEBUG - {"topologyId": {"$oid": "67d2c6474b050be8041a6a54"}, "driverConnectionId": 1, "serverConnectionId": 13236, "serverHost": "3.144.134.141", "serverPort": 27017, "awaited": true, "durationMS": 10000.0, "reply": "{\"isWritablePrimary\": true, \"topologyVersion\": {\"processId\": {\"$oid\": \"67b7e5814f77c1a87c56d054\"}}, \"maxBsonObjectSize\": 16777216, \"maxMessageSizeBytes\": 48000000, \"maxWriteBatchSize\": 100000, \"localTime\": {\"$date\": \"2025-03-13T12:07:19.397Z\"}, \"logicalSessionTimeoutMinutes\": 30, \"connectionId\": 13236, \"maxWireVersion\": 25, \"ok\": 1.0}", "message": "Server heartbeat succeeded"}
2025-03-13 17:07:19,321 - pymongo.topology - DEBUG - {"topologyId": {"$oid": "67d2c6474b050be8041a6a54"}, "driverConnectionId": 1, "serverConnectionId": 13236, "serverHost": "3.144.134.141", "serverPort": 27017, "awaited": true, "message": "Server heartbeat started"}
2025-03-13 17:07:29,321 - pymongo.topology - DEBUG - {"topologyId": {"$oid": "67d2c6474b050be8041a6a54"}, "driverConnectionId": 1, "serverConnectionId": 13236, "serverHost": "3.144.134.141", "serverPort": 27017, "awaited": true, "durationMS": 10000.0, "reply": "{\"isWritablePrimary\": true, \"topologyVersion\": {\"processId\": {\"$oid\": \"67b7e5814f77c1a87c56d054\"}}, \"maxBsonObjectSize\": 16777216, \"maxMessageSizeBytes\": 48000000, \"maxWriteBatchSize\": 100000, \"localTime\": {\"$date\": \"2025-03-13T12:07:29.398Z\"}, \"logicalSessionTimeoutMinutes\": 30, \"connectionId\": 13236, \"maxWireVersion\": 25, \"ok\": 1.0}", "message": "Server heartbeat succeeded"}
2025-03-13 17:07:29,321 - pymongo.topology - DEBUG - {"topologyId": {"$oid": "67d2c6474b050be8041a6a54"}, "driverConnectionId": 1, "serverConnectionId": 13236, "serverHost": "3.144.134.141", "serverPort": 27017, "awaited": true, "message": "Server heartbeat started"}
2025-03-13 17:07:39,322 - pymongo.topology - DEBUG - {"topologyId": {"$oid": "67d2c6474b050be8041a6a54"}, "driverConnectionId": 1, "serverConnectionId": 13236, "serverHost": "3.144.134.141", "serverPort": 27017, "awaited": true, "durationMS": 10000.0, "reply": "{\"isWritablePrimary\": true, \"topologyVersion\": {\"processId\": {\"$oid\": \"67b7e5814f77c1a87c56d054\"}}, \"maxBsonObjectSize\": 16777216, \"maxMessageSizeBytes\": 48000000, \"maxWriteBatchSize\": 100000, \"localTime\": {\"$date\": \"2025-03-13T12:07:39.399Z\"}, \"logicalSessionTimeoutMinutes\": 30, \"connectionId\": 13236, \"maxWireVersion\": 25, \"ok\": 1.0}", "message": "Server heartbeat succeeded"}
2025-03-13 17:07:39,323 - pymongo.topology - DEBUG - {"topologyId": {"$oid": "67d2c6474b050be8041a6a54"}, "driverConnectionId": 1, "serverConnectionId": 13236, "serverHost": "3.144.134.141", "serverPort": 27017, "awaited": true, "message": "Server heartbeat started"}
2025-03-13 17:07:49,323 - pymongo.topology - DEBUG - {"topologyId": {"$oid": "67d2c6474b050be8041a6a54"}, "driverConnectionId": 1, "serverConnectionId": 13236, "serverHost": "3.144.134.141", "serverPort": 27017, "awaited": true, "durationMS": 10000.0, "reply": "{\"isWritablePrimary\": true, \"topologyVersion\": {\"processId\": {\"$oid\": \"67b7e5814f77c1a87c56d054\"}}, \"maxBsonObjectSize\": 16777216, \"maxMessageSizeBytes\": 48000000, \"maxWriteBatchSize\": 100000, \"localTime\": {\"$date\": \"2025-03-13T12:07:49.400Z\"}, \"logicalSessionTimeoutMinutes\": 30, \"connectionId\": 13236, \"maxWireVersion\": 25, \"ok\": 1.0}", "message": "Server heartbeat succeeded"}
2025-03-13 17:07:49,324 - pymongo.topology - DEBUG - {"topologyId": {"$oid": "67d2c6474b050be8041a6a54"}, "driverConnectionId": 1, "serverConnectionId": 13236, "serverHost": "3.144.134.141", "serverPort": 27017, "awaited": true, "message": "Server heartbeat started"}
2025-03-13 17:07:59,332 - pymongo.topology - DEBUG - {"topologyId": {"$oid": "67d2c6474b050be8041a6a54"}, "driverConnectionId": 1, "serverConnectionId": 13236, "serverHost": "3.144.134.141", "serverPort": 27017, "awaited": true, "durationMS": 10000.0, "reply": "{\"isWritablePrimary\": true, \"topologyVersion\": {\"processId\": {\"$oid\": \"67b7e5814f77c1a87c56d054\"}}, \"maxBsonObjectSize\": 16777216, \"maxMessageSizeBytes\": 48000000, \"maxWriteBatchSize\": 100000, \"localTime\": {\"$date\": \"2025-03-13T12:07:59.409Z\"}, \"logicalSessionTimeoutMinutes\": 30, \"connectionId\": 13236, \"maxWireVersion\": 25, \"ok\": 1.0}", "message": "Server heartbeat succeeded"}
2025-03-13 17:07:59,333 - pymongo.topology - DEBUG - {"topologyId": {"$oid": "67d2c6474b050be8041a6a54"}, "driverConnectionId": 1, "serverConnectionId": 13236, "serverHost": "3.144.134.141", "serverPort": 27017, "awaited": true, "message": "Server heartbeat started"}
2025-03-13 17:08:09,337 - pymongo.topology - DEBUG - {"topologyId": {"$oid": "67d2c6474b050be8041a6a54"}, "driverConnectionId": 1, "serverConnectionId": 13236, "serverHost": "3.144.134.141", "serverPort": 27017, "awaited": true, "durationMS": 10015.999999999622, "reply": "{\"isWritablePrimary\": true, \"topologyVersion\": {\"processId\": {\"$oid\": \"67b7e5814f77c1a87c56d054\"}}, \"maxBsonObjectSize\": 16777216, \"maxMessageSizeBytes\": 48000000, \"maxWriteBatchSize\": 100000, \"localTime\": {\"$date\": \"2025-03-13T12:08:09.415Z\"}, \"logicalSessionTimeoutMinutes\": 30, \"connectionId\": 13236, \"maxWireVersion\": 25, \"ok\": 1.0}", "message": "Server heartbeat succeeded"}
2025-03-13 17:08:09,337 - pymongo.topology - DEBUG - {"topologyId": {"$oid": "67d2c6474b050be8041a6a54"}, "driverConnectionId": 1, "serverConnectionId": 13236, "serverHost": "3.144.134.141", "serverPort": 27017, "awaited": true, "message": "Server heartbeat started"}
2025-03-13 17:08:19,338 - pymongo.topology - DEBUG - {"topologyId": {"$oid": "67d2c6474b050be8041a6a54"}, "driverConnectionId": 1, "serverConnectionId": 13236, "serverHost": "3.144.134.141", "serverPort": 27017, "awaited": true, "durationMS": 10000.0, "reply": "{\"isWritablePrimary\": true, \"topologyVersion\": {\"processId\": {\"$oid\": \"67b7e5814f77c1a87c56d054\"}}, \"maxBsonObjectSize\": 16777216, \"maxMessageSizeBytes\": 48000000, \"maxWriteBatchSize\": 100000, \"localTime\": {\"$date\": \"2025-03-13T12:08:19.415Z\"}, \"logicalSessionTimeoutMinutes\": 30, \"connectionId\": 13236, \"maxWireVersion\": 25, \"ok\": 1.0}", "message": "Server heartbeat succeeded"}
2025-03-13 17:08:19,339 - pymongo.topology - DEBUG - {"topologyId": {"$oid": "67d2c6474b050be8041a6a54"}, "driverConnectionId": 1, "serverConnectionId": 13236, "serverHost": "3.144.134.141", "serverPort": 27017, "awaited": true, "message": "Server heartbeat started"}
2025-03-13 17:08:29,338 - pymongo.topology - DEBUG - {"topologyId": {"$oid": "67d2c6474b050be8041a6a54"}, "driverConnectionId": 1, "serverConnectionId": 13236, "serverHost": "3.144.134.141", "serverPort": 27017, "awaited": true, "durationMS": 10000.0, "reply": "{\"isWritablePrimary\": true, \"topologyVersion\": {\"processId\": {\"$oid\": \"67b7e5814f77c1a87c56d054\"}}, \"maxBsonObjectSize\": 16777216, \"maxMessageSizeBytes\": 48000000, \"maxWriteBatchSize\": 100000, \"localTime\": {\"$date\": \"2025-03-13T12:08:29.415Z\"}, \"logicalSessionTimeoutMinutes\": 30, \"connectionId\": 13236, \"maxWireVersion\": 25, \"ok\": 1.0}", "message": "Server heartbeat succeeded"}
2025-03-13 17:08:29,339 - pymongo.topology - DEBUG - {"topologyId": {"$oid": "67d2c6474b050be8041a6a54"}, "driverConnectionId": 1, "serverConnectionId": 13236, "serverHost": "3.144.134.141", "serverPort": 27017, "awaited": true, "message": "Server heartbeat started"}
2025-03-13 17:08:39,342 - pymongo.topology - DEBUG - {"topologyId": {"$oid": "67d2c6474b050be8041a6a54"}, "driverConnectionId": 1, "serverConnectionId": 13236, "serverHost": "3.144.134.141", "serverPort": 27017, "awaited": true, "durationMS": 10000.0, "reply": "{\"isWritablePrimary\": true, \"topologyVersion\": {\"processId\": {\"$oid\": \"67b7e5814f77c1a87c56d054\"}}, \"maxBsonObjectSize\": 16777216, \"maxMessageSizeBytes\": 48000000, \"maxWriteBatchSize\": 100000, \"localTime\": {\"$date\": \"2025-03-13T12:08:39.419Z\"}, \"logicalSessionTimeoutMinutes\": 30, \"connectionId\": 13236, \"maxWireVersion\": 25, \"ok\": 1.0}", "message": "Server heartbeat succeeded"}
2025-03-13 17:08:39,342 - pymongo.topology - DEBUG - {"topologyId": {"$oid": "67d2c6474b050be8041a6a54"}, "driverConnectionId": 1, "serverConnectionId": 13236, "serverHost": "3.144.134.141", "serverPort": 27017, "awaited": true, "message": "Server heartbeat started"}
2025-03-13 17:08:49,350 - pymongo.topology - DEBUG - {"topologyId": {"$oid": "67d2c6474b050be8041a6a54"}, "driverConnectionId": 1, "serverConnectionId": 13236, "serverHost": "3.144.134.141", "serverPort": 27017, "awaited": true, "durationMS": 10014.999999999418, "reply": "{\"isWritablePrimary\": true, \"topologyVersion\": {\"processId\": {\"$oid\": \"67b7e5814f77c1a87c56d054\"}}, \"maxBsonObjectSize\": 16777216, \"maxMessageSizeBytes\": 48000000, \"maxWriteBatchSize\": 100000, \"localTime\": {\"$date\": \"2025-03-13T12:08:49.428Z\"}, \"logicalSessionTimeoutMinutes\": 30, \"connectionId\": 13236, \"maxWireVersion\": 25, \"ok\": 1.0}", "message": "Server heartbeat succeeded"}
2025-03-13 17:08:49,350 - pymongo.topology - DEBUG - {"topologyId": {"$oid": "67d2c6474b050be8041a6a54"}, "driverConnectionId": 1, "serverConnectionId": 13236, "serverHost": "3.144.134.141", "serverPort": 27017, "awaited": true, "message": "Server heartbeat started"}
2025-03-13 17:08:59,355 - pymongo.topology - DEBUG - {"topologyId": {"$oid": "67d2c6474b050be8041a6a54"}, "driverConnectionId": 1, "serverConnectionId": 13236, "serverHost": "3.144.134.141", "serverPort": 27017, "awaited": true, "durationMS": 10000.0, "reply": "{\"isWritablePrimary\": true, \"topologyVersion\": {\"processId\": {\"$oid\": \"67b7e5814f77c1a87c56d054\"}}, \"maxBsonObjectSize\": 16777216, \"maxMessageSizeBytes\": 48000000, \"maxWriteBatchSize\": 100000, \"localTime\": {\"$date\": \"2025-03-13T12:08:59.433Z\"}, \"logicalSessionTimeoutMinutes\": 30, \"connectionId\": 13236, \"maxWireVersion\": 25, \"ok\": 1.0}", "message": "Server heartbeat succeeded"}
2025-03-13 17:08:59,356 - pymongo.topology - DEBUG - {"topologyId": {"$oid": "67d2c6474b050be8041a6a54"}, "driverConnectionId": 1, "serverConnectionId": 13236, "serverHost": "3.144.134.141", "serverPort": 27017, "awaited": true, "message": "Server heartbeat started"}
2025-03-13 17:09:09,356 - pymongo.topology - DEBUG - {"topologyId": {"$oid": "67d2c6474b050be8041a6a54"}, "driverConnectionId": 1, "serverConnectionId": 13236, "serverHost": "3.144.134.141", "serverPort": 27017, "awaited": true, "durationMS": 10000.0, "reply": "{\"isWritablePrimary\": true, \"topologyVersion\": {\"processId\": {\"$oid\": \"67b7e5814f77c1a87c56d054\"}}, \"maxBsonObjectSize\": 16777216, \"maxMessageSizeBytes\": 48000000, \"maxWriteBatchSize\": 100000, \"localTime\": {\"$date\": \"2025-03-13T12:09:09.434Z\"}, \"logicalSessionTimeoutMinutes\": 30, \"connectionId\": 13236, \"maxWireVersion\": 25, \"ok\": 1.0}", "message": "Server heartbeat succeeded"}
2025-03-13 17:09:09,356 - pymongo.topology - DEBUG - {"topologyId": {"$oid": "67d2c6474b050be8041a6a54"}, "driverConnectionId": 1, "serverConnectionId": 13236, "serverHost": "3.144.134.141", "serverPort": 27017, "awaited": true, "message": "Server heartbeat started"}
2025-03-13 17:09:19,363 - pymongo.topology - DEBUG - {"topologyId": {"$oid": "67d2c6474b050be8041a6a54"}, "driverConnectionId": 1, "serverConnectionId": 13236, "serverHost": "3.144.134.141", "serverPort": 27017, "awaited": true, "durationMS": 10000.0, "reply": "{\"isWritablePrimary\": true, \"topologyVersion\": {\"processId\": {\"$oid\": \"67b7e5814f77c1a87c56d054\"}}, \"maxBsonObjectSize\": 16777216, \"maxMessageSizeBytes\": 48000000, \"maxWriteBatchSize\": 100000, \"localTime\": {\"$date\": \"2025-03-13T12:09:19.440Z\"}, \"logicalSessionTimeoutMinutes\": 30, \"connectionId\": 13236, \"maxWireVersion\": 25, \"ok\": 1.0}", "message": "Server heartbeat succeeded"}
2025-03-13 17:09:19,364 - pymongo.topology - DEBUG - {"topologyId": {"$oid": "67d2c6474b050be8041a6a54"}, "driverConnectionId": 1, "serverConnectionId": 13236, "serverHost": "3.144.134.141", "serverPort": 27017, "awaited": true, "message": "Server heartbeat started"}
2025-03-13 17:09:29,372 - pymongo.topology - DEBUG - {"topologyId": {"$oid": "67d2c6474b050be8041a6a54"}, "driverConnectionId": 1, "serverConnectionId": 13236, "serverHost": "3.144.134.141", "serverPort": 27017, "awaited": true, "durationMS": 10015.999999999622, "reply": "{\"isWritablePrimary\": true, \"topologyVersion\": {\"processId\": {\"$oid\": \"67b7e5814f77c1a87c56d054\"}}, \"maxBsonObjectSize\": 16777216, \"maxMessageSizeBytes\": 48000000, \"maxWriteBatchSize\": 100000, \"localTime\": {\"$date\": \"2025-03-13T12:09:29.449Z\"}, \"logicalSessionTimeoutMinutes\": 30, \"connectionId\": 13236, \"maxWireVersion\": 25, \"ok\": 1.0}", "message": "Server heartbeat succeeded"}
2025-03-13 17:09:29,373 - pymongo.topology - DEBUG - {"topologyId": {"$oid": "67d2c6474b050be8041a6a54"}, "driverConnectionId": 1, "serverConnectionId": 13236, "serverHost": "3.144.134.141", "serverPort": 27017, "awaited": true, "message": "Server heartbeat started"}
2025-03-13 17:09:39,381 - pymongo.topology - DEBUG - {"topologyId": {"$oid": "67d2c6474b050be8041a6a54"}, "driverConnectionId": 1, "serverConnectionId": 13236, "serverHost": "3.144.134.141", "serverPort": 27017, "awaited": true, "durationMS": 10000.0, "reply": "{\"isWritablePrimary\": true, \"topologyVersion\": {\"processId\": {\"$oid\": \"67b7e5814f77c1a87c56d054\"}}, \"maxBsonObjectSize\": 16777216, \"maxMessageSizeBytes\": 48000000, \"maxWriteBatchSize\": 100000, \"localTime\": {\"$date\": \"2025-03-13T12:09:39.459Z\"}, \"logicalSessionTimeoutMinutes\": 30, \"connectionId\": 13236, \"maxWireVersion\": 25, \"ok\": 1.0}", "message": "Server heartbeat succeeded"}
2025-03-13 17:09:39,382 - pymongo.topology - DEBUG - {"topologyId": {"$oid": "67d2c6474b050be8041a6a54"}, "driverConnectionId": 1, "serverConnectionId": 13236, "serverHost": "3.144.134.141", "serverPort": 27017, "awaited": true, "message": "Server heartbeat started"}
2025-03-13 17:09:49,382 - pymongo.topology - DEBUG - {"topologyId": {"$oid": "67d2c6474b050be8041a6a54"}, "driverConnectionId": 1, "serverConnectionId": 13236, "serverHost": "3.144.134.141", "serverPort": 27017, "awaited": true, "durationMS": 10000.0, "reply": "{\"isWritablePrimary\": true, \"topologyVersion\": {\"processId\": {\"$oid\": \"67b7e5814f77c1a87c56d054\"}}, \"maxBsonObjectSize\": 16777216, \"maxMessageSizeBytes\": 48000000, \"maxWriteBatchSize\": 100000, \"localTime\": {\"$date\": \"2025-03-13T12:09:49.459Z\"}, \"logicalSessionTimeoutMinutes\": 30, \"connectionId\": 13236, \"maxWireVersion\": 25, \"ok\": 1.0}", "message": "Server heartbeat succeeded"}
2025-03-13 17:09:49,382 - pymongo.topology - DEBUG - {"topologyId": {"$oid": "67d2c6474b050be8041a6a54"}, "driverConnectionId": 1, "serverConnectionId": 13236, "serverHost": "3.144.134.141", "serverPort": 27017, "awaited": true, "message": "Server heartbeat started"}
2025-03-13 17:09:59,384 - pymongo.topology - DEBUG - {"topologyId": {"$oid": "67d2c6474b050be8041a6a54"}, "driverConnectionId": 1, "serverConnectionId": 13236, "serverHost": "3.144.134.141", "serverPort": 27017, "awaited": true, "durationMS": 10000.0, "reply": "{\"isWritablePrimary\": true, \"topologyVersion\": {\"processId\": {\"$oid\": \"67b7e5814f77c1a87c56d054\"}}, \"maxBsonObjectSize\": 16777216, \"maxMessageSizeBytes\": 48000000, \"maxWriteBatchSize\": 100000, \"localTime\": {\"$date\": \"2025-03-13T12:09:59.462Z\"}, \"logicalSessionTimeoutMinutes\": 30, \"connectionId\": 13236, \"maxWireVersion\": 25, \"ok\": 1.0}", "message": "Server heartbeat succeeded"}
2025-03-13 17:09:59,385 - pymongo.topology - DEBUG - {"topologyId": {"$oid": "67d2c6474b050be8041a6a54"}, "driverConnectionId": 1, "serverConnectionId": 13236, "serverHost": "3.144.134.141", "serverPort": 27017, "awaited": true, "message": "Server heartbeat started"}
2025-03-13 17:10:09,385 - pymongo.topology - DEBUG - {"topologyId": {"$oid": "67d2c6474b050be8041a6a54"}, "driverConnectionId": 1, "serverConnectionId": 13236, "serverHost": "3.144.134.141", "serverPort": 27017, "awaited": true, "durationMS": 10000.0, "reply": "{\"isWritablePrimary\": true, \"topologyVersion\": {\"processId\": {\"$oid\": \"67b7e5814f77c1a87c56d054\"}}, \"maxBsonObjectSize\": 16777216, \"maxMessageSizeBytes\": 48000000, \"maxWriteBatchSize\": 100000, \"localTime\": {\"$date\": \"2025-03-13T12:10:09.463Z\"}, \"logicalSessionTimeoutMinutes\": 30, \"connectionId\": 13236, \"maxWireVersion\": 25, \"ok\": 1.0}", "message": "Server heartbeat succeeded"}
2025-03-13 17:10:09,385 - pymongo.topology - DEBUG - {"topologyId": {"$oid": "67d2c6474b050be8041a6a54"}, "driverConnectionId": 1, "serverConnectionId": 13236, "serverHost": "3.144.134.141", "serverPort": 27017, "awaited": true, "message": "Server heartbeat started"}
2025-03-13 17:10:19,386 - pymongo.topology - DEBUG - {"topologyId": {"$oid": "67d2c6474b050be8041a6a54"}, "driverConnectionId": 1, "serverConnectionId": 13236, "serverHost": "3.144.134.141", "serverPort": 27017, "awaited": true, "durationMS": 10000.0, "reply": "{\"isWritablePrimary\": true, \"topologyVersion\": {\"processId\": {\"$oid\": \"67b7e5814f77c1a87c56d054\"}}, \"maxBsonObjectSize\": 16777216, \"maxMessageSizeBytes\": 48000000, \"maxWriteBatchSize\": 100000, \"localTime\": {\"$date\": \"2025-03-13T12:10:19.464Z\"}, \"logicalSessionTimeoutMinutes\": 30, \"connectionId\": 13236, \"maxWireVersion\": 25, \"ok\": 1.0}", "message": "Server heartbeat succeeded"}
2025-03-13 17:10:19,387 - pymongo.topology - DEBUG - {"topologyId": {"$oid": "67d2c6474b050be8041a6a54"}, "driverConnectionId": 1, "serverConnectionId": 13236, "serverHost": "3.144.134.141", "serverPort": 27017, "awaited": true, "message": "Server heartbeat started"}
2025-03-13 17:10:29,388 - pymongo.topology - DEBUG - {"topologyId": {"$oid": "67d2c6474b050be8041a6a54"}, "driverConnectionId": 1, "serverConnectionId": 13236, "serverHost": "3.144.134.141", "serverPort": 27017, "awaited": true, "durationMS": 10000.0, "reply": "{\"isWritablePrimary\": true, \"topologyVersion\": {\"processId\": {\"$oid\": \"67b7e5814f77c1a87c56d054\"}}, \"maxBsonObjectSize\": 16777216, \"maxMessageSizeBytes\": 48000000, \"maxWriteBatchSize\": 100000, \"localTime\": {\"$date\": \"2025-03-13T12:10:29.465Z\"}, \"logicalSessionTimeoutMinutes\": 30, \"connectionId\": 13236, \"maxWireVersion\": 25, \"ok\": 1.0}", "message": "Server heartbeat succeeded"}
2025-03-13 17:10:29,388 - pymongo.topology - DEBUG - {"topologyId": {"$oid": "67d2c6474b050be8041a6a54"}, "driverConnectionId": 1, "serverConnectionId": 13236, "serverHost": "3.144.134.141", "serverPort": 27017, "awaited": true, "message": "Server heartbeat started"}
2025-03-13 17:10:39,388 - pymongo.topology - DEBUG - {"topologyId": {"$oid": "67d2c6474b050be8041a6a54"}, "driverConnectionId": 1, "serverConnectionId": 13236, "serverHost": "3.144.134.141", "serverPort": 27017, "awaited": true, "durationMS": 10000.0, "reply": "{\"isWritablePrimary\": true, \"topologyVersion\": {\"processId\": {\"$oid\": \"67b7e5814f77c1a87c56d054\"}}, \"maxBsonObjectSize\": 16777216, \"maxMessageSizeBytes\": 48000000, \"maxWriteBatchSize\": 100000, \"localTime\": {\"$date\": \"2025-03-13T12:10:39.466Z\"}, \"logicalSessionTimeoutMinutes\": 30, \"connectionId\": 13236, \"maxWireVersion\": 25, \"ok\": 1.0}", "message": "Server heartbeat succeeded"}
2025-03-13 17:10:39,388 - pymongo.topology - DEBUG - {"topologyId": {"$oid": "67d2c6474b050be8041a6a54"}, "driverConnectionId": 1, "serverConnectionId": 13236, "serverHost": "3.144.134.141", "serverPort": 27017, "awaited": true, "message": "Server heartbeat started"}
2025-03-13 17:10:49,390 - pymongo.topology - DEBUG - {"topologyId": {"$oid": "67d2c6474b050be8041a6a54"}, "driverConnectionId": 1, "serverConnectionId": 13236, "serverHost": "3.144.134.141", "serverPort": 27017, "awaited": true, "durationMS": 10000.0, "reply": "{\"isWritablePrimary\": true, \"topologyVersion\": {\"processId\": {\"$oid\": \"67b7e5814f77c1a87c56d054\"}}, \"maxBsonObjectSize\": 16777216, \"maxMessageSizeBytes\": 48000000, \"maxWriteBatchSize\": 100000, \"localTime\": {\"$date\": \"2025-03-13T12:10:49.469Z\"}, \"logicalSessionTimeoutMinutes\": 30, \"connectionId\": 13236, \"maxWireVersion\": 25, \"ok\": 1.0}", "message": "Server heartbeat succeeded"}
2025-03-13 17:10:49,391 - pymongo.topology - DEBUG - {"topologyId": {"$oid": "67d2c6474b050be8041a6a54"}, "driverConnectionId": 1, "serverConnectionId": 13236, "serverHost": "3.144.134.141", "serverPort": 27017, "awaited": true, "message": "Server heartbeat started"}
2025-03-13 17:10:59,393 - pymongo.topology - DEBUG - {"topologyId": {"$oid": "67d2c6474b050be8041a6a54"}, "driverConnectionId": 1, "serverConnectionId": 13236, "serverHost": "3.144.134.141", "serverPort": 27017, "awaited": true, "durationMS": 10000.0, "reply": "{\"isWritablePrimary\": true, \"topologyVersion\": {\"processId\": {\"$oid\": \"67b7e5814f77c1a87c56d054\"}}, \"maxBsonObjectSize\": 16777216, \"maxMessageSizeBytes\": 48000000, \"maxWriteBatchSize\": 100000, \"localTime\": {\"$date\": \"2025-03-13T12:10:59.471Z\"}, \"logicalSessionTimeoutMinutes\": 30, \"connectionId\": 13236, \"maxWireVersion\": 25, \"ok\": 1.0}", "message": "Server heartbeat succeeded"}
2025-03-13 17:10:59,393 - pymongo.topology - DEBUG - {"topologyId": {"$oid": "67d2c6474b050be8041a6a54"}, "driverConnectionId": 1, "serverConnectionId": 13236, "serverHost": "3.144.134.141", "serverPort": 27017, "awaited": true, "message": "Server heartbeat started"}
2025-03-13 17:11:09,402 - pymongo.topology - DEBUG - {"topologyId": {"$oid": "67d2c6474b050be8041a6a54"}, "driverConnectionId": 1, "serverConnectionId": 13236, "serverHost": "3.144.134.141", "serverPort": 27017, "awaited": true, "durationMS": 10014.999999999418, "reply": "{\"isWritablePrimary\": true, \"topologyVersion\": {\"processId\": {\"$oid\": \"67b7e5814f77c1a87c56d054\"}}, \"maxBsonObjectSize\": 16777216, \"maxMessageSizeBytes\": 48000000, \"maxWriteBatchSize\": 100000, \"localTime\": {\"$date\": \"2025-03-13T12:11:09.481Z\"}, \"logicalSessionTimeoutMinutes\": 30, \"connectionId\": 13236, \"maxWireVersion\": 25, \"ok\": 1.0}", "message": "Server heartbeat succeeded"}
2025-03-13 17:11:09,403 - pymongo.topology - DEBUG - {"topologyId": {"$oid": "67d2c6474b050be8041a6a54"}, "driverConnectionId": 1, "serverConnectionId": 13236, "serverHost": "3.144.134.141", "serverPort": 27017, "awaited": true, "message": "Server heartbeat started"}
2025-03-13 17:11:19,406 - pymongo.topology - DEBUG - {"topologyId": {"$oid": "67d2c6474b050be8041a6a54"}, "driverConnectionId": 1, "serverConnectionId": 13236, "serverHost": "3.144.134.141", "serverPort": 27017, "awaited": true, "durationMS": 10000.0, "reply": "{\"isWritablePrimary\": true, \"topologyVersion\": {\"processId\": {\"$oid\": \"67b7e5814f77c1a87c56d054\"}}, \"maxBsonObjectSize\": 16777216, \"maxMessageSizeBytes\": 48000000, \"maxWriteBatchSize\": 100000, \"localTime\": {\"$date\": \"2025-03-13T12:11:19.485Z\"}, \"logicalSessionTimeoutMinutes\": 30, \"connectionId\": 13236, \"maxWireVersion\": 25, \"ok\": 1.0}", "message": "Server heartbeat succeeded"}
2025-03-13 17:11:19,406 - pymongo.topology - DEBUG - {"topologyId": {"$oid": "67d2c6474b050be8041a6a54"}, "driverConnectionId": 1, "serverConnectionId": 13236, "serverHost": "3.144.134.141", "serverPort": 27017, "awaited": true, "message": "Server heartbeat started"}
2025-03-13 17:11:29,407 - pymongo.topology - DEBUG - {"topologyId": {"$oid": "67d2c6474b050be8041a6a54"}, "driverConnectionId": 1, "serverConnectionId": 13236, "serverHost": "3.144.134.141", "serverPort": 27017, "awaited": true, "durationMS": 10000.0, "reply": "{\"isWritablePrimary\": true, \"topologyVersion\": {\"processId\": {\"$oid\": \"67b7e5814f77c1a87c56d054\"}}, \"maxBsonObjectSize\": 16777216, \"maxMessageSizeBytes\": 48000000, \"maxWriteBatchSize\": 100000, \"localTime\": {\"$date\": \"2025-03-13T12:11:29.486Z\"}, \"logicalSessionTimeoutMinutes\": 30, \"connectionId\": 13236, \"maxWireVersion\": 25, \"ok\": 1.0}", "message": "Server heartbeat succeeded"}
2025-03-13 17:11:29,407 - pymongo.topology - DEBUG - {"topologyId": {"$oid": "67d2c6474b050be8041a6a54"}, "driverConnectionId": 1, "serverConnectionId": 13236, "serverHost": "3.144.134.141", "serverPort": 27017, "awaited": true, "message": "Server heartbeat started"}
2025-03-13 17:11:39,408 - pymongo.topology - DEBUG - {"topologyId": {"$oid": "67d2c6474b050be8041a6a54"}, "driverConnectionId": 1, "serverConnectionId": 13236, "serverHost": "3.144.134.141", "serverPort": 27017, "awaited": true, "durationMS": 10000.0, "reply": "{\"isWritablePrimary\": true, \"topologyVersion\": {\"processId\": {\"$oid\": \"67b7e5814f77c1a87c56d054\"}}, \"maxBsonObjectSize\": 16777216, \"maxMessageSizeBytes\": 48000000, \"maxWriteBatchSize\": 100000, \"localTime\": {\"$date\": \"2025-03-13T12:11:39.487Z\"}, \"logicalSessionTimeoutMinutes\": 30, \"connectionId\": 13236, \"maxWireVersion\": 25, \"ok\": 1.0}", "message": "Server heartbeat succeeded"}
2025-03-13 17:11:39,409 - pymongo.topology - DEBUG - {"topologyId": {"$oid": "67d2c6474b050be8041a6a54"}, "driverConnectionId": 1, "serverConnectionId": 13236, "serverHost": "3.144.134.141", "serverPort": 27017, "awaited": true, "message": "Server heartbeat started"}
2025-03-13 17:11:49,418 - pymongo.topology - DEBUG - {"topologyId": {"$oid": "67d2c6474b050be8041a6a54"}, "driverConnectionId": 1, "serverConnectionId": 13236, "serverHost": "3.144.134.141", "serverPort": 27017, "awaited": true, "durationMS": 10015.999999999622, "reply": "{\"isWritablePrimary\": true, \"topologyVersion\": {\"processId\": {\"$oid\": \"67b7e5814f77c1a87c56d054\"}}, \"maxBsonObjectSize\": 16777216, \"maxMessageSizeBytes\": 48000000, \"maxWriteBatchSize\": 100000, \"localTime\": {\"$date\": \"2025-03-13T12:11:49.497Z\"}, \"logicalSessionTimeoutMinutes\": 30, \"connectionId\": 13236, \"maxWireVersion\": 25, \"ok\": 1.0}", "message": "Server heartbeat succeeded"}
2025-03-13 17:11:49,418 - pymongo.topology - DEBUG - {"topologyId": {"$oid": "67d2c6474b050be8041a6a54"}, "driverConnectionId": 1, "serverConnectionId": 13236, "serverHost": "3.144.134.141", "serverPort": 27017, "awaited": true, "message": "Server heartbeat started"}
2025-03-13 17:11:59,418 - pymongo.topology - DEBUG - {"topologyId": {"$oid": "67d2c6474b050be8041a6a54"}, "driverConnectionId": 1, "serverConnectionId": 13236, "serverHost": "3.144.134.141", "serverPort": 27017, "awaited": true, "durationMS": 10000.0, "reply": "{\"isWritablePrimary\": true, \"topologyVersion\": {\"processId\": {\"$oid\": \"67b7e5814f77c1a87c56d054\"}}, \"maxBsonObjectSize\": 16777216, \"maxMessageSizeBytes\": 48000000, \"maxWriteBatchSize\": 100000, \"localTime\": {\"$date\": \"2025-03-13T12:11:59.498Z\"}, \"logicalSessionTimeoutMinutes\": 30, \"connectionId\": 13236, \"maxWireVersion\": 25, \"ok\": 1.0}", "message": "Server heartbeat succeeded"}
2025-03-13 17:11:59,419 - pymongo.topology - DEBUG - {"topologyId": {"$oid": "67d2c6474b050be8041a6a54"}, "driverConnectionId": 1, "serverConnectionId": 13236, "serverHost": "3.144.134.141", "serverPort": 27017, "awaited": true, "message": "Server heartbeat started"}
2025-03-13 17:12:09,424 - pymongo.topology - DEBUG - {"topologyId": {"$oid": "67d2c6474b050be8041a6a54"}, "driverConnectionId": 1, "serverConnectionId": 13236, "serverHost": "3.144.134.141", "serverPort": 27017, "awaited": true, "durationMS": 10000.0, "reply": "{\"isWritablePrimary\": true, \"topologyVersion\": {\"processId\": {\"$oid\": \"67b7e5814f77c1a87c56d054\"}}, \"maxBsonObjectSize\": 16777216, \"maxMessageSizeBytes\": 48000000, \"maxWriteBatchSize\": 100000, \"localTime\": {\"$date\": \"2025-03-13T12:12:09.504Z\"}, \"logicalSessionTimeoutMinutes\": 30, \"connectionId\": 13236, \"maxWireVersion\": 25, \"ok\": 1.0}", "message": "Server heartbeat succeeded"}
2025-03-13 17:12:09,425 - pymongo.topology - DEBUG - {"topologyId": {"$oid": "67d2c6474b050be8041a6a54"}, "driverConnectionId": 1, "serverConnectionId": 13236, "serverHost": "3.144.134.141", "serverPort": 27017, "awaited": true, "message": "Server heartbeat started"}
2025-03-13 17:12:19,425 - pymongo.topology - DEBUG - {"topologyId": {"$oid": "67d2c6474b050be8041a6a54"}, "driverConnectionId": 1, "serverConnectionId": 13236, "serverHost": "3.144.134.141", "serverPort": 27017, "awaited": true, "durationMS": 10000.0, "reply": "{\"isWritablePrimary\": true, \"topologyVersion\": {\"processId\": {\"$oid\": \"67b7e5814f77c1a87c56d054\"}}, \"maxBsonObjectSize\": 16777216, \"maxMessageSizeBytes\": 48000000, \"maxWriteBatchSize\": 100000, \"localTime\": {\"$date\": \"2025-03-13T12:12:19.505Z\"}, \"logicalSessionTimeoutMinutes\": 30, \"connectionId\": 13236, \"maxWireVersion\": 25, \"ok\": 1.0}", "message": "Server heartbeat succeeded"}
2025-03-13 17:12:19,426 - pymongo.topology - DEBUG - {"topologyId": {"$oid": "67d2c6474b050be8041a6a54"}, "driverConnectionId": 1, "serverConnectionId": 13236, "serverHost": "3.144.134.141", "serverPort": 27017, "awaited": true, "message": "Server heartbeat started"}
2025-03-13 17:12:29,427 - pymongo.topology - DEBUG - {"topologyId": {"$oid": "67d2c6474b050be8041a6a54"}, "driverConnectionId": 1, "serverConnectionId": 13236, "serverHost": "3.144.134.141", "serverPort": 27017, "awaited": true, "durationMS": 10000.0, "reply": "{\"isWritablePrimary\": true, \"topologyVersion\": {\"processId\": {\"$oid\": \"67b7e5814f77c1a87c56d054\"}}, \"maxBsonObjectSize\": 16777216, \"maxMessageSizeBytes\": 48000000, \"maxWriteBatchSize\": 100000, \"localTime\": {\"$date\": \"2025-03-13T12:12:29.506Z\"}, \"logicalSessionTimeoutMinutes\": 30, \"connectionId\": 13236, \"maxWireVersion\": 25, \"ok\": 1.0}", "message": "Server heartbeat succeeded"}
2025-03-13 17:12:29,427 - pymongo.topology - DEBUG - {"topologyId": {"$oid": "67d2c6474b050be8041a6a54"}, "driverConnectionId": 1, "serverConnectionId": 13236, "serverHost": "3.144.134.141", "serverPort": 27017, "awaited": true, "message": "Server heartbeat started"}
2025-03-13 17:12:39,428 - pymongo.topology - DEBUG - {"topologyId": {"$oid": "67d2c6474b050be8041a6a54"}, "driverConnectionId": 1, "serverConnectionId": 13236, "serverHost": "3.144.134.141", "serverPort": 27017, "awaited": true, "durationMS": 10000.0, "reply": "{\"isWritablePrimary\": true, \"topologyVersion\": {\"processId\": {\"$oid\": \"67b7e5814f77c1a87c56d054\"}}, \"maxBsonObjectSize\": 16777216, \"maxMessageSizeBytes\": 48000000, \"maxWriteBatchSize\": 100000, \"localTime\": {\"$date\": \"2025-03-13T12:12:39.507Z\"}, \"logicalSessionTimeoutMinutes\": 30, \"connectionId\": 13236, \"maxWireVersion\": 25, \"ok\": 1.0}", "message": "Server heartbeat succeeded"}
2025-03-13 17:12:39,430 - pymongo.topology - DEBUG - {"topologyId": {"$oid": "67d2c6474b050be8041a6a54"}, "driverConnectionId": 1, "serverConnectionId": 13236, "serverHost": "3.144.134.141", "serverPort": 27017, "awaited": true, "message": "Server heartbeat started"}
2025-03-13 17:12:49,471 - pymongo.topology - DEBUG - {"topologyId": {"$oid": "67d2c6474b050be8041a6a54"}, "driverConnectionId": 1, "serverConnectionId": 13236, "serverHost": "3.144.134.141", "serverPort": 27017, "awaited": true, "durationMS": 10032.000000002881, "reply": "{\"isWritablePrimary\": true, \"topologyVersion\": {\"processId\": {\"$oid\": \"67b7e5814f77c1a87c56d054\"}}, \"maxBsonObjectSize\": 16777216, \"maxMessageSizeBytes\": 48000000, \"maxWriteBatchSize\": 100000, \"localTime\": {\"$date\": \"2025-03-13T12:12:49.513Z\"}, \"logicalSessionTimeoutMinutes\": 30, \"connectionId\": 13236, \"maxWireVersion\": 25, \"ok\": 1.0}", "message": "Server heartbeat succeeded"}
2025-03-13 17:12:49,472 - pymongo.topology - DEBUG - {"topologyId": {"$oid": "67d2c6474b050be8041a6a54"}, "driverConnectionId": 1, "serverConnectionId": 13236, "serverHost": "3.144.134.141", "serverPort": 27017, "awaited": true, "message": "Server heartbeat started"}
2025-03-13 17:12:59,442 - pymongo.topology - DEBUG - {"topologyId": {"$oid": "67d2c6474b050be8041a6a54"}, "driverConnectionId": 1, "serverConnectionId": 13236, "serverHost": "3.144.134.141", "serverPort": 27017, "awaited": true, "durationMS": 9967.999999997119, "reply": "{\"isWritablePrimary\": true, \"topologyVersion\": {\"processId\": {\"$oid\": \"67b7e5814f77c1a87c56d054\"}}, \"maxBsonObjectSize\": 16777216, \"maxMessageSizeBytes\": 48000000, \"maxWriteBatchSize\": 100000, \"localTime\": {\"$date\": \"2025-03-13T12:12:59.522Z\"}, \"logicalSessionTimeoutMinutes\": 30, \"connectionId\": 13236, \"maxWireVersion\": 25, \"ok\": 1.0}", "message": "Server heartbeat succeeded"}
2025-03-13 17:12:59,442 - pymongo.topology - DEBUG - {"topologyId": {"$oid": "67d2c6474b050be8041a6a54"}, "driverConnectionId": 1, "serverConnectionId": 13236, "serverHost": "3.144.134.141", "serverPort": 27017, "awaited": true, "message": "Server heartbeat started"}
2025-03-13 17:13:09,541 - pymongo.topology - DEBUG - {"topologyId": {"$oid": "67d2c6474b050be8041a6a54"}, "driverConnectionId": 1, "serverConnectionId": 13236, "serverHost": "3.144.134.141", "serverPort": 27017, "awaited": true, "durationMS": 10077.9999999977, "reply": "{\"isWritablePrimary\": true, \"topologyVersion\": {\"processId\": {\"$oid\": \"67b7e5814f77c1a87c56d054\"}}, \"maxBsonObjectSize\": 16777216, \"maxMessageSizeBytes\": 48000000, \"maxWriteBatchSize\": 100000, \"localTime\": {\"$date\": \"2025-03-13T12:13:09.523Z\"}, \"logicalSessionTimeoutMinutes\": 30, \"connectionId\": 13236, \"maxWireVersion\": 25, \"ok\": 1.0}", "message": "Server heartbeat succeeded"}
2025-03-13 17:13:09,542 - pymongo.topology - DEBUG - {"topologyId": {"$oid": "67d2c6474b050be8041a6a54"}, "driverConnectionId": 1, "serverConnectionId": 13236, "serverHost": "3.144.134.141", "serverPort": 27017, "awaited": true, "message": "Server heartbeat started"}
2025-03-13 17:13:19,468 - pymongo.topology - DEBUG - {"topologyId": {"$oid": "67d2c6474b050be8041a6a54"}, "driverConnectionId": 1, "serverConnectionId": 13236, "serverHost": "3.144.134.141", "serverPort": 27017, "awaited": true, "durationMS": 9922.0000000023, "reply": "{\"isWritablePrimary\": true, \"topologyVersion\": {\"processId\": {\"$oid\": \"67b7e5814f77c1a87c56d054\"}}, \"maxBsonObjectSize\": 16777216, \"maxMessageSizeBytes\": 48000000, \"maxWriteBatchSize\": 100000, \"localTime\": {\"$date\": \"2025-03-13T12:13:19.523Z\"}, \"logicalSessionTimeoutMinutes\": 30, \"connectionId\": 13236, \"maxWireVersion\": 25, \"ok\": 1.0}", "message": "Server heartbeat succeeded"}
2025-03-13 17:13:19,477 - pymongo.topology - DEBUG - {"topologyId": {"$oid": "67d2c6474b050be8041a6a54"}, "driverConnectionId": 1, "serverConnectionId": 13236, "serverHost": "3.144.134.141", "serverPort": 27017, "awaited": true, "message": "Server heartbeat started"}
2025-03-13 17:13:29,443 - pymongo.topology - DEBUG - {"topologyId": {"$oid": "67d2c6474b050be8041a6a54"}, "driverConnectionId": 1, "serverConnectionId": 13236, "serverHost": "3.144.134.141", "serverPort": 27017, "awaited": true, "durationMS": 9952.9999999977, "reply": "{\"isWritablePrimary\": true, \"topologyVersion\": {\"processId\": {\"$oid\": \"67b7e5814f77c1a87c56d054\"}}, \"maxBsonObjectSize\": 16777216, \"maxMessageSizeBytes\": 48000000, \"maxWriteBatchSize\": 100000, \"localTime\": {\"$date\": \"2025-03-13T12:13:29.523Z\"}, \"logicalSessionTimeoutMinutes\": 30, \"connectionId\": 13236, \"maxWireVersion\": 25, \"ok\": 1.0}", "message": "Server heartbeat succeeded"}
2025-03-13 17:13:29,443 - pymongo.topology - DEBUG - {"topologyId": {"$oid": "67d2c6474b050be8041a6a54"}, "driverConnectionId": 1, "serverConnectionId": 13236, "serverHost": "3.144.134.141", "serverPort": 27017, "awaited": true, "message": "Server heartbeat started"}
2025-03-13 17:13:39,543 - pymongo.topology - DEBUG - {"topologyId": {"$oid": "67d2c6474b050be8041a6a54"}, "driverConnectionId": 1, "serverConnectionId": 13236, "serverHost": "3.144.134.141", "serverPort": 27017, "awaited": true, "durationMS": 10110.000000000582, "reply": "{\"isWritablePrimary\": true, \"topologyVersion\": {\"processId\": {\"$oid\": \"67b7e5814f77c1a87c56d054\"}}, \"maxBsonObjectSize\": 16777216, \"maxMessageSizeBytes\": 48000000, \"maxWriteBatchSize\": 100000, \"localTime\": {\"$date\": \"2025-03-13T12:13:39.525Z\"}, \"logicalSessionTimeoutMinutes\": 30, \"connectionId\": 13236, \"maxWireVersion\": 25, \"ok\": 1.0}", "message": "Server heartbeat succeeded"}
2025-03-13 17:13:39,543 - pymongo.topology - DEBUG - {"topologyId": {"$oid": "67d2c6474b050be8041a6a54"}, "driverConnectionId": 1, "serverConnectionId": 13236, "serverHost": "3.144.134.141", "serverPort": 27017, "awaited": true, "message": "Server heartbeat started"}
2025-03-13 17:13:49,447 - pymongo.topology - DEBUG - {"topologyId": {"$oid": "67d2c6474b050be8041a6a54"}, "driverConnectionId": 1, "serverConnectionId": 13236, "serverHost": "3.144.134.141", "serverPort": 27017, "awaited": true, "durationMS": 9906.000000002678, "reply": "{\"isWritablePrimary\": true, \"topologyVersion\": {\"processId\": {\"$oid\": \"67b7e5814f77c1a87c56d054\"}}, \"maxBsonObjectSize\": 16777216, \"maxMessageSizeBytes\": 48000000, \"maxWriteBatchSize\": 100000, \"localTime\": {\"$date\": \"2025-03-13T12:13:49.527Z\"}, \"logicalSessionTimeoutMinutes\": 30, \"connectionId\": 13236, \"maxWireVersion\": 25, \"ok\": 1.0}", "message": "Server heartbeat succeeded"}
2025-03-13 17:13:49,447 - pymongo.topology - DEBUG - {"topologyId": {"$oid": "67d2c6474b050be8041a6a54"}, "driverConnectionId": 1, "serverConnectionId": 13236, "serverHost": "3.144.134.141", "serverPort": 27017, "awaited": true, "message": "Server heartbeat started"}
